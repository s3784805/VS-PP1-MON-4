(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~modules-firestation-firestation-module~modules-gasstation-gasstation-module~modules-healthca~47d48f87"],{

/***/ "./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js ***!
  \*******************************************************************/
/*! exports provided: BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BreakpointObserver", function() { return BreakpointObserver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Breakpoints", function() { return Breakpoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayoutModule", function() { return LayoutModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MediaMatcher", function() { return MediaMatcher; });
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/coercion */ "./node_modules/@angular/cdk/fesm2015/coercion.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/platform */ "./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js");







/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */




var LayoutModule = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(function LayoutModule() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, LayoutModule);
});

LayoutModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: LayoutModule
});
LayoutModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  factory: function LayoutModule_Factory(t) {
    return new (t || LayoutModule)();
  }
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LayoutModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
    args: [{}]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Global registry for all dynamically-created, injected media queries. */


var mediaQueriesForWebkitCompatibility = new Set();
/** Style tag that holds all of the dynamically-created media queries. */

var mediaQueryStyleNode;
/** A utility for calling matchMedia queries. */

var MediaMatcher = /*#__PURE__*/function () {
  function MediaMatcher(_platform) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MediaMatcher);

    this._platform = _platform;
    this._matchMedia = this._platform.isBrowser && window.matchMedia ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to
    // call it from a different scope.
    window.matchMedia.bind(window) : noopMatchMedia;
  }
  /**
   * Evaluates the given media query and returns the native MediaQueryList from which results
   * can be retrieved.
   * Confirms the layout engine will trigger for the selector query provided and returns the
   * MediaQueryList for the query provided.
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MediaMatcher, [{
    key: "matchMedia",
    value: function matchMedia(query) {
      if (this._platform.WEBKIT) {
        createEmptyStyleRule(query);
      }

      return this._matchMedia(query);
    }
  }]);

  return MediaMatcher;
}();

MediaMatcher.ɵfac = function MediaMatcher_Factory(t) {
  return new (t || MediaMatcher)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__["Platform"]));
};

MediaMatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"])({
  factory: function MediaMatcher_Factory() {
    return new MediaMatcher(Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__["Platform"]));
  },
  token: MediaMatcher,
  providedIn: "root"
});

MediaMatcher.ctorParameters = function () {
  return [{
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__["Platform"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](MediaMatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__["Platform"]
    }];
  }, null);
})();
/**
 * For Webkit engines that only trigger the MediaQueryListListener when
 * there is at least one CSS selector for the respective media query.
 */


function createEmptyStyleRule(query) {
  if (mediaQueriesForWebkitCompatibility.has(query)) {
    return;
  }

  try {
    if (!mediaQueryStyleNode) {
      mediaQueryStyleNode = document.createElement('style');
      mediaQueryStyleNode.setAttribute('type', 'text/css');
      document.head.appendChild(mediaQueryStyleNode);
    }

    if (mediaQueryStyleNode.sheet) {
      mediaQueryStyleNode.sheet.insertRule("@media ".concat(query, " {.fx-query-test{ }}"), 0);
      mediaQueriesForWebkitCompatibility.add(query);
    }
  } catch (e) {
    console.error(e);
  }
}
/** No-op matchMedia replacement for non-browser platforms. */


function noopMatchMedia(query) {
  // Use `as any` here to avoid adding additional necessary properties for
  // the noop matcher.
  return {
    matches: query === 'all' || query === '',
    media: query,
    addListener: function addListener() {},
    removeListener: function removeListener() {}
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Utility for checking the matching state of @media queries. */


var BreakpointObserver = /*#__PURE__*/function () {
  function BreakpointObserver(_mediaMatcher, _zone) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, BreakpointObserver);

    this._mediaMatcher = _mediaMatcher;
    this._zone = _zone;
    /**  A map of all media queries currently being listened for. */

    this._queries = new Map();
    /** A subject for all other observables to takeUntil based on. */

    this._destroySubject = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
  }
  /** Completes the active subject, signalling to all other observables to complete. */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(BreakpointObserver, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroySubject.next();

      this._destroySubject.complete();
    }
    /**
     * Whether one or more media queries match the current viewport size.
     * @param value One or more media queries to check.
     * @returns Whether any of the media queries match.
     */

  }, {
    key: "isMatched",
    value: function isMatched(value) {
      var _this = this;

      var queries = splitQueries(Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__["coerceArray"])(value));
      return queries.some(function (mediaQuery) {
        return _this._registerQuery(mediaQuery).mql.matches;
      });
    }
    /**
     * Gets an observable of results for the given queries that will emit new results for any changes
     * in matching of the given queries.
     * @param value One or more media queries to check.
     * @returns A stream of matches for the given queries.
     */

  }, {
    key: "observe",
    value: function observe(value) {
      var _this2 = this;

      var queries = splitQueries(Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__["coerceArray"])(value));
      var observables = queries.map(function (query) {
        return _this2._registerQuery(query).observable;
      });
      var stateObservable = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["combineLatest"])(observables); // Emit the first state immediately, and then debounce the subsequent emissions.

      stateObservable = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["concat"])(stateObservable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["take"])(1)), stateObservable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["skip"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["debounceTime"])(0)));
      return stateObservable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (breakpointStates) {
        var response = {
          matches: false,
          breakpoints: {}
        };
        breakpointStates.forEach(function (_ref) {
          var matches = _ref.matches,
              query = _ref.query;
          response.matches = response.matches || matches;
          response.breakpoints[query] = matches;
        });
        return response;
      }));
    }
    /** Registers a specific query to be listened for. */

  }, {
    key: "_registerQuery",
    value: function _registerQuery(query) {
      var _this3 = this;

      // Only set up a new MediaQueryList if it is not already being listened for.
      if (this._queries.has(query)) {
        return this._queries.get(query);
      }

      var mql = this._mediaMatcher.matchMedia(query); // Create callback for match changes and add it is as a listener.


      var queryObservable = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Observable"](function (observer) {
        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed
        // back into the zone because matchMedia is only included in Zone.js by loading the
        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not
        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js
        // patches it.
        var handler = function handler(e) {
          return _this3._zone.run(function () {
            return observer.next(e);
          });
        };

        mql.addListener(handler);
        return function () {
          mql.removeListener(handler);
        };
      }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["startWith"])(mql), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (_ref2) {
        var matches = _ref2.matches;
        return {
          query: query,
          matches: matches
        };
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this._destroySubject)); // Add the MediaQueryList to the set of queries.

      var output = {
        observable: queryObservable,
        mql: mql
      };

      this._queries.set(query, output);

      return output;
    }
  }]);

  return BreakpointObserver;
}();

BreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) {
  return new (t || BreakpointObserver)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](MediaMatcher), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]));
};

BreakpointObserver.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"])({
  factory: function BreakpointObserver_Factory() {
    return new BreakpointObserver(Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"])(MediaMatcher), Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]));
  },
  token: BreakpointObserver,
  providedIn: "root"
});

BreakpointObserver.ctorParameters = function () {
  return [{
    type: MediaMatcher
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](BreakpointObserver, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: MediaMatcher
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]
    }];
  }, null);
})();
/**
 * Split each query string into separate query strings if two queries are provided as comma
 * separated.
 */


function splitQueries(queries) {
  return queries.map(function (query) {
    return query.split(',');
  }).reduce(function (a1, a2) {
    return a1.concat(a2);
  }).map(function (query) {
    return query.trim();
  });
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// PascalCase is being used as Breakpoints is used like an enum.
// tslint:disable-next-line:variable-name


var Breakpoints = {
  XSmall: '(max-width: 599.99px)',
  Small: '(min-width: 600px) and (max-width: 959.99px)',
  Medium: '(min-width: 960px) and (max-width: 1279.99px)',
  Large: '(min-width: 1280px) and (max-width: 1919.99px)',
  XLarge: '(min-width: 1920px)',
  Handset: '(max-width: 599.99px) and (orientation: portrait), ' + '(max-width: 959.99px) and (orientation: landscape)',
  Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',
  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',
  HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',
  TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',
  WebPortrait: '(min-width: 840px) and (orientation: portrait)',
  HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',
  TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',
  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ "./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js ***!
  \*********************************************************************/
/*! exports provided: Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Platform", function() { return Platform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlatformModule", function() { return PlatformModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_getShadowRoot", function() { return _getShadowRoot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_supportsShadowDom", function() { return _supportsShadowDom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRtlScrollAxisType", function() { return getRtlScrollAxisType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSupportedInputTypes", function() { return getSupportedInputTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizePassiveListenerOptions", function() { return normalizePassiveListenerOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsPassiveEventListeners", function() { return supportsPassiveEventListeners; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsScrollBehavior", function() { return supportsScrollBehavior; });
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");




/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Whether the current platform supports the V8 Break Iterator. The V8 check
// is necessary to detect all Blink based browsers.


var hasV8BreakIterator; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can
// cause IE to throw. These cases are tied to particular versions of Windows and can happen if
// the consumer is providing a polyfilled `Map`. See:
// https://github.com/Microsoft/ChakraCore/issues/3189
// https://github.com/angular/components/issues/15687

try {
  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;
} catch (_a) {
  hasV8BreakIterator = false;
}
/**
 * Service to detect the current platform by comparing the userAgent strings and
 * checking browser-specific global properties.
 */


var Platform = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(function Platform(_platformId) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, Platform);

  this._platformId = _platformId; // We want to use the Angular platform check because if the Document is shimmed
  // without the navigator, the following checks will fail. This is preferred because
  // sometimes the Document may be shimmed without the user's knowledge or intention

  /** Whether the Angular application is being rendered in the browser. */

  this.isBrowser = this._platformId ? Object(_angular_common__WEBPACK_IMPORTED_MODULE_3__["isPlatformBrowser"])(this._platformId) : typeof document === 'object' && !!document;
  /** Whether the current browser is Microsoft Edge. */

  this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);
  /** Whether the current rendering engine is Microsoft Trident. */

  this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent); // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.

  /** Whether the current rendering engine is Blink. */

  this.BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT; // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to
  // ensure that Webkit runs standalone and is not used as another engine's base.

  /** Whether the current rendering engine is WebKit. */

  this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;
  /** Whether the current platform is Apple iOS. */

  this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window); // It's difficult to detect the plain Gecko engine, because most of the browsers identify
  // them self as Gecko-like browsers and modify the userAgent's according to that.
  // Since we only cover one explicit Firefox case, we can simply check for Firefox
  // instead of having an unstable check for Gecko.

  /** Whether the current browser is Firefox. */

  this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);
  /** Whether the current platform is Android. */
  // Trident on mobile adds the android platform to the userAgent to trick detections.

  this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT; // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake
  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every
  // Safari browser should also use Webkit as its layout engine.

  /** Whether the current browser is Safari. */

  this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;
});

Platform.ɵfac = function Platform_Factory(t) {
  return new (t || Platform)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"]));
};

Platform.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"])({
  factory: function Platform_Factory() {
    return new Platform(Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"]));
  },
  token: Platform,
  providedIn: "root"
});

Platform.ctorParameters = function () {
  return [{
    type: Object,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](Platform, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: Object,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["PLATFORM_ID"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var PlatformModule = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(function PlatformModule() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, PlatformModule);
});

PlatformModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: PlatformModule
});
PlatformModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  factory: function PlatformModule_Factory(t) {
    return new (t || PlatformModule)();
  }
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](PlatformModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
    args: [{}]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Cached result Set of input types support by the current browser. */


var supportedInputTypes;
/** Types of `<input>` that *might* be supported. */

var candidateInputTypes = [// `color` must come first. Chrome 56 shows a warning if we change the type to `color` after
// first changing it to something else:
// The specified value "" does not conform to the required format.
// The format is "#rrggbb" where rr, gg, bb are two-digit hexadecimal numbers.
'color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];
/** @returns The input types supported by this browser. */

function getSupportedInputTypes() {
  // Result is cached.
  if (supportedInputTypes) {
    return supportedInputTypes;
  } // We can't check if an input type is not supported until we're on the browser, so say that
  // everything is supported when not on the browser. We don't use `Platform` here since it's
  // just a helper function and can't inject it.


  if (typeof document !== 'object' || !document) {
    supportedInputTypes = new Set(candidateInputTypes);
    return supportedInputTypes;
  }

  var featureTestInput = document.createElement('input');
  supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {
    featureTestInput.setAttribute('type', value);
    return featureTestInput.type === value;
  }));
  return supportedInputTypes;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Cached result of whether the user's browser supports passive event listeners. */


var supportsPassiveEvents;
/**
 * Checks whether the user's browser supports passive event listeners.
 * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md
 */

function supportsPassiveEventListeners() {
  if (supportsPassiveEvents == null && typeof window !== 'undefined') {
    try {
      window.addEventListener('test', null, Object.defineProperty({}, 'passive', {
        get: function get() {
          return supportsPassiveEvents = true;
        }
      }));
    } finally {
      supportsPassiveEvents = supportsPassiveEvents || false;
    }
  }

  return supportsPassiveEvents;
}
/**
 * Normalizes an `AddEventListener` object to something that can be passed
 * to `addEventListener` on any browser, no matter whether it supports the
 * `options` parameter.
 * @param options Object to be normalized.
 */


function normalizePassiveListenerOptions(options) {
  return supportsPassiveEventListeners() ? options : !!options.capture;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */


var rtlScrollAxisType;
/** Cached result of the check that indicates whether the browser supports scroll behaviors. */

var scrollBehaviorSupported;
/** Check whether the browser supports scroll behaviors. */

function supportsScrollBehavior() {
  if (scrollBehaviorSupported == null) {
    // If we're not in the browser, it can't be supported.
    if (typeof document !== 'object' || !document) {
      scrollBehaviorSupported = false;
    } // If the element can have a `scrollBehavior` style, we can be sure that it's supported.


    if ('scrollBehavior' in document.documentElement.style) {
      scrollBehaviorSupported = true;
    } else {
      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's
      // supported but it doesn't handle scroll behavior, or it has been polyfilled.
      var scrollToFunction = Element.prototype.scrollTo;

      if (scrollToFunction) {
        // We can detect if the function has been polyfilled by calling `toString` on it. Native
        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get
        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider
        // polyfilled functions as supporting scroll behavior.
        scrollBehaviorSupported = !/\{\s*\[native code\]\s*\}/.test(scrollToFunction.toString());
      } else {
        scrollBehaviorSupported = false;
      }
    }
  }

  return scrollBehaviorSupported;
}
/**
 * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,
 * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.
 */


function getRtlScrollAxisType() {
  // We can't check unless we're on the browser. Just assume 'normal' if we're not.
  if (typeof document !== 'object' || !document) {
    return 0
    /* NORMAL */
    ;
  }

  if (rtlScrollAxisType == null) {
    // Create a 1px wide scrolling container and a 2px wide content element.
    var scrollContainer = document.createElement('div');
    var containerStyle = scrollContainer.style;
    scrollContainer.dir = 'rtl';
    containerStyle.width = '1px';
    containerStyle.overflow = 'auto';
    containerStyle.visibility = 'hidden';
    containerStyle.pointerEvents = 'none';
    containerStyle.position = 'absolute';
    var content = document.createElement('div');
    var contentStyle = content.style;
    contentStyle.width = '2px';
    contentStyle.height = '1px';
    scrollContainer.appendChild(content);
    document.body.appendChild(scrollContainer);
    rtlScrollAxisType = 0
    /* NORMAL */
    ; // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL
    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're
    // dealing with one of the other two types of browsers.

    if (scrollContainer.scrollLeft === 0) {
      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an
      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by
      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will
      // return 0 when we read it again.
      scrollContainer.scrollLeft = 1;
      rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? 1
      /* NEGATED */
      : 2
      /* INVERTED */
      ;
    }

    scrollContainer.parentNode.removeChild(scrollContainer);
  }

  return rtlScrollAxisType;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var shadowDomIsSupported;
/** Checks whether the user's browser support Shadow DOM. */

function _supportsShadowDom() {
  if (shadowDomIsSupported == null) {
    var head = typeof document !== 'undefined' ? document.head : null;
    shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));
  }

  return shadowDomIsSupported;
}
/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */


function _getShadowRoot(element) {
  if (_supportsShadowDom()) {
    var rootNode = element.getRootNode ? element.getRootNode() : null; // Note that this should be caught by `_supportsShadowDom`, but some
    // teams have been able to hit this code path on unsupported browsers.

    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {
      return rootNode;
    }
  }

  return null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "./node_modules/@angular/cdk/fesm2015/coercion.js":
/*!********************************************************!*\
  !*** ./node_modules/@angular/cdk/fesm2015/coercion.js ***!
  \********************************************************/
/*! exports provided: _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_isNumberValue", function() { return _isNumberValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceArray", function() { return coerceArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceBooleanProperty", function() { return coerceBooleanProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceCssPixelValue", function() { return coerceCssPixelValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceElement", function() { return coerceElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceNumberProperty", function() { return coerceNumberProperty; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Coerces a data-bound value (typically a string) to a boolean. */

function coerceBooleanProperty(value) {
  return value != null && "".concat(value) !== 'false';
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function coerceNumberProperty(value) {
  var fallbackValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return _isNumberValue(value) ? Number(value) : fallbackValue;
}
/**
 * Whether the provided value is considered a number.
 * @docs-private
 */


function _isNumberValue(value) {
  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,
  // and other non-number values as NaN, where Number just uses 0) but it considers the string
  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.
  return !isNaN(parseFloat(value)) && !isNaN(Number(value));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function coerceArray(value) {
  return Array.isArray(value) ? value : [value];
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Coerces a value to a CSS pixel value. */


function coerceCssPixelValue(value) {
  if (value == null) {
    return '';
  }

  return typeof value === 'string' ? value : "".concat(value, "px");
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Coerces an ElementRef or an Element into an element.
 * Useful for APIs that can accept either a ref or the native element itself.
 */


function coerceElement(elementOrRef) {
  return elementOrRef instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] ? elementOrRef.nativeElement : elementOrRef;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */




/***/ }),

/***/ "./node_modules/@mapbox/fusspot/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@mapbox/fusspot/lib/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Validators are functions which assert certain type.
 * They can return a string which can then be used
 * to display a helpful error message.
 * They can also return a function for a custom error message.
 */

var isPlainObject = __webpack_require__(/*! is-plain-obj */ "./node_modules/is-plain-obj/index.js");

var xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var DEFAULT_ERROR_PATH = 'value';
var NEWLINE_INDENT = '\n  ';
var v = {};
/**
 * Runners
 *
 * Take root validators and run assertion
 */

v.assert = function (rootValidator, options) {
  options = options || {};
  return function (value) {
    var message = validate(rootValidator, value); // all good

    if (!message) {
      return;
    }

    var errorMessage = processMessage(message, options);

    if (options.apiName) {
      errorMessage = options.apiName + ': ' + errorMessage;
    }

    throw new Error(errorMessage);
  };
};
/**
 * Higher Order Validators
 *
 * validators which take other validators as input
 * and output a new validator
 */


v.shape = function shape(validatorObj) {
  var validators = objectEntries(validatorObj);
  return function shapeValidator(value) {
    var validationResult = validate(v.plainObject, value);

    if (validationResult) {
      return validationResult;
    }

    var key, validator;
    var errorMessages = [];

    for (var i = 0; i < validators.length; i++) {
      key = validators[i].key;
      validator = validators[i].value;
      validationResult = validate(validator, value[key]);

      if (validationResult) {
        // return [key].concat(validationResult);
        errorMessages.push([key].concat(validationResult));
      }
    }

    if (errorMessages.length < 2) {
      return errorMessages[0];
    } // enumerate all the error messages


    return function (options) {
      errorMessages = errorMessages.map(function (message) {
        var key = message[0];
        var renderedMessage = processMessage(message, options).split('\n').join(NEWLINE_INDENT); // indents any inner nesting

        return '- ' + key + ': ' + renderedMessage;
      });
      var objectId = options.path.join('.');
      var ofPhrase = objectId === DEFAULT_ERROR_PATH ? '' : ' of ' + objectId;
      return 'The following properties' + ofPhrase + ' have invalid values:' + NEWLINE_INDENT + errorMessages.join(NEWLINE_INDENT);
    };
  };
};

v.strictShape = function strictShape(validatorObj) {
  var shapeValidator = v.shape(validatorObj);
  return function strictShapeValidator(value) {
    var shapeResult = shapeValidator(value);

    if (shapeResult) {
      return shapeResult;
    }

    var invalidKeys = Object.keys(value).reduce(function (memo, valueKey) {
      if (validatorObj[valueKey] === undefined) {
        memo.push(valueKey);
      }

      return memo;
    }, []);

    if (invalidKeys.length !== 0) {
      return function () {
        return 'The following keys are invalid: ' + invalidKeys.join(', ');
      };
    }
  };
};

v.arrayOf = function arrayOf(validator) {
  return createArrayValidator(validator);
};

v.tuple = function tuple() {
  var validators = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.call(arguments);
  return createArrayValidator(validators);
}; // Currently array validation fails when the first invalid item is found.


function createArrayValidator(validators) {
  var validatingTuple = Array.isArray(validators);

  var getValidator = function getValidator(index) {
    if (validatingTuple) {
      return validators[index];
    }

    return validators;
  };

  return function arrayValidator(value) {
    var validationResult = validate(v.plainArray, value);

    if (validationResult) {
      return validationResult;
    }

    if (validatingTuple && value.length !== validators.length) {
      return 'an array with ' + validators.length + ' items';
    }

    for (var i = 0; i < value.length; i++) {
      validationResult = validate(getValidator(i), value[i]);

      if (validationResult) {
        return [i].concat(validationResult);
      }
    }
  };
}

v.required = function required(validator) {
  function requiredValidator(value) {
    if (value == null) {
      return function (options) {
        return formatErrorMessage(options, isArrayCulprit(options.path) ? 'cannot be undefined/null.' : 'is required.');
      };
    }

    return validator.apply(this, arguments);
  }

  requiredValidator.__required = true;
  return requiredValidator;
};

v.oneOfType = function oneOfType() {
  var validators = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.call(arguments);
  return function oneOfTypeValidator(value) {
    var messages = validators.map(function (validator) {
      return validate(validator, value);
    }).filter(Boolean); // If we don't have as many messages as no. of validators,
    // then at least one validator was ok with the value.

    if (messages.length !== validators.length) {
      return;
    } // check primitive type


    if (messages.every(function (message) {
      return message.length === 1 && typeof message[0] === 'string';
    })) {
      return orList(messages.map(function (m) {
        return m[0];
      }));
    } // Complex oneOfTypes like
    // `v.oneOftypes(v.shape({name: v.string})`, `v.shape({name: v.number}))`
    // are complex ¯\_(ツ)_/¯. For the current scope only returning the longest message.


    return messages.reduce(function (max, arr) {
      return arr.length > max.length ? arr : max;
    });
  };
};
/**
 * Meta Validators
 * which take options as argument (not validators)
 * and return a new primitive validator
 */


v.equal = function equal(compareWith) {
  return function equalValidator(value) {
    if (value !== compareWith) {
      return JSON.stringify(compareWith);
    }
  };
};

v.oneOf = function oneOf() {
  var options = Array.isArray(arguments[0]) ? arguments[0] : Array.prototype.slice.call(arguments);
  var validators = options.map(function (value) {
    return v.equal(value);
  });
  return v.oneOfType.apply(this, validators);
};

v.range = function range(compareWith) {
  var min = compareWith[0];
  var max = compareWith[1];
  return function rangeValidator(value) {
    var validationResult = validate(v.number, value);

    if (validationResult || value < min || value > max) {
      return 'number between ' + min + ' & ' + max + ' (inclusive)';
    }
  };
};
/**
 * Primitive validators
 *
 * simple validators which return a string or undefined
 */


v.any = function any() {
  return;
};

v.boolean = function boolean(value) {
  if (typeof value !== 'boolean') {
    return 'boolean';
  }
};

v.number = function number(value) {
  if (typeof value !== 'number') {
    return 'number';
  }
};

v.plainArray = function plainArray(value) {
  if (!Array.isArray(value)) {
    return 'array';
  }
};

v.plainObject = function plainObject(value) {
  if (!isPlainObject(value)) {
    return 'object';
  }
};

v.string = function string(value) {
  if (typeof value !== 'string') {
    return 'string';
  }
};

v.func = function func(value) {
  if (typeof value !== 'function') {
    return 'function';
  }
};

function validate(validator, value) {
  // assertions are optional by default unless wrapped in v.require
  if (value == null && !validator.hasOwnProperty('__required')) {
    return;
  }

  var result = validator(value);

  if (result) {
    return Array.isArray(result) ? result : [result];
  }
}

function processMessage(message, options) {
  // message array follows the convention
  // [...path, result]
  // path is an array of object keys / array indices
  // result is output of the validator
  var len = message.length;
  var result = message[len - 1];
  var path = message.slice(0, len - 1);

  if (path.length === 0) {
    path = [DEFAULT_ERROR_PATH];
  }

  options = xtend(options, {
    path: path
  });
  return typeof result === 'function' ? result(options) // allows customization of result
  : formatErrorMessage(options, prettifyResult(result));
}

function orList(list) {
  if (list.length < 2) {
    return list[0];
  }

  if (list.length === 2) {
    return list.join(' or ');
  }

  return list.slice(0, -1).join(', ') + ', or ' + list.slice(-1);
}

function prettifyResult(result) {
  return 'must be ' + addArticle(result) + '.';
}

function addArticle(nounPhrase) {
  if (/^an? /.test(nounPhrase)) {
    return nounPhrase;
  }

  if (/^[aeiou]/i.test(nounPhrase)) {
    return 'an ' + nounPhrase;
  }

  if (/^[a-z]/i.test(nounPhrase)) {
    return 'a ' + nounPhrase;
  }

  return nounPhrase;
}

function formatErrorMessage(options, prettyResult) {
  var arrayCulprit = isArrayCulprit(options.path);
  var output = options.path.join('.') + ' ' + prettyResult;
  var prepend = arrayCulprit ? 'Item at position ' : '';
  return prepend + output;
}

function isArrayCulprit(path) {
  return typeof path[path.length - 1] == 'number' || typeof path[0] == 'number';
}

function objectEntries(obj) {
  return Object.keys(obj || {}).map(function (key) {
    return {
      key: key,
      value: obj[key]
    };
  });
}

v.validate = validate;
v.processMessage = processMessage;
module.exports = v;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/events.js":
/*!***************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/lib/events.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var nanoid = __webpack_require__(/*! nanoid */ "./node_modules/nanoid/index.browser.js");
/**
 * Construct a new mapbox event client to send interaction events to the mapbox event service
 * @param {Object} options options with which to create the service
 * @param {String} options.accessToken the mapbox access token to make requests
 * @param {Number} [options.flushInterval=1000] the number of ms after which to flush the event queue
 * @param {Number} [options.maxQueueSize=100] the number of events to queue before flushing
 * @private
 */


function MapboxEventManager(options) {
  this.origin = options.origin || 'https://api.mapbox.com';
  this.endpoint = 'events/v2';
  this.access_token = options.accessToken;
  this.version = '0.2.0';
  this.sessionID = this.generateSessionID();
  this.userAgent = this.getUserAgent();
  this.options = options;
  this.send = this.send.bind(this); // parse global options to be sent with each request

  this.countries = options.countries ? options.countries.split(",") : null;
  this.types = options.types ? options.types.split(",") : null;
  this.bbox = options.bbox ? options.bbox : null;
  this.language = options.language ? options.language.split(",") : null;
  this.limit = options.limit ? +options.limit : null;
  this.locale = navigator.language || null;
  this.enableEventLogging = this.shouldEnableLogging(options);
  this.eventQueue = new Array();
  this.flushInterval = options.flushInterval || 1000;
  this.maxQueueSize = options.maxQueueSize || 100;
  this.timer = this.flushInterval ? setTimeout(this.flush.bind(this), this.flushInterval) : null; // keep some state to deduplicate requests if necessary

  this.lastSentInput = "";
  this.lastSentIndex = 0;
}

MapboxEventManager.prototype = {
  /**
     * Send a search.select event to the mapbox events service
     * This event marks the array index of the item selected by the user out of the array of possible options
     * @private
     * @param {Object} selected the geojson feature selected by the user
     * @param {Object} geocoder a mapbox-gl-geocoder instance
     * @returns {Promise}
     */
  select: function select(selected, geocoder) {
    var resultIndex = this.getSelectedIndex(selected, geocoder);
    var payload = this.getEventPayload('search.select', geocoder);
    payload.resultIndex = resultIndex;
    payload.resultPlaceName = selected.place_name;
    payload.resultId = selected.id;

    if (resultIndex === this.lastSentIndex && payload.queryString === this.lastSentInput || resultIndex == -1) {
      // don't log duplicate events if the user re-selected the same feature on the same search
      return;
    }

    this.lastSentIndex = resultIndex;
    this.lastSentInput = payload.queryString;
    if (!payload.queryString) return; // will be rejected

    return this.push(payload);
  },

  /**
     * Send a search-start event to the mapbox events service
     * This turnstile event marks when a user starts a new search
     * @private
     * @param {Object} geocoder a mapbox-gl-geocoder instance
     * @returns {Promise}
     */
  start: function start(geocoder) {
    var payload = this.getEventPayload('search.start', geocoder);
    if (!payload.queryString) return; // will be rejected

    return this.push(payload);
  },

  /**
   * Send a search-keyevent event to the mapbox events service
   * This event records each keypress in sequence
   * @private
   * @param {Object} keyEvent the keydown event to log
   * @param {Object} geocoder a mapbox-gl-geocoder instance
   * 
   */
  keyevent: function keyevent(keyEvent, geocoder) {
    //pass invalid event
    if (!keyEvent.key) return; // don't send events for keys that don't change the input
    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN

    if (keyEvent.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(keyEvent.keyCode) !== -1) return;
    var payload = this.getEventPayload('search.keystroke', geocoder);
    payload.lastAction = keyEvent.key;
    if (!payload.queryString) return; // will be rejected

    return this.push(payload);
  },

  /**
   * Send an event to the events service
   *
   * The event is skipped if the instance is not enabled to send logging events
   *
   * @private
   * @param {Object} payload the http POST body of the event
   * @param {Function} [callback] a callback function to invoke when the send has completed
   * @returns {Promise}
   */
  send: function send(payload, callback) {
    if (!this.enableEventLogging) {
      if (callback) return callback();
      return;
    }

    var options = this.getRequestOptions(payload);
    this.request(options, function (err) {
      if (err) return this.handleError(err, callback);

      if (callback) {
        return callback();
      }
    }.bind(this));
  },

  /**
   * Get http request options
   * @private
   * @param {*} payload
   */
  getRequestOptions: function getRequestOptions(payload) {
    if (!Array.isArray(payload)) payload = [payload];
    var options = {
      // events must be sent with POST
      method: "POST",
      host: this.origin,
      path: this.endpoint + "?access_token=" + this.access_token,
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(payload) //events are arrays

    };
    return options;
  },

  /**
   * Get the event payload to send to the events service
   * Most payload properties are shared across all events
   * @private
   * @param {String} event the name of the event to send to the events service. Valid options are 'search.start', 'search.select', 'search.feedback'.
   * @param {Object} geocoder a mapbox-gl-geocoder instance
   * @returns {Object} an event payload
   */
  getEventPayload: function getEventPayload(event, geocoder) {
    var proximity;
    if (!geocoder.options.proximity) proximity = null;else proximity = [geocoder.options.proximity.longitude, geocoder.options.proximity.latitude];
    var zoom = geocoder._map ? geocoder._map.getZoom() : undefined;
    var payload = {
      event: event,
      created: +new Date(),
      sessionIdentifier: this.sessionID,
      country: this.countries,
      userAgent: this.userAgent,
      language: this.language,
      bbox: this.bbox,
      types: this.types,
      endpoint: 'mapbox.places',
      autocomplete: geocoder.options.autocomplete,
      fuzzyMatch: geocoder.options.fuzzyMatch,
      proximity: proximity,
      limit: geocoder.options.limit,
      routing: geocoder.options.routing,
      worldview: geocoder.options.worldview,
      mapZoom: zoom,
      keyboardLocale: this.locale
    }; // get the text in the search bar

    if (event === "search.select") {
      payload.queryString = geocoder.inputString;
    } else if (event != "search.select" && geocoder._inputEl) {
      payload.queryString = geocoder._inputEl.value;
    } else {
      payload.queryString = geocoder.inputString;
    }

    return payload;
  },

  /**
   * Wraps the request function for easier testing
   * Make an http request and invoke a callback
   * @private
   * @param {Object} opts options describing the http request to be made
   * @param {Function} callback the callback to invoke when the http request is completed
   */
  request: function request(opts, callback) {
    var xhttp = new XMLHttpRequest();

    xhttp.onreadystatechange = function () {
      if (this.readyState == 4) {
        if (this.status == 204) {
          //success
          return callback(null);
        } else {
          return callback(this.statusText);
        }
      }
    };

    xhttp.open(opts.method, opts.host + '/' + opts.path, true);

    for (var header in opts.headers) {
      var headerValue = opts.headers[header];
      xhttp.setRequestHeader(header, headerValue);
    }

    xhttp.send(opts.body);
  },

  /**
   * Handle an error that occurred while making a request
   * @param {Object} err an error instance to log
   * @private
   */
  handleError: function handleError(err, callback) {
    if (callback) return callback(err);
  },

  /**
   * Generate a session ID to be returned with all of the searches made by this geocoder instance
   * ID is random and cannot be tracked across sessions
   * @private
   */
  generateSessionID: function generateSessionID() {
    return nanoid();
  },

  /**
   * Get a user agent string to send with the request to the events service
   * @private
   */
  getUserAgent: function getUserAgent() {
    return 'mapbox-gl-geocoder.' + this.version + "." + navigator.userAgent;
  },

  /**
     * Get the 0-based numeric index of the item that the user selected out of the list of options
     * @private
     * @param {Object} selected the geojson feature selected by the user
     * @param {Object} geocoder a Mapbox-GL-Geocoder instance
     * @returns {Number} the index of the selected result
     */
  getSelectedIndex: function getSelectedIndex(selected, geocoder) {
    if (!geocoder._typeahead) return;
    var results = geocoder._typeahead.data;
    var selectedID = selected.id;
    var resultIDs = results.map(function (feature) {
      return feature.id;
    });
    var selectedIdx = resultIDs.indexOf(selectedID);
    return selectedIdx;
  },

  /**
     * Check whether events should be logged
     * Clients using a localGeocoder or an origin other than mapbox should not have events logged
     * @private
     */
  shouldEnableLogging: function shouldEnableLogging(options) {
    if (options.enableEventLogging === false) return false;
    if (options.origin && options.origin.indexOf('api.mapbox.com') == -1) return false; // hard to make sense of events when a local instance is suplementing results from origin

    if (options.localGeocoder) return false; // hard to make sense of events when a custom filter is in use

    if (options.filter) return false;
    return true;
  },

  /**
   * Flush out the event queue by sending events to the events service
   * @private
   */
  flush: function flush() {
    if (this.eventQueue.length > 0) {
      this.send(this.eventQueue);
      this.eventQueue = new Array();
    } // //reset the timer


    if (this.timer) clearTimeout(this.timer);
    if (this.flushInterval) this.timer = setTimeout(this.flush.bind(this), this.flushInterval);
  },

  /**
   * Push event into the pending queue
   * @param {Object} evt the event to send to the events service
   * @param {Boolean} forceFlush indicates that the event queue should be flushed after adding this event regardless of size of the queue
   * @private
   */
  push: function push(evt, forceFlush) {
    this.eventQueue.push(evt);

    if (this.eventQueue.length >= this.maxQueueSize || forceFlush) {
      this.flush();
    }
  },

  /**
   * Flush any remaining events from the queue before it is removed
   * @private
   */
  remove: function remove() {
    this.flush();
  }
};
module.exports = MapboxEventManager;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/exceptions.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/lib/exceptions.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
  'fr': {
    'name': 'France',
    'bbox': [[-4.59235, 41.380007], [9.560016, 51.148506]]
  },
  'us': {
    'name': 'United States',
    'bbox': [[-171.791111, 18.91619], [-66.96466, 71.357764]]
  },
  'ru': {
    'name': 'Russia',
    'bbox': [[19.66064, 41.151416], [190.10042, 81.2504]]
  },
  'ca': {
    'name': 'Canada',
    'bbox': [[-140.99778, 41.675105], [-52.648099, 83.23324]]
  }
};

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Typeahead = __webpack_require__(/*! suggestions */ "./node_modules/suggestions/index.js");

var debounce = __webpack_require__(/*! lodash.debounce */ "./node_modules/lodash.debounce/index.js");

var extend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var EventEmitter = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;

var exceptions = __webpack_require__(/*! ./exceptions */ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/exceptions.js");

var MapboxClient = __webpack_require__(/*! @mapbox/mapbox-sdk */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/index.js");

var mbxGeocoder = __webpack_require__(/*! @mapbox/mapbox-sdk/services/geocoding */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/geocoding.js");

var MapboxEventManager = __webpack_require__(/*! ./events */ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/events.js");

var localization = __webpack_require__(/*! ./localization */ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/localization.js");

var subtag = __webpack_require__(/*! subtag */ "./node_modules/subtag/subtag.js");

var GEOCODE_REQUEST_TYPE = {
  FORWARD: 0,
  LOCAL: 1,
  REVERSE: 2
};
/**
 * A geocoder component using the [Mapbox Geocoding API](https://docs.mapbox.com/api/search/#geocoding)
 * @class MapboxGeocoder
 * @param {Object} options
 * @param {String} options.accessToken Required.
 * @param {String} [options.origin=https://api.mapbox.com] Use to set a custom API origin.
 * @param {Object} [options.mapboxgl] A [mapbox-gl](https://github.com/mapbox/mapbox-gl-js) instance to use when creating [Markers](https://docs.mapbox.com/mapbox-gl-js/api/#marker). Required if `options.marker` is `true`.
 * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.
 * @param {Boolean|Object} [options.flyTo=true] If `false`, animating the map to a selected result is disabled. If `true`, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.
 * @param {String} [options.placeholder=Search] Override the default placeholder attribute value.
 * @param {Object} [options.proximity] a proximity argument: this is
 * a geographical point given as an object with `latitude` and `longitude`
 * properties. Search results closer to this point will be given
 * higher priority.
 * @param {Boolean} [options.trackProximity=true] If `true`, the geocoder proximity will automatically update based on the map view.
 * @param {Boolean} [options.collapsed=false] If `true`, the geocoder control will collapse until hovered or in focus.
 * @param {Boolean} [options.clearAndBlurOnEsc=false] If `true`, the geocoder control will clear it's contents and blur when user presses the escape key.
 * @param {Boolean} [options.clearOnBlur=false] If `true`, the geocoder control will clear its value when the input blurs.
 * @param {Array} [options.bbox] a bounding box argument: this is
 * a bounding box given as an array in the format `[minX, minY, maxX, maxY]`.
 * Search results will be limited to the bounding box.
 * @param {string} [options.countries] a comma separated list of country codes to
 * limit results to specified country or countries.
 * @param {string} [options.types] a comma seperated list of types that filter
 * results to match those specified. See https://docs.mapbox.com/api/search/#data-types
 * for available types.
 * If reverseGeocode is enabled and no type is specified, the type defaults to POIs. Otherwise, if you configure more than one type, the first type will be used.
 * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.
 * @param {Number} [options.limit=5] Maximum number of results to show.
 * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.
 * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.
 * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Mapbox Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.
 * @param {Function} [options.externalGeocoder] A function accepting the query string and current features list which performs geocoding to supplement results from the Mapbox Geocoding API. Expected to return a Promise which resolves to an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.
 * @param {distance|score} [options.reverseMode=distance] - Set the factors that are used to sort nearby results.
 * @param {boolean} [options.reverseGeocode=false] If `true`, enable reverse geocoding mode. In reverse geocoding, search input is expected to be coordinates in the form `lat, lon`, with suggestions being the reverse geocodes.
 * @param {Boolean} [options.enableEventLogging=true] Allow Mapbox to collect anonymous usage statistics from the plugin.
 * @param {Boolean|Object} [options.marker=true]  If `true`, a [Marker](https://docs.mapbox.com/mapbox-gl-js/api/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.mapboxgl` also be set.
 * @param {Function} [options.render] A function that specifies how the results should be rendered in the dropdown menu. This function should accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. Any HTML in the returned string will be rendered.
 * @param {Function} [options.getItemValue] A function that specifies how the selected result should be rendered in the search bar. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. HTML tags in the output string will not be rendered. Defaults to `(item) => item.place_name`.
 * @param {String} [options.mode=mapbox.places] A string specifying the geocoding [endpoint](https://docs.mapbox.com/api/search/#endpoints) to query. Options are `mapbox.places` and `mapbox.places-permanent`. The `mapbox.places-permanent` mode requires an enterprise license for permanent geocodes.
 * @param {Boolean} [options.localGeocoderOnly=false] If `true`, indicates that the `localGeocoder` results should be the only ones returned to the user. If `false`, indicates that the `localGeocoder` results should be combined with those from the Mapbox API with the `localGeocoder` results ranked higher.
 * @param {Boolean} [options.autocomplete=true] Specify whether to return autocomplete results or not. When autocomplete is enabled, results will be included that start with the requested string, rather than just responses that match it exactly.
 * @param {Boolean} [options.fuzzyMatch=true] Specify whether the Geocoding API should attempt approximate, as well as exact, matching when performing searches, or whether it should opt out of this behavior and only attempt exact matching.
 * @param {Boolean} [options.routing=false] Specify whether to request additional metadata about the recommended navigation destination corresponding to the feature or not. Only applicable for address features.
 * @param {String} [options.worldview="us"] Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.
 * @example
 * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });
 * map.addControl(geocoder);
 * @return {MapboxGeocoder} `this`
 *
 */

function MapboxGeocoder(options) {
  this._eventEmitter = new EventEmitter();
  this.options = extend({}, this.options, options);
  this.inputString = '';
  this.fresh = true;
  this.lastSelected = null;
}

MapboxGeocoder.prototype = {
  options: {
    zoom: 16,
    flyTo: true,
    trackProximity: true,
    minLength: 2,
    reverseGeocode: false,
    limit: 5,
    origin: 'https://api.mapbox.com',
    enableEventLogging: true,
    marker: true,
    mapboxgl: null,
    collapsed: false,
    clearAndBlurOnEsc: false,
    clearOnBlur: false,
    getItemValue: function getItemValue(item) {
      return item.place_name;
    },
    render: function render(item) {
      var placeName = item.place_name.split(',');
      return '<div class="mapboxgl-ctrl-geocoder--suggestion"><div class="mapboxgl-ctrl-geocoder--suggestion-title">' + placeName[0] + '</div><div class="mapboxgl-ctrl-geocoder--suggestion-address">' + placeName.splice(1, placeName.length).join(',') + '</div></div>';
    }
  },

  /**
   * Add the geocoder to a container. The container can be either a `mapboxgl.Map`, an `HTMLElement` or a CSS selector string.
   *
   * If the container is a [`mapboxgl.Map`](https://docs.mapbox.com/mapbox-gl-js/api/map/), this function will behave identically to [`Map.addControl(geocoder)`](https://docs.mapbox.com/mapbox-gl-js/api/map/#map#addcontrol).
   * If the container is an instance of [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement), then the geocoder will be appended as a child of that [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement).
   * If the container is a [CSS selector string](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors), the geocoder will be appended to the element returned from the query.
   *
   * This function will throw an error if the container is none of the above.
   * It will also throw an error if the referenced HTML element cannot be found in the `document.body`.
   *
   * For example, if the HTML body contains the element `<div id='geocoder-container'></div>`, the following script will append the geocoder to `#geocoder-container`:
   *
   * ```javascript
   * var geocoder = new MapboxGeocoder({ accessToken: mapboxgl.accessToken });
   * geocoder.addTo('#geocoder-container');
   * ```
   * @param {String|HTMLElement|mapboxgl.Map} container A reference to the container to which to add the geocoder
   */
  addTo: function addTo(container) {
    function addToExistingContainer(geocoder, container) {
      if (!document.body.contains(container)) {
        throw new Error("Element provided to #addTo() exists, but is not in the DOM");
      }

      var el = geocoder.onAdd(); //returns the input elements, which are then added to the requested html container

      container.appendChild(el);
    } // if the container is a map, add the control like normal


    if (container._controlContainer) {
      //  it's a mapbox-gl map, add like normal
      container.addControl(this);
    } // if the container is an HTMLElement, then set the parent to be that element
    else if (container instanceof HTMLElement) {
      addToExistingContainer(this, container);
    } // if the container is a string, treat it as a CSS query
    else if (typeof container == 'string') {
      var parent = document.querySelectorAll(container);

      if (parent.length === 0) {
        throw new Error("Element ", container, "not found.");
      }

      if (parent.length > 1) {
        throw new Error("Geocoder can only be added to a single html element");
      }

      addToExistingContainer(this, parent[0]);
    } else {
      throw new Error("Error: addTo must be a mapbox-gl-js map, an html element, or a CSS selector query for a single html element");
    }
  },
  onAdd: function onAdd(map) {
    if (map && typeof map != 'string') {
      this._map = map;
    }

    this.setLanguage();

    if (!this.options.localGeocoderOnly) {
      this.geocoderService = mbxGeocoder(MapboxClient({
        accessToken: this.options.accessToken,
        origin: this.options.origin
      }));
    }

    if (this.options.localGeocoderOnly && !this.options.localGeocoder) {
      throw new Error("A localGeocoder function must be specified to use localGeocoderOnly mode");
    }

    this.eventManager = new MapboxEventManager(this.options);
    this._onChange = this._onChange.bind(this);
    this._onKeyDown = this._onKeyDown.bind(this);
    this._onPaste = this._onPaste.bind(this);
    this._onBlur = this._onBlur.bind(this);
    this._showButton = this._showButton.bind(this);
    this._hideButton = this._hideButton.bind(this);
    this._onQueryResult = this._onQueryResult.bind(this);
    this.clear = this.clear.bind(this);
    this._updateProximity = this._updateProximity.bind(this);
    this._collapse = this._collapse.bind(this);
    this._unCollapse = this._unCollapse.bind(this);
    this._clear = this._clear.bind(this);
    this._clearOnBlur = this._clearOnBlur.bind(this);
    var el = this.container = document.createElement('div');
    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';
    var searchIcon = this.createIcon('search', '<path d="M7.4 2.5c-2.7 0-4.9 2.2-4.9 4.9s2.2 4.9 4.9 4.9c1 0 1.8-.2 2.5-.8l3.7 3.7c.2.2.4.3.8.3.7 0 1.1-.4 1.1-1.1 0-.3-.1-.5-.3-.8L11.4 10c.4-.8.8-1.6.8-2.5.1-2.8-2.1-5-4.8-5zm0 1.6c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2-3.3-1.3-3.3-3.1 1.4-3.3 3.3-3.3z"/>');
    this._inputEl = document.createElement('input');
    this._inputEl.type = 'text';
    this._inputEl.className = 'mapboxgl-ctrl-geocoder--input';
    this.setPlaceholder();

    if (this.options.collapsed) {
      this._collapse();

      this.container.addEventListener('mouseenter', this._unCollapse);
      this.container.addEventListener('mouseleave', this._collapse);

      this._inputEl.addEventListener('focus', this._unCollapse);
    }

    if (this.options.collapsed || this.options.clearOnBlur) {
      this._inputEl.addEventListener('blur', this._onBlur);
    }

    this._inputEl.addEventListener('keydown', debounce(this._onKeyDown, 200));

    this._inputEl.addEventListener('paste', this._onPaste);

    this._inputEl.addEventListener('change', this._onChange);

    this.container.addEventListener('mouseenter', this._showButton);
    this.container.addEventListener('mouseleave', this._hideButton);

    this._inputEl.addEventListener('keyup', function (e) {
      this.eventManager.keyevent(e, this);
    }.bind(this));

    var actions = document.createElement('div');
    actions.classList.add('mapboxgl-ctrl-geocoder--pin-right');
    this._clearEl = document.createElement('button');

    this._clearEl.setAttribute('aria-label', 'Clear');

    this._clearEl.addEventListener('click', this.clear);

    this._clearEl.className = 'mapboxgl-ctrl-geocoder--button';
    var buttonIcon = this.createIcon('close', '<path d="M3.8 2.5c-.6 0-1.3.7-1.3 1.3 0 .3.2.7.5.8L7.2 9 3 13.2c-.3.3-.5.7-.5 1 0 .6.7 1.3 1.3 1.3.3 0 .7-.2 1-.5L9 10.8l4.2 4.2c.2.3.7.3 1 .3.6 0 1.3-.7 1.3-1.3 0-.3-.2-.7-.3-1l-4.4-4L15 4.6c.3-.2.5-.5.5-.8 0-.7-.7-1.3-1.3-1.3-.3 0-.7.2-1 .3L9 7.1 4.8 2.8c-.3-.1-.7-.3-1-.3z"/>');

    this._clearEl.appendChild(buttonIcon);

    this._loadingEl = this.createIcon('loading', '<path fill="#333" d="M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z"/><path opacity=".1" d="M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z"/>');
    actions.appendChild(this._clearEl);
    actions.appendChild(this._loadingEl);
    el.appendChild(searchIcon);
    el.appendChild(this._inputEl);
    el.appendChild(actions);
    this._typeahead = new Typeahead(this._inputEl, [], {
      filter: false,
      minLength: this.options.minLength,
      limit: this.options.limit
    });
    this.setRenderFunction(this.options.render);
    this._typeahead.getItemValue = this.options.getItemValue;
    this.mapMarker = null;
    this._handleMarker = this._handleMarker.bind(this);

    if (this._map) {
      if (this.options.trackProximity) {
        this._updateProximity();

        this._map.on('moveend', this._updateProximity);
      }

      this._mapboxgl = this.options.mapboxgl;

      if (!this._mapboxgl && this.options.marker) {
        // eslint-disable-next-line no-console
        console.error("No mapboxgl detected in options. Map markers are disabled. Please set options.mapboxgl.");
        this.options.marker = false;
      }
    }

    return el;
  },
  createIcon: function createIcon(name, path) {
    var icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
    icon.setAttribute('class', 'mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-' + name);
    icon.setAttribute('viewBox', '0 0 18 18');
    icon.setAttribute('xml:space', 'preserve');
    icon.setAttribute('width', 18);
    icon.setAttribute('height', 18); // IE does not have innerHTML for SVG nodes

    if (!('innerHTML' in icon)) {
      var SVGNodeContainer = document.createElement('div');
      SVGNodeContainer.innerHTML = '<svg>' + path.valueOf().toString() + '</svg>';
      var SVGNode = SVGNodeContainer.firstChild,
          SVGPath = SVGNode.firstChild;
      icon.appendChild(SVGPath);
    } else {
      icon.innerHTML = path;
    }

    return icon;
  },
  onRemove: function onRemove() {
    this.container.parentNode.removeChild(this.container);

    if (this.options.trackProximity && this._map) {
      this._map.off('moveend', this._updateProximity);
    }

    this._removeMarker();

    this._map = null;
    return this;
  },
  _onPaste: function _onPaste(e) {
    var value = (e.clipboardData || window.clipboardData).getData('text');

    if (value.length >= this.options.minLength) {
      this._geocode(value);
    }
  },
  _onKeyDown: function _onKeyDown(e) {
    var ESC_KEY_CODE = 27,
        TAB_KEY_CODE = 9;

    if (e.keyCode === ESC_KEY_CODE && this.options.clearAndBlurOnEsc) {
      this._clear(e);

      return this._inputEl.blur();
    } // if target has shadowRoot, then get the actual active element inside the shadowRoot


    var target = e.target && e.target.shadowRoot ? e.target.shadowRoot.activeElement : e.target;
    var value = target ? target.value : '';

    if (!value) {
      this.fresh = true; // the user has removed all the text

      if (e.keyCode !== TAB_KEY_CODE) this.clear(e);
      return this._clearEl.style.display = 'none';
    } // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN


    if (e.metaKey || [TAB_KEY_CODE, ESC_KEY_CODE, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;

    if (target.value.length >= this.options.minLength) {
      this._geocode(target.value);
    }
  },
  _showButton: function _showButton() {
    if (this._typeahead.selected) this._clearEl.style.display = 'block';
  },
  _hideButton: function _hideButton() {
    if (this._typeahead.selected) this._clearEl.style.display = 'none';
  },
  _onBlur: function _onBlur(e) {
    if (this.options.clearOnBlur) {
      this._clearOnBlur(e);
    }

    if (this.options.collapsed) {
      this._collapse();
    }
  },
  _onChange: function _onChange() {
    var selected = this._typeahead.selected;

    if (selected && JSON.stringify(selected) !== this.lastSelected) {
      this._clearEl.style.display = 'none';

      if (this.options.flyTo) {
        var flyOptions;

        if (selected.properties && exceptions[selected.properties.short_code]) {
          // Certain geocoder search results return (and therefore zoom to fit)
          // an unexpectedly large bounding box: for example, both Russia and the
          // USA span both sides of -180/180, or France includes the island of
          // Reunion in the Indian Ocean. An incomplete list of these exceptions
          // at ./exceptions.json provides "reasonable" bounding boxes as a
          // short-term solution; this may be amended as necessary.
          flyOptions = extend({}, this.options.flyTo);

          if (this._map) {
            this._map.fitBounds(exceptions[selected.properties.short_code].bbox, flyOptions);
          }
        } else if (selected.bbox) {
          var bbox = selected.bbox;
          flyOptions = extend({}, this.options.flyTo);

          if (this._map) {
            this._map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]], flyOptions);
          }
        } else {
          var defaultFlyOptions = {
            zoom: this.options.zoom
          };
          flyOptions = extend({}, defaultFlyOptions, this.options.flyTo); //  ensure that center is not overriden by custom options

          if (selected.center) {
            flyOptions.center = selected.center;
          } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {
            flyOptions.center = selected.geometry.coordinates;
          }

          if (this._map) {
            this._map.flyTo(flyOptions);
          }
        }
      }

      if (this.options.marker && this._mapboxgl) {
        this._handleMarker(selected);
      } // After selecting a feature, re-focus the textarea and set
      // cursor at start.


      this._inputEl.focus();

      this._inputEl.scrollLeft = 0;

      this._inputEl.setSelectionRange(0, 0);

      this.lastSelected = JSON.stringify(selected);

      this._eventEmitter.emit('result', {
        result: selected
      });

      this.eventManager.select(selected, this);
    }
  },
  _requestType: function _requestType(options, search) {
    var type;
    var reverseGeocodeCoordRgx = /^[ ]*(-?\d+\.?\d*)[, ]+(-?\d+\.?\d*)[ ]*$/;

    if (options.localGeocoderOnly) {
      type = GEOCODE_REQUEST_TYPE.LOCAL;
    } else if (options.reverseGeocode && reverseGeocodeCoordRgx.test(search)) {
      type = GEOCODE_REQUEST_TYPE.REVERSE;
    } else {
      type = GEOCODE_REQUEST_TYPE.FORWARD;
    }

    return type;
  },
  _setupConfig: function _setupConfig(requestType, search) {
    // Possible config properties to pass to client
    var keys = ['bbox', 'limit', 'proximity', 'countries', 'types', 'language', 'reverseMode', 'mode', 'autocomplete', 'fuzzyMatch', 'routing', 'worldview'];
    var spacesOrCommaRgx = /[\s,]+/;
    var self = this;
    var config = keys.reduce(function (config, key) {
      // don't include undefined/null params, but allow boolean, among other, values
      if (self.options[key] === undefined || self.options[key] === null) {
        return config;
      } // countries, types, and language need to be passed in as arrays to client
      // https://github.com/mapbox/mapbox-sdk-js/blob/master/services/geocoding.js#L38-L47


      ['countries', 'types', 'language'].indexOf(key) > -1 ? config[key] = self.options[key].split(spacesOrCommaRgx) : config[key] = self.options[key];
      var isCoordKey = typeof self.options[key].longitude === 'number' && typeof self.options[key].latitude === 'number';

      if (key === 'proximity' && isCoordKey) {
        var lng = self.options[key].longitude;
        var lat = self.options[key].latitude;
        config[key] = [lng, lat];
      }

      return config;
    }, {});

    switch (requestType) {
      case GEOCODE_REQUEST_TYPE.REVERSE:
        {
          var coords = search.split(spacesOrCommaRgx).map(function (c) {
            return parseFloat(c, 10);
          }).reverse(); // client only accepts one type for reverseGeocode, so
          // use first config type if one, if not default to poi

          config.types ? [config.types[0]] : ["poi"];
          config = extend(config, {
            query: coords,
            limit: 1
          }); // Remove config options not supported by the reverseGeocoder

          ['proximity', 'autocomplete', 'fuzzyMatch', 'bbox'].forEach(function (key) {
            if (key in config) {
              delete config[key];
            }
          });
        }
        break;

      case GEOCODE_REQUEST_TYPE.FORWARD:
        {
          // Ensure that any reverse geocoding looking request is cleaned up
          // to be processed as only a forward geocoding request by the server.
          var reverseGeocodeCoordRgx = /^[ ]*(-?\d+\.?\d*)[, ]+(-?\d+\.?\d*)*[ ]*$/;

          if (reverseGeocodeCoordRgx.test(search)) {
            search = search.replace(/,/g, ' ');
          }

          config = extend(config, {
            query: search
          });
        }
        break;
    }

    return config;
  },
  _geocode: function _geocode(searchInput) {
    this.inputString = searchInput;
    this._loadingEl.style.display = 'block';

    this._eventEmitter.emit('loading', {
      query: searchInput
    });

    var requestType = this._requestType(this.options, searchInput);

    var config = this._setupConfig(requestType, searchInput);

    var request;

    switch (requestType) {
      case GEOCODE_REQUEST_TYPE.LOCAL:
        request = Promise.resolve();
        break;

      case GEOCODE_REQUEST_TYPE.FORWARD:
        request = this.geocoderService.forwardGeocode(config).send();
        break;

      case GEOCODE_REQUEST_TYPE.REVERSE:
        request = this.geocoderService.reverseGeocode(config).send();
        break;
    }

    var localGeocoderRes = this.options.localGeocoder ? this.options.localGeocoder(searchInput) || [] : [];
    var externalGeocoderRes = [];
    var geocoderError = null;
    request.catch(function (error) {
      geocoderError = error;
    }.bind(this)).then(function (response) {
      this._loadingEl.style.display = 'none';
      var res = {};

      if (!response) {
        res = {
          type: 'FeatureCollection',
          features: []
        };
      } else if (response.statusCode == '200') {
        res = response.body;
        res.request = response.request;
        res.headers = response.headers;
      }

      res.config = config;

      if (this.fresh) {
        this.eventManager.start(this);
        this.fresh = false;
      } // supplement Mapbox Geocoding API results with locally populated results


      res.features = res.features ? localGeocoderRes.concat(res.features) : localGeocoderRes;

      if (this.options.externalGeocoder) {
        externalGeocoderRes = this.options.externalGeocoder(searchInput, res.features) || []; // supplement Mapbox Geocoding API results with features returned by a promise

        return externalGeocoderRes.then(function (features) {
          res.features = res.features ? features.concat(res.features) : features;
          return res;
        }, function () {
          // on error, display the original result
          return res;
        });
      }

      return res;
    }.bind(this)).then(function (res) {
      if (geocoderError) {
        throw geocoderError;
      } // apply results filter if provided


      if (this.options.filter && res.features.length) {
        res.features = res.features.filter(this.options.filter);
      }

      if (res.features.length) {
        this._clearEl.style.display = 'block';

        this._eventEmitter.emit('results', res);

        this._typeahead.update(res.features);
      } else {
        this._clearEl.style.display = 'none';
        this._typeahead.selected = null;

        this._renderNoResults();

        this._eventEmitter.emit('results', res);
      }
    }.bind(this)).catch(function (err) {
      this._loadingEl.style.display = 'none'; // in the event of an error in the Mapbox Geocoding API still display results from the localGeocoder

      if (localGeocoderRes.length && this.options.localGeocoder || externalGeocoderRes.length && this.options.externalGeocoder) {
        this._clearEl.style.display = 'block';

        this._typeahead.update(localGeocoderRes);
      } else {
        this._clearEl.style.display = 'none';
        this._typeahead.selected = null;

        this._renderError();
      }

      this._eventEmitter.emit('results', {
        features: localGeocoderRes
      });

      this._eventEmitter.emit('error', {
        error: err
      });
    }.bind(this));
    return request;
  },

  /**
   * Shared logic for clearing input
   * @param {Event} [ev] the event that triggered the clear, if available
   * @private
   *
   */
  _clear: function _clear(ev) {
    if (ev) ev.preventDefault();
    this._inputEl.value = '';
    this._typeahead.selected = null;

    this._typeahead.clear();

    this._onChange();

    this._clearEl.style.display = 'none';

    this._removeMarker();

    this.lastSelected = null;

    this._eventEmitter.emit('clear');

    this.fresh = true;
  },

  /**
   * Clear and then focus the input.
   * @param {Event} [ev] the event that triggered the clear, if available
   *
   */
  clear: function clear(ev) {
    this._clear(ev);

    this._inputEl.focus();
  },

  /**
   * Clear the input, without refocusing it. Used to implement clearOnBlur
   * constructor option.
   * @param {Event} [ev] the blur event
   * @private
   */
  _clearOnBlur: function _clearOnBlur(ev) {
    var ctx = this;
    /*
     * If relatedTarget is not found, assume user targeted the suggestions list.
     * In that case, do not clear on blur. There are other edge cases where
     * ev.relatedTarget could be null. Clicking on list always results in null
     * relatedtarget because of upstream behavior in `suggestions`.
     *
     * The ideal solution would be to check if ev.relatedTarget is a child of
     * the list. See issue #258 for details on why we can't do that yet.
     */

    if (ev.relatedTarget) {
      ctx._clear(ev);
    }
  },
  _onQueryResult: function _onQueryResult(response) {
    var results = response.body;
    if (!results.features.length) return;
    var result = results.features[0];
    this._typeahead.selected = result;
    this._inputEl.value = result.place_name;

    this._onChange();
  },
  _updateProximity: function _updateProximity() {
    // proximity is designed for local scale, if the user is looking at the whole world,
    // it doesn't make sense to factor in the arbitrary centre of the map
    if (!this._map) {
      return;
    }

    if (this._map.getZoom() > 9) {
      var center = this._map.getCenter().wrap();

      this.setProximity({
        longitude: center.lng,
        latitude: center.lat
      });
    } else {
      this.setProximity(null);
    }
  },
  _collapse: function _collapse() {
    // do not collapse if input is in focus
    if (!this._inputEl.value && this._inputEl !== document.activeElement) this.container.classList.add('mapboxgl-ctrl-geocoder--collapsed');
  },
  _unCollapse: function _unCollapse() {
    this.container.classList.remove('mapboxgl-ctrl-geocoder--collapsed');
  },

  /**
   * Set & query the input
   * @param {string} searchInput location name or other search input
   * @returns {MapboxGeocoder} this
   */
  query: function query(searchInput) {
    this._geocode(searchInput).then(this._onQueryResult);

    return this;
  },
  _renderError: function _renderError() {
    var errorMessage = "<div class='mapbox-gl-geocoder--error'>There was an error reaching the server</div>";

    this._renderMessage(errorMessage);
  },
  _renderNoResults: function _renderNoResults() {
    var errorMessage = "<div class='mapbox-gl-geocoder--error mapbox-gl-geocoder--no-results'>No results found</div>";

    this._renderMessage(errorMessage);
  },
  _renderMessage: function _renderMessage(msg) {
    this._typeahead.update([]);

    this._typeahead.selected = null;

    this._typeahead.clear();

    this._typeahead.renderError(msg);
  },

  /**
   * Get the text to use as the search bar placeholder
   *
   * If placeholder is provided in options, then use options.placeholder
   * Otherwise, if language is provided in options, then use the localized string of the first language if available
   * Otherwise use the default
   *
   * @returns {String} the value to use as the search bar placeholder
   * @private
   */
  _getPlaceholderText: function _getPlaceholderText() {
    if (this.options.placeholder) return this.options.placeholder;

    if (this.options.language) {
      var firstLanguage = this.options.language.split(",")[0];
      var language = subtag.language(firstLanguage);
      var localizedValue = localization.placeholder[language];
      if (localizedValue) return localizedValue;
    }

    return 'Search';
  },

  /**
   * Set input
   * @param {string} searchInput location name or other search input
   * @returns {MapboxGeocoder} this
   */
  setInput: function setInput(searchInput) {
    // Set input value to passed value and clear everything else.
    this._inputEl.value = searchInput;
    this._typeahead.selected = null;

    this._typeahead.clear();

    if (searchInput.length >= this.options.minLength) {
      this._geocode(searchInput);
    }

    return this;
  },

  /**
   * Set proximity
   * @param {Object} proximity The new `options.proximity` value. This is a geographical point given as an object with `latitude` and `longitude` properties.
   * @returns {MapboxGeocoder} this
   */
  setProximity: function setProximity(proximity) {
    this.options.proximity = proximity;
    return this;
  },

  /**
   * Get proximity
   * @returns {Object} The geocoder proximity
   */
  getProximity: function getProximity() {
    return this.options.proximity;
  },

  /**
   * Set the render function used in the results dropdown
   * @param {Function} fn The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.
   * @returns {MapboxGeocoder} this
   */
  setRenderFunction: function setRenderFunction(fn) {
    if (fn && typeof fn == "function") {
      this._typeahead.render = fn;
    }

    return this;
  },

  /**
   * Get the function used to render the results dropdown
   *
   * @returns {Function} the render function
   */
  getRenderFunction: function getRenderFunction() {
    return this._typeahead.render;
  },

  /**
   * Get the language to use in UI elements and when making search requests
   *
   * Look first at the explicitly set options otherwise use the browser's language settings
   * @param {String} language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.
   * @returns {MapboxGeocoder} this
   */
  setLanguage: function setLanguage(language) {
    var browserLocale = navigator.language || navigator.userLanguage || navigator.browserLanguage;
    this.options.language = language || this.options.language || browserLocale;
    return this;
  },

  /**
   * Get the language to use in UI elements and when making search requests
   * @returns {String} The language(s) used by the plugin, if any
   */
  getLanguage: function getLanguage() {
    return this.options.language;
  },

  /**
   * Get the zoom level the map will move to when there is no bounding box on the selected result
   * @returns {Number} the map zoom
   */
  getZoom: function getZoom() {
    return this.options.zoom;
  },

  /**
   * Set the zoom level
   * @param {Number} zoom The zoom level that the map should animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.
   * @returns {MapboxGeocoder} this
   */
  setZoom: function setZoom(zoom) {
    this.options.zoom = zoom;
    return this;
  },

  /**
   * Get the parameters used to fly to the selected response, if any
   * @returns {Boolean|Object} The `flyTo` option
   */
  getFlyTo: function getFlyTo() {
    return this.options.flyTo;
  },

  /**
   * Set the flyTo options
   * @param {Boolean|Object} flyTo If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://docs.mapbox.com/mapbox-gl-js/api/#map#flyto) or [`fitBounds`](https://docs.mapbox.com/mapbox-gl-js/api/#map#fitbounds) method providing control over the animation of the transition.
   */
  setFlyTo: function setFlyTo(flyTo) {
    this.options.flyTo = flyTo;
    return this;
  },

  /**
   * Get the value of the placeholder string
   * @returns {String} The input element's placeholder value
   */
  getPlaceholder: function getPlaceholder() {
    return this.options.placeholder;
  },

  /**
   * Set the value of the input element's placeholder
   * @param {String} placeholder the text to use as the input element's placeholder
   * @returns {MapboxGeocoder} this
   */
  setPlaceholder: function setPlaceholder(placeholder) {
    this.placeholder = placeholder ? placeholder : this._getPlaceholderText();
    this._inputEl.placeholder = this.placeholder;

    this._inputEl.setAttribute('aria-label', this.placeholder);

    return this;
  },

  /**
   * Get the bounding box used by the plugin
   * @returns {Array<Number>} the bounding box, if any
   */
  getBbox: function getBbox() {
    return this.options.bbox;
  },

  /**
   * Set the bounding box to limit search results to
   * @param {Array<Number>} bbox a bounding box given as an array in the format [minX, minY, maxX, maxY].
   * @returns {MapboxGeocoder} this
   */
  setBbox: function setBbox(bbox) {
    this.options.bbox = bbox;
    return this;
  },

  /**
   * Get a list of the countries to limit search results to
   * @returns {String} a comma separated list of countries to limit to, if any
   */
  getCountries: function getCountries() {
    return this.options.countries;
  },

  /**
   * Set the countries to limit search results to
   * @param {String} countries a comma separated list of countries to limit to
   * @returns {MapboxGeocoder} this
   */
  setCountries: function setCountries(countries) {
    this.options.countries = countries;
    return this;
  },

  /**
   * Get a list of the types to limit search results to
   * @returns {String} a comma separated list of types to limit to
   */
  getTypes: function getTypes() {
    return this.options.types;
  },

  /**
   * Set the types to limit search results to
   * @param {String} countries a comma separated list of types to limit to
   * @returns {MapboxGeocoder} this
   */
  setTypes: function setTypes(types) {
    this.options.types = types;
    return this;
  },

  /**
   * Get the minimum number of characters typed to trigger results used in the plugin
   * @returns {Number} The minimum length in characters before a search is triggered
   */
  getMinLength: function getMinLength() {
    return this.options.minLength;
  },

  /**
   * Set the minimum number of characters typed to trigger results used by the plugin
   * @param {Number} minLength the minimum length in characters
   * @returns {MapboxGeocoder} this
   */
  setMinLength: function setMinLength(minLength) {
    this.options.minLength = minLength;
    if (this._typeahead) this._typeahead.options.minLength = minLength;
    return this;
  },

  /**
   * Get the limit value for the number of results to display used by the plugin
   * @returns {Number} The limit value for the number of results to display used by the plugin
   */
  getLimit: function getLimit() {
    return this.options.limit;
  },

  /**
   * Set the limit value for the number of results to display used by the plugin
   * @param {Number} limit the number of search results to return
   * @returns {MapboxGeocoder}
   */
  setLimit: function setLimit(limit) {
    this.options.limit = limit;
    if (this._typeahead) this._typeahead.options.limit = limit;
    return this;
  },

  /**
   * Get the filter function used by the plugin
   * @returns {Function} the filter function
   */
  getFilter: function getFilter() {
    return this.options.filter;
  },

  /**
   * Set the filter function used by the plugin.
   * @param {Function} filter A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.
   * @returns {MapboxGeocoder} this
   */
  setFilter: function setFilter(filter) {
    this.options.filter = filter;
    return this;
  },

  /**
   * Set the geocoding endpoint used by the plugin.
   * @param {Function} origin A function which accepts an HTTPS URL to specify the endpoint to query results from.
   * @returns {MapboxGeocoder} this
   */
  setOrigin: function setOrigin(origin) {
    this.options.origin = origin;
    this.geocoderService = mbxGeocoder(MapboxClient({
      accessToken: this.options.accessToken,
      origin: this.options.origin
    }));
    return this;
  },

  /**
   * Get the geocoding endpoint the plugin is currently set to
   * @returns {Function} the endpoint URL
   */
  getOrigin: function getOrigin() {
    return this.options.origin;
  },

  /**
   * Set the autocomplete option used for geocoding requests
   * @param {Boolean} value The boolean value to set autocomplete to
   * @returns 
   */
  setAutocomplete: function setAutocomplete(value) {
    this.options.autocomplete = value;
    return this;
  },

  /**
   * Get the current autocomplete parameter value used for requests
   * @returns {Boolean} The autocomplete parameter value
   */
  getAutocomplete: function getAutocomplete() {
    return this.options.autocomplete;
  },

  /**
   * Set the fuzzyMatch option used for approximate matching in geocoding requests
   * @param {Boolean} value The boolean value to set fuzzyMatch to
   * @returns 
   */
  setFuzzyMatch: function setFuzzyMatch(value) {
    this.options.fuzzyMatch = value;
    return this;
  },

  /**
   * Get the current fuzzyMatch parameter value used for requests
   * @returns {Boolean} The fuzzyMatch parameter value
   */
  getFuzzyMatch: function getFuzzyMatch() {
    return this.options.fuzzyMatch;
  },

  /**
   * Set the routing parameter used to ask for routable point metadata in geocoding requests
   * @param {Boolean} value The boolean value to set routing to
   * @returns 
   */
  setRouting: function setRouting(value) {
    this.options.routing = value;
    return this;
  },

  /**
   * Get the current routing parameter value used for requests
   * @returns {Boolean} The routing parameter value
   */
  getRouting: function getRouting() {
    return this.options.routing;
  },

  /**
   * Set the worldview parameter
   * @param {String} code The country code representing the worldview (e.g. "us" | "cn" | "jp", "in")
   * @returns 
   */
  setWorldview: function setWorldview(code) {
    this.options.worldview = code;
    return this;
  },

  /**
   * Get the current worldview parameter value used for requests
   * @returns {String} The worldview parameter value
   */
  getWorldview: function getWorldview() {
    return this.options.worldview;
  },

  /**
   * Handle the placement of a result marking the selected result
   * @private
   * @param {Object} selected the selected geojson feature
   * @returns {MapboxGeocoder} this
   */
  _handleMarker: function _handleMarker(selected) {
    // clean up any old marker that might be present
    if (!this._map) {
      return;
    }

    this._removeMarker();

    var defaultMarkerOptions = {
      color: '#4668F2'
    };
    var markerOptions = extend({}, defaultMarkerOptions, this.options.marker);
    this.mapMarker = new this._mapboxgl.Marker(markerOptions);

    if (selected.center) {
      this.mapMarker.setLngLat(selected.center).addTo(this._map);
    } else if (selected.geometry && selected.geometry.type && selected.geometry.type === 'Point' && selected.geometry.coordinates) {
      this.mapMarker.setLngLat(selected.geometry.coordinates).addTo(this._map);
    }

    return this;
  },

  /**
   * Handle the removal of a result marker
   * @private
   */
  _removeMarker: function _removeMarker() {
    if (this.mapMarker) {
      this.mapMarker.remove();
      this.mapMarker = null;
    }
  },

  /**
   * Subscribe to events that happen within the plugin.
   * @param {String} type name of event. Available events and the data passed into their respective event objects are:
   *
   * - __clear__ `Emitted when the input is cleared`
   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`
   * - __results__ `{ results } Fired when the geocoder returns a response`
   * - __result__ `{ result } Fired when input is set`
   * - __error__ `{ error } Error as string`
   * @param {Function} fn function that's called when the event is emitted.
   * @returns {MapboxGeocoder} this;
   */
  on: function on(type, fn) {
    this._eventEmitter.on(type, fn);

    return this;
  },

  /**
   * Remove an event
   * @returns {MapboxGeocoder} this
   * @param {String} type Event name.
   * @param {Function} fn Function that should unsubscribe to the event emitted.
   */
  off: function off(type, fn) {
    this._eventEmitter.removeListener(type, fn);

    this.eventManager.remove();
    return this;
  }
};
module.exports = MapboxGeocoder;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/localization.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/lib/localization.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Localized values for the placeholder string
 * 
 * @private
 */

var placeholder = {
  // list drawn from https://docs.mapbox.com/api/search/#language-coverage
  'de': 'Suche',
  // german
  'it': 'Ricerca',
  //italian
  'en': 'Search',
  // english
  'nl': 'Zoeken',
  //dutch
  'fr': 'Chercher',
  //french
  'ca': 'Cerca',
  //catalan
  'he': 'לחפש',
  //hebrew
  'ja': 'サーチ',
  //japanese
  'lv': 'Meklēt',
  //latvian
  'pt': 'Procurar',
  //portuguese 
  'sr': 'Претрага',
  //serbian
  'zh': '搜索',
  //chinese-simplified
  'cs': 'Vyhledávání',
  //czech
  'hu': 'Keresés',
  //hungarian
  'ka': 'ძიება',
  // georgian
  'nb': 'Søke',
  //norwegian
  'sk': 'Vyhľadávanie',
  //slovak
  'th': 'ค้นหา',
  //thai
  'fi': 'Hae',
  //finnish
  'is': 'Leita',
  //icelandic
  'ko': '수색',
  //korean
  'pl': 'Szukaj',
  //polish
  'sl': 'Iskanje',
  //slovenian
  'fa': 'جستجو',
  //persian(aka farsi)
  'ru': 'Поиск' //russian

};
module.exports = {
  placeholder: placeholder
};

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/index.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var client = __webpack_require__(/*! ./lib/client */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js");

module.exports = client;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var browser = __webpack_require__(/*! ./browser-layer */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js");

var MapiClient = __webpack_require__(/*! ../classes/mapi-client */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js");

function BrowserClient(options) {
  MapiClient.call(this, options);
}

BrowserClient.prototype = Object.create(MapiClient.prototype);
BrowserClient.prototype.constructor = BrowserClient;
BrowserClient.prototype.sendRequest = browser.browserSend;
BrowserClient.prototype.abortRequest = browser.browserAbort;
/**
 * Create a client for the browser.
 *
 * @param {Object} options
 * @param {string} options.accessToken
 * @param {string} [options.origin]
 * @returns {MapiClient}
 */

function createBrowserClient(options) {
  return new BrowserClient(options);
}

module.exports = createBrowserClient;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var MapiResponse = __webpack_require__(/*! ../classes/mapi-response */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js");

var MapiError = __webpack_require__(/*! ../classes/mapi-error */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js");

var constants = __webpack_require__(/*! ../constants */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/constants.js");

var parseHeaders = __webpack_require__(/*! ../helpers/parse-headers */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js"); // Keys are request IDs, values are XHRs.


var requestsUnderway = {};

function browserAbort(request) {
  var xhr = requestsUnderway[request.id];
  if (!xhr) return;
  xhr.abort();
  delete requestsUnderway[request.id];
}

function createResponse(request, xhr) {
  return new MapiResponse(request, {
    body: xhr.response,
    headers: parseHeaders(xhr.getAllResponseHeaders()),
    statusCode: xhr.status
  });
}

function normalizeBrowserProgressEvent(event) {
  var total = event.total;
  var transferred = event.loaded;
  var percent = 100 * transferred / total;
  return {
    total: total,
    transferred: transferred,
    percent: percent
  };
}

function sendRequestXhr(request, xhr) {
  return new Promise(function (resolve, reject) {
    xhr.onprogress = function (event) {
      request.emitter.emit(constants.EVENT_PROGRESS_DOWNLOAD, normalizeBrowserProgressEvent(event));
    };

    var file = request.file;

    if (file) {
      xhr.upload.onprogress = function (event) {
        request.emitter.emit(constants.EVENT_PROGRESS_UPLOAD, normalizeBrowserProgressEvent(event));
      };
    }

    xhr.onerror = function (error) {
      reject(error);
    };

    xhr.onabort = function () {
      var mapiError = new MapiError({
        request: request,
        type: constants.ERROR_REQUEST_ABORTED
      });
      reject(mapiError);
    };

    xhr.onload = function () {
      delete requestsUnderway[request.id];

      if (xhr.status < 200 || xhr.status >= 400) {
        var mapiError = new MapiError({
          request: request,
          body: xhr.response,
          statusCode: xhr.status
        });
        reject(mapiError);
        return;
      }

      resolve(xhr);
    };

    var body = request.body; // matching service needs to send a www-form-urlencoded request

    if (typeof body === 'string') {
      xhr.send(body);
    } else if (body) {
      xhr.send(JSON.stringify(body));
    } else if (file) {
      xhr.send(file);
    } else {
      xhr.send();
    }

    requestsUnderway[request.id] = xhr;
  }).then(function (xhr) {
    return createResponse(request, xhr);
  });
} // The accessToken argument gives this function flexibility
// for Mapbox's internal client.


function createRequestXhr(request, accessToken) {
  var url = request.url(accessToken);
  var xhr = new window.XMLHttpRequest();
  xhr.open(request.method, url);
  Object.keys(request.headers).forEach(function (key) {
    xhr.setRequestHeader(key, request.headers[key]);
  });
  return xhr;
}

function browserSend(request) {
  return Promise.resolve().then(function () {
    var xhr = createRequestXhr(request, request.client.accessToken);
    return sendRequestXhr(request, xhr);
  });
}

module.exports = {
  browserAbort: browserAbort,
  sendRequestXhr: sendRequestXhr,
  browserSend: browserSend,
  createRequestXhr: createRequestXhr
};

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parseToken = __webpack_require__(/*! @mapbox/parse-mapbox-token */ "./node_modules/@mapbox/parse-mapbox-token/index.js");

var MapiRequest = __webpack_require__(/*! ./mapi-request */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js");

var constants = __webpack_require__(/*! ../constants */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/constants.js");
/**
 * A low-level Mapbox API client. Use it to create service clients
 * that share the same configuration.
 *
 * Services and `MapiRequest`s use the underlying `MapiClient` to
 * determine how to create, send, and abort requests in a way
 * that is appropriate to the configuration and environment
 * (Node or the browser).
 *
 * @class MapiClient
 * @property {string} accessToken - The Mapbox access token assigned
 *   to this client.
 * @property {string} [origin] - The origin
 *   to use for API requests. Defaults to https://api.mapbox.com.
 */


function MapiClient(options) {
  if (!options || !options.accessToken) {
    throw new Error('Cannot create a client without an access token');
  } // Try parsing the access token to determine right away if it's valid.


  parseToken(options.accessToken);
  this.accessToken = options.accessToken;
  this.origin = options.origin || constants.API_ORIGIN;
}

MapiClient.prototype.createRequest = function createRequest(requestOptions) {
  return new MapiRequest(this, requestOptions);
};

module.exports = MapiClient;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var constants = __webpack_require__(/*! ../constants */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/constants.js");
/**
 * A Mapbox API error.
 *
 * If there's an error during the API transaction,
 * the Promise returned by `MapiRequest`'s [`send`](#send)
 * method should reject with a `MapiError`.
 *
 * @class MapiError
 * @hideconstructor
 * @property {MapiRequest} request - The errored request.
 * @property {string} type - The type of error. Usually this is `'HttpError'`.
 *   If the request was aborted, so the error was
 *   not sent from the server, the type will be
 *   `'RequestAbortedError'`.
 * @property {number} [statusCode] - The numeric status code of
 *   the HTTP response.
 * @property {Object | string} [body] - If the server sent a response body,
 *   this property exposes that response, parsed as JSON if possible.
 * @property {string} [message] - Whatever message could be derived from the
 *   call site and HTTP response.
 *
 * @param {MapiRequest} options.request
 * @param {number} [options.statusCode]
 * @param {string} [options.body]
 * @param {string} [options.message]
 * @param {string} [options.type]
 */


function MapiError(options) {
  var errorType = options.type || constants.ERROR_HTTP;
  var body;

  if (options.body) {
    try {
      body = JSON.parse(options.body);
    } catch (e) {
      body = options.body;
    }
  } else {
    body = null;
  }

  var message = options.message || null;

  if (!message) {
    if (typeof body === 'string') {
      message = body;
    } else if (body && typeof body.message === 'string') {
      message = body.message;
    } else if (errorType === constants.ERROR_REQUEST_ABORTED) {
      message = 'Request aborted';
    }
  }

  this.message = message;
  this.type = errorType;
  this.statusCode = options.statusCode || null;
  this.request = options.request;
  this.body = body;
}

module.exports = MapiError;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parseToken = __webpack_require__(/*! @mapbox/parse-mapbox-token */ "./node_modules/@mapbox/parse-mapbox-token/index.js");

var xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var EventEmitter = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.js");

var urlUtils = __webpack_require__(/*! ../helpers/url-utils */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js");

var constants = __webpack_require__(/*! ../constants */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/constants.js");

var requestId = 1;
/**
 * A Mapbox API request.
 *
 * Note that creating a `MapiRequest` does *not* send the request automatically.
 * Use the request's `send` method to send it off and get a `Promise`.
 *
 * The `emitter` property is an `EventEmitter` that emits the following events:
 *
 * - `'response'` - Listeners will be called with a `MapiResponse`.
 * - `'error'` - Listeners will be called with a `MapiError`.
 * - `'downloadProgress'` - Listeners will be called with `ProgressEvents`.
 * - `'uploadProgress'` - Listeners will be called with `ProgressEvents`.
 *   Upload events are only available when the request includes a file.
 *
 * @class MapiRequest
 * @property {EventEmitter} emitter - An event emitter. See above.
 * @property {MapiClient} client - This request's `MapiClient`.
 * @property {MapiResponse|null} response - If this request has been sent and received
 *   a response, the response is available on this property.
 * @property {MapiError|Error|null} error - If this request has been sent and
 *   received an error in response, the error is available on this property.
 * @property {boolean} aborted - If the request has been aborted
 *   (via [`abort`](#abort)), this property will be `true`.
 * @property {boolean} sent - If the request has been sent, this property will
 *   be `true`. You cannot send the same request twice, so if you need to create
 *   a new request that is the equivalent of an existing one, use
 *   [`clone`](#clone).
 * @property {string} path - The request's path, including colon-prefixed route
 *   parameters.
 * @property {string} origin - The request's origin.
 * @property {string} method - The request's HTTP method.
 * @property {Object} query - A query object, which will be transformed into
 *   a URL query string.
 * @property {Object} params - A route parameters object, whose values will
 *   be interpolated the path.
 * @property {Object} headers - The request's headers.
 * @property {Object|string|null} body - Data to send with the request.
 *   If the request has a body, it will also be sent with the header
 *   `'Content-Type: application/json'`.
 * @property {Blob|ArrayBuffer|string|ReadStream} file - A file to
 *   send with the request. The browser client accepts Blobs and ArrayBuffers;
 *   the Node client accepts strings (filepaths) and ReadStreams.
 * @property {string} encoding - The encoding of the response.
 * @property {string} sendFileAs - The method to send the `file`. Options are
 *   `data` (x-www-form-urlencoded) or `form` (multipart/form-data).
 */

/**
 * @ignore
 * @param {MapiClient} client
 * @param {Object} options
 * @param {string} options.method
 * @param {string} options.path
 * @param {Object} [options.query={}]
 * @param {Object} [options.params={}]
 * @param {string} [options.origin]
 * @param {Object} [options.headers]
 * @param {Object} [options.body=null]
 * @param {Blob|ArrayBuffer|string|ReadStream} [options.file=null]
 * @param {string} [options.encoding=utf8]
 */

function MapiRequest(client, options) {
  if (!client) {
    throw new Error('MapiRequest requires a client');
  }

  if (!options || !options.path || !options.method) {
    throw new Error('MapiRequest requires an options object with path and method properties');
  }

  var defaultHeaders = {};

  if (options.body) {
    defaultHeaders['content-type'] = 'application/json';
  }

  var headersWithDefaults = xtend(defaultHeaders, options.headers); // Disallows duplicate header names of mixed case,
  // e.g. Content-Type and content-type.

  var headers = Object.keys(headersWithDefaults).reduce(function (memo, name) {
    memo[name.toLowerCase()] = headersWithDefaults[name];
    return memo;
  }, {});
  this.id = requestId++;
  this._options = options;
  this.emitter = new EventEmitter();
  this.client = client;
  this.response = null;
  this.error = null;
  this.sent = false;
  this.aborted = false;
  this.path = options.path;
  this.method = options.method;
  this.origin = options.origin || client.origin;
  this.query = options.query || {};
  this.params = options.params || {};
  this.body = options.body || null;
  this.file = options.file || null;
  this.encoding = options.encoding || 'utf8';
  this.sendFileAs = options.sendFileAs || null;
  this.headers = headers;
}
/**
 * Get the URL of the request.
 *
 * @param {string} [accessToken] - By default, the access token of the request's
 *   client is used.
 * @return {string}
 */


MapiRequest.prototype.url = function url(accessToken) {
  var url = urlUtils.prependOrigin(this.path, this.origin);
  url = urlUtils.appendQueryObject(url, this.query);
  var routeParams = this.params;
  var actualAccessToken = accessToken == null ? this.client.accessToken : accessToken;

  if (actualAccessToken) {
    url = urlUtils.appendQueryParam(url, 'access_token', actualAccessToken);
    var accessTokenOwnerId = parseToken(actualAccessToken).user;
    routeParams = xtend({
      ownerId: accessTokenOwnerId
    }, routeParams);
  }

  url = urlUtils.interpolateRouteParams(url, routeParams);
  return url;
};
/**
 * Send the request. Returns a Promise that resolves with a `MapiResponse`.
 * You probably want to use `response.body`.
 *
 * `send` only retrieves the first page of paginated results. You can get
 * the next page by using the `MapiResponse`'s [`nextPage`](#nextpage)
 * function, or iterate through all pages using [`eachPage`](#eachpage)
 * instead of `send`.
 *
 * @returns {Promise<MapiResponse>}
 */


MapiRequest.prototype.send = function send() {
  var self = this;

  if (self.sent) {
    throw new Error('This request has already been sent. Check the response and error properties. Create a new request with clone().');
  }

  self.sent = true;
  return self.client.sendRequest(self).then(function (response) {
    self.response = response;
    self.emitter.emit(constants.EVENT_RESPONSE, response);
    return response;
  }, function (error) {
    self.error = error;
    self.emitter.emit(constants.EVENT_ERROR, error);
    throw error;
  });
};
/**
 * Abort the request.
 *
 * Any pending `Promise` returned by [`send`](#send) will be rejected with
 * an error with `type: 'RequestAbortedError'`. If you've created a request
 * that might be aborted, you need to catch and handle such errors.
 *
 * This method will also abort any requests created while fetching subsequent
 * pages via [`eachPage`](#eachpage).
 *
 * If the request has not been sent or has already been aborted, nothing
 * will happen.
 */


MapiRequest.prototype.abort = function abort() {
  if (this._nextPageRequest) {
    this._nextPageRequest.abort();

    delete this._nextPageRequest;
  }

  if (this.response || this.error || this.aborted) return;
  this.aborted = true;
  this.client.abortRequest(this);
};
/**
 * Invoke a callback for each page of a paginated API response.
 *
 * The callback should have the following signature:
 *
 * ```js
 * (
 *   error: MapiError,
 *   response: MapiResponse,
 *   next: () => void
 * ) => void
 * ```
 *
 * **The next page will not be fetched until you've invoked the
 * `next` callback**, indicating that you're ready for it.
 *
 * @param {Function} callback
 */


MapiRequest.prototype.eachPage = function eachPage(callback) {
  var self = this;

  function handleResponse(response) {
    function getNextPage() {
      delete self._nextPageRequest;
      var nextPageRequest = response.nextPage();

      if (nextPageRequest) {
        self._nextPageRequest = nextPageRequest;
        getPage(nextPageRequest);
      }
    }

    callback(null, response, getNextPage);
  }

  function handleError(error) {
    callback(error, null, function () {});
  }

  function getPage(request) {
    request.send().then(handleResponse, handleError);
  }

  getPage(this);
};
/**
 * Clone this request.
 *
 * Each request can only be sent *once*. So if you'd like to send the
 * same request again, clone it and send away.
 *
 * @returns {MapiRequest} - A new `MapiRequest` configured just like this one.
 */


MapiRequest.prototype.clone = function clone() {
  return this._extend();
};
/**
 * @ignore
 */


MapiRequest.prototype._extend = function _extend(options) {
  var extendedOptions = xtend(this._options, options);
  return new MapiRequest(this.client, extendedOptions);
};

module.exports = MapiRequest;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parseLinkHeader = __webpack_require__(/*! ../helpers/parse-link-header */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js");
/**
 * A Mapbox API response.
 *
 * @class MapiResponse
 * @property {Object} body - The response body, parsed as JSON.
 * @property {string} rawBody - The raw response body.
 * @property {number} statusCode - The response's status code.
 * @property {Object} headers - The parsed response headers.
 * @property {Object} links - The parsed response links.
 * @property {MapiRequest} request - The response's originating `MapiRequest`.
 */

/**
 * @ignore
 * @param {MapiRequest} request
 * @param {Object} responseData
 * @param {Object} responseData.headers
 * @param {string} responseData.body
 * @param {number} responseData.statusCode
 */


function MapiResponse(request, responseData) {
  this.request = request;
  this.headers = responseData.headers;
  this.rawBody = responseData.body;
  this.statusCode = responseData.statusCode;

  try {
    this.body = JSON.parse(responseData.body || '{}');
  } catch (parseError) {
    this.body = responseData.body;
  }

  this.links = parseLinkHeader(this.headers.link);
}
/**
 * Check if there is a next page that you can fetch.
 *
 * @returns {boolean}
 */


MapiResponse.prototype.hasNextPage = function hasNextPage() {
  return !!this.links.next;
};
/**
 * Create a request for the next page, if there is one.
 * If there is no next page, returns `null`.
 *
 * @returns {MapiRequest | null}
 */


MapiResponse.prototype.nextPage = function nextPage() {
  if (!this.hasNextPage()) return null;
  return this.request._extend({
    path: this.links.next.url
  });
};

module.exports = MapiResponse;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/constants.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/constants.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  API_ORIGIN: 'https://api.mapbox.com',
  EVENT_PROGRESS_DOWNLOAD: 'downloadProgress',
  EVENT_PROGRESS_UPLOAD: 'uploadProgress',
  EVENT_ERROR: 'error',
  EVENT_RESPONSE: 'response',
  ERROR_HTTP: 'HttpError',
  ERROR_REQUEST_ABORTED: 'RequestAbortedError'
};

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function parseSingleHeader(raw) {
  var boundary = raw.indexOf(':');
  var name = raw.substring(0, boundary).trim().toLowerCase();
  var value = raw.substring(boundary + 1).trim();
  return {
    name: name,
    value: value
  };
}
/**
 * Parse raw headers into an object with lowercase properties.
 * Does not fully parse headings into more complete data structure,
 * as larger libraries might do. Also does not deal with duplicate
 * headers because Node doesn't seem to deal with those well, so
 * we shouldn't let the browser either, for consistency.
 *
 * @param {string} raw
 * @returns {Object}
 */


function parseHeaders(raw) {
  var headers = {};

  if (!raw) {
    return headers;
  }

  raw.trim().split(/[\r|\n]+/).forEach(function (rawHeader) {
    var parsed = parseSingleHeader(rawHeader);
    headers[parsed.name] = parsed.value;
  });
  return headers;
}

module.exports = parseHeaders;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Like https://github.com/thlorenz/lib/parse-link-header but without any
// additional dependencies.

function parseParam(param) {
  var parts = param.match(/\s*(.+)\s*=\s*"?([^"]+)"?/);
  if (!parts) return null;
  return {
    key: parts[1],
    value: parts[2]
  };
}

function parseLink(link) {
  var parts = link.match(/<?([^>]*)>(.*)/);
  if (!parts) return null;
  var linkUrl = parts[1];
  var linkParams = parts[2].split(';');
  var rel = null;
  var parsedLinkParams = linkParams.reduce(function (result, param) {
    var parsed = parseParam(param);
    if (!parsed) return result;

    if (parsed.key === 'rel') {
      if (!rel) {
        rel = parsed.value;
      }

      return result;
    }

    result[parsed.key] = parsed.value;
    return result;
  }, {});
  if (!rel) return null;
  return {
    url: linkUrl,
    rel: rel,
    params: parsedLinkParams
  };
}
/**
 * Parse a Link header.
 *
 * @param {string} linkHeader
 * @returns {{
 *   [string]: {
 *     url: string,
 *     params: { [string]: string }
 *   }
 * }}
 */


function parseLinkHeader(linkHeader) {
  if (!linkHeader) return {};
  return linkHeader.split(/,\s*</).reduce(function (result, link) {
    var parsed = parseLink(link);
    if (!parsed) return result; // rel value can be multiple whitespace-separated rels.

    var splitRel = parsed.rel.split(/\s+/);
    splitRel.forEach(function (rel) {
      if (!result[rel]) {
        result[rel] = {
          url: parsed.url,
          params: parsed.params
        };
      }
    });
    return result;
  }, {});
}

module.exports = parseLinkHeader;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Encode each item of an array individually. The comma
// delimiters should not themselves be encoded.

function encodeArray(arrayValue) {
  return arrayValue.map(encodeURIComponent).join(',');
}

function encodeValue(value) {
  if (Array.isArray(value)) {
    return encodeArray(value);
  }

  return encodeURIComponent(String(value));
}
/**
 * Append a query parameter to a URL.
 *
 * @param {string} url
 * @param {string} key
 * @param {string|number|boolean|Array<*>>} [value] - Provide an array
 *   if the value is a list and commas between values need to be
 *   preserved, unencoded.
 * @returns {string} - Modified URL.
 */


function appendQueryParam(url, key, value) {
  if (value === false || value === null) {
    return url;
  }

  var punctuation = /\?/.test(url) ? '&' : '?';
  var query = encodeURIComponent(key);

  if (value !== undefined && value !== '' && value !== true) {
    query += '=' + encodeValue(value);
  }

  return '' + url + punctuation + query;
}
/**
 * Derive a query string from an object and append it
 * to a URL.
 *
 * @param {string} url
 * @param {Object} [queryObject] - Values should be primitives.
 * @returns {string} - Modified URL.
 */


function appendQueryObject(url, queryObject) {
  if (!queryObject) {
    return url;
  }

  var result = url;
  Object.keys(queryObject).forEach(function (key) {
    var value = queryObject[key];

    if (value === undefined) {
      return;
    }

    if (Array.isArray(value)) {
      value = value.filter(function (v) {
        return v !== null && v !== undefined;
      }).join(',');
    }

    result = appendQueryParam(result, key, value);
  });
  return result;
}
/**
 * Prepend an origin to a URL. If the URL already has an
 * origin, do nothing.
 *
 * @param {string} url
 * @param {string} origin
 * @returns {string} - Modified URL.
 */


function prependOrigin(url, origin) {
  if (!origin) {
    return url;
  }

  if (url.slice(0, 4) === 'http') {
    return url;
  }

  var delimiter = url[0] === '/' ? '' : '/';
  return '' + origin.replace(/\/$/, '') + delimiter + url;
}
/**
 * Interpolate values into a route with express-style,
 * colon-prefixed route parameters.
 *
 * @param {string} route
 * @param {Object} [params] - Values should be primitives
 *   or arrays of primitives. Provide an array if the value
 *   is a list and commas between values need to be
 *   preserved, unencoded.
 * @returns {string} - Modified URL.
 */


function interpolateRouteParams(route, params) {
  if (!params) {
    return route;
  }

  return route.replace(/\/:([a-zA-Z0-9]+)/g, function (_, paramId) {
    var value = params[paramId];

    if (value === undefined) {
      throw new Error('Unspecified route parameter ' + paramId);
    }

    var preppedValue = encodeValue(value);
    return '/' + preppedValue;
  });
}

module.exports = {
  appendQueryObject: appendQueryObject,
  appendQueryParam: appendQueryParam,
  prependOrigin: prependOrigin,
  interpolateRouteParams: interpolateRouteParams
};

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/geocoding.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/geocoding.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var v = __webpack_require__(/*! ./service-helpers/validator */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js");

var pick = __webpack_require__(/*! ./service-helpers/pick */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js");

var stringifyBooleans = __webpack_require__(/*! ./service-helpers/stringify-booleans */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js");

var createServiceFactory = __webpack_require__(/*! ./service-helpers/create-service-factory */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js");
/**
 * Geocoding API service.
 *
 * Learn more about this service and its responses in
 * [the HTTP service documentation](https://docs.mapbox.com/api/search/#geocoding).
 */


var Geocoding = {};
var featureTypes = ['country', 'region', 'postcode', 'district', 'place', 'locality', 'neighborhood', 'address', 'poi', 'poi.landmark'];
/**
 * Search for a place.
 *
 * See the [public documentation](https://docs.mapbox.com/api/search/#forward-geocoding).
 *
 * @param {Object} config
 * @param {string} config.query - A place name.
 * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode="mapbox.places"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.
 * @param {Array<string>} [config.countries] - Limits results to the specified countries.
 *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
 * @param {Coordinates|'ip'} [config.proximity] - Bias local results based on a provided coordinate location or a user's IP address.
 * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.
 * @param {boolean} [config.autocomplete=true] - Return autocomplete results or not.
 * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.
 * @param {number} [config.limit=5] - Limit the number of results returned.
 * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.
 *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory
 *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.
 * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.
 * @param {boolean} [config.fuzzyMatch=true] - Specify whether the Geocoding API should attempt approximate, as well as exact, matching.
 * @param {String} [config.worldview="us"] - Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.
 * @return {MapiRequest}
 *
 * @example
 * geocodingClient.forwardGeocode({
 *   query: 'Paris, France',
 *   limit: 2
 * })
 *   .send()
 *   .then(response => {
 *     const match = response.body;
 *   });
 *
 * @example
 * // geocoding with proximity
 * geocodingClient.forwardGeocode({
 *   query: 'Paris, France',
 *   proximity: [-95.4431142, 33.6875431]
 * })
 *   .send()
 *   .then(response => {
 *     const match = response.body;
 *   });
 *
 * // geocoding with countries
 * geocodingClient.forwardGeocode({
 *   query: 'Paris, France',
 *   countries: ['fr']
 * })
 *   .send()
 *   .then(response => {
 *     const match = response.body;
 *   });
 *
 * // geocoding with bounding box
 * geocodingClient.forwardGeocode({
 *   query: 'Paris, France',
 *   bbox: [2.14, 48.72, 2.55, 48.96]
 * })
 *   .send()
 *   .then(response => {
 *     const match = response.body;
 *   });
 */

Geocoding.forwardGeocode = function (config) {
  v.assertShape({
    query: v.required(v.string),
    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),
    countries: v.arrayOf(v.string),
    proximity: v.oneOf(v.coordinates, 'ip'),
    types: v.arrayOf(v.oneOf(featureTypes)),
    autocomplete: v.boolean,
    bbox: v.arrayOf(v.number),
    limit: v.number,
    language: v.arrayOf(v.string),
    routing: v.boolean,
    fuzzyMatch: v.boolean,
    worldview: v.string
  })(config);
  config.mode = config.mode || 'mapbox.places';
  var query = stringifyBooleans(xtend({
    country: config.countries
  }, pick(config, ['proximity', 'types', 'autocomplete', 'bbox', 'limit', 'language', 'routing', 'fuzzyMatch', 'worldview'])));
  return this.client.createRequest({
    method: 'GET',
    path: '/geocoding/v5/:mode/:query.json',
    params: pick(config, ['mode', 'query']),
    query: query
  });
};
/**
 * Search for places near coordinates.
 *
 * See the [public documentation](https://docs.mapbox.com/api/search/#reverse-geocoding).
 *
 * @param {Object} config
 * @param {Coordinates} config.query - Coordinates at which features will be searched.
 * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode="mapbox.places"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.
 * @param {Array<string>} [config.countries] - Limits results to the specified countries.
 *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
 * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.
 * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.
 * @param {number} [config.limit=1] - Limit the number of results returned. If using this option, you must provide a single item for `types`.
 * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.
 *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory
 *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.
 * @param {'distance'|'score'} [config.reverseMode='distance'] - Set the factors that are used to sort nearby results.
 * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.
 * @param {String} [config.worldview="us"] - Filter results to geographic features whose characteristics are defined differently by audiences belonging to various regional, cultural, or political groups.
 * @return {MapiRequest}
 *
 * @example
 * geocodingClient.reverseGeocode({
 *   query: [-95.4431142, 33.6875431]
 * })
 *   .send()
 *   .then(response => {
 *     // GeoJSON document with geocoding matches
 *     const match = response.body;
 *   });
 */


Geocoding.reverseGeocode = function (config) {
  v.assertShape({
    query: v.required(v.coordinates),
    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),
    countries: v.arrayOf(v.string),
    types: v.arrayOf(v.oneOf(featureTypes)),
    bbox: v.arrayOf(v.number),
    limit: v.number,
    language: v.arrayOf(v.string),
    reverseMode: v.oneOf('distance', 'score'),
    routing: v.boolean,
    worldview: v.string
  })(config);
  config.mode = config.mode || 'mapbox.places';
  var query = stringifyBooleans(xtend({
    country: config.countries
  }, pick(config, ['country', 'types', 'bbox', 'limit', 'language', 'reverseMode', 'routing', 'worldview'])));
  return this.client.createRequest({
    method: 'GET',
    path: '/geocoding/v5/:mode/:query.json',
    params: pick(config, ['mode', 'query']),
    query: query
  });
};

module.exports = createServiceFactory(Geocoding);

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var MapiClient = __webpack_require__(/*! ../../lib/classes/mapi-client */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js"); // This will create the environment-appropriate client.


var createClient = __webpack_require__(/*! ../../lib/client */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js");

function createServiceFactory(ServicePrototype) {
  return function (clientOrConfig) {
    var client;

    if (MapiClient.prototype.isPrototypeOf(clientOrConfig)) {
      client = clientOrConfig;
    } else {
      client = createClient(clientOrConfig);
    }

    var service = Object.create(ServicePrototype);
    service.client = client;
    return service;
  };
}

module.exports = createServiceFactory;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function objectMap(obj, cb) {
  return Object.keys(obj).reduce(function (result, key) {
    result[key] = cb(key, obj[key]);
    return result;
  }, {});
}

module.exports = objectMap;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Create a new object by picking properties off an existing object.
 * The second param can be overloaded as a callback for
 * more fine grained picking of properties.
 * @param {Object} source
 * @param {Array<string>|function(string, Object):boolean} keys
 * @returns {Object}
 */

function pick(source, keys) {
  var filter = function filter(key, val) {
    return keys.indexOf(key) !== -1 && val !== undefined;
  };

  if (typeof keys === 'function') {
    filter = keys;
  }

  return Object.keys(source).filter(function (key) {
    return filter(key, source[key]);
  }).reduce(function (result, key) {
    result[key] = source[key];
    return result;
  }, {});
}

module.exports = pick;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var objectMap = __webpack_require__(/*! ./object-map */ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js");
/**
 * Stringify all the boolean values in an object, so true becomes "true".
 *
 * @param {Object} obj
 * @returns {Object}
 */


function stringifyBoolean(obj) {
  return objectMap(obj, function (_, value) {
    return typeof value === 'boolean' ? JSON.stringify(value) : value;
  });
}

module.exports = stringifyBoolean;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-gl-geocoder/node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var v = __webpack_require__(/*! @mapbox/fusspot */ "./node_modules/@mapbox/fusspot/lib/index.js");

function file(value) {
  // If we're in a browser so Blob is available, the file must be that.
  // In Node, however, it could be a filepath or a pipeable (Readable) stream.
  if (typeof window !== 'undefined') {
    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {
      return;
    }

    return 'Blob or ArrayBuffer';
  }

  if (typeof value === 'string' || value.pipe !== undefined) {
    return;
  }

  return 'Filename or Readable stream';
}

function assertShape(validatorObj, apiName) {
  return v.assert(v.strictShape(validatorObj), apiName);
}

function date(value) {
  var msg = 'date';

  if (typeof value === 'boolean') {
    return msg;
  }

  try {
    var date = new Date(value);

    if (date.getTime && isNaN(date.getTime())) {
      return msg;
    }
  } catch (e) {
    return msg;
  }
}

function coordinates(value) {
  return v.tuple(v.number, v.number)(value);
}

module.exports = xtend(v, {
  file: file,
  date: date,
  coordinates: coordinates,
  assertShape: assertShape
});

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var browser = __webpack_require__(/*! ./browser-layer */ "./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js");

var MapiClient = __webpack_require__(/*! ../classes/mapi-client */ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js");

function BrowserClient(options) {
  MapiClient.call(this, options);
}

BrowserClient.prototype = Object.create(MapiClient.prototype);
BrowserClient.prototype.constructor = BrowserClient;
BrowserClient.prototype.sendRequest = browser.browserSend;
BrowserClient.prototype.abortRequest = browser.browserAbort;
/**
 * Create a client for the browser.
 *
 * @param {Object} options
 * @param {string} options.accessToken
 * @param {string} [options.origin]
 * @returns {MapiClient}
 */

function createBrowserClient(options) {
  return new BrowserClient(options);
}

module.exports = createBrowserClient;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-layer.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var MapiResponse = __webpack_require__(/*! ../classes/mapi-response */ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js");

var MapiError = __webpack_require__(/*! ../classes/mapi-error */ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js");

var constants = __webpack_require__(/*! ../constants */ "./node_modules/@mapbox/mapbox-sdk/lib/constants.js");

var parseHeaders = __webpack_require__(/*! ../helpers/parse-headers */ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js"); // Keys are request IDs, values are XHRs.


var requestsUnderway = {};

function browserAbort(request) {
  var xhr = requestsUnderway[request.id];
  if (!xhr) return;
  xhr.abort();
  delete requestsUnderway[request.id];
}

function createResponse(request, xhr) {
  return new MapiResponse(request, {
    body: xhr.response,
    headers: parseHeaders(xhr.getAllResponseHeaders()),
    statusCode: xhr.status
  });
}

function normalizeBrowserProgressEvent(event) {
  var total = event.total;
  var transferred = event.loaded;
  var percent = 100 * transferred / total;
  return {
    total: total,
    transferred: transferred,
    percent: percent
  };
}

function sendRequestXhr(request, xhr) {
  return new Promise(function (resolve, reject) {
    xhr.onprogress = function (event) {
      request.emitter.emit(constants.EVENT_PROGRESS_DOWNLOAD, normalizeBrowserProgressEvent(event));
    };

    var file = request.file;

    if (file) {
      xhr.upload.onprogress = function (event) {
        request.emitter.emit(constants.EVENT_PROGRESS_UPLOAD, normalizeBrowserProgressEvent(event));
      };
    }

    xhr.onerror = function (error) {
      reject(error);
    };

    xhr.onabort = function () {
      var mapiError = new MapiError({
        request: request,
        type: constants.ERROR_REQUEST_ABORTED
      });
      reject(mapiError);
    };

    xhr.onload = function () {
      delete requestsUnderway[request.id];

      if (xhr.status < 200 || xhr.status >= 400) {
        var mapiError = new MapiError({
          request: request,
          body: xhr.response,
          statusCode: xhr.status
        });
        reject(mapiError);
        return;
      }

      resolve(xhr);
    };

    var body = request.body; // matching service needs to send a www-form-urlencoded request

    if (typeof body === 'string') {
      xhr.send(body);
    } else if (body) {
      xhr.send(JSON.stringify(body));
    } else if (file) {
      xhr.send(file);
    } else {
      xhr.send();
    }

    requestsUnderway[request.id] = xhr;
  }).then(function (xhr) {
    return createResponse(request, xhr);
  });
} // The accessToken argument gives this function flexibility
// for Mapbox's internal client.


function createRequestXhr(request, accessToken) {
  var url = request.url(accessToken);
  var xhr = new window.XMLHttpRequest();
  xhr.open(request.method, url);
  Object.keys(request.headers).forEach(function (key) {
    xhr.setRequestHeader(key, request.headers[key]);
  });
  return xhr;
}

function browserSend(request) {
  return Promise.resolve().then(function () {
    var xhr = createRequestXhr(request, request.client.accessToken);
    return sendRequestXhr(request, xhr);
  });
}

module.exports = {
  browserAbort: browserAbort,
  sendRequestXhr: sendRequestXhr,
  browserSend: browserSend,
  createRequestXhr: createRequestXhr
};

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js":
/*!********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parseToken = __webpack_require__(/*! @mapbox/parse-mapbox-token */ "./node_modules/@mapbox/parse-mapbox-token/index.js");

var MapiRequest = __webpack_require__(/*! ./mapi-request */ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js");

var constants = __webpack_require__(/*! ../constants */ "./node_modules/@mapbox/mapbox-sdk/lib/constants.js");
/**
 * A low-level Mapbox API client. Use it to create service clients
 * that share the same configuration.
 *
 * Services and `MapiRequest`s use the underlying `MapiClient` to
 * determine how to create, send, and abort requests in a way
 * that is appropriate to the configuration and environment
 * (Node or the browser).
 *
 * @class MapiClient
 * @property {string} accessToken - The Mapbox access token assigned
 *   to this client.
 * @property {string} [origin] - The origin
 *   to use for API requests. Defaults to https://api.mapbox.com.
 */


function MapiClient(options) {
  if (!options || !options.accessToken) {
    throw new Error('Cannot create a client without an access token');
  } // Try parsing the access token to determine right away if it's valid.


  parseToken(options.accessToken);
  this.accessToken = options.accessToken;
  this.origin = options.origin || constants.API_ORIGIN;
}

MapiClient.prototype.createRequest = function createRequest(requestOptions) {
  return new MapiRequest(this, requestOptions);
};

module.exports = MapiClient;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-error.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var constants = __webpack_require__(/*! ../constants */ "./node_modules/@mapbox/mapbox-sdk/lib/constants.js");
/**
 * A Mapbox API error.
 *
 * If there's an error during the API transaction,
 * the Promise returned by `MapiRequest`'s [`send`](#send)
 * method should reject with a `MapiError`.
 *
 * @class MapiError
 * @hideconstructor
 * @property {MapiRequest} request - The errored request.
 * @property {string} type - The type of error. Usually this is `'HttpError'`.
 *   If the request was aborted, so the error was
 *   not sent from the server, the type will be
 *   `'RequestAbortedError'`.
 * @property {number} [statusCode] - The numeric status code of
 *   the HTTP response.
 * @property {Object | string} [body] - If the server sent a response body,
 *   this property exposes that response, parsed as JSON if possible.
 * @property {string} [message] - Whatever message could be derived from the
 *   call site and HTTP response.
 *
 * @param {MapiRequest} options.request
 * @param {number} [options.statusCode]
 * @param {string} [options.body]
 * @param {string} [options.message]
 * @param {string} [options.type]
 */


function MapiError(options) {
  var errorType = options.type || constants.ERROR_HTTP;
  var body;

  if (options.body) {
    try {
      body = JSON.parse(options.body);
    } catch (e) {
      body = options.body;
    }
  } else {
    body = null;
  }

  var message = options.message || null;

  if (!message) {
    if (typeof body === 'string') {
      message = body;
    } else if (body && typeof body.message === 'string') {
      message = body.message;
    } else if (errorType === constants.ERROR_REQUEST_ABORTED) {
      message = 'Request aborted';
    }
  }

  this.message = message;
  this.type = errorType;
  this.statusCode = options.statusCode || null;
  this.request = options.request;
  this.body = body;
}

module.exports = MapiError;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-request.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parseToken = __webpack_require__(/*! @mapbox/parse-mapbox-token */ "./node_modules/@mapbox/parse-mapbox-token/index.js");

var xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var EventEmitter = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.js");

var urlUtils = __webpack_require__(/*! ../helpers/url-utils */ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js");

var constants = __webpack_require__(/*! ../constants */ "./node_modules/@mapbox/mapbox-sdk/lib/constants.js");

var requestId = 1;
/**
 * A Mapbox API request.
 *
 * Note that creating a `MapiRequest` does *not* send the request automatically.
 * Use the request's `send` method to send it off and get a `Promise`.
 *
 * The `emitter` property is an `EventEmitter` that emits the following events:
 *
 * - `'response'` - Listeners will be called with a `MapiResponse`.
 * - `'error'` - Listeners will be called with a `MapiError`.
 * - `'downloadProgress'` - Listeners will be called with `ProgressEvents`.
 * - `'uploadProgress'` - Listeners will be called with `ProgressEvents`.
 *   Upload events are only available when the request includes a file.
 *
 * @class MapiRequest
 * @property {EventEmitter} emitter - An event emitter. See above.
 * @property {MapiClient} client - This request's `MapiClient`.
 * @property {MapiResponse|null} response - If this request has been sent and received
 *   a response, the response is available on this property.
 * @property {MapiError|Error|null} error - If this request has been sent and
 *   received an error in response, the error is available on this property.
 * @property {boolean} aborted - If the request has been aborted
 *   (via [`abort`](#abort)), this property will be `true`.
 * @property {boolean} sent - If the request has been sent, this property will
 *   be `true`. You cannot send the same request twice, so if you need to create
 *   a new request that is the equivalent of an existing one, use
 *   [`clone`](#clone).
 * @property {string} path - The request's path, including colon-prefixed route
 *   parameters.
 * @property {string} origin - The request's origin.
 * @property {string} method - The request's HTTP method.
 * @property {Object} query - A query object, which will be transformed into
 *   a URL query string.
 * @property {Object} params - A route parameters object, whose values will
 *   be interpolated the path.
 * @property {Object} headers - The request's headers.
 * @property {Object|string|null} body - Data to send with the request.
 *   If the request has a body, it will also be sent with the header
 *   `'Content-Type: application/json'`.
 * @property {Blob|ArrayBuffer|string|ReadStream} file - A file to
 *   send with the request. The browser client accepts Blobs and ArrayBuffers;
 *   the Node client accepts strings (filepaths) and ReadStreams.
 * @property {string} encoding - The encoding of the response.
 * @property {string} sendFileAs - The method to send the `file`. Options are
 *   `data` (x-www-form-urlencoded) or `form` (multipart/form-data).
 */

/**
 * @ignore
 * @param {MapiClient} client
 * @param {Object} options
 * @param {string} options.method
 * @param {string} options.path
 * @param {Object} [options.query={}]
 * @param {Object} [options.params={}]
 * @param {string} [options.origin]
 * @param {Object} [options.headers]
 * @param {Object} [options.body=null]
 * @param {Blob|ArrayBuffer|string|ReadStream} [options.file=null]
 * @param {string} [options.encoding=utf8]
 */

function MapiRequest(client, options) {
  if (!client) {
    throw new Error('MapiRequest requires a client');
  }

  if (!options || !options.path || !options.method) {
    throw new Error('MapiRequest requires an options object with path and method properties');
  }

  var defaultHeaders = {};

  if (options.body) {
    defaultHeaders['content-type'] = 'application/json';
  }

  var headersWithDefaults = xtend(defaultHeaders, options.headers); // Disallows duplicate header names of mixed case,
  // e.g. Content-Type and content-type.

  var headers = Object.keys(headersWithDefaults).reduce(function (memo, name) {
    memo[name.toLowerCase()] = headersWithDefaults[name];
    return memo;
  }, {});
  this.id = requestId++;
  this._options = options;
  this.emitter = new EventEmitter();
  this.client = client;
  this.response = null;
  this.error = null;
  this.sent = false;
  this.aborted = false;
  this.path = options.path;
  this.method = options.method;
  this.origin = options.origin || client.origin;
  this.query = options.query || {};
  this.params = options.params || {};
  this.body = options.body || null;
  this.file = options.file || null;
  this.encoding = options.encoding || 'utf8';
  this.sendFileAs = options.sendFileAs || null;
  this.headers = headers;
}
/**
 * Get the URL of the request.
 *
 * @param {string} [accessToken] - By default, the access token of the request's
 *   client is used.
 * @return {string}
 */


MapiRequest.prototype.url = function url(accessToken) {
  var url = urlUtils.prependOrigin(this.path, this.origin);
  url = urlUtils.appendQueryObject(url, this.query);
  var routeParams = this.params;
  var actualAccessToken = accessToken == null ? this.client.accessToken : accessToken;

  if (actualAccessToken) {
    url = urlUtils.appendQueryParam(url, 'access_token', actualAccessToken);
    var accessTokenOwnerId = parseToken(actualAccessToken).user;
    routeParams = xtend({
      ownerId: accessTokenOwnerId
    }, routeParams);
  }

  url = urlUtils.interpolateRouteParams(url, routeParams);
  return url;
};
/**
 * Send the request. Returns a Promise that resolves with a `MapiResponse`.
 * You probably want to use `response.body`.
 *
 * `send` only retrieves the first page of paginated results. You can get
 * the next page by using the `MapiResponse`'s [`nextPage`](#nextpage)
 * function, or iterate through all pages using [`eachPage`](#eachpage)
 * instead of `send`.
 *
 * @returns {Promise<MapiResponse>}
 */


MapiRequest.prototype.send = function send() {
  var self = this;

  if (self.sent) {
    throw new Error('This request has already been sent. Check the response and error properties. Create a new request with clone().');
  }

  self.sent = true;
  return self.client.sendRequest(self).then(function (response) {
    self.response = response;
    self.emitter.emit(constants.EVENT_RESPONSE, response);
    return response;
  }, function (error) {
    self.error = error;
    self.emitter.emit(constants.EVENT_ERROR, error);
    throw error;
  });
};
/**
 * Abort the request.
 *
 * Any pending `Promise` returned by [`send`](#send) will be rejected with
 * an error with `type: 'RequestAbortedError'`. If you've created a request
 * that might be aborted, you need to catch and handle such errors.
 *
 * This method will also abort any requests created while fetching subsequent
 * pages via [`eachPage`](#eachpage).
 *
 * If the request has not been sent or has already been aborted, nothing
 * will happen.
 */


MapiRequest.prototype.abort = function abort() {
  if (this._nextPageRequest) {
    this._nextPageRequest.abort();

    delete this._nextPageRequest;
  }

  if (this.response || this.error || this.aborted) return;
  this.aborted = true;
  this.client.abortRequest(this);
};
/**
 * Invoke a callback for each page of a paginated API response.
 *
 * The callback should have the following signature:
 *
 * ```js
 * (
 *   error: MapiError,
 *   response: MapiResponse,
 *   next: () => void
 * ) => void
 * ```
 *
 * **The next page will not be fetched until you've invoked the
 * `next` callback**, indicating that you're ready for it.
 *
 * @param {Function} callback
 */


MapiRequest.prototype.eachPage = function eachPage(callback) {
  var self = this;

  function handleResponse(response) {
    function getNextPage() {
      delete self._nextPageRequest;
      var nextPageRequest = response.nextPage();

      if (nextPageRequest) {
        self._nextPageRequest = nextPageRequest;
        getPage(nextPageRequest);
      }
    }

    callback(null, response, getNextPage);
  }

  function handleError(error) {
    callback(error, null, function () {});
  }

  function getPage(request) {
    request.send().then(handleResponse, handleError);
  }

  getPage(this);
};
/**
 * Clone this request.
 *
 * Each request can only be sent *once*. So if you'd like to send the
 * same request again, clone it and send away.
 *
 * @returns {MapiRequest} - A new `MapiRequest` configured just like this one.
 */


MapiRequest.prototype.clone = function clone() {
  return this._extend();
};
/**
 * @ignore
 */


MapiRequest.prototype._extend = function _extend(options) {
  var extendedOptions = xtend(this._options, options);
  return new MapiRequest(this.client, extendedOptions);
};

module.exports = MapiRequest;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-response.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parseLinkHeader = __webpack_require__(/*! ../helpers/parse-link-header */ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js");
/**
 * A Mapbox API response.
 *
 * @class MapiResponse
 * @property {Object} body - The response body, parsed as JSON.
 * @property {string} rawBody - The raw response body.
 * @property {number} statusCode - The response's status code.
 * @property {Object} headers - The parsed response headers.
 * @property {Object} links - The parsed response links.
 * @property {MapiRequest} request - The response's originating `MapiRequest`.
 */

/**
 * @ignore
 * @param {MapiRequest} request
 * @param {Object} responseData
 * @param {Object} responseData.headers
 * @param {string} responseData.body
 * @param {number} responseData.statusCode
 */


function MapiResponse(request, responseData) {
  this.request = request;
  this.headers = responseData.headers;
  this.rawBody = responseData.body;
  this.statusCode = responseData.statusCode;

  try {
    this.body = JSON.parse(responseData.body || '{}');
  } catch (parseError) {
    this.body = responseData.body;
  }

  this.links = parseLinkHeader(this.headers.link);
}
/**
 * Check if there is a next page that you can fetch.
 *
 * @returns {boolean}
 */


MapiResponse.prototype.hasNextPage = function hasNextPage() {
  return !!this.links.next;
};
/**
 * Create a request for the next page, if there is one.
 * If there is no next page, returns `null`.
 *
 * @returns {MapiRequest | null}
 */


MapiResponse.prototype.nextPage = function nextPage() {
  if (!this.hasNextPage()) return null;
  return this.request._extend({
    path: this.links.next.url
  });
};

module.exports = MapiResponse;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/constants.js":
/*!**********************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/constants.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  API_ORIGIN: 'https://api.mapbox.com',
  EVENT_PROGRESS_DOWNLOAD: 'downloadProgress',
  EVENT_PROGRESS_UPLOAD: 'uploadProgress',
  EVENT_ERROR: 'error',
  EVENT_RESPONSE: 'response',
  ERROR_HTTP: 'HttpError',
  ERROR_REQUEST_ABORTED: 'RequestAbortedError'
};

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-headers.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function parseSingleHeader(raw) {
  var boundary = raw.indexOf(':');
  var name = raw.substring(0, boundary).trim().toLowerCase();
  var value = raw.substring(boundary + 1).trim();
  return {
    name: name,
    value: value
  };
}
/**
 * Parse raw headers into an object with lowercase properties.
 * Does not fully parse headings into more complete data structure,
 * as larger libraries might do. Also does not deal with duplicate
 * headers because Node doesn't seem to deal with those well, so
 * we shouldn't let the browser either, for consistency.
 *
 * @param {string} raw
 * @returns {Object}
 */


function parseHeaders(raw) {
  var headers = {};

  if (!raw) {
    return headers;
  }

  raw.trim().split(/[\r|\n]+/).forEach(function (rawHeader) {
    var parsed = parseSingleHeader(rawHeader);
    headers[parsed.name] = parsed.value;
  });
  return headers;
}

module.exports = parseHeaders;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/helpers/parse-link-header.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Like https://github.com/thlorenz/lib/parse-link-header but without any
// additional dependencies.

function parseParam(param) {
  var parts = param.match(/\s*(.+)\s*=\s*"?([^"]+)"?/);
  if (!parts) return null;
  return {
    key: parts[1],
    value: parts[2]
  };
}

function parseLink(link) {
  var parts = link.match(/<?([^>]*)>(.*)/);
  if (!parts) return null;
  var linkUrl = parts[1];
  var linkParams = parts[2].split(';');
  var rel = null;
  var parsedLinkParams = linkParams.reduce(function (result, param) {
    var parsed = parseParam(param);
    if (!parsed) return result;

    if (parsed.key === 'rel') {
      if (!rel) {
        rel = parsed.value;
      }

      return result;
    }

    result[parsed.key] = parsed.value;
    return result;
  }, {});
  if (!rel) return null;
  return {
    url: linkUrl,
    rel: rel,
    params: parsedLinkParams
  };
}
/**
 * Parse a Link header.
 *
 * @param {string} linkHeader
 * @returns {{
 *   [string]: {
 *     url: string,
 *     params: { [string]: string }
 *   }
 * }}
 */


function parseLinkHeader(linkHeader) {
  if (!linkHeader) return {};
  return linkHeader.split(/,\s*</).reduce(function (result, link) {
    var parsed = parseLink(link);
    if (!parsed) return result; // rel value can be multiple whitespace-separated rels.

    var splitRel = parsed.rel.split(/\s+/);
    splitRel.forEach(function (rel) {
      if (!result[rel]) {
        result[rel] = {
          url: parsed.url,
          params: parsed.params
        };
      }
    });
    return result;
  }, {});
}

module.exports = parseLinkHeader;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/lib/helpers/url-utils.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Encode each item of an array individually. The comma
// delimiters should not themselves be encoded.

function encodeArray(arrayValue) {
  return arrayValue.map(encodeURIComponent).join(',');
}

function encodeValue(value) {
  if (Array.isArray(value)) {
    return encodeArray(value);
  }

  return encodeURIComponent(String(value));
}
/**
 * Append a query parameter to a URL.
 *
 * @param {string} url
 * @param {string} key
 * @param {string|number|boolean|Array<*>>} [value] - Provide an array
 *   if the value is a list and commas between values need to be
 *   preserved, unencoded.
 * @returns {string} - Modified URL.
 */


function appendQueryParam(url, key, value) {
  if (value === false || value === null) {
    return url;
  }

  var punctuation = /\?/.test(url) ? '&' : '?';
  var query = encodeURIComponent(key);

  if (value !== undefined && value !== '' && value !== true) {
    query += '=' + encodeValue(value);
  }

  return '' + url + punctuation + query;
}
/**
 * Derive a query string from an object and append it
 * to a URL.
 *
 * @param {string} url
 * @param {Object} [queryObject] - Values should be primitives.
 * @returns {string} - Modified URL.
 */


function appendQueryObject(url, queryObject) {
  if (!queryObject) {
    return url;
  }

  var result = url;
  Object.keys(queryObject).forEach(function (key) {
    var value = queryObject[key];

    if (value === undefined) {
      return;
    }

    if (Array.isArray(value)) {
      value = value.filter(function (v) {
        return v !== null && v !== undefined;
      }).join(',');
    }

    result = appendQueryParam(result, key, value);
  });
  return result;
}
/**
 * Prepend an origin to a URL. If the URL already has an
 * origin, do nothing.
 *
 * @param {string} url
 * @param {string} origin
 * @returns {string} - Modified URL.
 */


function prependOrigin(url, origin) {
  if (!origin) {
    return url;
  }

  if (url.slice(0, 4) === 'http') {
    return url;
  }

  var delimiter = url[0] === '/' ? '' : '/';
  return '' + origin.replace(/\/$/, '') + delimiter + url;
}
/**
 * Interpolate values into a route with express-style,
 * colon-prefixed route parameters.
 *
 * @param {string} route
 * @param {Object} [params] - Values should be primitives
 *   or arrays of primitives. Provide an array if the value
 *   is a list and commas between values need to be
 *   preserved, unencoded.
 * @returns {string} - Modified URL.
 */


function interpolateRouteParams(route, params) {
  if (!params) {
    return route;
  }

  return route.replace(/\/:([a-zA-Z0-9]+)/g, function (_, paramId) {
    var value = params[paramId];

    if (value === undefined) {
      throw new Error('Unspecified route parameter ' + paramId);
    }

    var preppedValue = encodeValue(value);
    return '/' + preppedValue;
  });
}

module.exports = {
  appendQueryObject: appendQueryObject,
  appendQueryParam: appendQueryParam,
  prependOrigin: prependOrigin,
  interpolateRouteParams: interpolateRouteParams
};

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/geocoding.js":
/*!***************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/geocoding.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var v = __webpack_require__(/*! ./service-helpers/validator */ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js");

var pick = __webpack_require__(/*! ./service-helpers/pick */ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js");

var stringifyBooleans = __webpack_require__(/*! ./service-helpers/stringify-booleans */ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js");

var createServiceFactory = __webpack_require__(/*! ./service-helpers/create-service-factory */ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js");
/**
 * Geocoding API service.
 *
 * Learn more about this service and its responses in
 * [the HTTP service documentation](https://docs.mapbox.com/api/search/#geocoding).
 */


var Geocoding = {};
var featureTypes = ['country', 'region', 'postcode', 'district', 'place', 'locality', 'neighborhood', 'address', 'poi', 'poi.landmark'];
/**
 * Search for a place.
 *
 * See the [public documentation](https://docs.mapbox.com/api/search/#forward-geocoding).
 *
 * @param {Object} config
 * @param {string} config.query - A place name.
 * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode="mapbox.places"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.
 * @param {Array<string>} [config.countries] - Limits results to the specified countries.
 *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
 * @param {Coordinates} [config.proximity] - Bias local results based on a provided location.
 * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.
 * @param {boolean} [config.autocomplete=true] - Return autocomplete results or not.
 * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.
 * @param {number} [config.limit=5] - Limit the number of results returned.
 * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.
 *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory
 *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.
 * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.
 * @return {MapiRequest}
 *
 * @example
 * geocodingClient.forwardGeocode({
 *   query: 'Paris, France',
 *   limit: 2
 * })
 *   .send()
 *   .then(response => {
 *     const match = response.body;
 *   });
 *
 * @example
 * // geocoding with proximity
 * geocodingClient.forwardGeocode({
 *   query: 'Paris, France',
 *   proximity: [-95.4431142, 33.6875431]
 * })
 *   .send()
 *   .then(response => {
 *     const match = response.body;
 *   });
 *
 * // geocoding with countries
 * geocodingClient.forwardGeocode({
 *   query: 'Paris, France',
 *   countries: ['fr']
 * })
 *   .send()
 *   .then(response => {
 *     const match = response.body;
 *   });
 *
 * // geocoding with bounding box
 * geocodingClient.forwardGeocode({
 *   query: 'Paris, France',
 *   bbox: [2.14, 48.72, 2.55, 48.96]
 * })
 *   .send()
 *   .then(response => {
 *     const match = response.body;
 *   });
 */

Geocoding.forwardGeocode = function (config) {
  v.assertShape({
    query: v.required(v.string),
    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),
    countries: v.arrayOf(v.string),
    proximity: v.coordinates,
    types: v.arrayOf(v.oneOf(featureTypes)),
    autocomplete: v.boolean,
    bbox: v.arrayOf(v.number),
    limit: v.number,
    language: v.arrayOf(v.string),
    routing: v.boolean
  })(config);
  config.mode = config.mode || 'mapbox.places';
  var query = stringifyBooleans(xtend({
    country: config.countries
  }, pick(config, ['proximity', 'types', 'autocomplete', 'bbox', 'limit', 'language', 'routing'])));
  return this.client.createRequest({
    method: 'GET',
    path: '/geocoding/v5/:mode/:query.json',
    params: pick(config, ['mode', 'query']),
    query: query
  });
};
/**
 * Search for places near coordinates.
 *
 * See the [public documentation](https://docs.mapbox.com/api/search/#reverse-geocoding).
 *
 * @param {Object} config
 * @param {Coordinates} config.query - Coordinates at which features will be searched.
 * @param {'mapbox.places'|'mapbox.places-permanent'} [config.mode="mapbox.places"] - Either `mapbox.places` for ephemeral geocoding, or `mapbox.places-permanent` for storing results and batch geocoding.
 * @param {Array<string>} [config.countries] - Limits results to the specified countries.
 *   Each item in the array should be an [ISO 3166 alpha 2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
 * @param {Array<'country'|'region'|'postcode'|'district'|'place'|'locality'|'neighborhood'|'address'|'poi'|'poi.landmark'>} [config.types] - Filter results by feature types.
 * @param {BoundingBox} [config.bbox] - Limit results to a bounding box.
 * @param {number} [config.limit=1] - Limit the number of results returned. If using this option, you must provide a single item for `types`.
 * @param {Array<string>} [config.language] - Specify the language to use for response text and, for forward geocoding, query result weighting.
 *  Options are [IETF language tags](https://en.wikipedia.org/wiki/IETF_language_tag) comprised of a mandatory
 *  [ISO 639-1 language code](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) and optionally one or more IETF subtags for country or script.
 * @param {'distance'|'score'} [config.reverseMode='distance'] - Set the factors that are used to sort nearby results.
 * @param {boolean} [config.routing=false] - Specify whether to request additional metadata about the recommended navigation destination. Only applicable for address features.
 * @return {MapiRequest}
 *
 * @example
 * geocodingClient.reverseGeocode({
 *   query: [-95.4431142, 33.6875431]
 * })
 *   .send()
 *   .then(response => {
 *     // GeoJSON document with geocoding matches
 *     const match = response.body;
 *   });
 */


Geocoding.reverseGeocode = function (config) {
  v.assertShape({
    query: v.required(v.coordinates),
    mode: v.oneOf('mapbox.places', 'mapbox.places-permanent'),
    countries: v.arrayOf(v.string),
    types: v.arrayOf(v.oneOf(featureTypes)),
    bbox: v.arrayOf(v.number),
    limit: v.number,
    language: v.arrayOf(v.string),
    reverseMode: v.oneOf('distance', 'score'),
    routing: v.boolean
  })(config);
  config.mode = config.mode || 'mapbox.places';
  var query = stringifyBooleans(xtend({
    country: config.countries
  }, pick(config, ['country', 'types', 'bbox', 'limit', 'language', 'reverseMode', 'routing'])));
  return this.client.createRequest({
    method: 'GET',
    path: '/geocoding/v5/:mode/:query.json',
    params: pick(config, ['mode', 'query']),
    query: query
  });
};

module.exports = createServiceFactory(Geocoding);

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/create-service-factory.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var MapiClient = __webpack_require__(/*! ../../lib/classes/mapi-client */ "./node_modules/@mapbox/mapbox-sdk/lib/classes/mapi-client.js"); // This will create the environment-appropriate client.


var createClient = __webpack_require__(/*! ../../lib/client */ "./node_modules/@mapbox/mapbox-sdk/lib/browser/browser-client.js");

function createServiceFactory(ServicePrototype) {
  return function (clientOrConfig) {
    var client;

    if (MapiClient.prototype.isPrototypeOf(clientOrConfig)) {
      client = clientOrConfig;
    } else {
      client = createClient(clientOrConfig);
    }

    var service = Object.create(ServicePrototype);
    service.client = client;
    return service;
  };
}

module.exports = createServiceFactory;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function objectMap(obj, cb) {
  return Object.keys(obj).reduce(function (result, key) {
    result[key] = cb(key, obj[key]);
    return result;
  }, {});
}

module.exports = objectMap;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/pick.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Create a new object by picking properties off an existing object.
 * The second param can be overloaded as a callback for
 * more fine grained picking of properties.
 * @param {Object} source
 * @param {Array<string>|function(string, Object):boolean} keys
 * @returns {Object}
 */

function pick(source, keys) {
  var filter = function filter(key, val) {
    return keys.indexOf(key) !== -1 && val !== undefined;
  };

  if (typeof keys === 'function') {
    filter = keys;
  }

  return Object.keys(source).filter(function (key) {
    return filter(key, source[key]);
  }).reduce(function (result, key) {
    result[key] = source[key];
    return result;
  }, {});
}

module.exports = pick;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/stringify-booleans.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var objectMap = __webpack_require__(/*! ./object-map */ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/object-map.js");
/**
 * Stringify all the boolean values in an object, so true becomes "true".
 *
 * @param {Object} obj
 * @returns {Object}
 */


function stringifyBoolean(obj) {
  return objectMap(obj, function (_, value) {
    return typeof value === 'boolean' ? JSON.stringify(value) : value;
  });
}

module.exports = stringifyBoolean;

/***/ }),

/***/ "./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@mapbox/mapbox-sdk/services/service-helpers/validator.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var v = __webpack_require__(/*! @mapbox/fusspot */ "./node_modules/@mapbox/fusspot/lib/index.js");

function file(value) {
  // If we're in a browser so Blob is available, the file must be that.
  // In Node, however, it could be a filepath or a pipeable (Readable) stream.
  if (typeof window !== 'undefined') {
    if (value instanceof global.Blob || value instanceof global.ArrayBuffer) {
      return;
    }

    return 'Blob or ArrayBuffer';
  }

  if (typeof value === 'string' || value.pipe !== undefined) {
    return;
  }

  return 'Filename or Readable stream';
}

function assertShape(validatorObj, apiName) {
  return v.assert(v.strictShape(validatorObj), apiName);
}

function date(value) {
  var msg = 'date';

  if (typeof value === 'boolean') {
    return msg;
  }

  try {
    var date = new Date(value);

    if (date.getTime && isNaN(date.getTime())) {
      return msg;
    }
  } catch (e) {
    return msg;
  }
}

function coordinates(value) {
  return v.tuple(v.number, v.number)(value);
}

module.exports = xtend(v, {
  file: file,
  date: date,
  coordinates: coordinates,
  assertShape: assertShape
});

/***/ }),

/***/ "./node_modules/@mapbox/parse-mapbox-token/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@mapbox/parse-mapbox-token/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var base64 = __webpack_require__(/*! base-64 */ "./node_modules/base-64/base64.js");

var tokenCache = {};

function parseToken(token) {
  if (tokenCache[token]) {
    return tokenCache[token];
  }

  var parts = token.split('.');
  var usage = parts[0];
  var rawPayload = parts[1];

  if (!rawPayload) {
    throw new Error('Invalid token');
  }

  var parsedPayload = parsePaylod(rawPayload);
  var result = {
    usage: usage,
    user: parsedPayload.u
  };
  if (has(parsedPayload, 'a')) result.authorization = parsedPayload.a;
  if (has(parsedPayload, 'exp')) result.expires = parsedPayload.exp * 1000;
  if (has(parsedPayload, 'iat')) result.created = parsedPayload.iat * 1000;
  if (has(parsedPayload, 'scopes')) result.scopes = parsedPayload.scopes;
  if (has(parsedPayload, 'client')) result.client = parsedPayload.client;
  if (has(parsedPayload, 'll')) result.lastLogin = parsedPayload.ll;
  if (has(parsedPayload, 'iu')) result.impersonator = parsedPayload.iu;
  tokenCache[token] = result;
  return result;
}

function parsePaylod(rawPayload) {
  try {
    return JSON.parse(base64.decode(rawPayload));
  } catch (parseError) {
    throw new Error('Invalid token');
  }
}

function has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

module.exports = parseToken;

/***/ }),

/***/ "./node_modules/angular-mydatepicker/__ivy_ngcc__/fesm2015/angular-mydatepicker.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/angular-mydatepicker/__ivy_ngcc__/fesm2015/angular-mydatepicker.js ***!
  \*****************************************************************************************/
/*! exports provided: AngularMyDatePickerModule, AngularMyDatePickerDirective, CalendarComponent, DayViewComponent, MonthViewComponent, YearViewComponent, SelectionBarComponent, UtilService, DefaultConfigService, LocaleService, AngularMyDatePickerCalendarDirective, CalToggle, KeyCode, KeyName, MonthId, Year, DefaultView, ActiveView, CalAnimation, HeaderAction, D, DD, M, MM, MMM, Y, YYYY, DATE_ROW_COUNT, DATE_COL_COUNT, MONTH_ROW_COUNT, MONTH_COL_COUNT, YEAR_ROW_COUNT, YEAR_COL_COUNT, DOT, UNDER_LINE, PIPE, YEAR_SEPARATOR, SU, MO, TU, WE, TH, FR, SA, DEFAULT_LOCALE, ZERO_STR, EMPTY_STR, SPACE_STR, CLICK, KEYUP, BLUR, DISABLED, BODY, VALUE, OPTIONS, DEFAULT_MONTH, LOCALE, OBJECT, PX, STYLE, INNER_HTML, OPTS, YEARS_DURATION, YEARS, VISIBLE_MONTH, SELECT_MONTH, SELECT_YEAR, PREV_VIEW_DISABLED, NEXT_VIEW_DISABLED, DATES, WEEK_DAYS, SELECTED_DATE, SELECTED_DATE_RANGE, MONTHS, ANIMATION_END, ANIMATION_TIMEOUT, MY_DP_ANIMATION, ANIMATION_NAMES, IN, OUT, TABINDEX, TD_SELECTOR, PREVENT_CLOSE_TIMEOUT, ɵa */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularMyDatePickerModule", function() { return AngularMyDatePickerModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularMyDatePickerDirective", function() { return AngularMyDatePickerDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return CalendarComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DayViewComponent", function() { return DayViewComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthViewComponent", function() { return MonthViewComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YearViewComponent", function() { return YearViewComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectionBarComponent", function() { return SelectionBarComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UtilService", function() { return UtilService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultConfigService", function() { return DefaultConfigService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocaleService", function() { return LocaleService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AngularMyDatePickerCalendarDirective", function() { return AngularMyDatePickerCalendarDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalToggle", function() { return CalToggle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyCode", function() { return KeyCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeyName", function() { return KeyName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthId", function() { return MonthId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Year", function() { return Year; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultView", function() { return DefaultView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActiveView", function() { return ActiveView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalAnimation", function() { return CalAnimation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderAction", function() { return HeaderAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DD", function() { return DD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M", function() { return M; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MM", function() { return MM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MMM", function() { return MMM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y", function() { return Y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YYYY", function() { return YYYY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DATE_ROW_COUNT", function() { return DATE_ROW_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DATE_COL_COUNT", function() { return DATE_COL_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONTH_ROW_COUNT", function() { return MONTH_ROW_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONTH_COL_COUNT", function() { return MONTH_COL_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YEAR_ROW_COUNT", function() { return YEAR_ROW_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YEAR_COL_COUNT", function() { return YEAR_COL_COUNT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOT", function() { return DOT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNDER_LINE", function() { return UNDER_LINE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PIPE", function() { return PIPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YEAR_SEPARATOR", function() { return YEAR_SEPARATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SU", function() { return SU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MO", function() { return MO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TU", function() { return TU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WE", function() { return WE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TH", function() { return TH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FR", function() { return FR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SA", function() { return SA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_LOCALE", function() { return DEFAULT_LOCALE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZERO_STR", function() { return ZERO_STR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EMPTY_STR", function() { return EMPTY_STR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SPACE_STR", function() { return SPACE_STR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLICK", function() { return CLICK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KEYUP", function() { return KEYUP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BLUR", function() { return BLUR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DISABLED", function() { return DISABLED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BODY", function() { return BODY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VALUE", function() { return VALUE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OPTIONS", function() { return OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_MONTH", function() { return DEFAULT_MONTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCALE", function() { return LOCALE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OBJECT", function() { return OBJECT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PX", function() { return PX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STYLE", function() { return STYLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INNER_HTML", function() { return INNER_HTML; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OPTS", function() { return OPTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YEARS_DURATION", function() { return YEARS_DURATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YEARS", function() { return YEARS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VISIBLE_MONTH", function() { return VISIBLE_MONTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECT_MONTH", function() { return SELECT_MONTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECT_YEAR", function() { return SELECT_YEAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREV_VIEW_DISABLED", function() { return PREV_VIEW_DISABLED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NEXT_VIEW_DISABLED", function() { return NEXT_VIEW_DISABLED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DATES", function() { return DATES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WEEK_DAYS", function() { return WEEK_DAYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECTED_DATE", function() { return SELECTED_DATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECTED_DATE_RANGE", function() { return SELECTED_DATE_RANGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MONTHS", function() { return MONTHS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ANIMATION_END", function() { return ANIMATION_END; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ANIMATION_TIMEOUT", function() { return ANIMATION_TIMEOUT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MY_DP_ANIMATION", function() { return MY_DP_ANIMATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ANIMATION_NAMES", function() { return ANIMATION_NAMES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IN", function() { return IN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OUT", function() { return OUT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TABINDEX", function() { return TABINDEX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TD_SELECTOR", function() { return TD_SELECTOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PREVENT_CLOSE_TIMEOUT", function() { return PREVENT_CLOSE_TIMEOUT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵa", function() { return FooterBarComponent; });
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");







/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */



var _c0 = ["selectorEl"];
var _c1 = ["styleEl"];

function CalendarComponent_lib_day_view_6_Template(rf, ctx) {
  if (rf & 1) {
    var _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "lib-day-view", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("dayCellClicked", function CalendarComponent_lib_day_view_6_Template_lib_day_view_dayCellClicked_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r7);
      var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r6.onDayCellClicked($event);
    })("dayCellKeyDown", function CalendarComponent_lib_day_view_6_Template_lib_day_view_dayCellKeyDown_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r7);
      var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r8.onDayCellKeyDown($event);
    })("viewActivated", function CalendarComponent_lib_day_view_6_Template_lib_day_view_viewActivated_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r7);
      var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r9.onViewActivated($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("opts", ctx_r2.opts)("dates", ctx_r2.dates)("weekDays", ctx_r2.weekDays)("selectedDate", ctx_r2.selectedDate)("selectedDateRange", ctx_r2.selectedDateRange)("viewChanged", ctx_r2.viewChanged);
  }
}

function CalendarComponent_lib_month_view_7_Template(rf, ctx) {
  if (rf & 1) {
    var _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "lib-month-view", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("monthCellClicked", function CalendarComponent_lib_month_view_7_Template_lib_month_view_monthCellClicked_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r11);
      var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r10.onMonthCellClicked($event);
    })("monthCellKeyDown", function CalendarComponent_lib_month_view_7_Template_lib_month_view_monthCellKeyDown_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r11);
      var ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r12.onMonthCellKeyDown($event);
    })("viewActivated", function CalendarComponent_lib_month_view_7_Template_lib_month_view_viewActivated_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r11);
      var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r13.onViewActivated($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("opts", ctx_r3.opts)("months", ctx_r3.months)("viewChanged", ctx_r3.viewChanged);
  }
}

function CalendarComponent_lib_year_view_8_Template(rf, ctx) {
  if (rf & 1) {
    var _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "lib-year-view", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("yearCellClicked", function CalendarComponent_lib_year_view_8_Template_lib_year_view_yearCellClicked_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r15);
      var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r14.onYearCellClicked($event);
    })("yearCellKeyDown", function CalendarComponent_lib_year_view_8_Template_lib_year_view_yearCellKeyDown_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r15);
      var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r16.onYearCellKeyDown($event);
    })("viewActivated", function CalendarComponent_lib_year_view_8_Template_lib_year_view_viewActivated_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r15);
      var ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r17.onViewActivated($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("opts", ctx_r4.opts)("years", ctx_r4.years)("viewChanged", ctx_r4.viewChanged);
  }
}

function CalendarComponent_lib_footer_bar_9_Template(rf, ctx) {
  if (rf & 1) {
    var _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "lib-footer-bar", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("footerBarTxtClicked", function CalendarComponent_lib_footer_bar_9_Template_lib_footer_bar_footerBarTxtClicked_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r19);
      var ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r18.onTodayFooterClicked();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("opts", ctx_r5.opts);
  }
}

var _c2 = function _c2(a0, a1, a2, a3) {
  return {
    inline: a0,
    selectorWidth: a1,
    selectorHeight: a2,
    selectorPos: a3
  };
};

var _c3 = function _c3(a0, a1, a2, a3, a4) {
  return {
    "myDpSelectorArrow": a0,
    "myDpSelectorArrowLeft": a1,
    "myDpSelectorArrowRight": a2,
    "myDpSelectorAbsolute": a3,
    "myDpSelectorPosInitial": a4
  };
};

var _c4 = function _c4(a0, a1) {
  return {
    "myDpMonthLabel": a0,
    "myDpHeaderLabelBtnNotEdit": a1
  };
};

function SelectionBarComponent_button_4_Template(rf, ctx) {
  if (rf & 1) {
    var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "button", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function SelectionBarComponent_button_4_Template_button_click_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r2);
      var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
      return ctx_r1.opts.monthSelector && ctx_r1.onMonthViewBtnClicked($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpropertyInterpolate"]("tabindex", ctx_r0.opts.monthSelector ? "0" : "-1");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction2"](3, _c4, ctx_r0.opts.monthSelector, !ctx_r0.opts.monthSelector));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](ctx_r0.visibleMonth.monthTxt);
  }
}

var _c5 = function _c5(a0) {
  return {
    "myDpHeaderBtnDisabled": a0
  };
};

var _c6 = function _c6(a0, a1) {
  return {
    "myDpYearLabel": a0,
    "myDpHeaderLabelBtnNotEdit": a1
  };
};

function DayViewComponent_th_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "th", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1, "#");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }
}

function DayViewComponent_th_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "th", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var d_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](d_r3);
  }
}

function DayViewComponent_tr_6_td_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "td", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var w_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](w_r4.weekNbr);
  }
}

var _c7 = function _c7(a0) {
  return {
    "border-top": a0
  };
};

function DayViewComponent_tr_6_td_2_span_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "span", 12);
  }

  if (rf & 2) {
    var d_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](1, _c7, "8px solid " + d_r8.markedDate.color));
  }
}

var _c8 = function _c8(a0, a1, a2, a3, a4, a5, a6) {
  return {
    "myDpRangeColor": a0,
    "myDpPrevMonth": a1,
    "myDpCurrMonth": a2,
    "myDpNextMonth": a3,
    "myDpSelectedDay": a4,
    "myDpDisabled": a5,
    "myDpTableSingleDay": a6
  };
};

var _c9 = function _c9(a0, a1, a2) {
  return {
    "myDpMarkCurrDay": a0,
    "myDpDimDay": a1,
    "myDpHighlight": a2
  };
};

function DayViewComponent_tr_6_td_2_Template(rf, ctx) {
  if (rf & 1) {
    var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "td", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function DayViewComponent_tr_6_td_2_Template_td_click_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12);
      var d_r8 = ctx.$implicit;
      var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
      return ctx_r11.onDayCellClicked($event, d_r8);
    })("keydown", function DayViewComponent_tr_6_td_2_Template_td_keydown_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12);
      var d_r8 = ctx.$implicit;
      var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
      return ctx_r13.onDayCellKeyDown($event, d_r8);
    })("mouseenter", function DayViewComponent_tr_6_td_2_Template_td_mouseenter_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12);
      var d_r8 = ctx.$implicit;
      var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
      return ctx_r14.onDayCellMouseEnter(d_r8);
    })("mouseleave", function DayViewComponent_tr_6_td_2_Template_td_mouseleave_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12);
      var ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
      return ctx_r15.onDayCellMouseLeave();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, DayViewComponent_tr_6_td_2_span_1_Template, 1, 3, "span", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "span", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var d_r8 = ctx.$implicit;
    var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵclassMapInterpolate4"]("d_", d_r8.row, "_", d_r8.col, " myDpDaycell ", d_r8.markedDate.styleClass, " ", d_r8.disabledDate.styleClass, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpropertyInterpolate2"]("id", "d_", d_r8.row, "_", d_r8.col, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction7"](13, _c8, ctx_r6.isDateInRange(d_r8.dateObj) || d_r8.range, d_r8.cmo === ctx_r6.prevMonthId, d_r8.cmo === ctx_r6.currMonthId && !d_r8.disabledDate.disabled, d_r8.cmo === ctx_r6.nextMonthId, !ctx_r6.opts.dateRange && ctx_r6.isDateSame(d_r8.dateObj) || ctx_r6.opts.dateRange && ctx_r6.isDateRangeBeginOrEndSame(d_r8.dateObj), d_r8.disabledDate.disabled && !d_r8.disabledDate.styleClass.length, !d_r8.disabledDate.disabled));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("tabindex", !d_r8.disabledDate.disabled ? 0 : -1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", d_r8.markedDate.marked && d_r8.markedDate.color.length);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction3"](21, _c9, d_r8.currDay && ctx_r6.opts.markCurrentDay, d_r8.highlight && (d_r8.cmo === ctx_r6.prevMonthId || d_r8.cmo === ctx_r6.nextMonthId || d_r8.disabledDate.disabled), d_r8.highlight));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](d_r8.dateObj.day);
  }
}

function DayViewComponent_tr_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, DayViewComponent_tr_6_td_1_Template, 2, 1, "td", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, DayViewComponent_tr_6_td_2_Template, 4, 25, "td", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var w_r4 = ctx.$implicit;
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx_r2.opts.showWeekNumbers && ctx_r2.opts.firstDayOfWeek === "mo");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", w_r4.week);
  }
}

var _c10 = function _c10(a0, a1, a2, a3) {
  return {
    "ng-myrtl": a0,
    "myDpFooter": a1,
    "myDpNoFooter": a2,
    "myDpViewChangeAnimation": a3
  };
};

function MonthViewComponent_tr_2_td_1_span_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "span", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var m_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](m_r3.nbr);
  }
}

var _c11 = function _c11(a0, a1, a2) {
  return {
    "myDpSelectedMonth": a0,
    "myDpDisabled": a1,
    "myDpTableSingleMonth": a2
  };
};

var _c12 = function _c12(a0) {
  return {
    "myDpMarkCurrMonth": a0
  };
};

function MonthViewComponent_tr_2_td_1_Template(rf, ctx) {
  if (rf & 1) {
    var _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "td", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function MonthViewComponent_tr_2_td_1_Template_td_click_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r7);
      var m_r3 = ctx.$implicit;
      var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
      return ctx_r6.onMonthCellClicked($event, m_r3);
    })("keydown", function MonthViewComponent_tr_2_td_1_Template_td_keydown_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r7);
      var m_r3 = ctx.$implicit;
      var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
      return ctx_r8.onMonthCellKeyDown($event, m_r3);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, MonthViewComponent_tr_2_td_1_span_1_Template, 2, 1, "span", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "span", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var m_r3 = ctx.$implicit;
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵclassMapInterpolate2"]("m_", m_r3.row, "_", m_r3.col, " myDpMonthcell");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpropertyInterpolate2"]("id", "m_", m_r3.row, "_", m_r3.col, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction3"](11, _c11, m_r3.selected, m_r3.disabled, !m_r3.disabled));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("tabindex", !m_r3.disabled ? 0 : -1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx_r2.opts.showMonthNumber);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](15, _c12, m_r3.currMonth && ctx_r2.opts.markCurrentMonth));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](m_r3.name);
  }
}

function MonthViewComponent_tr_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, MonthViewComponent_tr_2_td_1_Template, 4, 17, "td", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var mr_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", mr_r1);
  }
}

var _c13 = function _c13(a0, a1, a2) {
  return {
    "myDpSelectedYear": a0,
    "myDpDisabled": a1,
    "myDpTableSingleYear": a2
  };
};

var _c14 = function _c14(a0) {
  return {
    "myDpMarkCurrYear": a0
  };
};

function YearViewComponent_tr_2_td_1_Template(rf, ctx) {
  if (rf & 1) {
    var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "td", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function YearViewComponent_tr_2_td_1_Template_td_click_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r5);
      var y_r3 = ctx.$implicit;
      var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
      return ctx_r4.onYearCellClicked($event, y_r3);
    })("keydown", function YearViewComponent_tr_2_td_1_Template_td_keydown_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r5);
      var y_r3 = ctx.$implicit;
      var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
      return ctx_r6.onYearCellKeyDown($event, y_r3);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "span", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var y_r3 = ctx.$implicit;
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵclassMapInterpolate2"]("y_", y_r3.row, "_", y_r3.col, " myDpYearcell");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpropertyInterpolate2"]("id", "y_", y_r3.row, "_", y_r3.col, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction3"](10, _c13, y_r3.selected, y_r3.disabled, !y_r3.disabled));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("tabindex", !y_r3.disabled ? 0 : -1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](14, _c14, y_r3.currYear && ctx_r2.opts.markCurrentYear));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](y_r3.year);
  }
}

function YearViewComponent_tr_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, YearViewComponent_tr_2_td_1_Template, 3, 16, "td", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var yr_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", yr_r1);
  }
}

var KeyCode = {
  enter: 13,
  esc: 27,
  space: 32,
  leftArrow: 37,
  upArrow: 38,
  rightArrow: 39,
  downArrow: 40,
  tab: 9,
  shift: 16
};
KeyCode[KeyCode.enter] = 'enter';
KeyCode[KeyCode.esc] = 'esc';
KeyCode[KeyCode.space] = 'space';
KeyCode[KeyCode.leftArrow] = 'leftArrow';
KeyCode[KeyCode.upArrow] = 'upArrow';
KeyCode[KeyCode.rightArrow] = 'rightArrow';
KeyCode[KeyCode.downArrow] = 'downArrow';
KeyCode[KeyCode.tab] = 'tab';
KeyCode[KeyCode.shift] = 'shift';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {string} */

var KeyName = {
  enter: "Enter",
  esc: "Escape|Esc",
  space: " |Spacebar",
  leftArrow: "ArrowLeft|Left",
  upArrow: "ArrowUp|Up",
  rightArrow: "ArrowRight|Right",
  downArrow: "ArrowDown|Down",
  tab: "Tab",
  shift: "Shift"
};
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * Constants
 * @type {?}
 */

var D = "d";
/** @type {?} */

var DD = "dd";
/** @type {?} */

var M = "m";
/** @type {?} */

var MM = "mm";
/** @type {?} */

var MMM = "mmm";
/** @type {?} */

var Y = "y";
/** @type {?} */

var YYYY = "yyyy";
/** @type {?} */

var DATE_ROW_COUNT = 5;
/** @type {?} */

var DATE_COL_COUNT = 6;
/** @type {?} */

var MONTH_ROW_COUNT = 3;
/** @type {?} */

var MONTH_COL_COUNT = 2;
/** @type {?} */

var YEAR_ROW_COUNT = 4;
/** @type {?} */

var YEAR_COL_COUNT = 4;
/** @type {?} */

var DOT = ".";
/** @type {?} */

var UNDER_LINE = "_";
/** @type {?} */

var PIPE = "|";
/** @type {?} */

var YEAR_SEPARATOR = " - ";
/** @type {?} */

var SU = "su";
/** @type {?} */

var MO = "mo";
/** @type {?} */

var TU = "tu";
/** @type {?} */

var WE = "we";
/** @type {?} */

var TH = "th";
/** @type {?} */

var FR = "fr";
/** @type {?} */

var SA = "sa";
/** @type {?} */

var DEFAULT_LOCALE = "en";
/** @type {?} */

var ZERO_STR = "0";
/** @type {?} */

var EMPTY_STR = "";
/** @type {?} */

var SPACE_STR = " ";
/** @type {?} */

var CLICK = "click";
/** @type {?} */

var KEYUP = "keyup";
/** @type {?} */

var BLUR = "blur";
/** @type {?} */

var DISABLED = "disabled";
/** @type {?} */

var BODY = "body";
/** @type {?} */

var VALUE = "value";
/** @type {?} */

var OPTIONS = "options";
/** @type {?} */

var DEFAULT_MONTH = "defaultMonth";
/** @type {?} */

var LOCALE = "locale";
/** @type {?} */

var OBJECT = "object";
/** @type {?} */

var PX = "px";
/** @type {?} */

var STYLE = "style";
/** @type {?} */

var INNER_HTML = "innerHTML";
/** @type {?} */

var OPTS = "opts";
/** @type {?} */

var YEARS_DURATION = "yearsDuration";
/** @type {?} */

var YEARS = "years";
/** @type {?} */

var VISIBLE_MONTH = "visibleMonth";
/** @type {?} */

var SELECT_MONTH = "selectMonth";
/** @type {?} */

var SELECT_YEAR = "selectYear";
/** @type {?} */

var PREV_VIEW_DISABLED = "prevViewDisabled";
/** @type {?} */

var NEXT_VIEW_DISABLED = "nextViewDisabled";
/** @type {?} */

var DATES = "dates";
/** @type {?} */

var WEEK_DAYS = "weekDays";
/** @type {?} */

var SELECTED_DATE = "selectedDate";
/** @type {?} */

var SELECTED_DATE_RANGE = "selectedDateRange";
/** @type {?} */

var MONTHS = "months";
/** @type {?} */

var ANIMATION_END = "animationend";
/** @type {?} */

var ANIMATION_TIMEOUT = 550;
/** @type {?} */

var MY_DP_ANIMATION = "myDpAnimation";
/** @type {?} */

var ANIMATION_NAMES = ["Fade", "ScaleTop", "ScaleCenter", "Rotate", "FlipDiagonal", "Own"];
/** @type {?} */

var IN = "In";
/** @type {?} */

var OUT = "Out";
/** @type {?} */

var TABINDEX = "tabindex";
/** @type {?} */

var TD_SELECTOR = "table tbody tr td:not(.myDpDaycellWeekNbr)";
/** @type {?} */

var PREVENT_CLOSE_TIMEOUT = 50;
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

var UtilService = /*#__PURE__*/function () {
  function UtilService() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, UtilService);

    this.weekDays = [SU, MO, TU, WE, TH, FR, SA];
  }
  /**
   * @param {?} dateStr
   * @param {?} options
   * @param {?} validateOpts
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(UtilService, [{
    key: "isDateValid",
    value: function isDateValid(dateStr, options, validateOpts) {
      var dateFormat = options.dateFormat,
          minYear = options.minYear,
          maxYear = options.maxYear,
          monthLabels = options.monthLabels;
      /** @type {?} */

      var returnDate = this.resetDate();
      /** @type {?} */

      var datesInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
      /** @type {?} */

      var isMonthStr = dateFormat.indexOf(MMM) !== -1;
      /** @type {?} */

      var delimeters = dateFormat.match(/[^(dmy)]{1,}/g);

      if (!dateStr || dateStr === EMPTY_STR) {
        return returnDate;
      }
      /** @type {?} */


      var dateValues = this.getDateValue(dateStr, dateFormat, delimeters);
      /** @type {?} */

      var year = 0;
      /** @type {?} */

      var month = 0;
      /** @type {?} */

      var day = 0;

      var _iterator = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(dateValues),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var dv = _step.value;
          var format = dv.format;

          if (format.indexOf(YYYY) !== -1) {
            year = this.getNumberByValue(dv);
          } else if (format.indexOf(M) !== -1) {
            month = isMonthStr ? this.getMonthNumberByMonthName(dv, monthLabels) : this.getNumberByValue(dv);
          } else if (format.indexOf(D) !== -1) {
            day = this.getNumberByValue(dv);
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      var validateDisabledDates = validateOpts.validateDisabledDates,
          selectedValue = validateOpts.selectedValue;
      year = year === 0 && selectedValue ? selectedValue.year : year;
      month = month === 0 && selectedValue ? selectedValue.month : month;
      day = day === 0 && selectedValue ? selectedValue.day : day;
      /** @type {?} */

      var today = this.getToday();

      if (year === 0 && (month !== 0 || day !== 0)) {
        year = today.year;
      }

      if (month === 0 && (year !== 0 || day !== 0)) {
        month = today.month;
      }

      if (day === 0 && (year !== 0 || month !== 0)) {
        day = today.day;
      }

      if (month !== -1 && day !== -1 && year !== -1) {
        if (year < minYear || year > maxYear || month < 1 || month > 12) {
          return returnDate;
        }
        /** @type {?} */


        var date = {
          year: year,
          month: month,
          day: day
        };

        if (validateDisabledDates && this.isDisabledDate(date, options).disabled) {
          return returnDate;
        }

        if (year % 400 === 0 || year % 100 !== 0 && year % 4 === 0) {
          datesInMonth[1] = 29;
        }

        if (day < 1 || day > datesInMonth[month - 1]) {
          return returnDate;
        } // Valid date


        return date;
      }

      return returnDate;
    }
    /**
     * @param {?} dateRangeStr
     * @param {?} options
     * @param {?} validateOpts
     * @return {?}
     */

  }, {
    key: "isDateValidDateRange",
    value: function isDateValidDateRange(dateRangeStr, options, validateOpts) {
      /** @type {?} */
      var dateRange = {
        begin: this.resetDate(),
        end: this.resetDate()
      };

      if (dateRangeStr && dateRangeStr.length) {
        /** @type {?} */
        var dates = dateRangeStr.split(options.dateRangeDatesDelimiter);

        if (dates && dates.length === 2) {
          var _dates = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(dates, 2),
              beginDate = _dates[0],
              endDate = _dates[1];

          var selectedValue = validateOpts.selectedValue;

          if (selectedValue) {
            validateOpts.selectedValue = selectedValue.begin;
          }
          /** @type {?} */


          var begin = this.isDateValid(beginDate, options, validateOpts);

          if (this.isInitializedDate(begin)) {
            if (selectedValue) {
              validateOpts.selectedValue = selectedValue.end;
            }
            /** @type {?} */


            var end = this.isDateValid(endDate, options, validateOpts);

            if (this.isInitializedDate(end) && this.isDateSameOrEarlier(begin, end)) {
              dateRange = {
                begin: begin,
                end: end
              };
            }
          }
        }
      }

      return dateRange;
    }
    /**
     * @param {?} dateStr
     * @param {?} dateFormat
     * @param {?} delimeters
     * @return {?}
     */

  }, {
    key: "getDateValue",
    value: function getDateValue(dateStr, dateFormat, delimeters) {
      /** @type {?} */
      var del = EMPTY_STR;

      if (delimeters) {
        var _iterator2 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(delimeters),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var d = _step2.value;

            if (del.indexOf(d) === -1) {
              del += d;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      /** @type {?} */


      var re = new RegExp("[" + del + "]");
      /** @type {?} */

      var ds = dateStr.split(re);
      /** @type {?} */

      var df = dateFormat.split(re);
      /** @type {?} */

      var da = [];

      for (var i = 0; i < df.length; i++) {
        if (df[i].indexOf(YYYY) !== -1) {
          da.push({
            value: ds[i],
            format: df[i]
          });
        }

        if (df[i].indexOf(M) !== -1) {
          da.push({
            value: ds[i],
            format: df[i]
          });
        }

        if (df[i].indexOf(D) !== -1) {
          da.push({
            value: ds[i],
            format: df[i]
          });
        }
      }

      return da;
    }
    /**
     * @param {?} df
     * @param {?} monthLabels
     * @return {?}
     */

  }, {
    key: "getMonthNumberByMonthName",
    value: function getMonthNumberByMonthName(df, monthLabels) {
      if (df.value) {
        for (var key = 1; key <= 12; key++) {
          if (df.value.toLowerCase() === monthLabels[key].toLowerCase()) {
            return key;
          }
        }
      }

      return -1;
    }
    /**
     * @param {?} df
     * @return {?}
     */

  }, {
    key: "getNumberByValue",
    value: function getNumberByValue(df) {
      if (!/^\d+$/.test(df.value)) {
        return -1;
      }
      /** @type {?} */


      var nbr = Number(df.value);

      if (df.format.length === 1 && df.value.length !== 1 && nbr < 10 || df.format.length === 1 && df.value.length !== 2 && nbr >= 10) {
        nbr = -1;
      } else if (df.format.length === 2 && df.value.length > 2) {
        nbr = -1;
      }

      return nbr;
    }
    /**
     * @param {?} monthString
     * @return {?}
     */

  }, {
    key: "parseDefaultMonth",
    value: function parseDefaultMonth(monthString) {
      /** @type {?} */
      var month = {
        monthTxt: EMPTY_STR,
        monthNbr: 0,
        year: 0
      };

      if (monthString !== EMPTY_STR) {
        /** @type {?} */
        var split = monthString.split(monthString.match(/[^0-9]/)[0]);
        month.monthNbr = split[0].length === 2 ? Number(split[0]) : Number(split[1]);
        month.year = split[0].length === 2 ? Number(split[1]) : Number(split[0]);
      }

      return month;
    }
    /**
     * @param {?} date
     * @param {?} options
     * @return {?}
     */

  }, {
    key: "isDisabledDate",
    value: function isDisabledDate(date, options) {
      var minYear = options.minYear,
          maxYear = options.maxYear,
          disableUntil = options.disableUntil,
          disableSince = options.disableSince,
          disableWeekends = options.disableWeekends,
          disableDates = options.disableDates,
          disableDateRanges = options.disableDateRanges,
          disableWeekdays = options.disableWeekdays,
          enableDates = options.enableDates;

      if (this.dateMatchToDates(date, enableDates)) {
        return this.getDisabledValue(false, EMPTY_STR);
      }

      if (date.year < minYear && date.month === 12 || date.year > maxYear && date.month === 1) {
        return this.getDisabledValue(true, EMPTY_STR);
      }
      /** @type {?} */


      var inputDates =
      /** @type {?} */
      disableDates;
      /** @type {?} */

      var result = inputDates.find(
      /**
      * @param {?} d
      * @return {?}
      */
      function (d) {
        return d.dates;
      });

      if (!result) {
        if (this.dateMatchToDates(date, inputDates)) {
          return this.getDisabledValue(true, EMPTY_STR);
        }
      } else {
        var _iterator3 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(inputDates),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var dd = _step3.value;

            if (this.dateMatchToDates(date, dd.dates)) {
              return this.getDisabledValue(true, dd.styleClass);
            }
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }

      if (this.isDisabledByDisableUntil(date, disableUntil)) {
        return this.getDisabledValue(true, EMPTY_STR);
      }

      if (this.isDisabledByDisableSince(date, disableSince)) {
        return this.getDisabledValue(true, EMPTY_STR);
      }

      if (disableWeekends) {
        /** @type {?} */
        var dayNbr = this.getDayNumber(date);

        if (dayNbr === 0 || dayNbr === 6) {
          return this.getDisabledValue(true, EMPTY_STR);
        }
      }
      /** @type {?} */


      var dn = this.getDayNumber(date);

      if (disableWeekdays.length > 0) {
        var _iterator4 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(disableWeekdays),
            _step4;

        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var wd = _step4.value;

            if (dn === this.getWeekdayIndex(wd)) {
              return this.getDisabledValue(true, EMPTY_STR);
            }
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      }

      if (this.isDisabledByDisableDateRange(date, date, disableDateRanges)) {
        return this.getDisabledValue(true, EMPTY_STR);
      }

      return this.getDisabledValue(false, EMPTY_STR);
    }
    /**
     * @param {?} disabled
     * @param {?} styleClass
     * @return {?}
     */

  }, {
    key: "getDisabledValue",
    value: function getDisabledValue(disabled, styleClass) {
      return {
        disabled: disabled,
        styleClass: styleClass
      };
    }
    /**
     * @param {?} date
     * @param {?} dates
     * @return {?}
     */

  }, {
    key: "dateMatchToDates",
    value: function dateMatchToDates(date, dates) {
      var _iterator5 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(dates),
          _step5;

      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var d = _step5.value;

          if ((d.year === 0 || d.year === date.year) && (d.month === 0 || d.month === date.month) && d.day === date.day) {
            return true;
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }

      return false;
    }
    /**
     * @param {?} year
     * @param {?} month
     * @param {?} options
     * @return {?}
     */

  }, {
    key: "isDisabledMonth",
    value: function isDisabledMonth(year, month, options) {
      var disableUntil = options.disableUntil,
          disableSince = options.disableSince,
          disableDateRanges = options.disableDateRanges,
          enableDates = options.enableDates;
      /** @type {?} */

      var dateEnd = {
        year: year,
        month: month,
        day: this.datesInMonth(month, year)
      };
      /** @type {?} */

      var dateBegin = {
        year: year,
        month: month,
        day: 1
      };

      if (this.isDatesEnabled(dateBegin, dateEnd, enableDates)) {
        return false;
      }

      if (this.isDisabledByDisableUntil(dateEnd, disableUntil)) {
        return true;
      }

      if (this.isDisabledByDisableSince(dateBegin, disableSince)) {
        return true;
      }

      if (this.isDisabledByDisableDateRange(dateBegin, dateEnd, disableDateRanges)) {
        return true;
      }

      return false;
    }
    /**
     * @param {?} year
     * @param {?} options
     * @return {?}
     */

  }, {
    key: "isDisabledYear",
    value: function isDisabledYear(year, options) {
      var disableUntil = options.disableUntil,
          disableSince = options.disableSince,
          disableDateRanges = options.disableDateRanges,
          enableDates = options.enableDates,
          minYear = options.minYear,
          maxYear = options.maxYear;
      /** @type {?} */

      var dateEnd = {
        year: year,
        month: 12,
        day: 31
      };
      /** @type {?} */

      var dateBegin = {
        year: year,
        month: 1,
        day: 1
      };

      if (this.isDatesEnabled(dateBegin, dateEnd, enableDates)) {
        return false;
      }

      if (this.isDisabledByDisableUntil(dateEnd, disableUntil)) {
        return true;
      }

      if (this.isDisabledByDisableSince(dateBegin, disableSince)) {
        return true;
      }

      if (this.isDisabledByDisableDateRange(dateBegin, dateEnd, disableDateRanges)) {
        return true;
      }

      if (year < minYear || year > maxYear) {
        return true;
      }

      return false;
    }
    /**
     * @param {?} date
     * @param {?} disableUntil
     * @return {?}
     */

  }, {
    key: "isDisabledByDisableUntil",
    value: function isDisabledByDisableUntil(date, disableUntil) {
      return this.isInitializedDate(disableUntil) && this.getTimeInMilliseconds(date) <= this.getTimeInMilliseconds(disableUntil);
    }
    /**
     * @param {?} date
     * @param {?} disableSince
     * @return {?}
     */

  }, {
    key: "isDisabledByDisableSince",
    value: function isDisabledByDisableSince(date, disableSince) {
      return this.isInitializedDate(disableSince) && this.getTimeInMilliseconds(date) >= this.getTimeInMilliseconds(disableSince);
    }
    /**
     * @param {?} date
     * @param {?} enableDates
     * @return {?}
     */

  }, {
    key: "isPastDatesEnabled",
    value: function isPastDatesEnabled(date, enableDates) {
      var _iterator6 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(enableDates),
          _step6;

      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var d = _step6.value;

          if (this.getTimeInMilliseconds(d) <= this.getTimeInMilliseconds(date)) {
            return true;
          }
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }

      return false;
    }
    /**
     * @param {?} date
     * @param {?} enableDates
     * @return {?}
     */

  }, {
    key: "isFutureDatesEnabled",
    value: function isFutureDatesEnabled(date, enableDates) {
      var _iterator7 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(enableDates),
          _step7;

      try {
        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
          var d = _step7.value;

          if (this.getTimeInMilliseconds(d) >= this.getTimeInMilliseconds(date)) {
            return true;
          }
        }
      } catch (err) {
        _iterator7.e(err);
      } finally {
        _iterator7.f();
      }

      return false;
    }
    /**
     * @param {?} dateBegin
     * @param {?} dateEnd
     * @param {?} enableDates
     * @return {?}
     */

  }, {
    key: "isDatesEnabled",
    value: function isDatesEnabled(dateBegin, dateEnd, enableDates) {
      var _iterator8 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(enableDates),
          _step8;

      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
          var d = _step8.value;

          if (this.getTimeInMilliseconds(d) >= this.getTimeInMilliseconds(dateBegin) && this.getTimeInMilliseconds(d) <= this.getTimeInMilliseconds(dateEnd)) {
            return true;
          }
        }
      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }

      return false;
    }
    /**
     * @param {?} dateBegin
     * @param {?} dateEnd
     * @param {?} disableDateRanges
     * @return {?}
     */

  }, {
    key: "isDisabledByDisableDateRange",
    value: function isDisabledByDisableDateRange(dateBegin, dateEnd, disableDateRanges) {
      /** @type {?} */
      var dateMsBegin = this.getTimeInMilliseconds(dateBegin);
      /** @type {?} */

      var dateMsEnd = this.getTimeInMilliseconds(dateEnd);

      var _iterator9 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(disableDateRanges),
          _step9;

      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
          var d = _step9.value;

          if (this.isInitializedDate(d.begin) && this.isInitializedDate(d.end) && dateMsBegin >= this.getTimeInMilliseconds(d.begin) && dateMsEnd <= this.getTimeInMilliseconds(d.end)) {
            return true;
          }
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }

      return false;
    }
    /**
     * @param {?} date
     * @param {?} options
     * @return {?}
     */

  }, {
    key: "isMarkedDate",
    value: function isMarkedDate(date, options) {
      var markDates = options.markDates,
          markWeekends = options.markWeekends;

      var _iterator10 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(markDates),
          _step10;

      try {
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
          var md = _step10.value;

          if (this.dateMatchToDates(date, md.dates)) {
            return this.getMarkedValue(true, md.color, md.styleClass);
          }
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }

      if (markWeekends && markWeekends.marked) {
        /** @type {?} */
        var dayNbr = this.getDayNumber(date);

        if (dayNbr === 0 || dayNbr === 6) {
          return this.getMarkedValue(true, markWeekends.color, EMPTY_STR);
        }
      }

      return this.getMarkedValue(false, EMPTY_STR, EMPTY_STR);
    }
    /**
     * @param {?} marked
     * @param {?} color
     * @param {?} styleClass
     * @return {?}
     */

  }, {
    key: "getMarkedValue",
    value: function getMarkedValue(marked, color, styleClass) {
      return {
        marked: marked,
        color: color ? color : EMPTY_STR,
        styleClass: styleClass ? styleClass : EMPTY_STR
      };
    }
    /**
     * @param {?} date
     * @param {?} options
     * @return {?}
     */

  }, {
    key: "isHighlightedDate",
    value: function isHighlightedDate(date, options) {
      var sunHighlight = options.sunHighlight,
          satHighlight = options.satHighlight,
          highlightDates = options.highlightDates;
      /** @type {?} */

      var dayNbr = this.getDayNumber(date);

      if (sunHighlight && dayNbr === 0 || satHighlight && dayNbr === 6) {
        return true;
      }

      if (this.dateMatchToDates(date, highlightDates)) {
        return true;
      }

      return false;
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "getWeekNumber",
    value: function getWeekNumber(date) {
      /** @type {?} */
      var d = new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0);
      d.setDate(d.getDate() + (d.getDay() === 0 ? -3 : 4 - d.getDay()));
      return Math.round((d.getTime() - new Date(d.getFullYear(), 0, 4).getTime()) / 86400000 / 7) + 1;
    }
    /**
     * @param {?} date
     * @param {?} dateRange
     * @param {?} dateFormat
     * @param {?} monthLabels
     * @param {?} rangeDelimiter
     * @param {?=} dateStr
     * @return {?}
     */

  }, {
    key: "getDateModel",
    value: function getDateModel(date, dateRange, dateFormat, monthLabels, rangeDelimiter) {
      var dateStr = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : EMPTY_STR;

      /** @type {?} */
      var singleDateModel = null;
      /** @type {?} */

      var dateRangeModel = null;

      if (date) {
        singleDateModel = {
          date: date,
          jsDate: this.myDateToJsDate(date),
          formatted: dateStr.length ? dateStr : this.formatDate(date, dateFormat, monthLabels),
          epoc: this.getEpocTime(date)
        };
      } else {
        dateRangeModel = {
          beginDate: dateRange.begin,
          beginJsDate: this.myDateToJsDate(dateRange.begin),
          beginEpoc: this.getEpocTime(dateRange.begin),
          endDate: dateRange.end,
          endJsDate: this.myDateToJsDate(dateRange.end),
          endEpoc: this.getEpocTime(dateRange.end),
          formatted: this.formatDate(dateRange.begin, dateFormat, monthLabels) + rangeDelimiter + this.formatDate(dateRange.end, dateFormat, monthLabels)
        };
      }

      return {
        isRange: date === null,
        singleDate: singleDateModel,
        dateRange: dateRangeModel
      };
    }
    /**
     * @param {?} date
     * @param {?} dateFormat
     * @param {?} monthLabels
     * @return {?}
     */

  }, {
    key: "formatDate",
    value: function formatDate(date, dateFormat, monthLabels) {
      /** @type {?} */
      var formatted = dateFormat.replace(YYYY, String(date.year));

      if (dateFormat.indexOf(MMM) !== -1) {
        formatted = formatted.replace(MMM, monthLabels[date.month]);
      } else if (dateFormat.indexOf(MM) !== -1) {
        formatted = formatted.replace(MM, this.preZero(date.month));
      } else {
        formatted = formatted.replace(M, String(date.month));
      }

      if (dateFormat.indexOf(DD) !== -1) {
        formatted = formatted.replace(DD, this.preZero(date.day));
      } else {
        formatted = formatted.replace(D, String(date.day));
      }

      return formatted;
    }
    /**
     * @param {?} model
     * @return {?}
     */

  }, {
    key: "getFormattedDate",
    value: function getFormattedDate(model) {
      return !model.isRange ? model.singleDate.formatted : model.dateRange.formatted;
    }
    /**
     * @param {?} val
     * @return {?}
     */

  }, {
    key: "preZero",
    value: function preZero(val) {
      return val < 10 ? ZERO_STR + val : String(val);
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "isInitializedDate",
    value: function isInitializedDate(date) {
      return date.year !== 0 && date.month !== 0 && date.day !== 0;
    }
    /**
     * @param {?} firstDate
     * @param {?} secondDate
     * @return {?}
     */

  }, {
    key: "isDateEarlier",
    value: function isDateEarlier(firstDate, secondDate) {
      return this.getTimeInMilliseconds(firstDate) < this.getTimeInMilliseconds(secondDate);
    }
    /**
     * @param {?} firstDate
     * @param {?} secondDate
     * @return {?}
     */

  }, {
    key: "isDateSameOrEarlier",
    value: function isDateSameOrEarlier(firstDate, secondDate) {
      return this.getTimeInMilliseconds(firstDate) <= this.getTimeInMilliseconds(secondDate);
    }
    /**
     * @param {?} firstDate
     * @param {?} secondDate
     * @return {?}
     */

  }, {
    key: "isDateSame",
    value: function isDateSame(firstDate, secondDate) {
      return this.getTimeInMilliseconds(firstDate) === this.getTimeInMilliseconds(secondDate);
    }
    /**
     * @param {?} dateRange
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "isDateRangeBeginOrEndSame",
    value: function isDateRangeBeginOrEndSame(dateRange, date) {
      /** @type {?} */
      var dateMs = this.getTimeInMilliseconds(date);
      return this.getTimeInMilliseconds(dateRange.begin) === dateMs || this.getTimeInMilliseconds(dateRange.end) === dateMs;
    }
    /**
     * @param {?} date
     * @param {?} dateRange
     * @return {?}
     */

  }, {
    key: "isDateInRange",
    value: function isDateInRange(date, dateRange) {
      if (!this.isInitializedDate(dateRange.begin) || !this.isInitializedDate(dateRange.end)) {
        return false;
      }

      return this.isDateSameOrEarlier(dateRange.begin, date) && this.isDateSameOrEarlier(date, dateRange.end);
    }
    /**
     * @return {?}
     */

  }, {
    key: "resetDate",
    value: function resetDate() {
      return {
        year: 0,
        month: 0,
        day: 0
      };
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "getTimeInMilliseconds",
    value: function getTimeInMilliseconds(date) {
      return this.myDateToJsDate(date).getTime();
    }
    /**
     * @return {?}
     */

  }, {
    key: "getToday",
    value: function getToday() {
      /** @type {?} */
      var date = new Date();
      return {
        year: date.getFullYear(),
        month: date.getMonth() + 1,
        day: date.getDate()
      };
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "getDayNumber",
    value: function getDayNumber(date) {
      return new Date(date.year, date.month - 1, date.day, 0, 0, 0, 0).getDay();
    }
    /**
     * @param {?} wd
     * @return {?}
     */

  }, {
    key: "getWeekdayIndex",
    value: function getWeekdayIndex(wd) {
      return this.weekDays.indexOf(wd);
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "getEpocTime",
    value: function getEpocTime(date) {
      return Math.round(this.getTimeInMilliseconds(date) / 1000.0);
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "jsDateToMyDate",
    value: function jsDateToMyDate(date) {
      return {
        year: date.getFullYear(),
        month: date.getMonth() + 1,
        day: date.getDate()
      };
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "myDateToJsDate",
    value: function myDateToJsDate(date) {
      var year = date.year,
          month = date.month,
          day = date.day;
      return new Date(year, month - 1, day, 0, 0, 0, 0);
    }
    /**
     * @param {?} m
     * @param {?} y
     * @return {?}
     */

  }, {
    key: "datesInMonth",
    value: function datesInMonth(m, y) {
      return new Date(y, m, 0).getDate();
    }
    /**
     * @param {?} m
     * @param {?} y
     * @return {?}
     */

  }, {
    key: "datesInPrevMonth",
    value: function datesInPrevMonth(m, y) {
      /** @type {?} */
      var d = this.getJsDate(y, m, 1);
      d.setMonth(d.getMonth() - 1);
      return this.datesInMonth(d.getMonth() + 1, d.getFullYear());
    }
    /**
     * @param {?} year
     * @param {?} month
     * @param {?} day
     * @return {?}
     */

  }, {
    key: "getJsDate",
    value: function getJsDate(year, month, day) {
      return new Date(year, month - 1, day, 0, 0, 0, 0);
    }
    /**
     * @param {?} selectedValue
     * @param {?} dateRange
     * @return {?}
     */

  }, {
    key: "getSelectedValue",
    value: function getSelectedValue(selectedValue, dateRange) {
      if (!selectedValue) {
        return null;
      }

      if (!dateRange) {
        return selectedValue.date;
      } else {
        var beginDate = selectedValue.beginDate,
            endDate = selectedValue.endDate;
        return {
          begin: beginDate,
          end: endDate
        };
      }
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "getKeyCodeFromEvent",
    value: function getKeyCodeFromEvent(event) {
      /** @type {?} */
      var key = event.key || event.keyCode || event.which;

      if (this.checkKeyName(key, KeyName.enter) || key === KeyCode.enter) {
        return KeyCode.enter;
      } else if (this.checkKeyName(key, KeyName.esc) || key === KeyCode.esc) {
        return KeyCode.esc;
      } else if (this.checkKeyName(key, KeyName.space) || key === KeyCode.space) {
        return KeyCode.space;
      } else if (this.checkKeyName(key, KeyName.leftArrow) || key === KeyCode.leftArrow) {
        return KeyCode.leftArrow;
      } else if (this.checkKeyName(key, KeyName.upArrow) || key === KeyCode.upArrow) {
        return KeyCode.upArrow;
      } else if (this.checkKeyName(key, KeyName.rightArrow) || key === KeyCode.rightArrow) {
        return KeyCode.rightArrow;
      } else if (this.checkKeyName(key, KeyName.downArrow) || key === KeyCode.downArrow) {
        return KeyCode.downArrow;
      } else if (this.checkKeyName(key, KeyName.tab) || key === KeyCode.tab) {
        return KeyCode.tab;
      } else if (this.checkKeyName(key, KeyName.shift) || key === KeyCode.shift) {
        return KeyCode.shift;
      } else {
        return null;
      }
    }
    /**
     * @param {?} key
     * @param {?} keyName
     * @return {?}
     */

  }, {
    key: "checkKeyName",
    value: function checkKeyName(key, keyName) {
      /** @type {?} */
      var arr = keyName.split(PIPE);
      return arr.indexOf(key) !== -1;
    }
  }]);

  return UtilService;
}();

UtilService.ɵfac = function UtilService_Factory(t) {
  return new (t || UtilService)();
};

UtilService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: UtilService,
  factory: UtilService.ɵfac
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](UtilService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [];
  }, null);
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */


var MonthId = {
  prev: 1,
  curr: 2,
  next: 3
};
MonthId[MonthId.prev] = 'prev';
MonthId[MonthId.curr] = 'curr';
MonthId[MonthId.next] = 'next';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */

var DefaultView = {
  Date: 1,
  Month: 2,
  Year: 3
};
DefaultView[DefaultView.Date] = 'Date';
DefaultView[DefaultView.Month] = 'Month';
DefaultView[DefaultView.Year] = 'Year';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */

var CalAnimation = {
  None: 0,
  Fade: 1,
  ScaleTop: 2,
  ScaleCenter: 3,
  Rotate: 4,
  FlipDiagonal: 5,
  Own: 6
};
CalAnimation[CalAnimation.None] = 'None';
CalAnimation[CalAnimation.Fade] = 'Fade';
CalAnimation[CalAnimation.ScaleTop] = 'ScaleTop';
CalAnimation[CalAnimation.ScaleCenter] = 'ScaleCenter';
CalAnimation[CalAnimation.Rotate] = 'Rotate';
CalAnimation[CalAnimation.FlipDiagonal] = 'FlipDiagonal';
CalAnimation[CalAnimation.Own] = 'Own';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */

var HeaderAction = {
  PrevBtnClick: 1,
  NextBtnClick: 2,
  MonthBtnClick: 3,
  YearBtnClick: 4
};
HeaderAction[HeaderAction.PrevBtnClick] = 'PrevBtnClick';
HeaderAction[HeaderAction.NextBtnClick] = 'NextBtnClick';
HeaderAction[HeaderAction.MonthBtnClick] = 'MonthBtnClick';
HeaderAction[HeaderAction.YearBtnClick] = 'YearBtnClick';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

var CalendarComponent = /*#__PURE__*/function () {
  /**
   * @param {?} elem
   * @param {?} renderer
   * @param {?} cdr
   * @param {?} utilService
   */
  function CalendarComponent(elem, renderer, cdr, utilService) {
    var _this = this;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, CalendarComponent);

    this.elem = elem;
    this.renderer = renderer;
    this.cdr = cdr;
    this.utilService = utilService;
    this.position = "static";
    this.visibleMonth = {
      monthTxt: EMPTY_STR,
      monthNbr: 0,
      year: 0
    };
    this.selectedMonth = {
      monthNbr: 0,
      year: 0
    };
    this.selectedDate = {
      year: 0,
      month: 0,
      day: 0
    };
    this.selectedDateRange = {
      begin: {
        year: 0,
        month: 0,
        day: 0
      },
      end: {
        year: 0,
        month: 0,
        day: 0
      }
    };
    this.weekDays = [];
    this.dates = [];
    this.months = [];
    this.years = [];
    this.yearsDuration = "";
    this.dayIdx = 0;
    this.weekDayOpts = [SU, MO, TU, WE, TH, FR, SA];
    this.selectMonth = false;
    this.selectYear = false;
    this.viewChanged = false;
    this.selectorPos = null;
    this.prevViewDisabled = false;
    this.nextViewDisabled = false;
    this.clickListener = renderer.listen(elem.nativeElement, CLICK,
    /**
    * @param {?} event
    * @return {?}
    */
    function (event) {
      if ((_this.opts.monthSelector || _this.opts.yearSelector) && event.target) {
        _this.resetMonthYearSelect();
      }
    });
  }
  /**
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(CalendarComponent, [{
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this$opts = this.opts,
          stylesData = _this$opts.stylesData,
          calendarAnimation = _this$opts.calendarAnimation,
          inline = _this$opts.inline;

      if (stylesData.styles.length) {
        /** @type {?} */
        var styleElTemp = this.renderer.createElement(STYLE);
        this.renderer.appendChild(styleElTemp, this.renderer.createText(stylesData.styles));
        this.renderer.appendChild(this.styleEl.nativeElement, styleElTemp);
      }

      if (calendarAnimation.in !== CalAnimation.None) {
        this.setCalendarAnimation(calendarAnimation, true);
      }

      if (!inline) {
        this.focusToSelector();
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.clickListener();
    }
    /**
     * @param {?} opts
     * @param {?} defaultMonth
     * @param {?} selectedValue
     * @param {?} inputValue
     * @param {?} selectorPos
     * @param {?} dc
     * @param {?} cvc
     * @param {?} rds
     * @param {?} va
     * @param {?} cbe
     * @return {?}
     */

  }, {
    key: "initializeComponent",
    value: function initializeComponent(opts, defaultMonth, selectedValue, inputValue, selectorPos, dc, cvc, rds, va, cbe) {
      this.opts = opts;
      this.selectorPos = selectorPos;
      this.dateChanged = dc;
      this.calendarViewChanged = cvc;
      this.rangeDateSelection = rds;
      this.viewActivated = va;
      this.closedByEsc = cbe;
      var defaultView = opts.defaultView,
          firstDayOfWeek = opts.firstDayOfWeek,
          dayLabels = opts.dayLabels;
      this.weekDays.length = 0;
      this.dayIdx = this.weekDayOpts.indexOf(firstDayOfWeek);

      if (this.dayIdx !== -1) {
        /** @type {?} */
        var idx = this.dayIdx;

        for (var i = 0; i < this.weekDayOpts.length; i++) {
          this.weekDays.push(dayLabels[this.weekDayOpts[idx]]);
          idx = this.weekDayOpts[idx] === SA ? 0 : idx + 1;
        }
      }

      this.initializeView(defaultMonth, selectedValue, inputValue);
      this.setCalendarVisibleMonth();
      this.setDefaultView(defaultView);
    }
    /**
     * @param {?} defaultMonth
     * @param {?} selectedValue
     * @param {?} inputValue
     * @return {?}
     */

  }, {
    key: "initializeView",
    value: function initializeView(defaultMonth, selectedValue, inputValue) {
      var dateRange = this.opts.dateRange; // use today as a selected month

      /** @type {?} */

      var today = this.utilService.getToday();
      this.selectedMonth = {
        monthNbr: today.month,
        year: today.year
      }; // If default month attribute valur given use it as a selected month

      var defMonth = defaultMonth.defMonth,
          overrideSelection = defaultMonth.overrideSelection;

      if (defMonth && defMonth.length) {
        this.selectedMonth = this.utilService.parseDefaultMonth(defMonth);
      }
      /** @type {?} */


      var validateOpts = null;

      if (!dateRange) {
        // Single date mode - If date selected use it as selected month
        validateOpts = {
          validateDisabledDates: false,
          selectedValue: this.utilService.getSelectedValue(selectedValue, dateRange)
        };
        /** @type {?} */

        var date = this.utilService.isDateValid(inputValue, this.opts, validateOpts);

        if (this.utilService.isInitializedDate(date)) {
          this.selectedDate = date;

          if (!overrideSelection) {
            this.selectedMonth = {
              monthNbr: date.month,
              year: date.year
            };
          }
        }
      } else {
        // Date range mode - If date range selected use begin date as selected month
        validateOpts = {
          validateDisabledDates: false,
          selectedValue: this.utilService.getSelectedValue(selectedValue, dateRange)
        };

        var _this$utilService$isD = this.utilService.isDateValidDateRange(inputValue, this.opts, validateOpts),
            begin = _this$utilService$isD.begin,
            end = _this$utilService$isD.end;

        if (this.utilService.isInitializedDate(begin) && this.utilService.isInitializedDate(end)) {
          this.selectedDateRange = {
            begin: begin,
            end: end
          };

          if (!overrideSelection) {
            this.selectedMonth = {
              monthNbr: begin.month,
              year: begin.year
            };
          }
        }
      }
    }
    /**
     * @param {?} opts
     * @param {?} defaultMonth
     * @param {?} selectedValue
     * @param {?} inputValue
     * @return {?}
     */

  }, {
    key: "refreshComponent",
    value: function refreshComponent(opts, defaultMonth, selectedValue, inputValue) {
      this.opts = opts;
      var defaultView = opts.defaultView;
      this.initializeView(defaultMonth, selectedValue, inputValue);
      this.setCalendarVisibleMonth();
      this.setDefaultView(defaultView);
    }
    /**
     * @param {?} headerAction
     * @return {?}
     */

  }, {
    key: "headerAction",
    value: function headerAction(_headerAction) {
      var _this$opts2 = this.opts,
          monthSelector = _this$opts2.monthSelector,
          yearSelector = _this$opts2.yearSelector;

      if (_headerAction === HeaderAction.PrevBtnClick) {
        if (!this.prevViewDisabled) {
          this.onPrevNavigateBtnClicked();
        }
      } else if (_headerAction === HeaderAction.NextBtnClick) {
        if (!this.nextViewDisabled) {
          this.onNextNavigateBtnClicked();
        }
      } else if (_headerAction === HeaderAction.MonthBtnClick) {
        if (monthSelector) {
          this.onMonthViewBtnClicked();
        }
      } else if (_headerAction === HeaderAction.YearBtnClick) {
        if (yearSelector) {
          this.onYearViewBtnClicked();
        }
      }
    }
    /**
     * @param {?} defaultView
     * @return {?}
     */

  }, {
    key: "setDefaultView",
    value: function setDefaultView(defaultView) {
      if (defaultView === DefaultView.Month) {
        this.monthViewBtnClicked();
      } else if (defaultView === DefaultView.Year) {
        this.yearViewBtnClicked();
      }
    }
    /**
     * @param {?} calAnimation
     * @param {?} isOpen
     * @return {?}
     */

  }, {
    key: "setCalendarAnimation",
    value: function setCalendarAnimation(calAnimation, isOpen) {
      var nativeElement = this.selectorEl.nativeElement;
      var renderer = this.renderer;
      /** @type {?} */

      var classIn = MY_DP_ANIMATION + ANIMATION_NAMES[calAnimation.in - 1];

      if (isOpen) {
        renderer.addClass(nativeElement, classIn + IN);
      } else {
        /** @type {?} */
        var classOut = MY_DP_ANIMATION + ANIMATION_NAMES[calAnimation.out - 1];
        renderer.removeClass(nativeElement, classIn + IN);
        renderer.addClass(nativeElement, classOut + OUT);
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "resetDateValue",
    value: function resetDateValue() {
      if (!this.opts.dateRange) {
        this.selectedDate = this.utilService.resetDate();
      } else {
        this.selectedDateRange.begin = this.utilService.resetDate();
        this.selectedDateRange.end = this.utilService.resetDate();
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "clearDate",
    value: function clearDate() {
      var _this$utilService$get = this.utilService.getToday(),
          month = _this$utilService$get.month,
          year = _this$utilService$get.year;

      this.selectedMonth = {
        monthNbr: month,
        year: year
      };
      this.resetDateValue();
      this.setCalendarVisibleMonth();
      this.resetMonthYearSelect();
    }
    /**
     * @return {?}
     */

  }, {
    key: "resetMonthYearSelect",
    value: function resetMonthYearSelect() {
      this.selectMonth = false;
      this.selectYear = false;
    }
    /**
     * @return {?}
     */

  }, {
    key: "onMonthViewBtnClicked",
    value: function onMonthViewBtnClicked() {
      this.viewChanged = true;
      this.monthViewBtnClicked();
    }
    /**
     * @return {?}
     */

  }, {
    key: "monthViewBtnClicked",
    value: function monthViewBtnClicked() {
      this.selectMonth = !this.selectMonth;
      this.selectYear = false;
      this.cdr.detectChanges();

      if (this.selectMonth) {
        this.generateMonths();
      } else {
        var _this$selectedMonth = this.selectedMonth,
            year = _this$selectedMonth.year,
            monthNbr = _this$selectedMonth.monthNbr;
        this.visibleMonth = {
          monthTxt: this.opts.monthLabels[monthNbr],
          monthNbr: monthNbr,
          year: year
        };
        this.generateCalendar(monthNbr, year, true);
      }
    }
    /**
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onMonthCellClicked",
    value: function onMonthCellClicked(cell) {
      this.viewChanged = true;
      var _this$visibleMonth = this.visibleMonth,
          year = _this$visibleMonth.year,
          monthNbr = _this$visibleMonth.monthNbr;
      /** @type {?} */

      var monthChange = cell.nbr !== monthNbr;
      this.visibleMonth = {
        monthTxt: this.opts.monthLabels[cell.nbr],
        monthNbr: cell.nbr,
        year: year
      };
      this.selectedMonth.year = year;
      this.generateCalendar(cell.nbr, year, monthChange);
      this.selectMonth = false;
      this.focusToSelector();
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onMonthCellKeyDown",
    value: function onMonthCellKeyDown(event) {
      // Move focus by arrow keys
      var _this$getSourceRowAnd = this.getSourceRowAndColumnFromEvent(event),
          sourceRow = _this$getSourceRowAnd.sourceRow,
          sourceCol = _this$getSourceRowAnd.sourceCol;

      var _this$getTargetFocusR = this.getTargetFocusRowAndColumn(event, sourceRow, sourceCol, MONTH_ROW_COUNT, MONTH_COL_COUNT),
          moveFocus = _this$getTargetFocusR.moveFocus,
          targetRow = _this$getTargetFocusR.targetRow,
          targetCol = _this$getTargetFocusR.targetCol,
          direction = _this$getTargetFocusR.direction;

      if (moveFocus) {
        this.focusCellElement(M, targetRow, targetCol, direction, MONTH_COL_COUNT);
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "onYearViewBtnClicked",
    value: function onYearViewBtnClicked() {
      this.viewChanged = true;
      this.yearViewBtnClicked();
    }
    /**
     * @return {?}
     */

  }, {
    key: "yearViewBtnClicked",
    value: function yearViewBtnClicked() {
      this.selectYear = !this.selectYear;
      this.selectMonth = false;
      this.cdr.detectChanges();

      if (this.selectYear) {
        this.generateYears(this.visibleMonth.year);
      } else {
        var _this$selectedMonth2 = this.selectedMonth,
            year = _this$selectedMonth2.year,
            monthNbr = _this$selectedMonth2.monthNbr;
        this.visibleMonth = {
          monthTxt: this.opts.monthLabels[monthNbr],
          monthNbr: monthNbr,
          year: year
        };
        this.generateCalendar(monthNbr, year, true);
      }
    }
    /**
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onYearCellClicked",
    value: function onYearCellClicked(cell) {
      this.viewChanged = true;
      var _this$visibleMonth2 = this.visibleMonth,
          year = _this$visibleMonth2.year,
          monthNbr = _this$visibleMonth2.monthNbr,
          monthTxt = _this$visibleMonth2.monthTxt;
      /** @type {?} */

      var yc = cell.year !== year;
      this.visibleMonth = {
        monthTxt: monthTxt,
        monthNbr: monthNbr,
        year: cell.year
      };
      this.selectedMonth.year = cell.year;
      this.generateCalendar(monthNbr, cell.year, yc);
      this.selectYear = false;
      this.focusToSelector();
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onYearCellKeyDown",
    value: function onYearCellKeyDown(event) {
      // Move focus by arrow keys
      var _this$getSourceRowAnd2 = this.getSourceRowAndColumnFromEvent(event),
          sourceRow = _this$getSourceRowAnd2.sourceRow,
          sourceCol = _this$getSourceRowAnd2.sourceCol;

      var _this$getTargetFocusR2 = this.getTargetFocusRowAndColumn(event, sourceRow, sourceCol, YEAR_ROW_COUNT, YEAR_COL_COUNT),
          moveFocus = _this$getTargetFocusR2.moveFocus,
          targetRow = _this$getTargetFocusR2.targetRow,
          targetCol = _this$getTargetFocusR2.targetCol,
          direction = _this$getTargetFocusR2.direction;

      if (moveFocus) {
        this.focusCellElement(Y, targetRow, targetCol, direction, YEAR_COL_COUNT);
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "generateMonths",
    value: function generateMonths() {
      /** @type {?} */
      var today = this.utilService.getToday();
      this.months.length = 0;
      var _this$visibleMonth3 = this.visibleMonth,
          year = _this$visibleMonth3.year,
          monthNbr = _this$visibleMonth3.monthNbr;
      var _this$opts3 = this.opts,
          rtl = _this$opts3.rtl,
          monthLabels = _this$opts3.monthLabels;
      /** @type {?} */

      var row = 0;

      for (var i = 1; i <= 12; i += 3) {
        /** @type {?} */
        var rowData = [];
        /** @type {?} */

        var col = rtl ? 2 : 0;

        for (var j = i; j < i + 3; j++) {
          /** @type {?} */
          var disabled = this.utilService.isDisabledMonth(year, j, this.opts);
          rowData.push({
            nbr: j,
            name: monthLabels[j],
            currMonth: j === today.month && year === today.year,
            selected: j === monthNbr && year === this.selectedMonth.year,
            disabled: disabled,
            row: row,
            col: rtl ? col-- : col++
          });
        }

        row++;
        this.months.push(rowData);
      }

      this.setMonthViewHeaderBtnDisabledState(year);
    }
    /**
     * @param {?} inputYear
     * @return {?}
     */

  }, {
    key: "generateYears",
    value: function generateYears(inputYear) {
      var _this$opts4 = this.opts,
          minYear = _this$opts4.minYear,
          maxYear = _this$opts4.maxYear,
          rtl = _this$opts4.rtl;
      /** @type {?} */

      var y = inputYear - 12;

      if (inputYear < minYear) {
        y = minYear;
      }

      if (inputYear + 25 > maxYear) {
        y = maxYear - 24;
      }

      var year = this.visibleMonth.year;
      this.years.length = 0;
      /** @type {?} */

      var today = this.utilService.getToday();
      /** @type {?} */

      var row = 0;

      for (var i = y; i < y + 25; i += 5) {
        /** @type {?} */
        var rowData = [];
        /** @type {?} */

        var col = rtl ? 4 : 0;

        for (var j = i; j < i + 5; j++) {
          /** @type {?} */
          var disabled = this.utilService.isDisabledYear(j, this.opts);
          rowData.push({
            year: j,
            currYear: j === today.year,
            selected: j === year,
            disabled: disabled,
            row: row,
            col: rtl ? col-- : col++
          });
        }

        row++;
        this.years.push(rowData);
      }
      /** @type {?} */


      var beginYear = this.getYearValueByRowAndCol(0, 0);
      /** @type {?} */

      var endYear = beginYear + 24;
      this.yearsDuration = (!rtl ? beginYear : endYear) + YEAR_SEPARATOR + (!rtl ? endYear : beginYear);
      this.setYearViewHeaderBtnDisabledState(beginYear, endYear);
    }
    /**
     * @return {?}
     */

  }, {
    key: "onTodayFooterClicked",
    value: function onTodayFooterClicked() {
      /** @type {?} */
      var date = this.utilService.getToday();
      this.selectDate(date);
    }
    /**
     * @param {?} row
     * @param {?} col
     * @return {?}
     */

  }, {
    key: "getYearValueByRowAndCol",
    value: function getYearValueByRowAndCol(row, col) {
      var years = this.years;

      if (!years || years.length === 0) {
        var _this$utilService$get2 = this.utilService.getToday(),
            year = _this$utilService$get2.year;

        return year;
      }

      return years[row][col].year;
    }
    /**
     * @return {?}
     */

  }, {
    key: "setCalendarVisibleMonth",
    value: function setCalendarVisibleMonth() {
      // Sets visible month of calendar
      var _this$selectedMonth3 = this.selectedMonth,
          year = _this$selectedMonth3.year,
          monthNbr = _this$selectedMonth3.monthNbr;
      this.visibleMonth = {
        monthTxt: this.opts.monthLabels[monthNbr],
        monthNbr: monthNbr,
        year: year
      }; // Create current month

      this.generateCalendar(monthNbr, year, true);
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onViewActivated",
    value: function onViewActivated(event) {
      this.viewActivated(event);
    }
    /**
     * @return {?}
     */

  }, {
    key: "onPrevNavigateBtnClicked",
    value: function onPrevNavigateBtnClicked() {
      if (!this.selectMonth && !this.selectYear) {
        this.setDateViewMonth(false);
      } else if (this.selectMonth) {
        this.visibleMonth.year--;
        this.generateMonths();
      } else if (this.selectYear) {
        this.generateYears(this.getYearValueByRowAndCol(2, 2) - 25);
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "onNextNavigateBtnClicked",
    value: function onNextNavigateBtnClicked() {
      if (!this.selectMonth && !this.selectYear) {
        this.setDateViewMonth(true);
      } else if (this.selectMonth) {
        this.visibleMonth.year++;
        this.generateMonths();
      } else if (this.selectYear) {
        this.generateYears(this.getYearValueByRowAndCol(2, 2) + 25);
      }
    }
    /**
     * @param {?} isNext
     * @return {?}
     */

  }, {
    key: "setDateViewMonth",
    value: function setDateViewMonth(isNext) {
      /** @type {?} */
      var change = isNext ? 1 : -1;
      var _this$visibleMonth4 = this.visibleMonth,
          year = _this$visibleMonth4.year,
          monthNbr = _this$visibleMonth4.monthNbr;
      /** @type {?} */

      var d = this.utilService.getJsDate(year, monthNbr, 1);
      d.setMonth(d.getMonth() + change);
      /** @type {?} */

      var y = d.getFullYear();
      /** @type {?} */

      var m = d.getMonth() + 1;
      this.visibleMonth = {
        monthTxt: this.opts.monthLabels[m],
        monthNbr: m,
        year: y
      };
      this.generateCalendar(m, y, true);
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onCloseSelector",
    value: function onCloseSelector(event) {
      /** @type {?} */
      var keyCode = this.utilService.getKeyCodeFromEvent(event);

      if (keyCode === KeyCode.esc) {
        this.closedByEsc();
      }
    }
    /**
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onDayCellClicked",
    value: function onDayCellClicked(cell) {
      // Cell clicked on the calendar
      this.selectDate(cell.dateObj);
      this.resetMonthYearSelect();
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onDayCellKeyDown",
    value: function onDayCellKeyDown(event) {
      // Move focus by arrow keys
      var _this$getSourceRowAnd3 = this.getSourceRowAndColumnFromEvent(event),
          sourceRow = _this$getSourceRowAnd3.sourceRow,
          sourceCol = _this$getSourceRowAnd3.sourceCol;

      var _this$getTargetFocusR3 = this.getTargetFocusRowAndColumn(event, sourceRow, sourceCol, DATE_ROW_COUNT, DATE_COL_COUNT),
          moveFocus = _this$getTargetFocusR3.moveFocus,
          targetRow = _this$getTargetFocusR3.targetRow,
          targetCol = _this$getTargetFocusR3.targetCol,
          direction = _this$getTargetFocusR3.direction;

      if (moveFocus) {
        this.focusCellElement(D, targetRow, targetCol, direction, DATE_COL_COUNT);
      }
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "getSourceRowAndColumnFromEvent",
    value: function getSourceRowAndColumnFromEvent(event) {
      /** @type {?} */
      var sourceRow = 0;
      /** @type {?} */

      var sourceCol = 0;

      if (event.target && event.target.id) {
        // value of id is for example: m_0_1 (first number = row, second number = column)

        /** @type {?} */
        var arr = event.target.id.split(UNDER_LINE);
        sourceRow = Number(arr[1]);
        sourceCol = Number(arr[2]);
      }

      return {
        sourceRow: sourceRow,
        sourceCol: sourceCol
      };
    }
    /**
     * @param {?} event
     * @param {?} row
     * @param {?} col
     * @param {?} rowCount
     * @param {?} colCount
     * @return {?}
     */

  }, {
    key: "getTargetFocusRowAndColumn",
    value: function getTargetFocusRowAndColumn(event, row, col, rowCount, colCount) {
      /** @type {?} */
      var moveFocus = true;
      /** @type {?} */

      var targetRow = row;
      /** @type {?} */

      var targetCol = col;
      /** @type {?} */

      var direction = false;
      /** @type {?} */

      var keyCode = this.utilService.getKeyCodeFromEvent(event);

      if (keyCode === KeyCode.upArrow && row > 0) {
        targetRow--;
      } else if (keyCode === KeyCode.downArrow && row < rowCount) {
        targetRow++;
        direction = true;
      } else if (keyCode === KeyCode.leftArrow && col > 0) {
        targetCol--;
      } else if (keyCode === KeyCode.rightArrow && col < colCount) {
        targetCol++;
        direction = true;
      } else {
        moveFocus = false;
      }

      return {
        moveFocus: moveFocus,
        targetRow: targetRow,
        targetCol: targetCol,
        direction: direction
      };
    }
    /**
     * @param {?} type
     * @param {?} row
     * @param {?} col
     * @param {?} direction
     * @param {?} colCount
     * @return {?}
     */

  }, {
    key: "focusCellElement",
    value: function focusCellElement(type, row, col, direction, colCount) {
      /** @type {?} */
      var className = type + UNDER_LINE + row + UNDER_LINE + col;
      /** @type {?} */

      var elem = this.selectorEl.nativeElement.querySelector(DOT + className);

      if (elem.getAttribute(TABINDEX) !== ZERO_STR) {
        // if the selected element is disabled move a focus to next/previous enabled element

        /** @type {?} */
        var tdList = this.getCalendarElements();
        /** @type {?} */

        var idx = row * (colCount + 1) + col;
        /** @type {?} */

        var enabledElem = null;

        if (direction) {
          // find next enabled
          enabledElem = tdList.slice(idx).find(
          /**
          * @param {?} td
          * @return {?}
          */
          function (td) {
            return td.getAttribute(TABINDEX) === ZERO_STR;
          });
        } else {
          // find previous enabled
          enabledElem = tdList.slice(0, idx).reverse().find(
          /**
          * @param {?} td
          * @return {?}
          */
          function (td) {
            return td.getAttribute(TABINDEX) === ZERO_STR;
          });
        }

        elem = enabledElem ? enabledElem : this.selectorEl.nativeElement;
      } else {
        elem.focus();
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "focusToSelector",
    value: function focusToSelector() {
      this.selectorEl.nativeElement.focus();
    }
    /**
     * @return {?}
     */

  }, {
    key: "getCalendarElements",
    value: function getCalendarElements() {
      return Array.from(this.selectorEl.nativeElement.querySelectorAll(TD_SELECTOR));
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "selectDate",
    value: function selectDate(date) {
      var _this$opts5 = this.opts,
          dateRange = _this$opts5.dateRange,
          dateFormat = _this$opts5.dateFormat,
          monthLabels = _this$opts5.monthLabels,
          dateRangeDatesDelimiter = _this$opts5.dateRangeDatesDelimiter,
          closeSelectorOnDateSelect = _this$opts5.closeSelectorOnDateSelect;

      if (dateRange) {
        // Date range

        /** @type {?} */
        var isBeginDateInitialized = this.utilService.isInitializedDate(this.selectedDateRange.begin);
        /** @type {?} */

        var isEndDateInitialized = this.utilService.isInitializedDate(this.selectedDateRange.end);

        if (isBeginDateInitialized && isEndDateInitialized) {
          // both already selected - set begin date and reset end date
          this.selectedDateRange.begin = date;
          this.selectedDateRange.end = this.utilService.resetDate();
          this.rangeDateSelection({
            isBegin: true,
            date: date,
            jsDate: this.utilService.myDateToJsDate(date),
            dateFormat: dateFormat,
            formatted: this.utilService.formatDate(date, dateFormat, monthLabels),
            epoc: this.utilService.getEpocTime(date)
          });
        } else if (!isBeginDateInitialized) {
          // begin date
          this.selectedDateRange.begin = date;
          this.rangeDateSelection({
            isBegin: true,
            date: date,
            jsDate: this.utilService.myDateToJsDate(date),
            dateFormat: dateFormat,
            formatted: this.utilService.formatDate(date, dateFormat, monthLabels),
            epoc: this.utilService.getEpocTime(date)
          });
        } else {
          // second selection

          /** @type {?} */
          var firstDateEarlier = this.utilService.isDateEarlier(date, this.selectedDateRange.begin);

          if (firstDateEarlier) {
            this.selectedDateRange.begin = date;
            this.rangeDateSelection({
              isBegin: true,
              date: date,
              jsDate: this.utilService.myDateToJsDate(date),
              dateFormat: dateFormat,
              formatted: this.utilService.formatDate(date, dateFormat, monthLabels),
              epoc: this.utilService.getEpocTime(date)
            });
          } else {
            this.selectedDateRange.end = date;
            this.rangeDateSelection({
              isBegin: false,
              date: date,
              jsDate: this.utilService.myDateToJsDate(date),
              dateFormat: dateFormat,
              formatted: this.utilService.formatDate(date, dateFormat, monthLabels),
              epoc: this.utilService.getEpocTime(date)
            });
            this.dateChanged(this.utilService.getDateModel(null, this.selectedDateRange, dateFormat, monthLabels, dateRangeDatesDelimiter), closeSelectorOnDateSelect);
          }
        }
      } else {
        // Single date
        this.selectedDate = date;
        this.dateChanged(this.utilService.getDateModel(this.selectedDate, null, dateFormat, monthLabels, dateRangeDatesDelimiter), closeSelectorOnDateSelect);
      }
    }
    /**
     * @param {?} y
     * @param {?} m
     * @return {?}
     */

  }, {
    key: "monthStartIdx",
    value: function monthStartIdx(y, m) {
      // Month start index

      /** @type {?} */
      var d = new Date();
      d.setDate(1);
      d.setMonth(m - 1);
      d.setFullYear(y);
      /** @type {?} */

      var idx = d.getDay() + this.sundayIdx();
      return idx >= 7 ? idx - 7 : idx;
    }
    /**
     * @param {?} d
     * @param {?} m
     * @param {?} y
     * @param {?} today
     * @return {?}
     */

  }, {
    key: "isCurrDay",
    value: function isCurrDay(d, m, y, today) {
      // Check is a given date the today
      return d === today.day && m === today.month && y === today.year;
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "getDayNumber",
    value: function getDayNumber(date) {
      // Get day number: su=0, mo=1, tu=2, we=3 ...
      var year = date.year,
          month = date.month,
          day = date.day;
      /** @type {?} */

      var d = this.utilService.getJsDate(year, month, day);
      return d.getDay();
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "getWeekday",
    value: function getWeekday(date) {
      // Get weekday: su, mo, tu, we ...
      return this.weekDayOpts[this.getDayNumber(date)];
    }
    /**
     * @return {?}
     */

  }, {
    key: "sundayIdx",
    value: function sundayIdx() {
      // Index of Sunday day
      return this.dayIdx > 0 ? 7 - this.dayIdx : 0;
    }
    /**
     * @param {?} m
     * @param {?} y
     * @param {?} notifyChange
     * @return {?}
     */

  }, {
    key: "generateCalendar",
    value: function generateCalendar(m, y, notifyChange) {
      this.dates.length = 0;
      /** @type {?} */

      var today = this.utilService.getToday();
      /** @type {?} */

      var monthStart = this.monthStartIdx(y, m);
      /** @type {?} */

      var dInThisM = this.utilService.datesInMonth(m, y);
      /** @type {?} */

      var dInPrevM = this.utilService.datesInPrevMonth(m, y);
      /** @type {?} */

      var dayNbr = 1;
      /** @type {?} */

      var month = m;
      /** @type {?} */

      var cmo = MonthId.prev;
      var _this$opts6 = this.opts,
          rtl = _this$opts6.rtl,
          showWeekNumbers = _this$opts6.showWeekNumbers,
          firstDayOfWeek = _this$opts6.firstDayOfWeek;

      for (var i = 1; i < 7; i++) {
        /** @type {?} */
        var col = rtl ? 6 : 0;
        /** @type {?} */

        var week = [];

        if (i === 1) {
          // First week

          /** @type {?} */
          var pm = dInPrevM - monthStart + 1; // Previous month

          for (var j = pm; j <= dInPrevM; j++) {
            /** @type {?} */
            var date = {
              year: m === 1 ? y - 1 : y,
              month: m === 1 ? 12 : m - 1,
              day: j
            };
            week.push({
              dateObj: date,
              cmo: cmo,
              currDay: this.isCurrDay(j, month - 1, y, today),
              disabledDate: this.utilService.isDisabledDate(date, this.opts),
              markedDate: this.utilService.isMarkedDate(date, this.opts),
              highlight: this.utilService.isHighlightedDate(date, this.opts),
              row: i - 1,
              col: rtl ? col-- : col++
            });
          }

          cmo = MonthId.curr; // Current month

          /** @type {?} */

          var daysLeft = 7 - week.length;

          for (var _j = 0; _j < daysLeft; _j++) {
            /** @type {?} */
            var _date = {
              year: y,
              month: m,
              day: dayNbr
            };
            week.push({
              dateObj: _date,
              cmo: cmo,
              currDay: this.isCurrDay(dayNbr, m, y, today),
              disabledDate: this.utilService.isDisabledDate(_date, this.opts),
              markedDate: this.utilService.isMarkedDate(_date, this.opts),
              highlight: this.utilService.isHighlightedDate(_date, this.opts),
              row: i - 1,
              col: rtl ? col-- : col++
            });
            dayNbr++;
          }
        } else {
          // Rest of the weeks
          for (var _j2 = 1; _j2 < 8; _j2++) {
            if (dayNbr > dInThisM) {
              // Next month
              dayNbr = 1;
              cmo = MonthId.next;
              month = m + 1;
            }
            /** @type {?} */


            var _date2 = {
              year: cmo === MonthId.next && m === 12 ? y + 1 : y,
              month: cmo === MonthId.curr ? m : cmo === MonthId.next && m < 12 ? m + 1 : 1,
              day: dayNbr
            };
            week.push({
              dateObj: _date2,
              cmo: cmo,
              currDay: this.isCurrDay(dayNbr, month, y, today),
              disabledDate: this.utilService.isDisabledDate(_date2, this.opts),
              markedDate: this.utilService.isMarkedDate(_date2, this.opts),
              highlight: this.utilService.isHighlightedDate(_date2, this.opts),
              row: i - 1,
              col: rtl ? col-- : col++
            });
            dayNbr++;
          }
        }
        /** @type {?} */


        var weekNbr = showWeekNumbers && firstDayOfWeek === MO ? this.utilService.getWeekNumber(week[0].dateObj) : 0;
        this.dates.push({
          week: week,
          weekNbr: weekNbr
        });
      }

      this.setDateViewHeaderBtnDisabledState(m, y);

      if (notifyChange) {
        // Notify parent
        this.calendarViewChanged({
          year: y,
          month: m,
          first: {
            number: 1,
            weekday: this.getWeekday({
              year: y,
              month: m,
              day: 1
            })
          },
          last: {
            number: dInThisM,
            weekday: this.getWeekday({
              year: y,
              month: m,
              day: dInThisM
            })
          }
        });
      }
    }
    /**
     * @param {?} m
     * @param {?} y
     * @return {?}
     */

  }, {
    key: "setDateViewHeaderBtnDisabledState",
    value: function setDateViewHeaderBtnDisabledState(m, y) {
      /** @type {?} */
      var dpm = false;
      /** @type {?} */

      var dnm = false;
      var _this$opts7 = this.opts,
          disableHeaderButtons = _this$opts7.disableHeaderButtons,
          disableUntil = _this$opts7.disableUntil,
          disableSince = _this$opts7.disableSince,
          enableDates = _this$opts7.enableDates,
          minYear = _this$opts7.minYear,
          maxYear = _this$opts7.maxYear,
          rtl = _this$opts7.rtl;

      if (disableHeaderButtons) {
        /** @type {?} */
        var duDate = {
          year: m === 1 ? y - 1 : y,
          month: m === 1 ? 12 : m - 1,
          day: this.utilService.datesInMonth(m === 1 ? 12 : m - 1, m === 1 ? y - 1 : y)
        };
        /** @type {?} */

        var dsDate = {
          year: m === 12 ? y + 1 : y,
          month: m === 12 ? 1 : m + 1,
          day: 1
        };
        dpm = this.utilService.isDisabledByDisableUntil(duDate, disableUntil) && !this.utilService.isPastDatesEnabled(duDate, enableDates);
        dnm = this.utilService.isDisabledByDisableSince(dsDate, disableSince) && !this.utilService.isFutureDatesEnabled(dsDate, enableDates);
      }

      this.prevViewDisabled = m === 1 && y === minYear || dpm;
      this.nextViewDisabled = m === 12 && y === maxYear || dnm;

      if (rtl) {
        this.swapHeaderBtnDisabled();
      }
    }
    /**
     * @param {?} y
     * @return {?}
     */

  }, {
    key: "setMonthViewHeaderBtnDisabledState",
    value: function setMonthViewHeaderBtnDisabledState(y) {
      /** @type {?} */
      var dpm = false;
      /** @type {?} */

      var dnm = false;
      var _this$opts8 = this.opts,
          disableHeaderButtons = _this$opts8.disableHeaderButtons,
          disableUntil = _this$opts8.disableUntil,
          disableSince = _this$opts8.disableSince,
          enableDates = _this$opts8.enableDates,
          minYear = _this$opts8.minYear,
          maxYear = _this$opts8.maxYear,
          rtl = _this$opts8.rtl;

      if (disableHeaderButtons) {
        /** @type {?} */
        var duDate = {
          year: y - 1,
          month: 12,
          day: 31
        };
        /** @type {?} */

        var dsDate = {
          year: y + 1,
          month: 1,
          day: 1
        };
        dpm = this.utilService.isDisabledByDisableUntil(duDate, disableUntil) && !this.utilService.isPastDatesEnabled(duDate, enableDates);
        dnm = this.utilService.isDisabledByDisableSince(dsDate, disableSince) && !this.utilService.isFutureDatesEnabled(dsDate, enableDates);
      }

      this.prevViewDisabled = y === minYear || dpm;
      this.nextViewDisabled = y === maxYear || dnm;

      if (rtl) {
        this.swapHeaderBtnDisabled();
      }
    }
    /**
     * @param {?} yp
     * @param {?} yn
     * @return {?}
     */

  }, {
    key: "setYearViewHeaderBtnDisabledState",
    value: function setYearViewHeaderBtnDisabledState(yp, yn) {
      /** @type {?} */
      var dpy = false;
      /** @type {?} */

      var dny = false;
      var _this$opts9 = this.opts,
          disableHeaderButtons = _this$opts9.disableHeaderButtons,
          disableUntil = _this$opts9.disableUntil,
          disableSince = _this$opts9.disableSince,
          enableDates = _this$opts9.enableDates,
          minYear = _this$opts9.minYear,
          maxYear = _this$opts9.maxYear,
          rtl = _this$opts9.rtl;

      if (disableHeaderButtons) {
        /** @type {?} */
        var duDate = {
          year: yp - 1,
          month: 12,
          day: 31
        };
        /** @type {?} */

        var dsDate = {
          year: yn + 1,
          month: 1,
          day: 1
        };
        dpy = this.utilService.isDisabledByDisableUntil(duDate, disableUntil) && !this.utilService.isPastDatesEnabled(duDate, enableDates);
        dny = this.utilService.isDisabledByDisableSince(dsDate, disableSince) && !this.utilService.isFutureDatesEnabled(dsDate, enableDates);
      }

      this.prevViewDisabled = yp <= minYear || dpy;
      this.nextViewDisabled = yn >= maxYear || dny;

      if (rtl) {
        this.swapHeaderBtnDisabled();
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "swapHeaderBtnDisabled",
    value: function swapHeaderBtnDisabled() {
      var _ref = [this.nextViewDisabled, this.prevViewDisabled];
      this.prevViewDisabled = _ref[0];
      this.nextViewDisabled = _ref[1];
    }
  }]);

  return CalendarComponent;
}();

CalendarComponent.ɵfac = function CalendarComponent_Factory(t) {
  return new (t || CalendarComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](UtilService));
};

CalendarComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: CalendarComponent,
  selectors: [["lib-angular-mydatepicker-calendar"]],
  viewQuery: function CalendarComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c1, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.selectorEl = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.styleEl = _t.first);
    }
  },
  hostVars: 2,
  hostBindings: function CalendarComponent_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵstyleProp"]("position", ctx.position);
    }
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([UtilService])],
  decls: 10,
  vars: 27,
  consts: [["styleEl", ""], ["tabindex", "0", 1, "myDpSelector", 3, "libAngularMyDatePickerCalendar", "ngClass", "keyup"], ["selectorEl", ""], [3, "opts", "yearsDuration", "visibleMonth", "selectMonth", "selectYear", "prevViewDisabled", "nextViewDisabled", "prevNavigateBtnClicked", "nextNavigateBtnClicked", "monthViewBtnClicked", "yearViewBtnClicked"], [3, "opts", "dates", "weekDays", "selectedDate", "selectedDateRange", "viewChanged", "dayCellClicked", "dayCellKeyDown", "viewActivated", 4, "ngIf"], [3, "opts", "months", "viewChanged", "monthCellClicked", "monthCellKeyDown", "viewActivated", 4, "ngIf"], [3, "opts", "years", "viewChanged", "yearCellClicked", "yearCellKeyDown", "viewActivated", 4, "ngIf"], [3, "opts", "footerBarTxtClicked", 4, "ngIf"], [3, "opts", "dates", "weekDays", "selectedDate", "selectedDateRange", "viewChanged", "dayCellClicked", "dayCellKeyDown", "viewActivated"], [3, "opts", "months", "viewChanged", "monthCellClicked", "monthCellKeyDown", "viewActivated"], [3, "opts", "years", "viewChanged", "yearCellClicked", "yearCellKeyDown", "viewActivated"], [3, "opts", "footerBarTxtClicked"]],
  template: function CalendarComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "span", null, 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("keyup", function CalendarComponent_Template_div_keyup_3_listener($event) {
        return ctx.onCloseSelector($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "lib-selection-bar", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("prevNavigateBtnClicked", function CalendarComponent_Template_lib_selection_bar_prevNavigateBtnClicked_5_listener() {
        return ctx.onPrevNavigateBtnClicked();
      })("nextNavigateBtnClicked", function CalendarComponent_Template_lib_selection_bar_nextNavigateBtnClicked_5_listener() {
        return ctx.onNextNavigateBtnClicked();
      })("monthViewBtnClicked", function CalendarComponent_Template_lib_selection_bar_monthViewBtnClicked_5_listener() {
        return ctx.onMonthViewBtnClicked();
      })("yearViewBtnClicked", function CalendarComponent_Template_lib_selection_bar_yearViewBtnClicked_5_listener() {
        return ctx.onYearViewBtnClicked();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](6, CalendarComponent_lib_day_view_6_Template, 1, 6, "lib-day-view", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](7, CalendarComponent_lib_month_view_7_Template, 1, 3, "lib-month-view", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](8, CalendarComponent_lib_year_view_8_Template, 1, 3, "lib-year-view", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](9, CalendarComponent_lib_footer_bar_9_Template, 1, 1, "lib-footer-bar", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵclassMapInterpolate1"]("ng-mydp ", (ctx.opts.stylesData == null ? null : ctx.opts.stylesData.selector) || "", "");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("libAngularMyDatePickerCalendar", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction4"](16, _c2, ctx.opts.inline, ctx.opts.selectorWidth, ctx.opts.selectorHeight, ctx.selectorPos))("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction5"](21, _c3, ctx.opts.showSelectorArrow, ctx.opts.showSelectorArrow && !ctx.opts.alignSelectorRight, ctx.opts.showSelectorArrow && ctx.opts.alignSelectorRight, !ctx.opts.inline, ctx.opts.inline));
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("opts", ctx.opts)("yearsDuration", ctx.yearsDuration)("visibleMonth", ctx.visibleMonth)("selectMonth", ctx.selectMonth)("selectYear", ctx.selectYear)("prevViewDisabled", ctx.prevViewDisabled)("nextViewDisabled", ctx.nextViewDisabled);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !ctx.selectMonth && !ctx.selectYear);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.selectMonth);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.selectYear);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.opts.showFooterToday);
    }
  },
  directives: function directives() {
    return [AngularMyDatePickerCalendarDirective, _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgClass"], SelectionBarComponent, _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgIf"], DayViewComponent, MonthViewComponent, YearViewComponent, FooterBarComponent];
  },
  styles: [".ng-mydp{position:static}.ng-myrtl{direction:rtl}.ng-mydp *{box-sizing:border-box;font-family:Arial,Helvetica,sans-serif;padding:0;margin:0}.ng-mydp table{display:table;border-spacing:0}.ng-mydp table td,.ng-mydp table th{padding:0;margin:0;vertical-align:middle;border:none}.myDpSelector{padding:4px;border:1px solid #ccc;background-color:#fff;border-radius:4px;z-index:100000}.myDpViewChangeAnimation{-webkit-animation:.2s linear myDpViewChangeAnimation;animation:.2s linear myDpViewChangeAnimation}@-webkit-keyframes myDpViewChangeAnimation{0%{transform:scale(.75);opacity:.1}100%{transform:scale(1);opacity:1}}@keyframes myDpViewChangeAnimation{0%{transform:scale(.75);opacity:.1}100%{transform:scale(1);opacity:1}}.myDpAnimationFadeIn{-webkit-animation:.5s linear myDpAnimationFadeIn;animation:.5s linear myDpAnimationFadeIn}@-webkit-keyframes myDpAnimationFadeIn{0%{transform:translateY(-50px);opacity:0}100%{transform:translateY(0);opacity:1}}@keyframes myDpAnimationFadeIn{0%{transform:translateY(-50px);opacity:0}100%{transform:translateY(0);opacity:1}}.myDpAnimationFadeOut{-webkit-animation:.3s linear forwards myDpAnimationFadeOut;animation:.3s linear forwards myDpAnimationFadeOut}@-webkit-keyframes myDpAnimationFadeOut{0%{transform:translateY(0);opacity:1}100%{transform:translateY(-50px);opacity:0}}@keyframes myDpAnimationFadeOut{0%{transform:translateY(0);opacity:1}100%{transform:translateY(-50px);opacity:0}}.myDpAnimationScaleTopIn{-webkit-animation:.3s linear myDpAnimationScaleTopIn;animation:.3s linear myDpAnimationScaleTopIn}@-webkit-keyframes myDpAnimationScaleTopIn{0%{transform:scaleY(0);transform-origin:100% 0}100%{transform:scaleY(1);transform-origin:100% 0}}@keyframes myDpAnimationScaleTopIn{0%{transform:scaleY(0);transform-origin:100% 0}100%{transform:scaleY(1);transform-origin:100% 0}}.myDpAnimationScaleTopOut{-webkit-animation:.3s linear forwards myDpAnimationScaleTopOut;animation:.3s linear forwards myDpAnimationScaleTopOut}@-webkit-keyframes myDpAnimationScaleTopOut{0%{transform:scaleY(1);transform-origin:100% 0;opacity:1}100%{transform:scaleY(0);transform-origin:100% 0;opacity:0}}@keyframes myDpAnimationScaleTopOut{0%{transform:scaleY(1);transform-origin:100% 0;opacity:1}100%{transform:scaleY(0);transform-origin:100% 0;opacity:0}}.myDpAnimationScaleCenterIn{-webkit-animation:.3s linear myDpAnimationScaleCenterIn;animation:.3s linear myDpAnimationScaleCenterIn}@-webkit-keyframes myDpAnimationScaleCenterIn{0%{transform:scale(0)}100%{transform:scale(1)}}@keyframes myDpAnimationScaleCenterIn{0%{transform:scale(0)}100%{transform:scale(1)}}.myDpAnimationScaleCenterOut{-webkit-animation:.3s linear forwards myDpAnimationScaleCenterOut;animation:.3s linear forwards myDpAnimationScaleCenterOut}@-webkit-keyframes myDpAnimationScaleCenterOut{0%{transform:scale(1);opacity:1}100%{transform:scale(0);opacity:0}}@keyframes myDpAnimationScaleCenterOut{0%{transform:scale(1);opacity:1}100%{transform:scale(0);opacity:0}}.myDpAnimationRotateIn{-webkit-animation:.3s linear myDpAnimationRotateIn;animation:.3s linear myDpAnimationRotateIn}@-webkit-keyframes myDpAnimationRotateIn{0%{transform:scale(.3) rotate(-45deg);opacity:0}100%{transform:scale(1) rotate(0);opacity:1}}@keyframes myDpAnimationRotateIn{0%{transform:scale(.3) rotate(-45deg);opacity:0}100%{transform:scale(1) rotate(0);opacity:1}}.myDpAnimationRotateOut{-webkit-animation:.3s linear forwards myDpAnimationRotateOut;animation:.3s linear forwards myDpAnimationRotateOut}@-webkit-keyframes myDpAnimationRotateOut{0%{transform:scale(1) rotate(0);opacity:1}100%{transform:scale(.3) rotate(-45deg);opacity:0}}@keyframes myDpAnimationRotateOut{0%{transform:scale(1) rotate(0);opacity:1}100%{transform:scale(.3) rotate(-45deg);opacity:0}}.myDpAnimationFlipDiagonalIn{-webkit-animation:.3s linear myDpAnimationFlipDiagonalIn;animation:.3s linear myDpAnimationFlipDiagonalIn}@-webkit-keyframes myDpAnimationFlipDiagonalIn{0%{transform:rotate3d(1,1,0,-78deg)}100%{transform:rotate3d(1,1,0,0deg)}}@keyframes myDpAnimationFlipDiagonalIn{0%{transform:rotate3d(1,1,0,-78deg)}100%{transform:rotate3d(1,1,0,0deg)}}.myDpAnimationFlipDiagonalOut{-webkit-animation:.3s linear forwards myDpAnimationFlipDiagonalOut;animation:.3s linear forwards myDpAnimationFlipDiagonalOut}@-webkit-keyframes myDpAnimationFlipDiagonalOut{0%{transform:rotate3d(1,1,0,0deg);opacity:1}100%{transform:rotate3d(1,1,0,78deg);opacity:0}}@keyframes myDpAnimationFlipDiagonalOut{0%{transform:rotate3d(1,1,0,0deg);opacity:1}100%{transform:rotate3d(1,1,0,78deg);opacity:0}}.myDpSelectorAbsolute{position:absolute}.myDpSelectorPosInitial{position:initial}.myDpSelector:focus{box-shadow:-1px 1px 6px 0 #add8e6;outline:0}.myDpSelectorArrow{background:#fff}.myDpSelectorArrow:after,.myDpSelectorArrow:before{bottom:100%;border:solid transparent;content:\" \";height:0;width:0;position:absolute}.myDpSelectorArrow:after{border-color:rgba(250,250,250,0);border-bottom-color:#fafafa;border-width:10px;margin-left:-10px}.myDpSelectorArrow:before{border-color:rgba(204,204,204,0);border-bottom-color:#ccc;border-width:11px;margin-left:-11px}.myDpSelectorArrow:focus:before{border-bottom-color:#add8e6}.myDpSelectorArrowLeft:after,.myDpSelectorArrowLeft:before{left:24px}.myDpSelectorArrowRight:after,.myDpSelectorArrowRight:before{left:86%}::-ms-clear{display:none}.myDpCalTable,.myDpFooterBar,.myDpMonthTable,.myDpYearTable{border-radius:0 0 4px 4px}.myDpCalTable.myDpNoFooter tbody tr:nth-child(6) td:first-child,.myDpMonthTable.myDpNoFooter tbody tr:nth-child(4) td:first-child,.myDpYearTable.myDpNoFooter tbody tr:nth-child(5) td:first-child{border-bottom-left-radius:4px}.myDpCalTable.myDpNoFooter tbody tr:nth-child(6) td:last-child,.myDpMonthTable.myDpNoFooter tbody tr:nth-child(4) td:last-child,.myDpYearTable.myDpNoFooter tbody tr:nth-child(5) td:last-child{border-bottom-right-radius:4px}.myDpCalTable,.myDpMonthTable,.myDpYearTable{table-layout:fixed;width:100%;background-color:#fff;font-size:14px}.myDpFooter{height:calc(100% - 60px)}.myDpNoFooter{height:calc(100% - 30px)}.myDpCalTable,.myDpDaycell,.myDpMonthTable,.myDpMonthcell,.myDpWeekDayTitle,.myDpYearTable,.myDpYearcell{border-collapse:collapse;color:#333;line-height:1.1}.myDpDaycell,.myDpMonthcell,.myDpYearcell{padding:4px;text-align:center;outline:0}.myDpDaycell{background-color:#fff;position:relative}.myDpWeekDayTitle{background-color:transparent;color:#333;font-size:13px;font-weight:400;vertical-align:middle;max-width:36px;overflow:hidden;white-space:nowrap;height:23px;text-align:center}.myDpWeekDayTitleWeekNbr{width:20px}.myDpMonthcell{background-color:#fff;overflow:hidden;white-space:nowrap}.myDpYearcell{background-color:#fff;width:20%}.myDpMonthNbr{font-size:10px;display:block}.myDpDaycellWeekNbr{font-size:9px;cursor:default;text-align:center;color:#333}.myDpNextMonth,.myDpPrevMonth{color:#999}.myDpMonthYearSelBar{display:flex;height:30px;background-color:#fff;border-top-left-radius:4px;border-top-right-radius:4px}.myDpPrevBtn{margin-left:10px}.myDpNextBtn{margin-left:auto;margin-right:10px}.myDpMonthYearText{width:100%;line-height:30px;text-align:center}.myDpFooterBar{display:flex;align-items:center;justify-content:center;height:30px;background-color:#fff}.myDpHeaderBtn{background:0 0;padding:0;border:none;line-height:30px;height:28px;margin-top:1px;color:#000;outline:0;cursor:default}.myDpFooterBtn{margin:0 10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.myDpMonthBtn,.myDpYearBtn{font-size:16px}.myDpMonthBtn{margin-right:6px}.myDpHighlight{color:#c30000}.myDpDimDay{opacity:.5}.myDpCurrMonth{background-color:#fff;font-weight:400}.myDpMarkDate{position:absolute;top:2px;left:2px;border-right:8px solid transparent}.myDpMarkCurrDay,.myDpMarkCurrMonth,.myDpMarkCurrYear{border-bottom:2px solid #333}.myDpHeaderLabelBtnNotEdit{cursor:default}.myDpHeaderBtn::-moz-focus-inner,.myDpNextBtn::-moz-focus-inner,.myDpPrevBtn::-moz-focus-inner{border:0}.myDpFooterBtn:focus,.myDpHeaderBtn:focus,.myDpMonthLabel:focus,.myDpYearLabel:focus{color:#66afe9;outline:0}.myDpDaycell:focus,.myDpMonthcell:focus,.myDpYearcell:focus{box-shadow:inset 0 0 0 1px #66afe9}.myDpTableSingleDay:hover,.myDpTableSingleMonth:hover,.myDpTableSingleYear:hover{background-color:#ddd}.myDpDaycell,.myDpMonthLabel,.myDpMonthcell,.myDpYearLabel,.myDpYearcell{cursor:pointer}.myDpFooterBtn:hover,.myDpHeaderBtnEnabled:hover,.myDpMonthLabel:hover,.myDpYearLabel:hover{color:#777}.myDpHeaderBtnEnabled{cursor:pointer}.myDpHeaderBtnDisabled{cursor:not-allowed;opacity:.65}.myDpDisabled{cursor:default;color:#777;background:repeating-linear-gradient(-45deg,#ccc 7px,#ccc 8px,transparent 7px,transparent 14px)}.myDpRangeColor{background-color:#dbeaff}.myDpSelectedDay,.myDpSelectedMonth,.myDpSelectedYear{border:none;background-color:#8ebfff}@font-face{font-family:angular-mydatepicker;src:url(data:application/octet-stream;base64,d09GRgABAAAAAAs4AA8AAAAAE+gAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABWAAAADsAAABUIIslek9TLzIAAAGUAAAAQwAAAFY+IEi5Y21hcAAAAdgAAABQAAABfohD7KljdnQgAAACKAAAABMAAAAgBtX/BGZwZ20AAAI8AAAFkAAAC3CKkZBZZ2FzcAAAB8wAAAAIAAAACAAAABBnbHlmAAAH1AAAAL8AAAEAS//bfWhlYWQAAAiUAAAAMQAAADYW6nhraGhlYQAACMgAAAAbAAAAJAc8A1ZobXR4AAAI5AAAAAwAAAAMCXwAAGxvY2EAAAjwAAAACAAAAAgAQACAbWF4cAAACPgAAAAgAAAAIACmC5tuYW1lAAAJGAAAAXcAAALNzJ0fIXBvc3QAAAqQAAAAKwAAAEAj+eC8cHJlcAAACrwAAAB6AAAAhuVBK7x4nGNgZGBg4GIwYLBjYHJx8wlh4MtJLMljkGJgYYAAkDwymzEnMz2RgQPGA8qxgGkOIGaDiAIAJjsFSAB4nGNgZNZknMDAysDAVMW0h4GBoQdCMz5gMGRkAooysDIzYAUBaa4pDA4vGF4wMgf9z2KIYg5imAYUZgTJAQDMhAtXAHic7ZCxDYAwDATPiaFAjEFBwTBU7F+yRfK2GYOX7qR/uTKwAF1cwsEejMit1XLvbLk7R9547K+NIRNW93STVv7s6fNrLf5U1OcK2gTMuAtdeJxjYEADEhDIHPQ/C4QBEmwD3QB4nK1WaXfTRhQdeUmchCwlCy1qYcTEabBGJmzBgAlBsmMgXZytlaCLFDvpvvGJ3+Bf82Tac+g3flrvGy8kkLTncJqTo3fnzdXM22USWpLYC+uRlJsvxdTWJo3sPAnphk3LUXwoO3shZYrJ3wVREK2W2rcdh0REIlC1rrBEEPseWZpkfOhRRsu2pFdNyi096S5b40G9Vd9+GjrKsTuhpGYzdGg9siVVGFWiSKY9UtKmZaj6K0krvL/CzFfNUMKITiJpvBnG0EjeG2e0ymg1tuMoimyy3ChSJJrhQRR5lNUS5+SKCQzKB82Q8sqnEeXD/Iis2KOcVrBLttP8vi95p3c5P7Ffb1G25EAfyI7s4Ox0JV+EW1th3LST7ShUEXbXd0Js2exU/2aP8ppGA7crMr3QjGCpfIUQKz+hzP4hWS2cT/mSR6NaspETQetlTuxLPoHW44gpcc0YWdDd0QkR1P2SMwz2mD4e/PHeKZYLEwJ4HMt6RyWcCBMpYXM0SdowcmAlZYsqqfWumDjldVrEW8J+7drRl85o41B3YjxbDx1bOVHJ8WhSp5lMndpJzaMpDaKUdCZ4zK8DKD+iSV5tYzWJlUfTOGbGhEQiAi3cS1NBLDuxpCkEzaMZvbkbprl2LVqkyQP13KP39OZWuLnTU9oO9LNGf1anYjrYC9PpaeQv8Wna5SJF6frpGX5M4kHWAjKRLTbDlIMHb/0O0svXlhyF1wbY7u3zK6h91kTwpAH7G9AeT9UpCUyFmFWIVkBirWtZlsnVrBapyNR3Q5pWvqzTBIpyHBfHvoxx/V8zM5aYEr7fidOzIy49c+1LCNMcfJt1PZrXqcVyAXFmeU6nWZbv6zTH8gOd5lme1+kIS1unoyw/1GmB5Uc6HWN5QQuadN/BkIsw5AIOkDCEpQNDWF6CISwVDGG5CENYFmEIyyUYwvJjGMJyGYawvKxl1dRTSePamVgGbEJgYo4eucxF5WoquVRCu2hUakOeEm6VVBTPqn9loF488oY5sBZIl8iaXzHOlY9G5fjWFS1vGjtXwLHqbx+O9jnxUtaLhT8F/9XWVCW9Ys3Dk6vwG4aebCeqNql4dE2Xz1U9uv5fVFRYC/QbSIVYKMqybHBnIoSPOp2GaqCVQ8xszDy063XLmp/D/TcxQhZQ/fg3FBoL3INOWUlZ7eCs1dfbstw7g3I4EyxJMTfz+lb4IiOz0n6RWcqej3wecAWMSmXYagOtFbzZJzEPmd4kzwRxW1E2SNrYzgSJDRzzgHnznQQmYeqqDeRO4YYN+AVhbsF5J1yieqMsh+5F7PMopPxbp+JE9qhojMCz2Rthr+9Cym9xDCQ0+aV+DFQVoakYNRXQNFJuqAZfxtm6bULGDvQjKnbDsqziw8cW95WSbRmEfKSI1aOjn9Zeok6q3H5mFJfvnb4FwSA1MX9733RxkMq7WskyR20DU7calVPXmkPjVYfq5lH1vePsEzlrmm66Jx56X9Oq28HFXCyw9m0O0lImF9T1YYUNosvFpVDqZTRJ77gHGBYY0O9Qio3/q/rYfJ4rVYXRcSTfTtS30edgDPwP2H9H9QPQ92Pocg0uz/eaE59u9OFsma6iF+un6Dcwa625WboG3NB0A+IhR62OuMoNfKcGcXqkuRzpIeBj3RXiAcAmgMXgE921jOZTAKP5jDk+wOfMYdBkDoMt5jDYZs4awA5zGOwyh8Eecxh8wZx1gC+ZwyBkDoOIOQyeMCcAeMocBl8xh8HXzGHwDXPuA3zLHAYxcxgkzGGwr+nWMMwtXtBdoLZBVaADU09Y3MPiUFNlyP6OF4b9vUHM/sEgpv6o6faQ+hMvDPVng5j6i0FM/VXTnSH1N14Y6u8GMfUPg5j6TL8Yy2UGv4x8lwoHlF1sPufvifcP28VAuQABAAH//wAPeJxjYGRg+H+AaQazC4MIg+5WRkYGRkZ37w0qAREO3AwMjAwFQD4Po6e0AyeQw5jPwMCQFrlFXJyJVUybk0lMhJ+RTUmdUc3EnNHMSJ5RTISp7991Rk0urlhuGe5/SdzcjPO45LhiuZhW/bvx7zqYycU4H0gzzuPmjuWSYwBZAbK/BGo/J1H2ywiB7QfarQ+ymxNI2AMdIA5yQBbQWhnuWKDVGv9ugC0BWsbFmPkvEeIqRk1GDYgCkEIGAB9cLoQAeJxjYGRgYABic9F3f+P5bb4ycDO/AIow3Pw4yxFB/z/A/ILZBcjlYGACiQIAcjgNFAAAAHicY2BkYGAO+p8FJF8wMIBJRgZUwAwAXPcDmgAD6AAAAsoAAALKAAAAAAAAAEAAgAABAAAAAwAVAAEAAAAAAAIABAAUAHMAAAAqC3AAAAAAeJx1kMtOwkAUhv+RiwqJGk3cOisDMZZL4gISEhIMbHRDDFtTSmlLSodMBxJew3fwYXwJn8WfdjAGYpvpfOebM2dOB8A1viGQP08cOQucMcr5BKfoWS7QP1sukl8sl1DFm+Uy/bvlCh4QWK7iBh+sIIrnjBb4tCxwJS4tn+BC3Fku0D9aLpJ7lku4Fa+Wy/Se5QomIrVcxb34GqjVVkdBaGRtUJftZqsjp1upqKLEjaW7NqHSqezLuUqMH8fK8dRyz2M/WMeu3of7eeLrNFKJbDnNvRr5ia9d48921dNN0DZmLudaLeXQZsiVVgvfM05ozKrbaPw9DwMorLCFRsSrCmEgUaOtc26jiRY6pCkzJDPzrAgJXMQ0LtbcEWYrKeM+x5xRQuszIyY78PhdHvkxKeD+mFX00ephPCHtzogyL9mXw+4Os0akJMt0Mzv77T3Fhqe1aQ137brUWVcSw4MakvexW1vQePROdiuGtosG33/+7wfseIRVAHicY2BigAAuBuyAmZGJkZmRhYEzJzWtRDe/IDWPqygzPQPCZGAAAGN+B7YAeJxj8N7BcCIoYiMjY1/kBsadHAwcDMkFGxlYnTYxMDJogRibuZgYOSAsPgYwi81pF9MBoDQnkM3utIvBAcJmZnDZqMLYERixwaEjYiNzistGNRBvF0cDAyOLQ0dySARISSQQbOZhYuTR2sH4v3UDS+9GJgYXAAx2I/QAAA==) format('woff');font-weight:400;font-style:normal}.myDpIcon{font-family:angular-mydatepicker;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#222;font-size:20px}.myDpIconLeftArrow:before{content:\"\\e800\"}.myDpIconRightArrow:before{content:\"\\e801\"}"],
  encapsulation: 2
});
/** @nocollapse */

CalendarComponent.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
  }, {
    type: UtilService
  }];
};

CalendarComponent.propDecorators = {
  selectorEl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
    args: ["selectorEl"]
  }],
  styleEl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
    args: ["styleEl"]
  }],
  position: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["HostBinding"],
    args: ["style.position"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](CalendarComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: "lib-angular-mydatepicker-calendar",
      template: "<span #styleEl></span>\n<div class=\"ng-mydp {{opts.stylesData?.selector || ''}}\">\n  <div class=\"myDpSelector\" #selectorEl \n    [libAngularMyDatePickerCalendar]=\"{inline: opts.inline, selectorWidth: opts.selectorWidth, selectorHeight: opts.selectorHeight, selectorPos: selectorPos}\" \n    [ngClass]=\"{'myDpSelectorArrow': opts.showSelectorArrow, 'myDpSelectorArrowLeft': opts.showSelectorArrow && !opts.alignSelectorRight, \n      'myDpSelectorArrowRight': opts.showSelectorArrow&&opts.alignSelectorRight, 'myDpSelectorAbsolute': !opts.inline, 'myDpSelectorPosInitial': opts.inline}\" \n    (keyup)=\"onCloseSelector($event)\" tabindex=\"0\">\n\n    <lib-selection-bar [opts]=\"opts\" [yearsDuration]=\"yearsDuration\" [visibleMonth]=\"visibleMonth\" [selectMonth]=\"selectMonth\" [selectYear]=\"selectYear\"\n                    [prevViewDisabled]=\"prevViewDisabled\" [nextViewDisabled]=\"nextViewDisabled\"\n                    (prevNavigateBtnClicked)=\"onPrevNavigateBtnClicked()\" (nextNavigateBtnClicked)=\"onNextNavigateBtnClicked()\"\n                    (monthViewBtnClicked)=\"onMonthViewBtnClicked()\" (yearViewBtnClicked)=\"onYearViewBtnClicked()\"></lib-selection-bar>\n\n    <lib-day-view *ngIf=\"!selectMonth && !selectYear\" [opts]=\"opts\" [dates]=\"dates\" [weekDays]=\"weekDays\"\n                    [selectedDate]=\"selectedDate\" [selectedDateRange]=\"selectedDateRange\" [viewChanged]=\"viewChanged\"\n                    (dayCellClicked)=\"onDayCellClicked($event)\"\n                    (dayCellKeyDown)=\"onDayCellKeyDown($event)\"\n                    (viewActivated)=\"onViewActivated($event)\"></lib-day-view>\n\n    <lib-month-view *ngIf=\"selectMonth\" [opts]=\"opts\" [months]=\"months\" [viewChanged]=\"viewChanged\"\n                    (monthCellClicked)=\"onMonthCellClicked($event)\"\n                    (monthCellKeyDown)=\"onMonthCellKeyDown($event)\"\n                    (viewActivated)=\"onViewActivated($event)\"></lib-month-view>\n\n    <lib-year-view *ngIf=\"selectYear\" [opts]=\"opts\" [years]=\"years\" [viewChanged]=\"viewChanged\"\n                    (yearCellClicked)=\"onYearCellClicked($event)\"\n                    (yearCellKeyDown)=\"onYearCellKeyDown($event)\"\n                    (viewActivated)=\"onViewActivated($event)\"></lib-year-view>\n\n    <lib-footer-bar *ngIf=\"opts.showFooterToday\" [opts]=\"opts\"\n                    (footerBarTxtClicked)=\"onTodayFooterClicked()\"></lib-footer-bar>\n  </div>\n</div>\n",
      providers: [UtilService],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None,
      styles: [".ng-mydp{position:static}.ng-myrtl{direction:rtl}.ng-mydp *{box-sizing:border-box;font-family:Arial,Helvetica,sans-serif;padding:0;margin:0}.ng-mydp table{display:table;border-spacing:0}.ng-mydp table td,.ng-mydp table th{padding:0;margin:0;vertical-align:middle;border:none}.myDpSelector{padding:4px;border:1px solid #ccc;background-color:#fff;border-radius:4px;z-index:100000}.myDpViewChangeAnimation{-webkit-animation:.2s linear myDpViewChangeAnimation;animation:.2s linear myDpViewChangeAnimation}@-webkit-keyframes myDpViewChangeAnimation{0%{transform:scale(.75);opacity:.1}100%{transform:scale(1);opacity:1}}@keyframes myDpViewChangeAnimation{0%{transform:scale(.75);opacity:.1}100%{transform:scale(1);opacity:1}}.myDpAnimationFadeIn{-webkit-animation:.5s linear myDpAnimationFadeIn;animation:.5s linear myDpAnimationFadeIn}@-webkit-keyframes myDpAnimationFadeIn{0%{transform:translateY(-50px);opacity:0}100%{transform:translateY(0);opacity:1}}@keyframes myDpAnimationFadeIn{0%{transform:translateY(-50px);opacity:0}100%{transform:translateY(0);opacity:1}}.myDpAnimationFadeOut{-webkit-animation:.3s linear forwards myDpAnimationFadeOut;animation:.3s linear forwards myDpAnimationFadeOut}@-webkit-keyframes myDpAnimationFadeOut{0%{transform:translateY(0);opacity:1}100%{transform:translateY(-50px);opacity:0}}@keyframes myDpAnimationFadeOut{0%{transform:translateY(0);opacity:1}100%{transform:translateY(-50px);opacity:0}}.myDpAnimationScaleTopIn{-webkit-animation:.3s linear myDpAnimationScaleTopIn;animation:.3s linear myDpAnimationScaleTopIn}@-webkit-keyframes myDpAnimationScaleTopIn{0%{transform:scaleY(0);transform-origin:100% 0}100%{transform:scaleY(1);transform-origin:100% 0}}@keyframes myDpAnimationScaleTopIn{0%{transform:scaleY(0);transform-origin:100% 0}100%{transform:scaleY(1);transform-origin:100% 0}}.myDpAnimationScaleTopOut{-webkit-animation:.3s linear forwards myDpAnimationScaleTopOut;animation:.3s linear forwards myDpAnimationScaleTopOut}@-webkit-keyframes myDpAnimationScaleTopOut{0%{transform:scaleY(1);transform-origin:100% 0;opacity:1}100%{transform:scaleY(0);transform-origin:100% 0;opacity:0}}@keyframes myDpAnimationScaleTopOut{0%{transform:scaleY(1);transform-origin:100% 0;opacity:1}100%{transform:scaleY(0);transform-origin:100% 0;opacity:0}}.myDpAnimationScaleCenterIn{-webkit-animation:.3s linear myDpAnimationScaleCenterIn;animation:.3s linear myDpAnimationScaleCenterIn}@-webkit-keyframes myDpAnimationScaleCenterIn{0%{transform:scale(0)}100%{transform:scale(1)}}@keyframes myDpAnimationScaleCenterIn{0%{transform:scale(0)}100%{transform:scale(1)}}.myDpAnimationScaleCenterOut{-webkit-animation:.3s linear forwards myDpAnimationScaleCenterOut;animation:.3s linear forwards myDpAnimationScaleCenterOut}@-webkit-keyframes myDpAnimationScaleCenterOut{0%{transform:scale(1);opacity:1}100%{transform:scale(0);opacity:0}}@keyframes myDpAnimationScaleCenterOut{0%{transform:scale(1);opacity:1}100%{transform:scale(0);opacity:0}}.myDpAnimationRotateIn{-webkit-animation:.3s linear myDpAnimationRotateIn;animation:.3s linear myDpAnimationRotateIn}@-webkit-keyframes myDpAnimationRotateIn{0%{transform:scale(.3) rotate(-45deg);opacity:0}100%{transform:scale(1) rotate(0);opacity:1}}@keyframes myDpAnimationRotateIn{0%{transform:scale(.3) rotate(-45deg);opacity:0}100%{transform:scale(1) rotate(0);opacity:1}}.myDpAnimationRotateOut{-webkit-animation:.3s linear forwards myDpAnimationRotateOut;animation:.3s linear forwards myDpAnimationRotateOut}@-webkit-keyframes myDpAnimationRotateOut{0%{transform:scale(1) rotate(0);opacity:1}100%{transform:scale(.3) rotate(-45deg);opacity:0}}@keyframes myDpAnimationRotateOut{0%{transform:scale(1) rotate(0);opacity:1}100%{transform:scale(.3) rotate(-45deg);opacity:0}}.myDpAnimationFlipDiagonalIn{-webkit-animation:.3s linear myDpAnimationFlipDiagonalIn;animation:.3s linear myDpAnimationFlipDiagonalIn}@-webkit-keyframes myDpAnimationFlipDiagonalIn{0%{transform:rotate3d(1,1,0,-78deg)}100%{transform:rotate3d(1,1,0,0deg)}}@keyframes myDpAnimationFlipDiagonalIn{0%{transform:rotate3d(1,1,0,-78deg)}100%{transform:rotate3d(1,1,0,0deg)}}.myDpAnimationFlipDiagonalOut{-webkit-animation:.3s linear forwards myDpAnimationFlipDiagonalOut;animation:.3s linear forwards myDpAnimationFlipDiagonalOut}@-webkit-keyframes myDpAnimationFlipDiagonalOut{0%{transform:rotate3d(1,1,0,0deg);opacity:1}100%{transform:rotate3d(1,1,0,78deg);opacity:0}}@keyframes myDpAnimationFlipDiagonalOut{0%{transform:rotate3d(1,1,0,0deg);opacity:1}100%{transform:rotate3d(1,1,0,78deg);opacity:0}}.myDpSelectorAbsolute{position:absolute}.myDpSelectorPosInitial{position:initial}.myDpSelector:focus{box-shadow:-1px 1px 6px 0 #add8e6;outline:0}.myDpSelectorArrow{background:#fff}.myDpSelectorArrow:after,.myDpSelectorArrow:before{bottom:100%;border:solid transparent;content:\" \";height:0;width:0;position:absolute}.myDpSelectorArrow:after{border-color:rgba(250,250,250,0);border-bottom-color:#fafafa;border-width:10px;margin-left:-10px}.myDpSelectorArrow:before{border-color:rgba(204,204,204,0);border-bottom-color:#ccc;border-width:11px;margin-left:-11px}.myDpSelectorArrow:focus:before{border-bottom-color:#add8e6}.myDpSelectorArrowLeft:after,.myDpSelectorArrowLeft:before{left:24px}.myDpSelectorArrowRight:after,.myDpSelectorArrowRight:before{left:86%}::-ms-clear{display:none}.myDpCalTable,.myDpFooterBar,.myDpMonthTable,.myDpYearTable{border-radius:0 0 4px 4px}.myDpCalTable.myDpNoFooter tbody tr:nth-child(6) td:first-child,.myDpMonthTable.myDpNoFooter tbody tr:nth-child(4) td:first-child,.myDpYearTable.myDpNoFooter tbody tr:nth-child(5) td:first-child{border-bottom-left-radius:4px}.myDpCalTable.myDpNoFooter tbody tr:nth-child(6) td:last-child,.myDpMonthTable.myDpNoFooter tbody tr:nth-child(4) td:last-child,.myDpYearTable.myDpNoFooter tbody tr:nth-child(5) td:last-child{border-bottom-right-radius:4px}.myDpCalTable,.myDpMonthTable,.myDpYearTable{table-layout:fixed;width:100%;background-color:#fff;font-size:14px}.myDpFooter{height:calc(100% - 60px)}.myDpNoFooter{height:calc(100% - 30px)}.myDpCalTable,.myDpDaycell,.myDpMonthTable,.myDpMonthcell,.myDpWeekDayTitle,.myDpYearTable,.myDpYearcell{border-collapse:collapse;color:#333;line-height:1.1}.myDpDaycell,.myDpMonthcell,.myDpYearcell{padding:4px;text-align:center;outline:0}.myDpDaycell{background-color:#fff;position:relative}.myDpWeekDayTitle{background-color:transparent;color:#333;font-size:13px;font-weight:400;vertical-align:middle;max-width:36px;overflow:hidden;white-space:nowrap;height:23px;text-align:center}.myDpWeekDayTitleWeekNbr{width:20px}.myDpMonthcell{background-color:#fff;overflow:hidden;white-space:nowrap}.myDpYearcell{background-color:#fff;width:20%}.myDpMonthNbr{font-size:10px;display:block}.myDpDaycellWeekNbr{font-size:9px;cursor:default;text-align:center;color:#333}.myDpNextMonth,.myDpPrevMonth{color:#999}.myDpMonthYearSelBar{display:flex;height:30px;background-color:#fff;border-top-left-radius:4px;border-top-right-radius:4px}.myDpPrevBtn{margin-left:10px}.myDpNextBtn{margin-left:auto;margin-right:10px}.myDpMonthYearText{width:100%;line-height:30px;text-align:center}.myDpFooterBar{display:flex;align-items:center;justify-content:center;height:30px;background-color:#fff}.myDpHeaderBtn{background:0 0;padding:0;border:none;line-height:30px;height:28px;margin-top:1px;color:#000;outline:0;cursor:default}.myDpFooterBtn{margin:0 10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.myDpMonthBtn,.myDpYearBtn{font-size:16px}.myDpMonthBtn{margin-right:6px}.myDpHighlight{color:#c30000}.myDpDimDay{opacity:.5}.myDpCurrMonth{background-color:#fff;font-weight:400}.myDpMarkDate{position:absolute;top:2px;left:2px;border-right:8px solid transparent}.myDpMarkCurrDay,.myDpMarkCurrMonth,.myDpMarkCurrYear{border-bottom:2px solid #333}.myDpHeaderLabelBtnNotEdit{cursor:default}.myDpHeaderBtn::-moz-focus-inner,.myDpNextBtn::-moz-focus-inner,.myDpPrevBtn::-moz-focus-inner{border:0}.myDpFooterBtn:focus,.myDpHeaderBtn:focus,.myDpMonthLabel:focus,.myDpYearLabel:focus{color:#66afe9;outline:0}.myDpDaycell:focus,.myDpMonthcell:focus,.myDpYearcell:focus{box-shadow:inset 0 0 0 1px #66afe9}.myDpTableSingleDay:hover,.myDpTableSingleMonth:hover,.myDpTableSingleYear:hover{background-color:#ddd}.myDpDaycell,.myDpMonthLabel,.myDpMonthcell,.myDpYearLabel,.myDpYearcell{cursor:pointer}.myDpFooterBtn:hover,.myDpHeaderBtnEnabled:hover,.myDpMonthLabel:hover,.myDpYearLabel:hover{color:#777}.myDpHeaderBtnEnabled{cursor:pointer}.myDpHeaderBtnDisabled{cursor:not-allowed;opacity:.65}.myDpDisabled{cursor:default;color:#777;background:repeating-linear-gradient(-45deg,#ccc 7px,#ccc 8px,transparent 7px,transparent 14px)}.myDpRangeColor{background-color:#dbeaff}.myDpSelectedDay,.myDpSelectedMonth,.myDpSelectedYear{border:none;background-color:#8ebfff}@font-face{font-family:angular-mydatepicker;src:url(data:application/octet-stream;base64,d09GRgABAAAAAAs4AA8AAAAAE+gAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABWAAAADsAAABUIIslek9TLzIAAAGUAAAAQwAAAFY+IEi5Y21hcAAAAdgAAABQAAABfohD7KljdnQgAAACKAAAABMAAAAgBtX/BGZwZ20AAAI8AAAFkAAAC3CKkZBZZ2FzcAAAB8wAAAAIAAAACAAAABBnbHlmAAAH1AAAAL8AAAEAS//bfWhlYWQAAAiUAAAAMQAAADYW6nhraGhlYQAACMgAAAAbAAAAJAc8A1ZobXR4AAAI5AAAAAwAAAAMCXwAAGxvY2EAAAjwAAAACAAAAAgAQACAbWF4cAAACPgAAAAgAAAAIACmC5tuYW1lAAAJGAAAAXcAAALNzJ0fIXBvc3QAAAqQAAAAKwAAAEAj+eC8cHJlcAAACrwAAAB6AAAAhuVBK7x4nGNgZGBg4GIwYLBjYHJx8wlh4MtJLMljkGJgYYAAkDwymzEnMz2RgQPGA8qxgGkOIGaDiAIAJjsFSAB4nGNgZNZknMDAysDAVMW0h4GBoQdCMz5gMGRkAooysDIzYAUBaa4pDA4vGF4wMgf9z2KIYg5imAYUZgTJAQDMhAtXAHic7ZCxDYAwDATPiaFAjEFBwTBU7F+yRfK2GYOX7qR/uTKwAF1cwsEejMit1XLvbLk7R9547K+NIRNW93STVv7s6fNrLf5U1OcK2gTMuAtdeJxjYEADEhDIHPQ/C4QBEmwD3QB4nK1WaXfTRhQdeUmchCwlCy1qYcTEabBGJmzBgAlBsmMgXZytlaCLFDvpvvGJ3+Bf82Tac+g3flrvGy8kkLTncJqTo3fnzdXM22USWpLYC+uRlJsvxdTWJo3sPAnphk3LUXwoO3shZYrJ3wVREK2W2rcdh0REIlC1rrBEEPseWZpkfOhRRsu2pFdNyi096S5b40G9Vd9+GjrKsTuhpGYzdGg9siVVGFWiSKY9UtKmZaj6K0krvL/CzFfNUMKITiJpvBnG0EjeG2e0ymg1tuMoimyy3ChSJJrhQRR5lNUS5+SKCQzKB82Q8sqnEeXD/Iis2KOcVrBLttP8vi95p3c5P7Ffb1G25EAfyI7s4Ox0JV+EW1th3LST7ShUEXbXd0Js2exU/2aP8ppGA7crMr3QjGCpfIUQKz+hzP4hWS2cT/mSR6NaspETQetlTuxLPoHW44gpcc0YWdDd0QkR1P2SMwz2mD4e/PHeKZYLEwJ4HMt6RyWcCBMpYXM0SdowcmAlZYsqqfWumDjldVrEW8J+7drRl85o41B3YjxbDx1bOVHJ8WhSp5lMndpJzaMpDaKUdCZ4zK8DKD+iSV5tYzWJlUfTOGbGhEQiAi3cS1NBLDuxpCkEzaMZvbkbprl2LVqkyQP13KP39OZWuLnTU9oO9LNGf1anYjrYC9PpaeQv8Wna5SJF6frpGX5M4kHWAjKRLTbDlIMHb/0O0svXlhyF1wbY7u3zK6h91kTwpAH7G9AeT9UpCUyFmFWIVkBirWtZlsnVrBapyNR3Q5pWvqzTBIpyHBfHvoxx/V8zM5aYEr7fidOzIy49c+1LCNMcfJt1PZrXqcVyAXFmeU6nWZbv6zTH8gOd5lme1+kIS1unoyw/1GmB5Uc6HWN5QQuadN/BkIsw5AIOkDCEpQNDWF6CISwVDGG5CENYFmEIyyUYwvJjGMJyGYawvKxl1dRTSePamVgGbEJgYo4eucxF5WoquVRCu2hUakOeEm6VVBTPqn9loF488oY5sBZIl8iaXzHOlY9G5fjWFS1vGjtXwLHqbx+O9jnxUtaLhT8F/9XWVCW9Ys3Dk6vwG4aebCeqNql4dE2Xz1U9uv5fVFRYC/QbSIVYKMqybHBnIoSPOp2GaqCVQ8xszDy063XLmp/D/TcxQhZQ/fg3FBoL3INOWUlZ7eCs1dfbstw7g3I4EyxJMTfz+lb4IiOz0n6RWcqej3wecAWMSmXYagOtFbzZJzEPmd4kzwRxW1E2SNrYzgSJDRzzgHnznQQmYeqqDeRO4YYN+AVhbsF5J1yieqMsh+5F7PMopPxbp+JE9qhojMCz2Rthr+9Cym9xDCQ0+aV+DFQVoakYNRXQNFJuqAZfxtm6bULGDvQjKnbDsqziw8cW95WSbRmEfKSI1aOjn9Zeok6q3H5mFJfvnb4FwSA1MX9733RxkMq7WskyR20DU7calVPXmkPjVYfq5lH1vePsEzlrmm66Jx56X9Oq28HFXCyw9m0O0lImF9T1YYUNosvFpVDqZTRJ77gHGBYY0O9Qio3/q/rYfJ4rVYXRcSTfTtS30edgDPwP2H9H9QPQ92Pocg0uz/eaE59u9OFsma6iF+un6Dcwa625WboG3NB0A+IhR62OuMoNfKcGcXqkuRzpIeBj3RXiAcAmgMXgE921jOZTAKP5jDk+wOfMYdBkDoMt5jDYZs4awA5zGOwyh8Eecxh8wZx1gC+ZwyBkDoOIOQyeMCcAeMocBl8xh8HXzGHwDXPuA3zLHAYxcxgkzGGwr+nWMMwtXtBdoLZBVaADU09Y3MPiUFNlyP6OF4b9vUHM/sEgpv6o6faQ+hMvDPVng5j6i0FM/VXTnSH1N14Y6u8GMfUPg5j6TL8Yy2UGv4x8lwoHlF1sPufvifcP28VAuQABAAH//wAPeJxjYGRg+H+AaQazC4MIg+5WRkYGRkZ37w0qAREO3AwMjAwFQD4Po6e0AyeQw5jPwMCQFrlFXJyJVUybk0lMhJ+RTUmdUc3EnNHMSJ5RTISp7991Rk0urlhuGe5/SdzcjPO45LhiuZhW/bvx7zqYycU4H0gzzuPmjuWSYwBZAbK/BGo/J1H2ywiB7QfarQ+ymxNI2AMdIA5yQBbQWhnuWKDVGv9ugC0BWsbFmPkvEeIqRk1GDYgCkEIGAB9cLoQAeJxjYGRgYABic9F3f+P5bb4ycDO/AIow3Pw4yxFB/z/A/ILZBcjlYGACiQIAcjgNFAAAAHicY2BkYGAO+p8FJF8wMIBJRgZUwAwAXPcDmgAD6AAAAsoAAALKAAAAAAAAAEAAgAABAAAAAwAVAAEAAAAAAAIABAAUAHMAAAAqC3AAAAAAeJx1kMtOwkAUhv+RiwqJGk3cOisDMZZL4gISEhIMbHRDDFtTSmlLSodMBxJew3fwYXwJn8WfdjAGYpvpfOebM2dOB8A1viGQP08cOQucMcr5BKfoWS7QP1sukl8sl1DFm+Uy/bvlCh4QWK7iBh+sIIrnjBb4tCxwJS4tn+BC3Fku0D9aLpJ7lku4Fa+Wy/Se5QomIrVcxb34GqjVVkdBaGRtUJftZqsjp1upqKLEjaW7NqHSqezLuUqMH8fK8dRyz2M/WMeu3of7eeLrNFKJbDnNvRr5ia9d48921dNN0DZmLudaLeXQZsiVVgvfM05ozKrbaPw9DwMorLCFRsSrCmEgUaOtc26jiRY6pCkzJDPzrAgJXMQ0LtbcEWYrKeM+x5xRQuszIyY78PhdHvkxKeD+mFX00ephPCHtzogyL9mXw+4Os0akJMt0Mzv77T3Fhqe1aQ137brUWVcSw4MakvexW1vQePROdiuGtosG33/+7wfseIRVAHicY2BigAAuBuyAmZGJkZmRhYEzJzWtRDe/IDWPqygzPQPCZGAAAGN+B7YAeJxj8N7BcCIoYiMjY1/kBsadHAwcDMkFGxlYnTYxMDJogRibuZgYOSAsPgYwi81pF9MBoDQnkM3utIvBAcJmZnDZqMLYERixwaEjYiNzistGNRBvF0cDAyOLQ0dySARISSQQbOZhYuTR2sH4v3UDS+9GJgYXAAx2I/QAAA==) format('woff');font-weight:400;font-style:normal}.myDpIcon{font-family:angular-mydatepicker;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;color:#222;font-size:20px}.myDpIconLeftArrow:before{content:\"\\e800\"}.myDpIconRightArrow:before{content:\"\\e801\"}"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
    }, {
      type: UtilService
    }];
  }, {
    position: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["HostBinding"],
      args: ["style.position"]
    }],
    selectorEl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
      args: ["selectorEl"]
    }],
    styleEl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
      args: ["styleEl"]
    }]
  });
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var SelectionBarComponent = /*#__PURE__*/function () {
  function SelectionBarComponent() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SelectionBarComponent);

    this.prevNavigateBtnClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.nextNavigateBtnClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.monthViewBtnClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.yearViewBtnClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
  }
  /**
   * @param {?} changes
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SelectionBarComponent, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.hasOwnProperty(OPTS)) {
        this.opts = changes[OPTS].currentValue;
      }

      if (changes.hasOwnProperty(YEARS_DURATION)) {
        this.yearsDuration = changes[YEARS_DURATION].currentValue;
      }

      if (changes.hasOwnProperty(VISIBLE_MONTH)) {
        this.visibleMonth = changes[VISIBLE_MONTH].currentValue;
      }

      if (changes.hasOwnProperty(SELECT_MONTH)) {
        this.selectMonth = changes[SELECT_MONTH].currentValue;
      }

      if (changes.hasOwnProperty(SELECT_YEAR)) {
        this.selectYear = changes[SELECT_YEAR].currentValue;
      }

      if (changes.hasOwnProperty(PREV_VIEW_DISABLED)) {
        this.prevViewDisabled = changes[PREV_VIEW_DISABLED].currentValue;
      }

      if (changes.hasOwnProperty(NEXT_VIEW_DISABLED)) {
        this.nextViewDisabled = changes[NEXT_VIEW_DISABLED].currentValue;
      }
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onPrevNavigateBtnClicked",
    value: function onPrevNavigateBtnClicked(event) {
      event.stopPropagation();
      this.opts.rtl ? this.nextNavigateBtnClicked.emit() : this.prevNavigateBtnClicked.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onNextNavigateBtnClicked",
    value: function onNextNavigateBtnClicked(event) {
      event.stopPropagation();
      this.opts.rtl ? this.prevNavigateBtnClicked.emit() : this.nextNavigateBtnClicked.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onMonthViewBtnClicked",
    value: function onMonthViewBtnClicked(event) {
      event.stopPropagation();
      this.monthViewBtnClicked.emit();
    }
    /**
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onYearViewBtnClicked",
    value: function onYearViewBtnClicked(event) {
      event.stopPropagation();
      this.yearViewBtnClicked.emit();
    }
  }]);

  return SelectionBarComponent;
}();

SelectionBarComponent.ɵfac = function SelectionBarComponent_Factory(t) {
  return new (t || SelectionBarComponent)();
};

SelectionBarComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: SelectionBarComponent,
  selectors: [["lib-selection-bar"]],
  inputs: {
    opts: "opts",
    yearsDuration: "yearsDuration",
    visibleMonth: "visibleMonth",
    selectMonth: "selectMonth",
    selectYear: "selectYear",
    prevViewDisabled: "prevViewDisabled",
    nextViewDisabled: "nextViewDisabled"
  },
  outputs: {
    prevNavigateBtnClicked: "prevNavigateBtnClicked",
    nextNavigateBtnClicked: "nextNavigateBtnClicked",
    monthViewBtnClicked: "monthViewBtnClicked",
    yearViewBtnClicked: "yearViewBtnClicked"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]],
  decls: 9,
  vars: 19,
  consts: [[1, "myDpMonthYearSelBar"], [1, "myDpPrevBtn"], ["type", "button", 1, "myDpHeaderBtn", "myDpIcon", "myDpIconLeftArrow", "myDpHeaderBtnEnabled", 3, "tabindex", "disabled", "ngClass", "click"], [1, "myDpMonthYearText"], ["type", "button", "class", "myDpHeaderBtn myDpMonthBtn", 3, "tabindex", "ngClass", "click", 4, "ngIf"], ["type", "button", 1, "myDpHeaderBtn", "myDpYearBtn", 3, "tabindex", "ngClass", "click"], [1, "myDpNextBtn"], ["type", "button", 1, "myDpHeaderBtn", "myDpIcon", "myDpIconRightArrow", "myDpHeaderBtnEnabled", 3, "tabindex", "disabled", "ngClass", "click"], ["type", "button", 1, "myDpHeaderBtn", "myDpMonthBtn", 3, "tabindex", "ngClass", "click"]],
  template: function SelectionBarComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "button", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function SelectionBarComponent_Template_button_click_2_listener($event) {
        return ctx.onPrevNavigateBtnClicked($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](4, SelectionBarComponent_button_4_Template, 2, 6, "button", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "button", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function SelectionBarComponent_Template_button_click_5_listener($event) {
        return ctx.opts.yearSelector && ctx.onYearViewBtnClicked($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](6);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](7, "div", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "button", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function SelectionBarComponent_Template_button_click_8_listener($event) {
        return ctx.onNextNavigateBtnClicked($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpropertyInterpolate"]("tabindex", !ctx.prevViewDisabled ? "0" : "-1");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("disabled", ctx.prevViewDisabled)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](12, _c5, ctx.prevViewDisabled));
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("aria-label", ctx.opts.ariaLabelPrevMonth);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !ctx.selectYear);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpropertyInterpolate"]("tabindex", ctx.opts.yearSelector ? "0" : "-1");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction2"](14, _c6, ctx.opts.yearSelector, !ctx.opts.yearSelector));
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](!ctx.selectYear ? ctx.visibleMonth.year : ctx.yearsDuration);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpropertyInterpolate"]("tabindex", !ctx.nextViewDisabled ? "0" : "-1");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("disabled", ctx.nextViewDisabled)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](17, _c5, ctx.nextViewDisabled));
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("aria-label", ctx.opts.ariaLabelNextMonth);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["NgClass"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgIf"]],
  encapsulation: 2
});
/** @nocollapse */

SelectionBarComponent.ctorParameters = function () {
  return [];
};

SelectionBarComponent.propDecorators = {
  opts: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  yearsDuration: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  visibleMonth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  selectMonth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  selectYear: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  prevViewDisabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  nextViewDisabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  prevNavigateBtnClicked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  nextNavigateBtnClicked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  monthViewBtnClicked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  yearViewBtnClicked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](SelectionBarComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: "lib-selection-bar",
      template: "<div class=\"myDpMonthYearSelBar\">\n  <div class=\"myDpPrevBtn\">\n    <button type=\"button\" [attr.aria-label]=\"opts.ariaLabelPrevMonth\" class=\"myDpHeaderBtn myDpIcon myDpIconLeftArrow myDpHeaderBtnEnabled\" (click)=\"onPrevNavigateBtnClicked($event)\" tabindex=\"{{!prevViewDisabled ? '0':'-1'}}\"  [disabled]=\"prevViewDisabled\" [ngClass]=\"{'myDpHeaderBtnDisabled': prevViewDisabled}\"></button>\n  </div>\n  <div class=\"myDpMonthYearText\">\n    <button type=\"button\" class=\"myDpHeaderBtn myDpMonthBtn\" *ngIf=\"!selectYear\" (click)=\"opts.monthSelector && onMonthViewBtnClicked($event)\" tabindex=\"{{opts.monthSelector ? '0':'-1'}}\" [ngClass]=\"{'myDpMonthLabel': opts.monthSelector, 'myDpHeaderLabelBtnNotEdit': !opts.monthSelector}\">{{visibleMonth.monthTxt}}</button>\n    <button type=\"button\" class=\"myDpHeaderBtn myDpYearBtn\" (click)=\"opts.yearSelector && onYearViewBtnClicked($event)\" tabindex=\"{{opts.yearSelector ? '0':'-1'}}\" [ngClass]=\"{'myDpYearLabel': opts.yearSelector, 'myDpHeaderLabelBtnNotEdit': !opts.yearSelector}\">{{!selectYear ? visibleMonth.year : yearsDuration}}</button>\n  </div>\n  <div class=\"myDpNextBtn\">\n    <button type=\"button\" [attr.aria-label]=\"opts.ariaLabelNextMonth\" class=\"myDpHeaderBtn myDpIcon myDpIconRightArrow myDpHeaderBtnEnabled\" (click)=\"onNextNavigateBtnClicked($event)\" tabindex=\"{{!nextViewDisabled ? '0':'-1'}}\" [disabled]=\"nextViewDisabled\" [ngClass]=\"{'myDpHeaderBtnDisabled': nextViewDisabled}\"></button>\n  </div>\n</div>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None
    }]
  }], function () {
    return [];
  }, {
    prevNavigateBtnClicked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    nextNavigateBtnClicked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    monthViewBtnClicked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    yearViewBtnClicked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    opts: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    yearsDuration: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    visibleMonth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    selectMonth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    selectYear: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    prevViewDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    nextViewDisabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }]
  });
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */


var ActiveView = {
  Date: 1,
  Month: 2,
  Year: 3
};
ActiveView[ActiveView.Date] = 'Date';
ActiveView[ActiveView.Month] = 'Month';
ActiveView[ActiveView.Year] = 'Year';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

var DayViewComponent = /*#__PURE__*/function () {
  /**
   * @param {?} utilService
   */
  function DayViewComponent(utilService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DayViewComponent);

    this.utilService = utilService;
    this.dayCellClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.dayCellKeyDown = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.viewActivated = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.prevMonthId = MonthId.prev;
    this.currMonthId = MonthId.curr;
    this.nextMonthId = MonthId.next;
  }
  /**
   * @param {?} changes
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DayViewComponent, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.hasOwnProperty(OPTS)) {
        this.opts = changes[OPTS].currentValue;
      }

      if (changes.hasOwnProperty(DATES)) {
        this.dates = changes[DATES].currentValue;
      }

      if (changes.hasOwnProperty(WEEK_DAYS)) {
        this.weekDays = changes[WEEK_DAYS].currentValue;
      }

      if (changes.hasOwnProperty(SELECTED_DATE)) {
        this.selectedDate = changes[SELECTED_DATE].currentValue;
      }

      if (changes.hasOwnProperty(SELECTED_DATE_RANGE)) {
        this.selectedDateRange = changes[SELECTED_DATE_RANGE].currentValue;
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this.viewActivated.emit(ActiveView.Date);
    }
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onDayCellClicked",
    value: function onDayCellClicked(event, cell) {
      event.stopPropagation();

      if (cell.disabledDate.disabled) {
        return;
      }

      this.dayCellClicked.emit(cell);
    }
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onDayCellKeyDown",
    value: function onDayCellKeyDown(event, cell) {
      /** @type {?} */
      var keyCode = this.utilService.getKeyCodeFromEvent(event);

      if (keyCode !== KeyCode.tab) {
        event.preventDefault();

        if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
          this.onDayCellClicked(event, cell);
        } else if (this.opts.moveFocusByArrowKeys) {
          this.dayCellKeyDown.emit(event);
        }
      }
    }
    /**
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onDayCellMouseEnter",
    value: function onDayCellMouseEnter(cell) {
      if (this.utilService.isInitializedDate(this.selectedDateRange.begin) && !this.utilService.isInitializedDate(this.selectedDateRange.end)) {
        var _iterator11 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(this.dates),
            _step11;

        try {
          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
            var w = _step11.value;

            var _iterator12 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(w.week),
                _step12;

            try {
              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                var day = _step12.value;
                day.range = this.utilService.isDateSameOrEarlier(this.selectedDateRange.begin, day.dateObj) && this.utilService.isDateSameOrEarlier(day.dateObj, cell.dateObj);
              }
            } catch (err) {
              _iterator12.e(err);
            } finally {
              _iterator12.f();
            }
          }
        } catch (err) {
          _iterator11.e(err);
        } finally {
          _iterator11.f();
        }
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "onDayCellMouseLeave",
    value: function onDayCellMouseLeave() {
      var _iterator13 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(this.dates),
          _step13;

      try {
        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
          var w = _step13.value;

          var _iterator14 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(w.week),
              _step14;

          try {
            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
              var day = _step14.value;
              day.range = false;
            }
          } catch (err) {
            _iterator14.e(err);
          } finally {
            _iterator14.f();
          }
        }
      } catch (err) {
        _iterator13.e(err);
      } finally {
        _iterator13.f();
      }
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "isDateInRange",
    value: function isDateInRange(date) {
      return this.utilService.isDateInRange(date, this.selectedDateRange);
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "isDateSame",
    value: function isDateSame(date) {
      return this.utilService.isDateSame(this.selectedDate, date);
    }
    /**
     * @param {?} date
     * @return {?}
     */

  }, {
    key: "isDateRangeBeginOrEndSame",
    value: function isDateRangeBeginOrEndSame(date) {
      return this.utilService.isDateRangeBeginOrEndSame(this.selectedDateRange, date);
    }
  }]);

  return DayViewComponent;
}();

DayViewComponent.ɵfac = function DayViewComponent_Factory(t) {
  return new (t || DayViewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](UtilService));
};

DayViewComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: DayViewComponent,
  selectors: [["lib-day-view"]],
  inputs: {
    opts: "opts",
    dates: "dates",
    weekDays: "weekDays",
    selectedDate: "selectedDate",
    selectedDateRange: "selectedDateRange",
    viewChanged: "viewChanged"
  },
  outputs: {
    dayCellClicked: "dayCellClicked",
    dayCellKeyDown: "dayCellKeyDown",
    viewActivated: "viewActivated"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([UtilService]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]],
  decls: 7,
  vars: 9,
  consts: [[1, "myDpCalTable", 3, "ngClass"], ["class", "myDpWeekDayTitle myDpWeekDayTitleWeekNbr", 4, "ngIf"], ["class", "myDpWeekDayTitle", "scope", "col", 4, "ngFor", "ngForOf"], [4, "ngFor", "ngForOf"], [1, "myDpWeekDayTitle", "myDpWeekDayTitleWeekNbr"], ["scope", "col", 1, "myDpWeekDayTitle"], ["class", "myDpDaycellWeekNbr", 4, "ngIf"], [3, "id", "class", "ngClass", "click", "keydown", "mouseenter", "mouseleave", 4, "ngFor", "ngForOf"], [1, "myDpDaycellWeekNbr"], [3, "id", "ngClass", "click", "keydown", "mouseenter", "mouseleave"], ["class", "myDpMarkDate", 3, "ngStyle", 4, "ngIf"], [1, "myDpDayValue", 3, "ngClass"], [1, "myDpMarkDate", 3, "ngStyle"]],
  template: function DayViewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "table", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "thead");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "tr");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](3, DayViewComponent_th_3_Template, 2, 0, "th", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](4, DayViewComponent_th_4_Template, 2, 1, "th", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "tbody");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](6, DayViewComponent_tr_6_Template, 3, 2, "tr", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction4"](4, _c10, ctx.opts.rtl, ctx.opts.showFooterToday, !ctx.opts.showFooterToday, ctx.opts.viewChangeAnimation && ctx.viewChanged));
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.opts.showWeekNumbers && ctx.opts.firstDayOfWeek === "mo");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", ctx.weekDays);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", ctx.dates);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["NgClass"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgStyle"]],
  encapsulation: 2
});
/** @nocollapse */

DayViewComponent.ctorParameters = function () {
  return [{
    type: UtilService
  }];
};

DayViewComponent.propDecorators = {
  opts: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  dates: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  weekDays: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  selectedDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  selectedDateRange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  viewChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  dayCellClicked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  dayCellKeyDown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  viewActivated: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](DayViewComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: "lib-day-view",
      template: "<table class=\"myDpCalTable\" [ngClass]=\"{'ng-myrtl': opts.rtl, 'myDpFooter': opts.showFooterToday, 'myDpNoFooter': !opts.showFooterToday, 'myDpViewChangeAnimation': opts.viewChangeAnimation && viewChanged}\">\n  <thead>\n    <tr>\n      <th class=\"myDpWeekDayTitle myDpWeekDayTitleWeekNbr\" *ngIf=\"opts.showWeekNumbers && opts.firstDayOfWeek==='mo'\">#</th>\n      <th class=\"myDpWeekDayTitle\" scope=\"col\" *ngFor=\"let d of weekDays\">{{d}}</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let w of dates\">\n      <td class=\"myDpDaycellWeekNbr\" *ngIf=\"opts.showWeekNumbers && opts.firstDayOfWeek==='mo'\">{{w.weekNbr}}</td>\n      <td id=\"d_{{d.row}}_{{d.col}}\" class=\"d_{{d.row}}_{{d.col}} myDpDaycell {{d.markedDate.styleClass}} {{d.disabledDate.styleClass}}\" *ngFor=\"let d of w.week\"\n          [ngClass]=\"{'myDpRangeColor': isDateInRange(d.dateObj) || d.range,\n                'myDpPrevMonth': d.cmo === prevMonthId,\n                'myDpCurrMonth':d.cmo === currMonthId && !d.disabledDate.disabled,\n                'myDpNextMonth': d.cmo === nextMonthId,\n                'myDpSelectedDay':!this.opts.dateRange && isDateSame(d.dateObj) || this.opts.dateRange && isDateRangeBeginOrEndSame(d.dateObj),\n                'myDpDisabled': d.disabledDate.disabled && !d.disabledDate.styleClass.length,\n                'myDpTableSingleDay': !d.disabledDate.disabled}\"\n          (click)=\"onDayCellClicked($event, d)\" (keydown)=\"onDayCellKeyDown($event, d)\"\n          (mouseenter)=\"onDayCellMouseEnter(d)\" (mouseleave)=\"onDayCellMouseLeave()\" [attr.tabindex]=\"!d.disabledDate.disabled ? 0 : -1\">\n        <span *ngIf=\"d.markedDate.marked && d.markedDate.color.length\" class=\"myDpMarkDate\" [ngStyle]=\"{'border-top': '8px solid ' + d.markedDate.color}\"></span>\n        <span  class=\"myDpDayValue\" [ngClass]=\"{'myDpMarkCurrDay': d.currDay && opts.markCurrentDay, 'myDpDimDay': d.highlight && (d.cmo===prevMonthId || d.cmo===nextMonthId || d.disabledDate.disabled), 'myDpHighlight': d.highlight}\">{{d.dateObj.day}}</span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n",
      providers: [UtilService],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None
    }]
  }], function () {
    return [{
      type: UtilService
    }];
  }, {
    dayCellClicked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    dayCellKeyDown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    viewActivated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    opts: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    dates: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    weekDays: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    selectedDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    selectedDateRange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    viewChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }]
  });
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var MonthViewComponent = /*#__PURE__*/function () {
  /**
   * @param {?} utilService
   */
  function MonthViewComponent(utilService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, MonthViewComponent);

    this.utilService = utilService;
    this.monthCellClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.monthCellKeyDown = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.viewActivated = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
  }
  /**
   * @param {?} changes
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MonthViewComponent, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.hasOwnProperty(OPTS)) {
        this.opts = changes[OPTS].currentValue;
      }

      if (changes.hasOwnProperty(MONTHS)) {
        this.months = changes[MONTHS].currentValue;
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this.viewActivated.emit(ActiveView.Month);
    }
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onMonthCellClicked",
    value: function onMonthCellClicked(event, cell) {
      event.stopPropagation();

      if (cell.disabled) {
        return;
      }

      this.monthCellClicked.emit(cell);
    }
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onMonthCellKeyDown",
    value: function onMonthCellKeyDown(event, cell) {
      /** @type {?} */
      var keyCode = this.utilService.getKeyCodeFromEvent(event);

      if (keyCode !== KeyCode.tab) {
        event.preventDefault();

        if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
          this.onMonthCellClicked(event, cell);
        } else if (this.opts.moveFocusByArrowKeys) {
          this.monthCellKeyDown.emit(event);
        }
      }
    }
  }]);

  return MonthViewComponent;
}();

MonthViewComponent.ɵfac = function MonthViewComponent_Factory(t) {
  return new (t || MonthViewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](UtilService));
};

MonthViewComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: MonthViewComponent,
  selectors: [["lib-month-view"]],
  inputs: {
    opts: "opts",
    months: "months",
    viewChanged: "viewChanged"
  },
  outputs: {
    monthCellClicked: "monthCellClicked",
    monthCellKeyDown: "monthCellKeyDown",
    viewActivated: "viewActivated"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([UtilService]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]],
  decls: 3,
  vars: 7,
  consts: [[1, "myDpMonthTable", 3, "ngClass"], [4, "ngFor", "ngForOf"], [3, "id", "class", "ngClass", "click", "keydown", 4, "ngFor", "ngForOf"], [3, "id", "ngClass", "click", "keydown"], ["class", "myDpMonthNbr", 4, "ngIf"], [1, "myDpMonthValue", 3, "ngClass"], [1, "myDpMonthNbr"]],
  template: function MonthViewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "table", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "tbody");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, MonthViewComponent_tr_2_Template, 2, 1, "tr", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction4"](2, _c10, ctx.opts.rtl, ctx.opts.showFooterToday, !ctx.opts.showFooterToday, ctx.opts.viewChangeAnimation && ctx.viewChanged));
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", ctx.months);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["NgClass"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgIf"]],
  encapsulation: 2
});
/** @nocollapse */

MonthViewComponent.ctorParameters = function () {
  return [{
    type: UtilService
  }];
};

MonthViewComponent.propDecorators = {
  opts: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  months: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  viewChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  monthCellClicked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  monthCellKeyDown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  viewActivated: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MonthViewComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: "lib-month-view",
      template: "<table class=\"myDpMonthTable\" [ngClass]=\"{'ng-myrtl': opts.rtl, 'myDpFooter': opts.showFooterToday, 'myDpNoFooter': !opts.showFooterToday, 'myDpViewChangeAnimation': opts.viewChangeAnimation && viewChanged}\">\n  <tbody>\n    <tr *ngFor=\"let mr of months\">\n      <td id=\"m_{{m.row}}_{{m.col}}\" class=\"m_{{m.row}}_{{m.col}} myDpMonthcell\"\n          [ngClass]=\"{'myDpSelectedMonth': m.selected, 'myDpDisabled': m.disabled, 'myDpTableSingleMonth': !m.disabled}\"\n          *ngFor=\"let m of mr\" (click)=\"onMonthCellClicked($event, m)\" (keydown)=\"onMonthCellKeyDown($event, m)\" [attr.tabindex]=\"!m.disabled ? 0 : -1\">\n        <span class=\"myDpMonthNbr\" *ngIf=\"opts.showMonthNumber\">{{m.nbr}}</span>\n        <span class=\"myDpMonthValue\" [ngClass]=\"{'myDpMarkCurrMonth': m.currMonth && opts.markCurrentMonth}\">{{m.name}}</span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n",
      providers: [UtilService],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None
    }]
  }], function () {
    return [{
      type: UtilService
    }];
  }, {
    monthCellClicked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    monthCellKeyDown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    viewActivated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    opts: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    months: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    viewChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }]
  });
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var YearViewComponent = /*#__PURE__*/function () {
  /**
   * @param {?} utilService
   */
  function YearViewComponent(utilService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, YearViewComponent);

    this.utilService = utilService;
    this.yearCellClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.yearCellKeyDown = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.viewActivated = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
  }
  /**
   * @param {?} changes
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(YearViewComponent, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.hasOwnProperty(OPTS)) {
        this.opts = changes[OPTS].currentValue;
      }

      if (changes.hasOwnProperty(YEARS)) {
        this.years = changes[YEARS].currentValue;
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this.viewActivated.emit(ActiveView.Year);
    }
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onYearCellClicked",
    value: function onYearCellClicked(event, cell) {
      event.stopPropagation();

      if (cell.disabled) {
        return;
      }

      this.yearCellClicked.emit(cell);
    }
    /**
     * @param {?} event
     * @param {?} cell
     * @return {?}
     */

  }, {
    key: "onYearCellKeyDown",
    value: function onYearCellKeyDown(event, cell) {
      /** @type {?} */
      var keyCode = this.utilService.getKeyCodeFromEvent(event);

      if (keyCode !== KeyCode.tab) {
        event.preventDefault();

        if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
          this.onYearCellClicked(event, cell);
        } else if (this.opts.moveFocusByArrowKeys) {
          this.yearCellKeyDown.emit(event);
        }
      }
    }
  }]);

  return YearViewComponent;
}();

YearViewComponent.ɵfac = function YearViewComponent_Factory(t) {
  return new (t || YearViewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](UtilService));
};

YearViewComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: YearViewComponent,
  selectors: [["lib-year-view"]],
  inputs: {
    opts: "opts",
    years: "years",
    viewChanged: "viewChanged"
  },
  outputs: {
    yearCellClicked: "yearCellClicked",
    yearCellKeyDown: "yearCellKeyDown",
    viewActivated: "viewActivated"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([UtilService]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]],
  decls: 3,
  vars: 7,
  consts: [[1, "myDpYearTable", 3, "ngClass"], [4, "ngFor", "ngForOf"], [3, "id", "class", "ngClass", "click", "keydown", 4, "ngFor", "ngForOf"], [3, "id", "ngClass", "click", "keydown"], [1, "myDpYearValue", 3, "ngClass"]],
  template: function YearViewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "table", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "tbody");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, YearViewComponent_tr_2_Template, 2, 1, "tr", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction4"](2, _c10, ctx.opts.rtl, ctx.opts.showFooterToday, !ctx.opts.showFooterToday, ctx.opts.viewChangeAnimation && ctx.viewChanged));
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", ctx.years);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["NgClass"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["NgForOf"]],
  encapsulation: 2
});
/** @nocollapse */

YearViewComponent.ctorParameters = function () {
  return [{
    type: UtilService
  }];
};

YearViewComponent.propDecorators = {
  opts: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  years: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  viewChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  yearCellClicked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  yearCellKeyDown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  viewActivated: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](YearViewComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: "lib-year-view",
      template: "<table class=\"myDpYearTable\" [ngClass]=\"{'ng-myrtl': opts.rtl, 'myDpFooter': opts.showFooterToday, 'myDpNoFooter': !opts.showFooterToday, 'myDpViewChangeAnimation': opts.viewChangeAnimation && viewChanged}\">\n  <tbody>\n    <tr *ngFor=\"let yr of years\">\n      <td id=\"y_{{y.row}}_{{y.col}}\" class=\"y_{{y.row}}_{{y.col}} myDpYearcell\"\n          [ngClass]=\"{'myDpSelectedYear': y.selected, 'myDpDisabled': y.disabled, 'myDpTableSingleYear': !y.disabled}\"\n          *ngFor=\"let y of yr\" (click)=\"onYearCellClicked($event, y)\" (keydown)=\"onYearCellKeyDown($event, y)\" [attr.tabindex]=\"!y.disabled ? 0 : -1\">\n        <span class=\"myDpYearValue\" [ngClass]=\"{'myDpMarkCurrYear': y.currYear && opts.markCurrentYear}\">{{y.year}}</span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n",
      providers: [UtilService],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None
    }]
  }], function () {
    return [{
      type: UtilService
    }];
  }, {
    yearCellClicked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    yearCellKeyDown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    viewActivated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    opts: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    years: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    viewChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }]
  });
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var FooterBarComponent = /*#__PURE__*/function () {
  /**
   * @param {?} utilService
   */
  function FooterBarComponent(utilService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, FooterBarComponent);

    this.utilService = utilService;
    this.footerBarTxtClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.footerBarTxt = EMPTY_STR;
  }
  /**
   * @param {?} changes
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(FooterBarComponent, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.hasOwnProperty(OPTS)) {
        this.opts = changes[OPTS].currentValue;
        var _this$opts10 = this.opts,
            dateFormat = _this$opts10.dateFormat,
            monthLabels = _this$opts10.monthLabels,
            todayTxt = _this$opts10.todayTxt;
        /** @type {?} */

        var today = this.utilService.getToday();
        this.footerBarTxt = todayTxt + (todayTxt.length > 0 ? SPACE_STR : EMPTY_STR) + this.utilService.formatDate(today, dateFormat, monthLabels);
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "onFooterBarTxtClicked",
    value: function onFooterBarTxtClicked() {
      this.footerBarTxtClicked.emit();
    }
  }]);

  return FooterBarComponent;
}();

FooterBarComponent.ɵfac = function FooterBarComponent_Factory(t) {
  return new (t || FooterBarComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](UtilService));
};

FooterBarComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: FooterBarComponent,
  selectors: [["lib-footer-bar"]],
  inputs: {
    opts: "opts"
  },
  outputs: {
    footerBarTxtClicked: "footerBarTxtClicked"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([UtilService]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]],
  decls: 3,
  vars: 1,
  consts: [[1, "myDpFooterBar"], ["type", "button", 1, "myDpHeaderBtn", "myDpFooterBtn", 3, "click"]],
  template: function FooterBarComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "button", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function FooterBarComponent_Template_button_click_1_listener() {
        return ctx.onFooterBarTxtClicked();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](ctx.footerBarTxt);
    }
  },
  encapsulation: 2
});
/** @nocollapse */

FooterBarComponent.ctorParameters = function () {
  return [{
    type: UtilService
  }];
};

FooterBarComponent.propDecorators = {
  opts: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  footerBarTxtClicked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](FooterBarComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: "lib-footer-bar",
      template: "<div class=\"myDpFooterBar\">\n    <button type=\"button\" class=\"myDpHeaderBtn myDpFooterBtn\" (click)=\"onFooterBarTxtClicked()\">{{footerBarTxt}}</button>\n</div>",
      providers: [UtilService],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None
    }]
  }], function () {
    return [{
      type: UtilService
    }];
  }, {
    footerBarTxtClicked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    opts: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }]
  });
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var LocaleService = /*#__PURE__*/function () {
  function LocaleService() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, LocaleService);

    this.locales = {
      "en": {
        dayLabels: {
          su: "Sun",
          mo: "Mon",
          tu: "Tue",
          we: "Wed",
          th: "Thu",
          fr: "Fri",
          sa: "Sat"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "May",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Oct",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "mm/dd/yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Today"
      },
      "he": {
        dayLabels: {
          su: "רא",
          mo: "שנ",
          tu: "של",
          we: "רב",
          th: "חמ",
          fr: "שי",
          sa: "שב"
        },
        monthLabels: {
          1: "ינו",
          2: "פבר",
          3: "מרץ",
          4: "אפר",
          5: "מאי",
          6: "יונ",
          7: "יול",
          8: "אוג",
          9: "ספט",
          10: "אוק",
          11: "נוב",
          12: "דצמ"
        },
        dateFormat: "dd/mm/yyyy",
        firstDayOfWeek: "su",
        sunHighlight: false,
        todayTxt: "היום"
      },
      "ja": {
        dayLabels: {
          su: "日",
          mo: "月",
          tu: "火",
          we: "水",
          th: "木",
          fr: "金",
          sa: "土"
        },
        monthLabels: {
          1: "１月",
          2: "２月",
          3: "３月",
          4: "４月",
          5: "５月",
          6: "６月",
          7: "７月",
          8: "８月",
          9: "９月",
          10: "１０月",
          11: "１１月",
          12: "１２月"
        },
        dateFormat: "yyyy.mm.dd",
        sunHighlight: false,
        todayTxt: "今日"
      },
      "fr": {
        dayLabels: {
          su: "Dim",
          mo: "Lun",
          tu: "Mar",
          we: "Mer",
          th: "Jeu",
          fr: "Ven",
          sa: "Sam"
        },
        monthLabels: {
          1: "Jan",
          2: "Fév",
          3: "Mar",
          4: "Avr",
          5: "Mai",
          6: "Juin",
          7: "Juil",
          8: "Aoû",
          9: "Sep",
          10: "Oct",
          11: "Nov",
          12: "Déc"
        },
        dateFormat: "dd/mm/yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Aujourd'hui"
      },
      "fr-ch": {
        dayLabels: {
          su: "Dim",
          mo: "Lun",
          tu: "Mar",
          we: "Mer",
          th: "Jeu",
          fr: "Ven",
          sa: "Sam"
        },
        monthLabels: {
          1: "Jan",
          2: "Fév",
          3: "Mar",
          4: "Avr",
          5: "Mai",
          6: "Juin",
          7: "Juil",
          8: "Aoû",
          9: "Sep",
          10: "Oct",
          11: "Nov",
          12: "Déc"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Aujourd'hui"
      },
      "fi": {
        dayLabels: {
          su: "Su",
          mo: "Ma",
          tu: "Ti",
          we: "Ke",
          th: "To",
          fr: "Pe",
          sa: "La"
        },
        monthLabels: {
          1: "Tam",
          2: "Hel",
          3: "Maa",
          4: "Huh",
          5: "Tou",
          6: "Kes",
          7: "Hei",
          8: "Elo",
          9: "Syy",
          10: "Lok",
          11: "Mar",
          12: "Jou"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Tänään"
      },
      "es": {
        dayLabels: {
          su: "Do",
          mo: "Lu",
          tu: "Ma",
          we: "Mi",
          th: "Ju",
          fr: "Vi",
          sa: "Sa"
        },
        monthLabels: {
          1: "Ene",
          2: "Feb",
          3: "Mar",
          4: "Abr",
          5: "May",
          6: "Jun",
          7: "Jul",
          8: "Ago",
          9: "Sep",
          10: "Oct",
          11: "Nov",
          12: "Dic"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Hoy"
      },
      "hu": {
        dayLabels: {
          su: "Vas",
          mo: "Hét",
          tu: "Kedd",
          we: "Sze",
          th: "Csü",
          fr: "Pén",
          sa: "Szo"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Már",
          4: "Ápr",
          5: "Máj",
          6: "Jún",
          7: "Júl",
          8: "Aug",
          9: "Szep",
          10: "Okt",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Ma"
      },
      "sv": {
        dayLabels: {
          su: "Sön",
          mo: "Mån",
          tu: "Tis",
          we: "Ons",
          th: "Tor",
          fr: "Fre",
          sa: "Lör"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Maj",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "mo",
        sunHighlight: false,
        todayTxt: "Idag"
      },
      "nl": {
        dayLabels: {
          su: "Zon",
          mo: "Maa",
          tu: "Din",
          we: "Woe",
          th: "Don",
          fr: "Vri",
          sa: "Zat"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Mei",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "dd-mm-yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: false,
        todayTxt: "Vandaag"
      },
      "ru": {
        dayLabels: {
          su: "Вс",
          mo: "Пн",
          tu: "Вт",
          we: "Ср",
          th: "Чт",
          fr: "Пт",
          sa: "Сб"
        },
        monthLabels: {
          1: "Янв",
          2: "Фев",
          3: "Март",
          4: "Апр",
          5: "Май",
          6: "Июнь",
          7: "Июль",
          8: "Авг",
          9: "Сент",
          10: "Окт",
          11: "Ноя",
          12: "Дек"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Сегодня"
      },
      "uk": {
        dayLabels: {
          su: "Нд",
          mo: "Пн",
          tu: "Вт",
          we: "Ср",
          th: "Чт",
          fr: "Пт",
          sa: "Сб"
        },
        monthLabels: {
          1: "Січ",
          2: "Лют",
          3: "Бер",
          4: "Кві",
          5: "Тра",
          6: "Чер",
          7: "Лип",
          8: "Сер",
          9: "Вер",
          10: "Жов",
          11: "Лис",
          12: "Гру"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Сьогодні"
      },
      "uz": {
        dayLabels: {
          su: "Yak",
          mo: "Du",
          tu: "Se",
          we: "Cho",
          th: "Pay",
          fr: "Ju",
          sa: "Sha"
        },
        monthLabels: {
          1: "Yan",
          2: "Fev",
          3: "Mar",
          4: "Apr",
          5: "May",
          6: "Iyn",
          7: "Iyl",
          8: "Avg",
          9: "Sen",
          10: "Okt",
          11: "Noy",
          12: "Dek"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Bugun"
      },
      "no": {
        dayLabels: {
          su: "Søn",
          mo: "Man",
          tu: "Tir",
          we: "Ons",
          th: "Tor",
          fr: "Fre",
          sa: "Lør"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Mai",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Des"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: false,
        todayTxt: "I dag"
      },
      "tr": {
        dayLabels: {
          su: "Paz",
          mo: "Pzt",
          tu: "Sal",
          we: "Çar",
          th: "Per",
          fr: "Cum",
          sa: "Cmt"
        },
        monthLabels: {
          1: "Oca",
          2: "Şub",
          3: "Mar",
          4: "Nis",
          5: "May",
          6: "Haz",
          7: "Tem",
          8: "Ağu",
          9: "Eyl",
          10: "Eki",
          11: "Kas",
          12: "Ara"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: false,
        todayTxt: "Bugün"
      },
      "pt-br": {
        dayLabels: {
          su: "Dom",
          mo: "Seg",
          tu: "Ter",
          we: "Qua",
          th: "Qui",
          fr: "Sex",
          sa: "Sab"
        },
        monthLabels: {
          1: "Jan",
          2: "Fev",
          3: "Mar",
          4: "Abr",
          5: "Mai",
          6: "Jun",
          7: "Jul",
          8: "Ago",
          9: "Set",
          10: "Out",
          11: "Nov",
          12: "Dez"
        },
        dateFormat: "dd/mm/yyyy",
        firstDayOfWeek: "su",
        sunHighlight: true,
        todayTxt: "Hoje"
      },
      "de": {
        dayLabels: {
          su: "So",
          mo: "Mo",
          tu: "Di",
          we: "Mi",
          th: "Do",
          fr: "Fr",
          sa: "Sa"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mär",
          4: "Apr",
          5: "Mai",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Dez"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Heute"
      },
      "de-ch": {
        dayLabels: {
          su: "So",
          mo: "Mo",
          tu: "Di",
          we: "Mi",
          th: "Do",
          fr: "Fr",
          sa: "Sa"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mär",
          4: "Apr",
          5: "Mai",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Dez"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Heute"
      },
      "it": {
        dayLabels: {
          su: "Dom",
          mo: "Lun",
          tu: "Mar",
          we: "Mer",
          th: "Gio",
          fr: "Ven",
          sa: "Sab"
        },
        monthLabels: {
          1: "Gen",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Mag",
          6: "Giu",
          7: "Lug",
          8: "Ago",
          9: "Set",
          10: "Ott",
          11: "Nov",
          12: "Dic"
        },
        dateFormat: "dd/mm/yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Oggi"
      },
      "it-ch": {
        dayLabels: {
          su: "Dom",
          mo: "Lun",
          tu: "Mar",
          we: "Mer",
          th: "Gio",
          fr: "Ven",
          sa: "Sab"
        },
        monthLabels: {
          1: "Gen",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Mag",
          6: "Giu",
          7: "Lug",
          8: "Ago",
          9: "Set",
          10: "Ott",
          11: "Nov",
          12: "Dic"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Oggi"
      },
      "pl": {
        dayLabels: {
          su: "Nie",
          mo: "Pon",
          tu: "Wto",
          we: "Śro",
          th: "Czw",
          fr: "Pią",
          sa: "Sob"
        },
        monthLabels: {
          1: "Sty",
          2: "Lut",
          3: "Mar",
          4: "Kwi",
          5: "Maj",
          6: "Cze",
          7: "Lip",
          8: "Sie",
          9: "Wrz",
          10: "Paź",
          11: "Lis",
          12: "Gru"
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Dzisiaj"
      },
      "my": {
        dayLabels: {
          su: "တနင်္ဂနွေ",
          mo: "တနင်္လာ",
          tu: "အင်္ဂါ",
          we: "ဗုဒ္ဓဟူး",
          th: "ကြသပတေး",
          fr: "သောကြာ",
          sa: "စနေ"
        },
        monthLabels: {
          1: "ဇန်နဝါရီ",
          2: "ဖေဖော်ဝါရီ",
          3: "မတ်",
          4: "ဧပြီ",
          5: "မေ",
          6: "ဇွန်",
          7: "ဇူလိုင်",
          8: "ဩဂုတ်",
          9: "စက်တင်ဘာ",
          10: "အောက်တိုဘာ",
          11: "နိုဝင်ဘာ",
          12: "ဒီဇင်ဘာ"
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "ယနေ့"
      },
      "sk": {
        dayLabels: {
          su: "Ne",
          mo: "Po",
          tu: "Ut",
          we: "St",
          th: "Št",
          fr: "Pi",
          sa: "So"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Máj",
          6: "Jún",
          7: "Júl",
          8: "Aug",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Dnes"
      },
      "sl": {
        dayLabels: {
          su: "Ned",
          mo: "Pon",
          tu: "Tor",
          we: "Sre",
          th: "Čet",
          fr: "Pet",
          sa: "Sob"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Maj",
          6: "Jun",
          7: "Jul",
          8: "Avg",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "dd. mm. yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Danes"
      },
      "zh-cn": {
        dayLabels: {
          su: "日",
          mo: "一",
          tu: "二",
          we: "三",
          th: "四",
          fr: "五",
          sa: "六"
        },
        monthLabels: {
          1: "1月",
          2: "2月",
          3: "3月",
          4: "4月",
          5: "5月",
          6: "6月",
          7: "7月",
          8: "8月",
          9: "9月",
          10: "10月",
          11: "11月",
          12: "12月"
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "今天"
      },
      "ro": {
        dayLabels: {
          su: "du",
          mo: "lu",
          tu: "ma",
          we: "mi",
          th: "jo",
          fr: "vi",
          sa: "sa"
        },
        monthLabels: {
          1: "ian",
          2: "feb",
          3: "mart",
          4: "apr",
          5: "mai",
          6: "iun",
          7: "iul",
          8: "aug",
          9: "sept",
          10: "oct",
          11: "nov",
          12: "dec"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Astăzi"
      },
      "ca": {
        dayLabels: {
          su: "dg",
          mo: "dl",
          tu: "dt",
          we: "dc",
          th: "dj",
          fr: "dv",
          sa: "ds"
        },
        monthLabels: {
          1: "Gen",
          2: "Febr",
          3: "Març",
          4: "Abr",
          5: "Maig",
          6: "Juny",
          7: "Jul",
          8: "Ag",
          9: "Set",
          10: "Oct",
          11: "Nov",
          12: "Des"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Avui"
      },
      "id": {
        dayLabels: {
          su: "Min",
          mo: "Sen",
          tu: "Sel",
          we: "Rab",
          th: "Kam",
          fr: "Jum",
          sa: "Sab"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Mei",
          6: "Jun",
          7: "Jul",
          8: "Ags",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Des"
        },
        dateFormat: "dd-mm-yyyy",
        firstDayOfWeek: "su",
        sunHighlight: true,
        todayTxt: "Hari ini"
      },
      "en-au": {
        dayLabels: {
          su: "Sun",
          mo: "Mon",
          tu: "Tue",
          we: "Wed",
          th: "Thu",
          fr: "Fri",
          sa: "Sat"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "May",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Oct",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "dd/mm/yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Today"
      },
      "en-gb": {
        dayLabels: {
          su: "Sun",
          mo: "Mon",
          tu: "Tue",
          we: "Wed",
          th: "Thu",
          fr: "Fri",
          sa: "Sat"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "May",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Oct",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "dd/mm/yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Today"
      },
      "am-et": {
        dayLabels: {
          su: "እሑድ",
          mo: "ሰኞ",
          tu: "ማክሰኞ",
          we: "ረቡዕ",
          th: "ሐሙስ",
          fr: "ዓርብ",
          sa: "ቅዳሜ"
        },
        monthLabels: {
          1: "ጃንዩ",
          2: "ፌብሩ",
          3: "ማርች",
          4: "ኤፕረ",
          5: "ሜይ",
          6: "ጁን",
          7: "ጁላይ",
          8: "ኦገስ",
          9: "ሴፕቴ",
          10: "ኦክተ",
          11: "ኖቬም",
          12: "ዲሴም"
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "ዛሬ"
      },
      "cs": {
        dayLabels: {
          su: "Ne",
          mo: "Po",
          tu: "Út",
          we: "St",
          th: "Čt",
          fr: "Pá",
          sa: "So"
        },
        monthLabels: {
          1: "Led",
          2: "Úno",
          3: "Bře",
          4: "Dub",
          5: "Kvě",
          6: "Čvn",
          7: "Čvc",
          8: "Srp",
          9: "Zář",
          10: "Říj",
          11: "Lis",
          12: "Pro"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Dnes"
      },
      "el": {
        dayLabels: {
          su: "Κυρ",
          mo: "Δευ",
          tu: "Τρι",
          we: "Τετ",
          th: "Πεμ",
          fr: "Παρ",
          sa: "Σαβ"
        },
        monthLabels: {
          1: "Ιαν",
          2: "Φεβ",
          3: "Μαρ",
          4: "Απρ",
          5: "Μαι",
          6: "Ιουν",
          7: "Ιουλ",
          8: "Αυγ",
          9: "Σεπ",
          10: "Οκτ",
          11: "Νοε",
          12: "Δεκ"
        },
        dateFormat: "dd/mm/yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Σήμερα"
      },
      "kk": {
        dayLabels: {
          su: "Жк",
          mo: "Дс",
          tu: "Сс",
          we: "Ср",
          th: "Бс",
          fr: "Жм",
          sa: "Сб"
        },
        monthLabels: {
          1: "Қаң",
          2: "Ақп",
          3: "Нау",
          4: "Сәу",
          5: "Мам",
          6: "Мау",
          7: "Шіл",
          8: "Там",
          9: "Қырк",
          10: "Қаз",
          11: "Қар",
          12: "Желт"
        },
        dateFormat: "dd-mmm-yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Бүгін"
      },
      "th": {
        dayLabels: {
          su: "อา",
          mo: "จ",
          tu: "อ",
          we: "พ",
          th: "พฤ",
          fr: "ศ",
          sa: "ส"
        },
        monthLabels: {
          1: "ม.ค",
          2: "ก.พ.",
          3: "มี.ค.",
          4: "เม.ย.",
          5: "พ.ค.",
          6: "มิ.ย.",
          7: "ก.ค.",
          8: "ส.ค.",
          9: "ก.ย.",
          10: "ต.ค.",
          11: "พ.ย.",
          12: "ธ.ค."
        },
        dateFormat: "dd-mm-yyyy",
        firstDayOfWeek: "su",
        sunHighlight: true,
        todayTxt: "วันนี้"
      },
      "ko-kr": {
        dayLabels: {
          su: "일",
          mo: "월",
          tu: "화",
          we: "수",
          th: "목",
          fr: "금",
          sa: "토"
        },
        monthLabels: {
          1: "1월",
          2: "2월",
          3: "3월",
          4: "4월",
          5: "5월",
          6: "6월",
          7: "7월",
          8: "8월",
          9: "9월",
          10: "10월",
          11: "11월",
          12: "12월"
        },
        dateFormat: "yyyy mm dd",
        firstDayOfWeek: "su",
        sunHighlight: true,
        todayTxt: "오늘"
      },
      "da": {
        dayLabels: {
          su: "Søn",
          mo: "Man",
          tu: "Tir",
          we: "Ons",
          th: "Tor",
          fr: "Fre",
          sa: "Lør"
        },
        monthLabels: {
          1: "Jan",
          2: "Feb",
          3: "Mar",
          4: "Apr",
          5: "Maj",
          6: "Jun",
          7: "Jul",
          8: "Aug",
          9: "Sep",
          10: "Okt",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "dd-mm-yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "I dag"
      },
      "lt": {
        dayLabels: {
          su: "Sk",
          mo: "Pr",
          tu: "An",
          we: "Tr",
          th: "Kt",
          fr: "Pn",
          sa: "Št"
        },
        monthLabels: {
          1: "Saus.",
          2: "Vas.",
          3: "Kov.",
          4: "Bal.",
          5: "Geg.",
          6: "Birž.",
          7: "Liep.",
          8: "Rugp.",
          9: "Rugs.",
          10: "Sapl.",
          11: "Lapkr.",
          12: "Gruod."
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Šianien"
      },
      "vi": {
        dayLabels: {
          su: "CN",
          mo: "T2",
          tu: "T3",
          we: "T4",
          th: "T5",
          fr: "T6",
          sa: "T7"
        },
        monthLabels: {
          1: "THG 1",
          2: "THG 2",
          3: "THG 3",
          4: "THG 4",
          5: "THG 5",
          6: "THG 6",
          7: "THG 7",
          8: "THG 8",
          9: "THG 9",
          10: "THG 10",
          11: "THG 11",
          12: "THG 12"
        },
        dateFormat: "dd/mm/yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Hôm nay"
      },
      "bn": {
        dayLabels: {
          su: "রবি",
          mo: "সোম",
          tu: "মঙ্গল",
          we: "বুধ",
          th: "বৃহঃ",
          fr: "শুক্র",
          sa: "শনি"
        },
        monthLabels: {
          1: "জানু",
          2: "ফেব্রু",
          3: "মার্চ",
          4: "এপ্রিল",
          5: "মে",
          6: "জুন",
          7: "জুলাই",
          8: "আগস্ট",
          9: "সেপ্টে",
          10: "অক্টো",
          11: "নভে",
          12: "ডিসে"
        },
        dateFormat: "dd-mm-yyyy",
        firstDayOfWeek: "su",
        sunHighlight: true,
        todayTxt: "আজ"
      },
      "bg": {
        dayLabels: {
          su: "нд",
          mo: "пн",
          tu: "вт",
          we: "ср",
          th: "чт",
          fr: "пт",
          sa: "сб"
        },
        monthLabels: {
          1: "яну.",
          2: "фев.",
          3: "март",
          4: "апр.",
          5: "май",
          6: "юни",
          7: "юли",
          8: "авг.",
          9: "сеп.",
          10: "окт.",
          11: "ное.",
          12: "дек."
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "днес"
      },
      "hr": {
        dayLabels: {
          su: "Ne",
          mo: "Po",
          tu: "Ul",
          we: "Sr",
          th: "Če",
          fr: "Pe",
          sa: "Su"
        },
        monthLabels: {
          1: "Sij",
          2: "Vel",
          3: "Ožu",
          4: "Tra",
          5: "Svi",
          6: "Lip",
          7: "Srp",
          8: "Kol",
          9: "Ruj",
          10: "Lis",
          11: "Stu",
          12: "Pro"
        },
        dateFormat: "dd.mm.yyyy.",
        firstDayOfWeek: "su",
        sunHighlight: true,
        todayTxt: "danas"
      },
      "ar": {
        dayLabels: {
          su: "الأحد",
          mo: "الاثنين",
          tu: "الثلاثاء",
          we: "الاربعاء",
          th: "الخميس",
          fr: "الجمعة",
          sa: "السبت"
        },
        monthLabels: {
          1: "يناير",
          2: "فبراير",
          3: "مارس",
          4: "ابريل",
          5: "مايو",
          6: "يونيو",
          7: "يوليو",
          8: "أغسطس",
          9: "سبتمبر",
          10: "أكتوبر",
          11: "نوفمبر",
          12: "ديسمبر"
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "sa",
        sunHighlight: true,
        todayTxt: "اليوم"
      },
      "is": {
        dayLabels: {
          su: "sun",
          mo: "mán",
          tu: "þri",
          we: "mið",
          th: "fim",
          fr: "fös",
          sa: "lau"
        },
        monthLabels: {
          1: "jan",
          2: "feb",
          3: "mar",
          4: "apr",
          5: "maí",
          6: "jún",
          7: "júl",
          8: "ágú",
          9: "sep",
          10: "okt",
          11: "nóv",
          12: "des"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "su",
        sunHighlight: true,
        todayTxt: "Í dag"
      },
      "tw": {
        dayLabels: {
          su: "週日",
          mo: "週一",
          tu: "週二",
          we: "週三",
          th: "週四",
          fr: "週五",
          sa: "週六"
        },
        monthLabels: {
          1: "一月",
          2: "二月",
          3: "三月",
          4: "四月",
          5: "五月",
          6: "六月",
          7: "七月",
          8: "八月",
          9: "九月",
          10: "十月",
          11: "十一月",
          12: "十二月"
        },
        dateFormat: "yyyy-mm-dd",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "今天"
      },
      "lv": {
        dayLabels: {
          su: "S",
          mo: "P",
          tu: "O",
          we: "T",
          th: "C",
          fr: "P",
          sa: "S"
        },
        monthLabels: {
          1: "Janv",
          2: "Febr",
          3: "Marts",
          4: "Apr",
          5: "Maijs",
          6: "Jūn",
          7: "Jūl",
          8: "Aug",
          9: "Sept",
          10: "Okt",
          11: "Nov",
          12: "Dec"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Šodien"
      },
      "et": {
        dayLabels: {
          su: "P",
          mo: "E",
          tu: "T",
          we: "K",
          th: "N",
          fr: "R",
          sa: "L"
        },
        monthLabels: {
          1: "Jaan",
          2: "Veebr",
          3: "Märts",
          4: "Apr",
          5: "Mai",
          6: "Juuni",
          7: "Juuli",
          8: "Aug",
          9: "Sept",
          10: "Okt",
          11: "Nov",
          12: "Dets"
        },
        dateFormat: "dd.mm.yyyy",
        firstDayOfWeek: "mo",
        sunHighlight: true,
        todayTxt: "Täna"
      }
    };
  }
  /**
   * @param {?} locale
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(LocaleService, [{
    key: "getLocaleOptions",
    value: function getLocaleOptions(locale) {
      if (locale && this.locales.hasOwnProperty(locale)) {
        // User given locale
        return this.locales[locale];
      } // Default: en


      return this.locales[DEFAULT_LOCALE];
    }
  }]);

  return LocaleService;
}();

LocaleService.ɵfac = function LocaleService_Factory(t) {
  return new (t || LocaleService)();
};

LocaleService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: LocaleService,
  factory: LocaleService.ɵfac
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](LocaleService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [];
  }, null);
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */


var Year = {
  min: 1000,
  max: 9999
};
Year[Year.min] = 'min';
Year[Year.max] = 'max';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

var DefaultConfigService = /*#__PURE__*/function () {
  function DefaultConfigService() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, DefaultConfigService);

    this.defaultConfig = {
      dateRange: false,
      inline: false,
      dayLabels: {
        su: "Sun",
        mo: "Mon",
        tu: "Tue",
        we: "Wed",
        th: "Thu",
        fr: "Fri",
        sa: "Sat"
      },
      monthLabels: {
        1: "Jan",
        2: "Feb",
        3: "Mar",
        4: "Apr",
        5: "May",
        6: "Jun",
        7: "Jul",
        8: "Aug",
        9: "Sep",
        10: "Oct",
        11: "Nov",
        12: "Dec"
      },
      dateFormat: "yyyy-mm-dd",
      defaultView: DefaultView.Date,
      firstDayOfWeek: "mo",
      satHighlight: false,
      sunHighlight: true,
      highlightDates: [],
      markCurrentDay: true,
      markCurrentMonth: true,
      markCurrentYear: true,
      monthSelector: true,
      yearSelector: true,
      disableHeaderButtons: true,
      showWeekNumbers: false,
      selectorHeight: "266px",
      selectorWidth: "266px",
      disableUntil: {
        year: 0,
        month: 0,
        day: 0
      },
      disableSince: {
        year: 0,
        month: 0,
        day: 0
      },
      disableDates: [],
      disableDateRanges: [],
      disableWeekends: false,
      disableWeekdays: [],
      enableDates: [],
      markDates: [],
      markWeekends: {
        marked: false,
        color: ""
      },
      alignSelectorRight: false,
      openSelectorTopOfInput: false,
      closeSelectorOnDateSelect: true,
      closeSelectorOnDocumentClick: true,
      minYear: Year.min,
      maxYear: Year.max,
      showSelectorArrow: true,
      appendSelectorToBody: false,
      focusInputOnDateSelect: true,
      moveFocusByArrowKeys: true,
      dateRangeDatesDelimiter: " - ",
      inputFieldValidation: true,
      showMonthNumber: true,
      todayTxt: "",
      showFooterToday: false,
      calendarAnimation: {
        in: CalAnimation.None,
        out: CalAnimation.None
      },
      viewChangeAnimation: true,
      rtl: false,
      stylesData: {
        selector: "",
        styles: ""
      },
      divHostElement: {
        enabled: false,
        placeholder: ""
      },
      ariaLabelPrevMonth: "Previous Month",
      ariaLabelNextMonth: "Next Month"
    };
  }
  /**
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(DefaultConfigService, [{
    key: "getDefaultConfig",
    value: function getDefaultConfig() {
      return this.defaultConfig;
    }
  }]);

  return DefaultConfigService;
}();

DefaultConfigService.ɵfac = function DefaultConfigService_Factory(t) {
  return new (t || DefaultConfigService)();
};

DefaultConfigService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: DefaultConfigService,
  factory: DefaultConfigService.ɵfac
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](DefaultConfigService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [];
  }, null);
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */


var CalToggle = {
  Open: 1,
  CloseByDateSel: 2,
  CloseByCalBtn: 3,
  CloseByOutClick: 4,
  CloseByEsc: 5
};
CalToggle[CalToggle.Open] = 'Open';
CalToggle[CalToggle.CloseByDateSel] = 'CloseByDateSel';
CalToggle[CalToggle.CloseByCalBtn] = 'CloseByCalBtn';
CalToggle[CalToggle.CloseByOutClick] = 'CloseByOutClick';
CalToggle[CalToggle.CloseByEsc] = 'CloseByEsc';
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @type {?} */

var NGX_DP_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["forwardRef"])(
  /**
  * @return {?}
  */
  function () {
    return AngularMyDatePickerDirective;
  }),
  multi: true
};
/** @type {?} */

var NGX_DP_VALIDATORS = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_5__["NG_VALIDATORS"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["forwardRef"])(
  /**
  * @return {?}
  */
  function () {
    return AngularMyDatePickerDirective;
  }),
  multi: true
};

var AngularMyDatePickerDirective = /*#__PURE__*/function () {
  /**
   * @param {?} localeService
   * @param {?} utilService
   * @param {?} vcRef
   * @param {?} cfr
   * @param {?} renderer
   * @param {?} cdr
   * @param {?} elem
   * @param {?} config
   */
  function AngularMyDatePickerDirective(localeService, utilService, vcRef, cfr, renderer, cdr, elem, config) {
    var _this2 = this;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, AngularMyDatePickerDirective);

    this.localeService = localeService;
    this.utilService = utilService;
    this.vcRef = vcRef;
    this.cfr = cfr;
    this.renderer = renderer;
    this.cdr = cdr;
    this.elem = elem;
    this.config = config;
    this.defaultMonth = {
      defMonth: EMPTY_STR,
      overrideSelection: false
    };
    this.dateChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.inputFieldChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.calendarViewChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.calendarToggle = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.rangeDateSelection = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.viewActivated = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    this.cRef = null;
    this.hostText = EMPTY_STR;
    this.preventClose = false;
    this.disabled = false;
    this.selectedValue = null;

    this.onChangeCb =
    /**
    * @return {?}
    */
    function () {};

    this.onTouchedCb =
    /**
    * @return {?}
    */
    function () {};

    this.onClickWrapper =
    /**
    * @param {?} event
    * @return {?}
    */
    function (event) {
      return _this2.onClick(event);
    };

    this.onAnimateWrapper =
    /**
    * @param {?} reason
    * @return {?}
    */
    function (reason) {
      return _this2.animationEnd(reason);
    };

    this.opts = this.config.getDefaultConfig();
    this.parseOptions(this.opts);
  }
  /**
   * @param {?} event
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(AngularMyDatePickerDirective, [{
    key: "onKeyUp",
    value: function onKeyUp(event) {
      /** @type {?} */
      var keyCode = this.utilService.getKeyCodeFromEvent(event);

      if (this.ignoreKeyPress(keyCode)) {
        return;
      }

      if (keyCode === KeyCode.esc) {
        this.closeSelector(CalToggle.CloseByEsc);
      } else {
        var _this$opts11 = this.opts,
            dateRange = _this$opts11.dateRange,
            dateFormat = _this$opts11.dateFormat,
            monthLabels = _this$opts11.monthLabels,
            dateRangeDatesDelimiter = _this$opts11.dateRangeDatesDelimiter;
        /** @type {?} */

        var value = this.getHostValue();
        /** @type {?} */

        var dateModel = null;
        /** @type {?} */

        var valid = false;
        /** @type {?} */

        var validateOpts = null;

        if (!dateRange) {
          validateOpts = {
            validateDisabledDates: true,
            selectedValue: this.utilService.getSelectedValue(this.selectedValue, false)
          };
          /** @type {?} */

          var date = this.utilService.isDateValid(value, this.opts, validateOpts);
          valid = this.utilService.isInitializedDate(date);

          if (valid) {
            dateModel = this.utilService.getDateModel(date, null, dateFormat, monthLabels, dateRangeDatesDelimiter);
          }
        } else {
          validateOpts = {
            validateDisabledDates: true,
            selectedValue: this.utilService.getSelectedValue(this.selectedValue, true)
          };
          /** @type {?} */

          var range = this.utilService.isDateValidDateRange(value, this.opts, validateOpts);
          var begin = range.begin,
              end = range.end;
          valid = this.utilService.isInitializedDate(begin) && this.utilService.isInitializedDate(end);

          if (valid) {
            dateModel = this.utilService.getDateModel(null, range, dateFormat, monthLabels, dateRangeDatesDelimiter);
          }
        }

        this.onChangeCb(dateModel);
        this.emitInputFieldChanged(value, valid);
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "onBlur",
    value: function onBlur() {
      var _this$opts12 = this.opts,
          inputFieldValidation = _this$opts12.inputFieldValidation,
          dateRange = _this$opts12.dateRange,
          dateFormat = _this$opts12.dateFormat,
          monthLabels = _this$opts12.monthLabels,
          dateRangeDatesDelimiter = _this$opts12.dateRangeDatesDelimiter,
          closeSelectorOnDateSelect = _this$opts12.closeSelectorOnDateSelect;

      if (inputFieldValidation) {
        /** @type {?} */
        var value = this.getHostValue();
        /** @type {?} */

        var valid = false;
        /** @type {?} */

        var validateOpts = null;

        if (!dateRange) {
          validateOpts = {
            validateDisabledDates: true,
            selectedValue: this.utilService.getSelectedValue(this.selectedValue, false)
          };
          /** @type {?} */

          var date = this.utilService.isDateValid(value, this.opts, validateOpts);
          valid = this.utilService.isInitializedDate(date);

          if (valid && this.hostText !== value) {
            // Valid date

            /** @type {?} */
            var dateModel = this.utilService.getDateModel(date, null, dateFormat, monthLabels, dateRangeDatesDelimiter);
            this.emitDateChanged(dateModel);
            this.updateModel(dateModel);

            if (closeSelectorOnDateSelect) {
              this.closeSelector(CalToggle.CloseByDateSel);
            }
          }
        } else {
          validateOpts = {
            validateDisabledDates: true,
            selectedValue: this.utilService.getSelectedValue(this.selectedValue, true)
          };
          /** @type {?} */

          var _dateRange = this.utilService.isDateValidDateRange(value, this.opts, validateOpts);

          var begin = _dateRange.begin,
              end = _dateRange.end;
          valid = this.utilService.isInitializedDate(begin) && this.utilService.isInitializedDate(end);

          if (valid && this.hostText !== value) {
            // Valid date range

            /** @type {?} */
            var _dateModel = this.utilService.getDateModel(null, _dateRange, dateFormat, monthLabels, dateRangeDatesDelimiter);

            this.emitDateChanged(_dateModel);
            this.updateModel(_dateModel);

            if (closeSelectorOnDateSelect) {
              this.closeSelector(CalToggle.CloseByDateSel);
            }
          }
        }

        if (!valid && this.hostText !== value) {
          if (value === EMPTY_STR) {
            this.clearDate();
          } else {
            this.onChangeCb(null);
          }
        }

        this.hostText = value;
      }

      this.onTouchedCb();
    }
    /**
     * @private
     * @param {?} event
     * @return {?}
     */

  }, {
    key: "onClick",
    value: function onClick(event) {
      if (this.opts.closeSelectorOnDocumentClick && !this.preventClose && event.target && this.cRef && this.elem.nativeElement !== event.target && !this.cRef.location.nativeElement.contains(event.target) && !this.disabled) {
        this.closeSelector(CalToggle.CloseByOutClick);
      }
    }
    /**
     * @param {?} changes
     * @return {?}
     */

  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.hasOwnProperty(LOCALE)) {
        this.setLocaleOptions();
      }

      if (changes.hasOwnProperty(DEFAULT_MONTH)) {
        /** @type {?} */
        var dm = changes[DEFAULT_MONTH].currentValue;

        if (typeof dm === OBJECT) {
          if (!dm.overrideSelection) {
            dm.overrideSelection = false;
          }
        } else {
          dm = {
            defMonth: dm,
            overrideSelection: false
          };
        }

        this.defaultMonth = dm;
      }

      if (changes.hasOwnProperty(OPTIONS)) {
        this.parseOptions(changes[OPTIONS].currentValue);
      }

      if (this.cRef) {
        this.cRef.instance.refreshComponent(this.opts, this.defaultMonth, this.selectedValue, this.getHostValue());
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.closeCalendar();
    }
    /**
     * @return {?}
     */

  }, {
    key: "setLocaleOptions",
    value: function setLocaleOptions() {
      var _this3 = this;

      /** @type {?} */
      var opts = this.localeService.getLocaleOptions(this.locale);
      Object.keys(opts).forEach(
      /**
      * @param {?} k
      * @return {?}
      */
      function (k) {
        /** @type {?} */
        _this3.opts[k] = opts[k];
      });
    }
    /**
     * @param {?} opts
     * @return {?}
     */

  }, {
    key: "parseOptions",
    value: function parseOptions(opts) {
      var _this4 = this;

      if (opts) {
        Object.keys(opts).forEach(
        /**
        * @param {?} k
        * @return {?}
        */
        function (k) {
          /** @type {?} */
          _this4.opts[k] = opts[k];
        });
      }

      var _this$opts13 = this.opts,
          minYear = _this$opts13.minYear,
          maxYear = _this$opts13.maxYear,
          openSelectorTopOfInput = _this$opts13.openSelectorTopOfInput,
          inline = _this$opts13.inline;

      if (minYear < Year.min) {
        this.opts.minYear = Year.min;
      }

      if (maxYear > Year.max) {
        this.opts.maxYear = Year.max;
      }

      if (openSelectorTopOfInput || inline) {
        this.opts.showSelectorArrow = false;
      }

      if (inline) {
        this.openCalendar();
      }
    }
    /**
     * @param {?} value
     * @return {?}
     */

  }, {
    key: "writeValue",
    value: function writeValue(value) {
      if (this.disabled) {
        return;
      }
      /** @type {?} */


      var validateOpts = null;
      var _this$opts14 = this.opts,
          dateFormat = _this$opts14.dateFormat,
          monthLabels = _this$opts14.monthLabels,
          dateRangeDatesDelimiter = _this$opts14.dateRangeDatesDelimiter,
          inline = _this$opts14.inline;

      if (!value) {
        this.setHostValue(EMPTY_STR);
        this.emitInputFieldChanged(EMPTY_STR, false);

        if (this.cRef) {
          this.cRef.instance.resetDateValue();
        }
      } else if (!value.isRange && value.singleDate) {
        // single date
        var _value$singleDate = value.singleDate,
            date = _value$singleDate.date,
            jsDate = _value$singleDate.jsDate;

        if (!date) {
          date = this.utilService.jsDateToMyDate(jsDate);
        }
        /** @type {?} */


        var formatted = this.utilService.formatDate(date, dateFormat, monthLabels);
        validateOpts = {
          validateDisabledDates: false,
          selectedValue: this.utilService.getSelectedValue(this.selectedValue, false)
        };
        /** @type {?} */

        var valid = this.utilService.isInitializedDate(this.utilService.isDateValid(formatted, this.opts, validateOpts));

        if (valid) {
          this.setHostValue(formatted);
          this.emitInputFieldChanged(formatted, valid);
          this.setSelectedValue(this.utilService.getDateModel(date, null, dateFormat, monthLabels, dateRangeDatesDelimiter));

          if (this.cRef) {
            this.cRef.instance.refreshComponent(this.opts, this.defaultMonth, this.selectedValue, this.getHostValue());
          }
        }
      } else if (value.isRange && value.dateRange) {
        // date range
        var _value$dateRange = value.dateRange,
            beginDate = _value$dateRange.beginDate,
            beginJsDate = _value$dateRange.beginJsDate,
            endDate = _value$dateRange.endDate,
            endJsDate = _value$dateRange.endJsDate;

        if (!beginDate || !endDate) {
          beginDate = this.utilService.jsDateToMyDate(beginJsDate);
          endDate = this.utilService.jsDateToMyDate(endJsDate);
        }
        /** @type {?} */


        var _formatted = this.utilService.formatDate(beginDate, dateFormat, monthLabels) + dateRangeDatesDelimiter + this.utilService.formatDate(endDate, dateFormat, monthLabels);

        validateOpts = {
          validateDisabledDates: false,
          selectedValue: this.utilService.getSelectedValue(this.selectedValue, true)
        };

        var _this$utilService$isD2 = this.utilService.isDateValidDateRange(_formatted, this.opts, validateOpts),
            begin = _this$utilService$isD2.begin,
            end = _this$utilService$isD2.end;
        /** @type {?} */


        var _valid = this.utilService.isInitializedDate(begin) && this.utilService.isInitializedDate(end);

        if (_valid) {
          this.setHostValue(_formatted);
          this.emitInputFieldChanged(_formatted, _valid);
          /** @type {?} */

          var dateRange = {
            begin: beginDate,
            end: endDate
          };
          this.setSelectedValue(this.utilService.getDateModel(null, dateRange, dateFormat, monthLabels, dateRangeDatesDelimiter));

          if (this.cRef) {
            this.cRef.instance.refreshComponent(this.opts, this.defaultMonth, this.selectedValue, this.getHostValue());
          }
        }
      }
    }
    /**
     * @param {?} fn
     * @return {?}
     */

  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this.onChangeCb = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */

  }, {
    key: "registerOnTouched",
    value: function registerOnTouched(fn) {
      this.onTouchedCb = fn;
    }
    /**
     * @param {?} isDisabled
     * @return {?}
     */

  }, {
    key: "setDisabledState",
    value: function setDisabledState(isDisabled) {
      this.disabled = isDisabled;
      this.renderer.setProperty(this.elem.nativeElement, DISABLED, isDisabled);

      if (isDisabled) {
        this.closeCalendar();
      }
    }
    /**
     * @param {?} c
     * @return {?}
     */

  }, {
    key: "validate",
    value: function validate(c) {
      /** @type {?} */
      var value = this.getHostValue();

      if (value === null || value === EMPTY_STR) {
        return null;
      }
      /** @type {?} */


      var validateOpts = null;

      if (!this.opts.dateRange) {
        validateOpts = {
          validateDisabledDates: true,
          selectedValue: this.utilService.getSelectedValue(this.selectedValue, false)
        };
        /** @type {?} */

        var date = this.utilService.isDateValid(value, this.opts, validateOpts);

        if (!this.utilService.isInitializedDate(date)) {
          return {
            invalidDateFormat: true
          };
        }
      } else {
        validateOpts = {
          validateDisabledDates: true,
          selectedValue: this.utilService.getSelectedValue(this.selectedValue, true)
        };

        var _this$utilService$isD3 = this.utilService.isDateValidDateRange(value, this.opts, validateOpts),
            begin = _this$utilService$isD3.begin,
            end = _this$utilService$isD3.end;

        if (!this.utilService.isInitializedDate(begin) || !this.utilService.isInitializedDate(end)) {
          return {
            invalidDateFormat: true
          };
        }
      }

      return null;
    }
    /**
     * @return {?}
     */

  }, {
    key: "openCalendar",
    value: function openCalendar() {
      var _this5 = this;

      if (this.disabled) {
        return;
      }

      this.preventClose = true;
      this.cdr.detectChanges();

      if (this.cRef === null) {
        this.cRef = this.vcRef.createComponent(this.cfr.resolveComponentFactory(CalendarComponent));
        this.appendSelector(this.cRef.location.nativeElement);
        this.cRef.instance.initializeComponent(this.opts, this.defaultMonth, this.selectedValue, this.getHostValue(), this.getSelectorPosition(this.elem.nativeElement),
        /**
        * @param {?} dm
        * @param {?} close
        * @return {?}
        */
        function (dm, close) {
          _this5.focusToInput();

          _this5.emitDateChanged(dm);

          _this5.emitInputFieldChanged(_this5.utilService.getFormattedDate(dm), true);

          _this5.updateModel(dm);

          if (close) {
            _this5.closeSelector(CalToggle.CloseByDateSel);
          }
        },
        /**
        * @param {?} cvc
        * @return {?}
        */
        function (cvc) {
          _this5.emitCalendarChanged(cvc);
        },
        /**
        * @param {?} rds
        * @return {?}
        */
        function (rds) {
          _this5.emitRangeDateSelection(rds);
        },
        /**
        * @param {?} va
        * @return {?}
        */
        function (va) {
          _this5.emitViewActivated(va);
        },
        /**
        * @return {?}
        */
        function () {
          _this5.closeSelector(CalToggle.CloseByEsc);
        });
        this.emitCalendarToggle(CalToggle.Open);

        if (!this.opts.inline) {
          document.addEventListener(CLICK, this.onClickWrapper);
        }
      }

      setTimeout(
      /**
      * @return {?}
      */
      function () {
        _this5.preventClose = false;
      }, PREVENT_CLOSE_TIMEOUT);
    }
    /**
     * @return {?}
     */

  }, {
    key: "closeCalendar",
    value: function closeCalendar() {
      this.closeSelector(CalToggle.CloseByCalBtn);
    }
    /**
     * @return {?}
     */

  }, {
    key: "toggleCalendar",
    value: function toggleCalendar() {
      if (this.disabled) {
        return;
      }
      /** @type {?} */


      var isOpen = this.cRef === null;

      if (isOpen) {
        this.openCalendar();
      } else {
        this.closeSelector(CalToggle.CloseByCalBtn);
      }

      return isOpen;
    }
    /**
     * @return {?}
     */

  }, {
    key: "clearDate",
    value: function clearDate() {
      if (this.disabled) {
        return;
      }

      var inline = this.opts.inline;
      this.setHostValue(EMPTY_STR);
      this.emitDateChanged({
        isRange: this.opts.dateRange,
        singleDate: {
          date: this.utilService.resetDate(),
          jsDate: null,
          formatted: EMPTY_STR,
          epoc: 0
        },
        dateRange: {
          beginDate: this.utilService.resetDate(),
          beginJsDate: null,
          beginEpoc: 0,
          endDate: this.utilService.resetDate(),
          endJsDate: null,
          endEpoc: 0,
          formatted: EMPTY_STR
        }
      });
      this.onChangeCb(null);
      this.onTouchedCb();

      if (this.cRef) {
        this.cRef.instance.clearDate();
      }

      if (!inline) {
        this.closeSelector(CalToggle.CloseByCalBtn);
      }
    }
    /**
     * @return {?}
     */

  }, {
    key: "isDateValid",
    value: function isDateValid() {
      /** @type {?} */
      var value = this.getHostValue();

      if (value === null || value === EMPTY_STR) {
        return false;
      }
      /** @type {?} */


      var validateOpts = null;

      if (!this.opts.dateRange) {
        validateOpts = {
          validateDisabledDates: true,
          selectedValue: this.utilService.getSelectedValue(this.selectedValue, false)
        };
        /** @type {?} */

        var date = this.utilService.isDateValid(value, this.opts, validateOpts);

        if (this.utilService.isInitializedDate(date)) {
          this.emitInputFieldChanged(value, true);
          return true;
        }
      } else {
        validateOpts = {
          validateDisabledDates: true,
          selectedValue: this.utilService.getSelectedValue(this.selectedValue, true)
        };

        var _this$utilService$isD4 = this.utilService.isDateValidDateRange(value, this.opts, validateOpts),
            begin = _this$utilService$isD4.begin,
            end = _this$utilService$isD4.end;

        if (this.utilService.isInitializedDate(begin) && this.utilService.isInitializedDate(end)) {
          this.emitInputFieldChanged(value, true);
          return true;
        }
      }

      this.emitInputFieldChanged(value, false);
      return false;
    }
    /**
     * @param {?} headerAction
     * @return {?}
     */

  }, {
    key: "headerAction",
    value: function headerAction(_headerAction2) {
      if (this.cRef) {
        this.cRef.instance.headerAction(_headerAction2);
      }
    }
    /**
     * @param {?} value
     * @return {?}
     */

  }, {
    key: "setHostValue",
    value: function setHostValue(value) {
      var divHostElement = this.opts.divHostElement;
      this.hostText = value;
      /** @type {?} */

      var valueType = !divHostElement.enabled ? VALUE : INNER_HTML;
      value = valueType === INNER_HTML && value === EMPTY_STR ? divHostElement.placeholder : value;
      this.renderer.setProperty(this.elem.nativeElement, valueType, value);
    }
    /**
     * @private
     * @param {?} keyCode
     * @return {?}
     */

  }, {
    key: "ignoreKeyPress",
    value: function ignoreKeyPress(keyCode) {
      return keyCode === KeyCode.leftArrow || keyCode === KeyCode.rightArrow || keyCode === KeyCode.upArrow || keyCode === KeyCode.downArrow || keyCode === KeyCode.tab || keyCode === KeyCode.shift;
    }
    /**
     * @private
     * @param {?} reason
     * @return {?}
     */

  }, {
    key: "animationEnd",
    value: function animationEnd(reason) {
      if (this.cRef) {
        this.cRef.instance.selectorEl.nativeElement.removeEventListener(ANIMATION_END, this.onAnimateWrapper);
        this.removeComponent();
        this.emitCalendarToggle(reason);
      }
    }
    /**
     * @private
     * @param {?} reason
     * @return {?}
     */

  }, {
    key: "closeSelector",
    value: function closeSelector(reason) {
      var _this$opts15 = this.opts,
          inline = _this$opts15.inline,
          calendarAnimation = _this$opts15.calendarAnimation;

      if (this.cRef && !inline) {
        if (calendarAnimation.out !== CalAnimation.None) {
          var instance = this.cRef.instance;
          instance.selectorEl.nativeElement.addEventListener(ANIMATION_END, this.onAnimateWrapper.bind(this, reason));
          instance.setCalendarAnimation(calendarAnimation, false); // In case the animationend event is not fired

          setTimeout(this.onAnimateWrapper.bind(this, reason), ANIMATION_TIMEOUT);
        } else {
          this.removeComponent();
          this.emitCalendarToggle(reason);
        }

        document.removeEventListener(CLICK, this.onClickWrapper);
      }
    }
    /**
     * @private
     * @return {?}
     */

  }, {
    key: "removeComponent",
    value: function removeComponent() {
      if (this.vcRef !== null) {
        this.vcRef.remove(this.vcRef.indexOf(this.cRef.hostView));
        this.cRef = null;
      }
    }
    /**
     * @private
     * @param {?} model
     * @return {?}
     */

  }, {
    key: "updateModel",
    value: function updateModel(model) {
      this.setHostValue(this.utilService.getFormattedDate(model));
      this.onChangeCb(model);
      this.onTouchedCb();
    }
    /**
     * @private
     * @return {?}
     */

  }, {
    key: "getHostValue",
    value: function getHostValue() {
      var _this$elem$nativeElem = this.elem.nativeElement,
          value = _this$elem$nativeElem.value,
          innerHTML = _this$elem$nativeElem.innerHTML;
      return !this.opts.divHostElement.enabled ? value : innerHTML;
    }
    /**
     * @private
     * @return {?}
     */

  }, {
    key: "focusToInput",
    value: function focusToInput() {
      var _this6 = this;

      var _this$opts16 = this.opts,
          focusInputOnDateSelect = _this$opts16.focusInputOnDateSelect,
          divHostElement = _this$opts16.divHostElement;

      if (focusInputOnDateSelect && !divHostElement.enabled) {
        setTimeout(
        /**
        * @return {?}
        */
        function () {
          _this6.elem.nativeElement.focus();
        });
      }
    }
    /**
     * @private
     * @param {?} dateModel
     * @return {?}
     */

  }, {
    key: "emitDateChanged",
    value: function emitDateChanged(dateModel) {
      this.dateChanged.emit(dateModel);
      this.setSelectedValue(dateModel);
    }
    /**
     * @private
     * @param {?} dateModel
     * @return {?}
     */

  }, {
    key: "setSelectedValue",
    value: function setSelectedValue(dateModel) {
      var isRange = dateModel.isRange,
          dateRange = dateModel.dateRange,
          singleDate = dateModel.singleDate;
      this.selectedValue = isRange ? dateRange : singleDate;
    }
    /**
     * @private
     * @param {?} value
     * @param {?} valid
     * @return {?}
     */

  }, {
    key: "emitInputFieldChanged",
    value: function emitInputFieldChanged(value, valid) {
      this.inputFieldChanged.emit({
        value: value,
        dateFormat: this.opts.dateFormat,
        valid: valid
      });
    }
    /**
     * @private
     * @param {?} cvc
     * @return {?}
     */

  }, {
    key: "emitCalendarChanged",
    value: function emitCalendarChanged(cvc) {
      this.calendarViewChanged.emit(cvc);
    }
    /**
     * @private
     * @param {?} rds
     * @return {?}
     */

  }, {
    key: "emitRangeDateSelection",
    value: function emitRangeDateSelection(rds) {
      this.rangeDateSelection.emit(rds);
    }
    /**
     * @private
     * @param {?} va
     * @return {?}
     */

  }, {
    key: "emitViewActivated",
    value: function emitViewActivated(va) {
      this.viewActivated.emit(va);
    }
    /**
     * @private
     * @param {?} reason
     * @return {?}
     */

  }, {
    key: "emitCalendarToggle",
    value: function emitCalendarToggle(reason) {
      this.calendarToggle.emit(reason);
    }
    /**
     * @private
     * @param {?} elem
     * @return {?}
     */

  }, {
    key: "appendSelector",
    value: function appendSelector(elem) {
      if (this.opts.appendSelectorToBody) {
        document.querySelector(BODY).appendChild(elem);
      }
    }
    /**
     * @private
     * @param {?} elem
     * @return {?}
     */

  }, {
    key: "getSelectorPosition",
    value: function getSelectorPosition(elem) {
      /** @type {?} */
      var top = 0;
      /** @type {?} */

      var left = 0;
      var _this$opts17 = this.opts,
          appendSelectorToBody = _this$opts17.appendSelectorToBody,
          openSelectorTopOfInput = _this$opts17.openSelectorTopOfInput,
          selectorHeight = _this$opts17.selectorHeight,
          selectorWidth = _this$opts17.selectorWidth,
          showSelectorArrow = _this$opts17.showSelectorArrow,
          alignSelectorRight = _this$opts17.alignSelectorRight;

      if (appendSelectorToBody) {
        /** @type {?} */
        var b = document.body.getBoundingClientRect();
        /** @type {?} */

        var e = elem.getBoundingClientRect();
        top = e.top - b.top;
        left = e.left - b.left;
      }

      if (openSelectorTopOfInput) {
        top = top - this.getSelectorDimension(selectorHeight) - 2;
      } else {
        top = top + elem.offsetHeight + (showSelectorArrow ? 12 : 2);
      }

      if (alignSelectorRight) {
        left = left + elem.offsetWidth - this.getSelectorDimension(selectorWidth);
      }

      return {
        top: top + PX,
        left: left + PX
      };
    }
    /**
     * @private
     * @param {?} value
     * @return {?}
     */

  }, {
    key: "getSelectorDimension",
    value: function getSelectorDimension(value) {
      return Number(value.replace(PX, EMPTY_STR));
    }
  }]);

  return AngularMyDatePickerDirective;
}();

AngularMyDatePickerDirective.ɵfac = function AngularMyDatePickerDirective_Factory(t) {
  return new (t || AngularMyDatePickerDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](LocaleService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](UtilService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ComponentFactoryResolver"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](DefaultConfigService));
};

AngularMyDatePickerDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: AngularMyDatePickerDirective,
  selectors: [["", "angular-mydatepicker", ""]],
  hostBindings: function AngularMyDatePickerDirective_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("keyup", function AngularMyDatePickerDirective_keyup_HostBindingHandler($event) {
        return ctx.onKeyUp($event);
      })("blur", function AngularMyDatePickerDirective_blur_HostBindingHandler() {
        return ctx.onBlur();
      });
    }
  },
  inputs: {
    defaultMonth: "defaultMonth",
    options: "options",
    locale: "locale"
  },
  outputs: {
    dateChanged: "dateChanged",
    inputFieldChanged: "inputFieldChanged",
    calendarViewChanged: "calendarViewChanged",
    calendarToggle: "calendarToggle",
    rangeDateSelection: "rangeDateSelection",
    viewActivated: "viewActivated"
  },
  exportAs: ["angular-mydatepicker"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([UtilService, LocaleService, DefaultConfigService, NGX_DP_VALUE_ACCESSOR, NGX_DP_VALIDATORS]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]]
});
/** @nocollapse */

AngularMyDatePickerDirective.ctorParameters = function () {
  return [{
    type: LocaleService
  }, {
    type: UtilService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ComponentFactoryResolver"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
  }, {
    type: DefaultConfigService
  }];
};

AngularMyDatePickerDirective.propDecorators = {
  options: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  locale: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  defaultMonth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  dateChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  inputFieldChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  calendarViewChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  calendarToggle: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  rangeDateSelection: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  viewActivated: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  onKeyUp: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["HostListener"],
    args: [KEYUP, ["$event"]]
  }],
  onBlur: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["HostListener"],
    args: [BLUR]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](AngularMyDatePickerDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"],
    args: [{
      selector: "[angular-mydatepicker]",
      exportAs: "angular-mydatepicker",
      providers: [UtilService, LocaleService, DefaultConfigService, NGX_DP_VALUE_ACCESSOR, NGX_DP_VALIDATORS]
    }]
  }], function () {
    return [{
      type: LocaleService
    }, {
      type: UtilService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ComponentFactoryResolver"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
    }, {
      type: DefaultConfigService
    }];
  }, {
    defaultMonth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    dateChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    inputFieldChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    calendarViewChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    calendarToggle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    rangeDateSelection: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    viewActivated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],

    /**
     * @param {?} event
     * @return {?}
     */
    onKeyUp: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["HostListener"],
      args: [KEYUP, ["$event"]]
    }],

    /**
     * @return {?}
     */
    onBlur: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["HostListener"],
      args: [BLUR]
    }],
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    locale: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }]
  });
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var AngularMyDatePickerCalendarDirective = /*#__PURE__*/function () {
  /**
   * @param {?} el
   */
  function AngularMyDatePickerCalendarDirective(el) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, AngularMyDatePickerCalendarDirective);

    this.el = el;
  }
  /**
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(AngularMyDatePickerCalendarDirective, [{
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this$libAngularMyDat = this.libAngularMyDatePickerCalendar,
          inline = _this$libAngularMyDat.inline,
          selectorHeight = _this$libAngularMyDat.selectorHeight,
          selectorWidth = _this$libAngularMyDat.selectorWidth,
          selectorPos = _this$libAngularMyDat.selectorPos;
      var style = this.el.nativeElement.style;
      style.height = selectorHeight;
      style.width = selectorWidth;
      style.top = !inline ? selectorPos.top : "0";
      style.left = !inline ? selectorPos.left : "0";
    }
  }]);

  return AngularMyDatePickerCalendarDirective;
}();

AngularMyDatePickerCalendarDirective.ɵfac = function AngularMyDatePickerCalendarDirective_Factory(t) {
  return new (t || AngularMyDatePickerCalendarDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]));
};

AngularMyDatePickerCalendarDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: AngularMyDatePickerCalendarDirective,
  selectors: [["", "libAngularMyDatePickerCalendar", ""]],
  inputs: {
    libAngularMyDatePickerCalendar: "libAngularMyDatePickerCalendar"
  }
});
/** @nocollapse */

AngularMyDatePickerCalendarDirective.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
  }];
};

AngularMyDatePickerCalendarDirective.propDecorators = {
  libAngularMyDatePickerCalendar: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](AngularMyDatePickerCalendarDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"],
    args: [{
      selector: "[libAngularMyDatePickerCalendar]"
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
    }];
  }, {
    libAngularMyDatePickerCalendar: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }]
  });
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var AngularMyDatePickerModule = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(function AngularMyDatePickerModule() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, AngularMyDatePickerModule);
});

AngularMyDatePickerModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: AngularMyDatePickerModule
});
AngularMyDatePickerModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  factory: function AngularMyDatePickerModule_Factory(t) {
    return new (t || AngularMyDatePickerModule)();
  },
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](AngularMyDatePickerModule, {
    declarations: function declarations() {
      return [CalendarComponent, SelectionBarComponent, DayViewComponent, MonthViewComponent, YearViewComponent, FooterBarComponent, AngularMyDatePickerDirective, AngularMyDatePickerCalendarDirective];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"]];
    },
    exports: function exports() {
      return [CalendarComponent, SelectionBarComponent, DayViewComponent, MonthViewComponent, YearViewComponent, FooterBarComponent, AngularMyDatePickerDirective, AngularMyDatePickerCalendarDirective];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](AngularMyDatePickerModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"]],
      declarations: [CalendarComponent, SelectionBarComponent, DayViewComponent, MonthViewComponent, YearViewComponent, FooterBarComponent, AngularMyDatePickerDirective, AngularMyDatePickerCalendarDirective],
      entryComponents: [CalendarComponent],
      exports: [CalendarComponent, SelectionBarComponent, DayViewComponent, MonthViewComponent, YearViewComponent, FooterBarComponent, AngularMyDatePickerDirective, AngularMyDatePickerCalendarDirective]
    }]
  }], null, null);
})();
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */




/***/ }),

/***/ "./node_modules/base-64/base64.js":
/*!****************************************!*\
  !*** ./node_modules/base-64/base64.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */
;

(function (root) {
  // Detect free variables `exports`.
  var freeExports =  true && exports; // Detect free variable `module`.

  var freeModule =  true && module && module.exports == freeExports && module; // Detect free variable `global`, from Node.js or Browserified code, and use
  // it as `root`.

  var freeGlobal = typeof global == 'object' && global;

  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
    root = freeGlobal;
  }
  /*--------------------------------------------------------------------------*/


  var InvalidCharacterError = function InvalidCharacterError(message) {
    this.message = message;
  };

  InvalidCharacterError.prototype = new Error();
  InvalidCharacterError.prototype.name = 'InvalidCharacterError';

  var error = function error(message) {
    // Note: the error messages used throughout this file match those used by
    // the native `atob`/`btoa` implementation in Chromium.
    throw new InvalidCharacterError(message);
  };

  var TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'; // http://whatwg.org/html/common-microsyntaxes.html#space-character

  var REGEX_SPACE_CHARACTERS = /[\t\n\f\r ]/g; // `decode` is designed to be fully compatible with `atob` as described in the
  // HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob
  // The optimized base64-decoding algorithm used is based on @atk’s excellent
  // implementation. https://gist.github.com/atk/1020396

  var decode = function decode(input) {
    input = String(input).replace(REGEX_SPACE_CHARACTERS, '');
    var length = input.length;

    if (length % 4 == 0) {
      input = input.replace(/==?$/, '');
      length = input.length;
    }

    if (length % 4 == 1 || // http://whatwg.org/C#alphanumeric-ascii-characters
    /[^+a-zA-Z0-9/]/.test(input)) {
      error('Invalid character: the string to be decoded is not correctly encoded.');
    }

    var bitCounter = 0;
    var bitStorage;
    var buffer;
    var output = '';
    var position = -1;

    while (++position < length) {
      buffer = TABLE.indexOf(input.charAt(position));
      bitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer; // Unless this is the first of a group of 4 characters…

      if (bitCounter++ % 4) {
        // …convert the first 8 bits to a single ASCII character.
        output += String.fromCharCode(0xFF & bitStorage >> (-2 * bitCounter & 6));
      }
    }

    return output;
  }; // `encode` is designed to be fully compatible with `btoa` as described in the
  // HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa


  var encode = function encode(input) {
    input = String(input);

    if (/[^\0-\xFF]/.test(input)) {
      // Note: no need to special-case astral symbols here, as surrogates are
      // matched, and the input is supposed to only contain ASCII anyway.
      error('The string to be encoded contains characters outside of the ' + 'Latin1 range.');
    }

    var padding = input.length % 3;
    var output = '';
    var position = -1;
    var a;
    var b;
    var c;
    var d;
    var buffer; // Make sure any padding is handled outside of the loop.

    var length = input.length - padding;

    while (++position < length) {
      // Read three bytes, i.e. 24 bits.
      a = input.charCodeAt(position) << 16;
      b = input.charCodeAt(++position) << 8;
      c = input.charCodeAt(++position);
      buffer = a + b + c; // Turn the 24 bits into four chunks of 6 bits each, and append the
      // matching character for each of them to the output.

      output += TABLE.charAt(buffer >> 18 & 0x3F) + TABLE.charAt(buffer >> 12 & 0x3F) + TABLE.charAt(buffer >> 6 & 0x3F) + TABLE.charAt(buffer & 0x3F);
    }

    if (padding == 2) {
      a = input.charCodeAt(position) << 8;
      b = input.charCodeAt(++position);
      buffer = a + b;
      output += TABLE.charAt(buffer >> 10) + TABLE.charAt(buffer >> 4 & 0x3F) + TABLE.charAt(buffer << 2 & 0x3F) + '=';
    } else if (padding == 1) {
      buffer = input.charCodeAt(position);
      output += TABLE.charAt(buffer >> 2) + TABLE.charAt(buffer << 4 & 0x3F) + '==';
    }

    return output;
  };

  var base64 = {
    'encode': encode,
    'decode': decode,
    'version': '0.1.0'
  }; // Some AMD build optimizers, like r.js, check for specific condition patterns
  // like the following:

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return base64;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else { var key; }
})(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty,
    prefix = '~';
/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */

function Events() {} //
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//


if (Object.create) {
  Events.prototype = Object.create(null); //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //

  if (!new Events().__proto__) prefix = false;
}
/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */


function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}
/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */


function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once),
      evt = prefix ? prefix + event : event;
  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);else emitter._events[evt] = [emitter._events[evt], listener];
  return emitter;
}
/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */


function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();else delete emitter._events[evt];
}
/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */


function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}
/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */


EventEmitter.prototype.eventNames = function eventNames() {
  var names = [],
      events,
      name;
  if (this._eventsCount === 0) return names;

  for (name in events = this._events) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};
/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */


EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event,
      handlers = this._events[evt];
  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};
/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */


EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event,
      listeners = this._events[evt];
  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};
/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */


EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;
  if (!this._events[evt]) return false;
  var listeners = this._events[evt],
      len = arguments.length,
      args,
      i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1:
        return listeners.fn.call(listeners.context), true;

      case 2:
        return listeners.fn.call(listeners.context, a1), true;

      case 3:
        return listeners.fn.call(listeners.context, a1, a2), true;

      case 4:
        return listeners.fn.call(listeners.context, a1, a2, a3), true;

      case 5:
        return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;

      case 6:
        return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len - 1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length,
        j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1:
          listeners[i].fn.call(listeners[i].context);
          break;

        case 2:
          listeners[i].fn.call(listeners[i].context, a1);
          break;

        case 3:
          listeners[i].fn.call(listeners[i].context, a1, a2);
          break;

        case 4:
          listeners[i].fn.call(listeners[i].context, a1, a2, a3);
          break;

        default:
          if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {
            args[j - 1] = arguments[j];
          }
          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};
/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */


EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};
/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */


EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};
/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */


EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;
  if (!this._events[evt]) return this;

  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
        events.push(listeners[i]);
      }
    } //
    // Reset the array, or remove it completely if we have no more listeners.
    //


    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;else clearEvent(this, evt);
  }

  return this;
};
/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */


EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
}; //
// Alias methods names because people roll like that.
//


EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on; //
// Expose the prefix.
//

EventEmitter.prefixed = prefix; //
// Allow `EventEmitter` to be imported as module namespace.
//

EventEmitter.EventEmitter = EventEmitter; //
// Expose the module.
//

if (true) {
  module.exports = EventEmitter;
}

/***/ }),

/***/ "./node_modules/fuzzy/lib/fuzzy.js":
/*!*****************************************!*\
  !*** ./node_modules/fuzzy/lib/fuzzy.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * Fuzzy
 * https://github.com/myork/fuzzy
 *
 * Copyright (c) 2012 Matt York
 * Licensed under the MIT license.
 */
(function () {
  var root = this;
  var fuzzy = {}; // Use in node or in browser

  if (true) {
    module.exports = fuzzy;
  } else {} // Return all elements of `array` that have a fuzzy
  // match against `pattern`.


  fuzzy.simpleFilter = function (pattern, array) {
    return array.filter(function (str) {
      return fuzzy.test(pattern, str);
    });
  }; // Does `pattern` fuzzy match `str`?


  fuzzy.test = function (pattern, str) {
    return fuzzy.match(pattern, str) !== null;
  }; // If `pattern` matches `str`, wrap each matching character
  // in `opts.pre` and `opts.post`. If no match, return null


  fuzzy.match = function (pattern, str, opts) {
    opts = opts || {};
    var patternIdx = 0,
        result = [],
        len = str.length,
        totalScore = 0,
        currScore = 0 // prefix
    ,
        pre = opts.pre || '' // suffix
    ,
        post = opts.post || '' // String to compare against. This might be a lowercase version of the
    // raw string
    ,
        compareString = opts.caseSensitive && str || str.toLowerCase(),
        ch;
    pattern = opts.caseSensitive && pattern || pattern.toLowerCase(); // For each character in the string, either add it to the result
    // or wrap in template if it's the next string in the pattern

    for (var idx = 0; idx < len; idx++) {
      ch = str[idx];

      if (compareString[idx] === pattern[patternIdx]) {
        ch = pre + ch + post;
        patternIdx += 1; // consecutive characters should increase the score more than linearly

        currScore += 1 + currScore;
      } else {
        currScore = 0;
      }

      totalScore += currScore;
      result[result.length] = ch;
    } // return rendered string if we have a match for every char


    if (patternIdx === pattern.length) {
      // if the string is an exact match with pattern, totalScore should be maxed
      totalScore = compareString === pattern ? Infinity : totalScore;
      return {
        rendered: result.join(''),
        score: totalScore
      };
    }

    return null;
  }; // The normal entry point. Filters `arr` for matches against `pattern`.
  // It returns an array with matching values of the type:
  //
  //     [{
  //         string:   '<b>lah' // The rendered string
  //       , index:    2        // The index of the element in `arr`
  //       , original: 'blah'   // The original element in `arr`
  //     }]
  //
  // `opts` is an optional argument bag. Details:
  //
  //    opts = {
  //        // string to put before a matching character
  //        pre:     '<b>'
  //
  //        // string to put after matching character
  //      , post:    '</b>'
  //
  //        // Optional function. Input is an entry in the given arr`,
  //        // output should be the string to test `pattern` against.
  //        // In this example, if `arr = [{crying: 'koala'}]` we would return
  //        // 'koala'.
  //      , extract: function(arg) { return arg.crying; }
  //    }


  fuzzy.filter = function (pattern, arr, opts) {
    if (!arr || arr.length === 0) {
      return [];
    }

    if (typeof pattern !== 'string') {
      return arr;
    }

    opts = opts || {};
    return arr.reduce(function (prev, element, idx, arr) {
      var str = element;

      if (opts.extract) {
        str = opts.extract(element);
      }

      var rendered = fuzzy.match(pattern, str, opts);

      if (rendered != null) {
        prev[prev.length] = {
          string: rendered.rendered,
          score: rendered.score,
          index: idx,
          original: element
        };
      }

      return prev;
    }, []) // Sort by score. Browsers are inconsistent wrt stable/unstable
    // sorting, so force stable by using the index in the case of tie.
    // See http://ofb.net/~sethml/is-sort-stable.html
    .sort(function (a, b) {
      var compare = b.score - a.score;
      if (compare) return compare;
      return a.index - b.index;
    });
  };
})();

/***/ }),

/***/ "./node_modules/is-plain-obj/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-plain-obj/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toString = Object.prototype.toString;

module.exports = function (x) {
  var prototype;
  return toString.call(x) === '[object Object]' && (prototype = Object.getPrototypeOf(x), prototype === null || prototype === Object.getPrototypeOf({}));
};

/***/ }),

/***/ "./node_modules/lodash.debounce/index.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash.debounce/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';
/** Used as references for various `Number` constants. */

var NAN = 0 / 0;
/** `Object#toString` result references. */

var symbolTag = '[object Symbol]';
/** Used to match leading and trailing whitespace. */

var reTrim = /^\s+|\s+$/g;
/** Used to detect bad signed hexadecimal string values. */

var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
/** Used to detect binary string values. */

var reIsBinary = /^0b[01]+$/i;
/** Used to detect octal string values. */

var reIsOctal = /^0o[0-7]+$/i;
/** Built-in method references without a dependency on `root`. */

var freeParseInt = parseInt;
/** Detect free variable `global` from Node.js. */

var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
/** Detect free variable `self`. */

var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */

var root = freeGlobal || freeSelf || Function('return this')();
/** Used for built-in method references. */

var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var objectToString = objectProto.toString;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMax = Math.max,
    nativeMin = Math.min;
/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */

var now = function now() {
  return root.Date.now();
};
/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */


function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  wait = toNumber(wait) || 0;

  if (isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;
    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time; // Start the timer for the trailing edge.

    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.

    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall;
    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.

    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }

  function timerExpired() {
    var time = now();

    if (shouldInvoke(time)) {
      return trailingEdge(time);
    } // Restart the timer.


    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.

    if (trailing && lastArgs) {
      return invokeFunc(time);
    }

    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }

    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(now());
  }

  function debounced() {
    var time = now(),
        isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }

      if (maxing) {
        // Handle invocations in a tight loop.
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }

    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }

    return result;
  }

  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */


function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */


function isObjectLike(value) {
  return !!value && typeof value == 'object';
}
/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */


function isSymbol(value) {
  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
}
/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */


function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }

  if (isSymbol(value)) {
    return NAN;
  }

  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? other + '' : other;
  }

  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }

  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

module.exports = debounce;

/***/ }),

/***/ "./node_modules/nanoid/index.browser.js":
/*!**********************************************!*\
  !*** ./node_modules/nanoid/index.browser.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// This file replaces `index.js` in bundlers like webpack or Rollup,
// according to `browser` config in `package.json`.
if (true) {
  // All bundlers will remove this block in production bundle
  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
    throw new Error('React Native does not have a built-in secure random generator. ' + 'If you don’t need unpredictable IDs, you can use `nanoid/non-secure`. ' + 'For secure ID install `expo-random` locally and use `nanoid/async`.');
  }

  if (typeof self === 'undefined' || !self.crypto && !self.msCrypto) {
    throw new Error('Your browser does not have secure random generator. ' + 'If you don’t need unpredictable IDs, you can use nanoid/non-secure.');
  }
}

var crypto = self.crypto || self.msCrypto; // This alphabet uses a-z A-Z 0-9 _- symbols.
// Symbols are generated for smaller size.
// -_zyxwvutsrqponmlkjihgfedcba9876543210ZYXWVUTSRQPONMLKJIHGFEDCBA

var url = '-_'; // Loop from 36 to 0 (from z to a and 9 to 0 in Base36).

var i = 36;

while (i--) {
  // 36 is radix. Number.prototype.toString(36) returns number
  // in Base36 representation. Base36 is like hex, but it uses 0–9 and a-z.
  url += i.toString(36);
} // Loop from 36 to 10 (from Z to A in Base36).


i = 36;

while (i-- - 10) {
  url += i.toString(36).toUpperCase();
}

module.exports = function (size) {
  var id = '';
  var bytes = crypto.getRandomValues(new Uint8Array(size || 21));
  i = size || 21; // Compact alternative for `for (var i = 0; i < size; i++)`

  while (i--) {
    // We can’t use bytes bigger than the alphabet. 63 is 00111111 bitmask.
    // This mask reduces random byte 0-255 to 0-63 values.
    // There is no need in `|| ''` and `* 1.6` hacks in here,
    // because bitmask trim bytes exact to alphabet size.
    id += url[bytes[i] & 63];
  }

  return id;
};

/***/ }),

/***/ "./node_modules/ngx-mapbox-gl/__ivy_ngcc__/fesm2015/ngx-mapbox-gl.js":
/*!***************************************************************************!*\
  !*** ./node_modules/ngx-mapbox-gl/__ivy_ngcc__/fesm2015/ngx-mapbox-gl.js ***!
  \***************************************************************************/
/*! exports provided: ControlComponent, CustomControl, GeoJSONSourceComponent, MAPBOX_API_KEY, MAPBOX_GEOCODER_API_KEY, MapComponent, MapService, NgxMapboxGLModule, ɵa, ɵb, ɵc, ɵd, ɵe, ɵf, ɵg, ɵh, ɵi, ɵj, ɵk, ɵl, ɵm, ɵn, ɵo, ɵp, ɵq, ɵr, ɵs, ɵt, ɵu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ControlComponent", function() { return ControlComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomControl", function() { return CustomControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeoJSONSourceComponent", function() { return GeoJSONSourceComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAPBOX_API_KEY", function() { return MAPBOX_API_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAPBOX_GEOCODER_API_KEY", function() { return MAPBOX_GEOCODER_API_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapComponent", function() { return MapComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapService", function() { return MapService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxMapboxGLModule", function() { return NgxMapboxGLModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵa", function() { return GeocoderControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵb", function() { return LayerComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵc", function() { return DraggableDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵd", function() { return FeatureComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵe", function() { return ImageComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵf", function() { return VectorSourceComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵg", function() { return RasterDemSourceComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵh", function() { return RasterSourceComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵi", function() { return ImageSourceComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵj", function() { return VideoSourceComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵk", function() { return CanvasSourceComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵl", function() { return MarkerComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵm", function() { return PopupComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵn", function() { return FullscreenControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵo", function() { return NavigationControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵp", function() { return GeolocateControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵq", function() { return AttributionControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵr", function() { return ScaleControlDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵs", function() { return PointDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵt", function() { return ClusterPointDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵu", function() { return MarkersForClustersComponent; });
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! mapbox-gl */ "./node_modules/mapbox-gl/dist/mapbox-gl.js");
/* harmony import */ var mapbox_gl__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ "./node_modules/ngx-mapbox-gl/node_modules/tslib/tslib.es6.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _mapbox_mapbox_gl_geocoder__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mapbox/mapbox-gl-geocoder */ "./node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js");
/* harmony import */ var _mapbox_mapbox_gl_geocoder__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_mapbox_mapbox_gl_geocoder__WEBPACK_IMPORTED_MODULE_9__);




function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }











var _c0 = ["content"];
var _c1 = ["*"];
var _c2 = ["container"];

function MarkersForClustersComponent_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainer"](0);
  }
}

var _c3 = function _c3(a0) {
  return {
    $implicit: a0
  };
};

function MarkersForClustersComponent_ng_container_1_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "mgl-marker", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](2, MarkersForClustersComponent_ng_container_1_ng_container_1_ng_container_2_Template, 1, 0, "ng-container", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerEnd"]();
  }

  if (rf & 2) {
    var feature_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]().$implicit;
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("feature", feature_r1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngTemplateOutlet", ctx_r2.clusterPointTpl)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpureFunction1"](3, _c3, feature_r1));
  }
}

function MarkersForClustersComponent_ng_container_1_ng_container_2_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainer"](0);
  }
}

function MarkersForClustersComponent_ng_container_1_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "mgl-marker", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](2, MarkersForClustersComponent_ng_container_1_ng_container_2_ng_container_2_Template, 1, 0, "ng-container", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerEnd"]();
  }

  if (rf & 2) {
    var feature_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]().$implicit;
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("feature", feature_r1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngTemplateOutlet", ctx_r3.pointTpl)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpureFunction1"](3, _c3, feature_r1));
  }
}

function MarkersForClustersComponent_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, MarkersForClustersComponent_ng_container_1_ng_container_1_Template, 3, 5, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](2, MarkersForClustersComponent_ng_container_1_ng_container_2_Template, 3, 5, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerEnd"]();
  }

  if (rf & 2) {
    var feature_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", feature_r1.properties.cluster);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", !feature_r1.properties.cluster);
  }
}

var _c4 = function _c4() {
  return {
    "circle-radius": 0
  };
};

var MAPBOX_API_KEY = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["InjectionToken"]('MapboxApiKey');

var MapService = /*#__PURE__*/function () {
  function MapService(zone, MAPBOX_API_KEY) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MapService);

    this.zone = zone;
    this.MAPBOX_API_KEY = MAPBOX_API_KEY;
    this.mapCreated = new rxjs__WEBPACK_IMPORTED_MODULE_7__["AsyncSubject"]();
    this.mapLoaded = new rxjs__WEBPACK_IMPORTED_MODULE_7__["AsyncSubject"]();
    this.markersToRemove = [];
    this.popupsToRemove = [];
    this.imageIdsToRemove = [];
    this.subscription = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
    this.mapCreated$ = this.mapCreated.asObservable();
    this.mapLoaded$ = this.mapLoaded.asObservable();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MapService, [{
    key: "setup",
    value: function setup(options) {
      var _this = this;

      // Need onStable to wait for a potential @angular/route transition to end
      this.zone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["first"])()).subscribe(function () {
        // Workaround rollup issue
        _this.assign(mapbox_gl__WEBPACK_IMPORTED_MODULE_5__, 'accessToken', options.accessToken || _this.MAPBOX_API_KEY);

        if (options.customMapboxApiUrl) {
          _this.assign(mapbox_gl__WEBPACK_IMPORTED_MODULE_5__, 'config.API_URL', options.customMapboxApiUrl);
        }

        _this.createMap(options.mapOptions);

        _this.hookEvents(options.mapEvents);

        _this.mapEvents = options.mapEvents;

        _this.mapCreated.next(undefined);

        _this.mapCreated.complete();
      });
    }
  }, {
    key: "destroyMap",
    value: function destroyMap() {
      if (this.mapInstance) {
        this.subscription.unsubscribe();
        this.mapInstance.remove();
      }
    }
  }, {
    key: "updateMinZoom",
    value: function updateMinZoom(minZoom) {
      var _this2 = this;

      return this.zone.runOutsideAngular(function () {
        _this2.mapInstance.setMinZoom(minZoom);
      });
    }
  }, {
    key: "updateMaxZoom",
    value: function updateMaxZoom(maxZoom) {
      var _this3 = this;

      return this.zone.runOutsideAngular(function () {
        _this3.mapInstance.setMaxZoom(maxZoom);
      });
    }
  }, {
    key: "updateMinPitch",
    value: function updateMinPitch(minPitch) {
      var _this4 = this;

      return this.zone.runOutsideAngular(function () {
        _this4.mapInstance.setMinPitch(minPitch);
      });
    }
  }, {
    key: "updateMaxPitch",
    value: function updateMaxPitch(maxPitch) {
      var _this5 = this;

      return this.zone.runOutsideAngular(function () {
        _this5.mapInstance.setMaxPitch(maxPitch);
      });
    }
  }, {
    key: "updateRenderWorldCopies",
    value: function updateRenderWorldCopies(status) {
      var _this6 = this;

      return this.zone.runOutsideAngular(function () {
        _this6.mapInstance.setRenderWorldCopies(status);
      });
    }
  }, {
    key: "updateScrollZoom",
    value: function updateScrollZoom(status) {
      var _this7 = this;

      return this.zone.runOutsideAngular(function () {
        status ? _this7.mapInstance.scrollZoom.enable() : _this7.mapInstance.scrollZoom.disable();
      });
    }
  }, {
    key: "updateDragRotate",
    value: function updateDragRotate(status) {
      var _this8 = this;

      return this.zone.runOutsideAngular(function () {
        status ? _this8.mapInstance.dragRotate.enable() : _this8.mapInstance.dragRotate.disable();
      });
    }
  }, {
    key: "updateTouchPitch",
    value: function updateTouchPitch(status) {
      var _this9 = this;

      return this.zone.runOutsideAngular(function () {
        status ? _this9.mapInstance.touchPitch.enable() : _this9.mapInstance.touchPitch.disable();
      });
    }
  }, {
    key: "updateTouchZoomRotate",
    value: function updateTouchZoomRotate(status) {
      var _this10 = this;

      return this.zone.runOutsideAngular(function () {
        status ? _this10.mapInstance.touchZoomRotate.enable() : _this10.mapInstance.touchZoomRotate.disable();
      });
    }
  }, {
    key: "updateDoubleClickZoom",
    value: function updateDoubleClickZoom(status) {
      var _this11 = this;

      return this.zone.runOutsideAngular(function () {
        status ? _this11.mapInstance.doubleClickZoom.enable() : _this11.mapInstance.doubleClickZoom.disable();
      });
    }
  }, {
    key: "updateKeyboard",
    value: function updateKeyboard(status) {
      var _this12 = this;

      return this.zone.runOutsideAngular(function () {
        status ? _this12.mapInstance.keyboard.enable() : _this12.mapInstance.keyboard.disable();
      });
    }
  }, {
    key: "updateDragPan",
    value: function updateDragPan(status) {
      var _this13 = this;

      return this.zone.runOutsideAngular(function () {
        status ? _this13.mapInstance.dragPan.enable() : _this13.mapInstance.dragPan.disable();
      });
    }
  }, {
    key: "updateBoxZoom",
    value: function updateBoxZoom(status) {
      var _this14 = this;

      return this.zone.runOutsideAngular(function () {
        status ? _this14.mapInstance.boxZoom.enable() : _this14.mapInstance.boxZoom.disable();
      });
    }
  }, {
    key: "updateStyle",
    value: function updateStyle(style) {
      var _this15 = this;

      return this.zone.runOutsideAngular(function () {
        _this15.mapInstance.setStyle(style);
      });
    }
  }, {
    key: "updateMaxBounds",
    value: function updateMaxBounds(maxBounds) {
      var _this16 = this;

      return this.zone.runOutsideAngular(function () {
        _this16.mapInstance.setMaxBounds(maxBounds);
      });
    }
  }, {
    key: "changeCanvasCursor",
    value: function changeCanvasCursor(cursor) {
      var canvas = this.mapInstance.getCanvasContainer();
      canvas.style.cursor = cursor;
    }
  }, {
    key: "queryRenderedFeatures",
    value: function queryRenderedFeatures(pointOrBox, parameters) {
      return this.mapInstance.queryRenderedFeatures(pointOrBox, parameters);
    }
  }, {
    key: "panTo",
    value: function panTo(center, options) {
      var _this17 = this;

      return this.zone.runOutsideAngular(function () {
        _this17.mapInstance.panTo(center, options);
      });
    }
  }, {
    key: "move",
    value: function move(movingMethod, movingOptions, zoom, center, bearing, pitch) {
      var _this18 = this;

      return this.zone.runOutsideAngular(function () {
        _this18.mapInstance[movingMethod](Object.assign(Object.assign({}, movingOptions), {
          zoom: zoom ? zoom : _this18.mapInstance.getZoom(),
          center: center ? center : _this18.mapInstance.getCenter(),
          bearing: bearing ? bearing : _this18.mapInstance.getBearing(),
          pitch: pitch ? pitch : _this18.mapInstance.getPitch()
        }));
      });
    }
  }, {
    key: "addLayer",
    value: function addLayer(layer, bindEvents, before) {
      var _this19 = this;

      this.zone.runOutsideAngular(function () {
        Object.keys(layer.layerOptions).forEach(function (key) {
          var tkey = key;

          if (layer.layerOptions[tkey] === undefined) {
            delete layer.layerOptions[tkey];
          }
        });

        _this19.mapInstance.addLayer(layer.layerOptions, before);

        if (bindEvents) {
          if (layer.layerEvents.layerClick.observers.length || layer.layerEvents.click.observers.length) {
            _this19.mapInstance.on('click', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerClick.emit(evt);
                layer.layerEvents.click.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerDblClick.observers.length || layer.layerEvents.dblClick.observers.length) {
            _this19.mapInstance.on('dblclick', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerDblClick.emit(evt);
                layer.layerEvents.dblClick.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerMouseDown.observers.length || layer.layerEvents.mouseDown.observers.length) {
            _this19.mapInstance.on('mousedown', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerMouseDown.emit(evt);
                layer.layerEvents.mouseDown.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerMouseUp.observers.length || layer.layerEvents.mouseUp.observers.length) {
            _this19.mapInstance.on('mouseup', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerMouseUp.emit(evt);
                layer.layerEvents.mouseUp.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerMouseEnter.observers.length || layer.layerEvents.mouseEnter.observers.length) {
            _this19.mapInstance.on('mouseenter', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerMouseEnter.emit(evt);
                layer.layerEvents.mouseEnter.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerMouseLeave.observers.length || layer.layerEvents.mouseLeave.observers.length) {
            _this19.mapInstance.on('mouseleave', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerMouseLeave.emit(evt);
                layer.layerEvents.mouseLeave.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerMouseMove.observers.length || layer.layerEvents.mouseMove.observers.length) {
            _this19.mapInstance.on('mousemove', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerMouseMove.emit(evt);
                layer.layerEvents.mouseMove.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerMouseOver.observers.length || layer.layerEvents.mouseOver.observers.length) {
            _this19.mapInstance.on('mouseover', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerMouseOver.emit(evt);
                layer.layerEvents.mouseOver.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerMouseOut.observers.length || layer.layerEvents.mouseOut.observers.length) {
            _this19.mapInstance.on('mouseout', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerMouseOut.emit(evt);
                layer.layerEvents.mouseOut.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerContextMenu.observers.length || layer.layerEvents.contextMenu.observers.length) {
            _this19.mapInstance.on('contextmenu', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerContextMenu.emit(evt);
                layer.layerEvents.contextMenu.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerTouchStart.observers.length || layer.layerEvents.touchStart.observers.length) {
            _this19.mapInstance.on('touchstart', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerTouchStart.emit(evt);
                layer.layerEvents.touchStart.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerTouchEnd.observers.length || layer.layerEvents.touchEnd.observers.length) {
            _this19.mapInstance.on('touchend', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerTouchEnd.emit(evt);
                layer.layerEvents.touchEnd.emit(evt);
              });
            });
          }

          if (layer.layerEvents.layerTouchCancel.observers.length || layer.layerEvents.touchCancel.observers.length) {
            _this19.mapInstance.on('touchcancel', layer.layerOptions.id, function (evt) {
              _this19.zone.run(function () {
                layer.layerEvents.layerTouchCancel.emit(evt);
                layer.layerEvents.touchCancel.emit(evt);
              });
            });
          }
        }
      });
    }
  }, {
    key: "removeLayer",
    value: function removeLayer(layerId) {
      var _this20 = this;

      this.zone.runOutsideAngular(function () {
        if (_this20.mapInstance.getLayer(layerId) != null) {
          _this20.mapInstance.removeLayer(layerId);
        }
      });
    }
  }, {
    key: "addMarker",
    value: function addMarker(marker) {
      var _this21 = this;

      var options = {
        offset: marker.markersOptions.offset,
        anchor: marker.markersOptions.anchor,
        draggable: !!marker.markersOptions.draggable,
        rotationAlignment: marker.markersOptions.rotationAlignment,
        pitchAlignment: marker.markersOptions.pitchAlignment,
        clickTolerance: marker.markersOptions.clickTolerance
      };

      if (marker.markersOptions.element.childNodes.length > 0) {
        options.element = marker.markersOptions.element;
      }

      var markerInstance = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5__["Marker"](options);

      if (marker.markersEvents.markerDragStart.observers.length || marker.markersEvents.dragStart.observers.length) {
        markerInstance.on('dragstart', function (event) {
          if (event) {
            var target = event.target;

            _this21.zone.run(function () {
              marker.markersEvents.markerDragStart.emit(target);
              marker.markersEvents.dragStart.emit(target);
            });
          }
        });
      }
      /*
             */


      if (marker.markersEvents.markerDrag.observers.length || marker.markersEvents.drag.observers.length) {
        markerInstance.on('drag', function (event) {
          if (event) {
            var target = event.target;

            _this21.zone.run(function () {
              marker.markersEvents.markerDrag.emit(target);
              marker.markersEvents.drag.emit(target);
            });
          }
        });
      }

      if (marker.markersEvents.markerDragEnd.observers.length || marker.markersEvents.dragEnd.observers.length) {
        markerInstance.on('dragend', function (event) {
          if (event) {
            var target = event.target;

            _this21.zone.run(function () {
              marker.markersEvents.markerDragEnd.emit(target);
              marker.markersEvents.dragEnd.emit(target);
            });
          }
        });
      }

      var lngLat = marker.markersOptions.feature ? marker.markersOptions.feature.geometry.coordinates : marker.markersOptions.lngLat;
      markerInstance.setLngLat(lngLat);
      return this.zone.runOutsideAngular(function () {
        markerInstance.addTo(_this21.mapInstance);
        return markerInstance;
      });
    }
  }, {
    key: "removeMarker",
    value: function removeMarker(marker) {
      this.markersToRemove.push(marker);
    }
  }, {
    key: "createPopup",
    value: function createPopup(popup, element) {
      var _this22 = this;

      return this.zone.runOutsideAngular(function () {
        Object.keys(popup.popupOptions).forEach(function (key) {
          return popup.popupOptions[key] === undefined && delete popup.popupOptions[key];
        });
        var popupInstance = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5__["Popup"](popup.popupOptions);
        popupInstance.setDOMContent(element);

        if (popup.popupEvents.popupClose.observers.length || popup.popupEvents.close.observers.length) {
          popupInstance.on('close', function () {
            _this22.zone.run(function () {
              popup.popupEvents.popupClose.emit();
              popup.popupEvents.close.emit();
            });
          });
        }

        if (popup.popupEvents.popupOpen.observers.length || popup.popupEvents.open.observers.length) {
          popupInstance.on('open', function () {
            _this22.zone.run(function () {
              popup.popupEvents.popupOpen.emit();
              popup.popupEvents.open.emit();
            });
          });
        }

        return popupInstance;
      });
    }
  }, {
    key: "addPopupToMap",
    value: function addPopupToMap(popup, lngLat) {
      var _this23 = this;

      var skipOpenEvent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      return this.zone.runOutsideAngular(function () {
        if (skipOpenEvent && popup._listeners) {
          delete popup._listeners['open'];
        }

        popup.setLngLat(lngLat);
        popup.addTo(_this23.mapInstance);
      });
    }
  }, {
    key: "addPopupToMarker",
    value: function addPopupToMarker(marker, popup) {
      return this.zone.runOutsideAngular(function () {
        marker.setPopup(popup);
      });
    }
  }, {
    key: "removePopupFromMap",
    value: function removePopupFromMap(popup) {
      var skipCloseEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (skipCloseEvent && popup._listeners) {
        delete popup._listeners['close'];
      }

      this.popupsToRemove.push(popup);
    }
  }, {
    key: "removePopupFromMarker",
    value: function removePopupFromMarker(marker) {
      return this.zone.runOutsideAngular(function () {
        marker.setPopup(undefined);
      });
    }
  }, {
    key: "addControl",
    value: function addControl(control, position) {
      var _this24 = this;

      return this.zone.runOutsideAngular(function () {
        _this24.mapInstance.addControl(control, position);
      });
    }
  }, {
    key: "removeControl",
    value: function removeControl(control) {
      var _this25 = this;

      return this.zone.runOutsideAngular(function () {
        _this25.mapInstance.removeControl(control);
      });
    }
  }, {
    key: "loadAndAddImage",
    value: function loadAndAddImage(imageId, url, options) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var _this26 = this;

        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this.zone.runOutsideAngular(function () {
                  return new Promise(function (resolve, reject) {
                    _this26.mapInstance.loadImage(url, function (error, image) {
                      if (error) {
                        reject(error);
                        return;
                      }

                      _this26.addImage(imageId, image, options);

                      resolve();
                    });
                  });
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "addImage",
    value: function addImage(imageId, data, options) {
      var _this27 = this;

      return this.zone.runOutsideAngular(function () {
        _this27.mapInstance.addImage(imageId, data, options);
      });
    }
  }, {
    key: "removeImage",
    value: function removeImage(imageId) {
      this.imageIdsToRemove.push(imageId);
    }
  }, {
    key: "addSource",
    value: function addSource(sourceId, source) {
      var _this28 = this;

      return this.zone.runOutsideAngular(function () {
        Object.keys(source).forEach(function (key) {
          return source[key] === undefined && delete source[key];
        });

        _this28.mapInstance.addSource(sourceId, source);
      });
    }
  }, {
    key: "getSource",
    value: function getSource(sourceId) {
      return this.mapInstance.getSource(sourceId);
    }
  }, {
    key: "removeSource",
    value: function removeSource(sourceId) {
      var _this29 = this;

      this.zone.runOutsideAngular(function () {
        _this29.findLayersBySourceId(sourceId).forEach(function (layer) {
          return _this29.mapInstance.removeLayer(layer.id);
        });

        _this29.mapInstance.removeSource(sourceId);
      });
    }
  }, {
    key: "setAllLayerPaintProperty",
    value: function setAllLayerPaintProperty(layerId, paint) {
      var _this30 = this;

      return this.zone.runOutsideAngular(function () {
        Object.keys(paint).forEach(function (key) {
          // TODO Check for perf, setPaintProperty only on changed paint props maybe
          _this30.mapInstance.setPaintProperty(layerId, key, paint[key]);
        });
      });
    }
  }, {
    key: "setAllLayerLayoutProperty",
    value: function setAllLayerLayoutProperty(layerId, layout) {
      var _this31 = this;

      return this.zone.runOutsideAngular(function () {
        Object.keys(layout).forEach(function (key) {
          // TODO Check for perf, setPaintProperty only on changed paint props maybe
          _this31.mapInstance.setLayoutProperty(layerId, key, layout[key]);
        });
      });
    }
  }, {
    key: "setLayerFilter",
    value: function setLayerFilter(layerId, filter) {
      var _this32 = this;

      return this.zone.runOutsideAngular(function () {
        _this32.mapInstance.setFilter(layerId, filter);
      });
    }
  }, {
    key: "setLayerBefore",
    value: function setLayerBefore(layerId, beforeId) {
      var _this33 = this;

      return this.zone.runOutsideAngular(function () {
        _this33.mapInstance.moveLayer(layerId, beforeId);
      });
    }
  }, {
    key: "setLayerZoomRange",
    value: function setLayerZoomRange(layerId, minZoom, maxZoom) {
      var _this34 = this;

      return this.zone.runOutsideAngular(function () {
        _this34.mapInstance.setLayerZoomRange(layerId, minZoom ? minZoom : 0, maxZoom ? maxZoom : 20);
      });
    }
  }, {
    key: "fitBounds",
    value: function fitBounds(bounds, options) {
      var _this35 = this;

      return this.zone.runOutsideAngular(function () {
        _this35.mapInstance.fitBounds(bounds, options);
      });
    }
  }, {
    key: "fitScreenCoordinates",
    value: function fitScreenCoordinates(points, bearing, options) {
      var _this36 = this;

      return this.zone.runOutsideAngular(function () {
        _this36.mapInstance.fitScreenCoordinates(points[0], points[1], bearing, options);
      });
    }
  }, {
    key: "applyChanges",
    value: function applyChanges() {
      var _this37 = this;

      this.zone.runOutsideAngular(function () {
        _this37.removeMarkers();

        _this37.removePopups();

        _this37.removeImages();
      });
    }
  }, {
    key: "createMap",
    value: function createMap(options) {
      var _this38 = this;

      _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"].assertNotInAngularZone();
      Object.keys(options).forEach(function (key) {
        var tkey = key;

        if (options[tkey] === undefined) {
          delete options[tkey];
        }
      });
      this.mapInstance = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5__["Map"](options);
      var isIEorEdge = window && /msie\s|trident\/|edge\//i.test(window.navigator.userAgent);

      if (isIEorEdge) {
        this.mapInstance.setStyle(options.style);
      }

      this.subscription.add(this.zone.onMicrotaskEmpty.subscribe(function () {
        return _this38.applyChanges();
      }));
    }
  }, {
    key: "removeMarkers",
    value: function removeMarkers() {
      var _iterator = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this.markersToRemove),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var marker = _step.value;
          marker.remove();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      this.markersToRemove = [];
    }
  }, {
    key: "removePopups",
    value: function removePopups() {
      var _iterator2 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this.popupsToRemove),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var popup = _step2.value;
          popup.remove();
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      this.popupsToRemove = [];
    }
  }, {
    key: "removeImages",
    value: function removeImages() {
      var _iterator3 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this.imageIdsToRemove),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var imageId = _step3.value;
          this.mapInstance.removeImage(imageId);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      this.imageIdsToRemove = [];
    }
  }, {
    key: "findLayersBySourceId",
    value: function findLayersBySourceId(sourceId) {
      var layers = this.mapInstance.getStyle().layers;

      if (layers == null) {
        return [];
      }

      return layers.filter(function (l) {
        return 'source' in l ? l.source === sourceId : false;
      });
    }
  }, {
    key: "hookEvents",
    value: function hookEvents(events) {
      var _this39 = this;

      this.mapInstance.on('load', function (evt) {
        _this39.mapLoaded.next(undefined);

        _this39.mapLoaded.complete();

        _this39.zone.run(function () {
          events.mapLoad.emit(evt.target);
          events.load.emit(evt.target);
        });
      });

      if (events.mapResize.observers.length || events.resize.observers.length) {
        this.mapInstance.on('resize', function (evt) {
          return _this39.zone.run(function () {
            events.mapResize.emit(evt);
            events.resize.emit(evt);
          });
        });
      }

      if (events.mapRemove.observers.length || events.remove.observers.length) {
        this.mapInstance.on('remove', function (evt) {
          return _this39.zone.run(function () {
            events.mapRemove.emit(evt);
            events.remove.emit(evt);
          });
        });
      }

      if (events.mapMouseDown.observers.length || events.mouseDown.observers.length) {
        this.mapInstance.on('mousedown', function (evt) {
          return _this39.zone.run(function () {
            events.mapMouseDown.emit(evt);
            events.mouseDown.emit(evt);
          });
        });
      }

      if (events.mapMouseUp.observers.length || events.mouseUp.observers.length) {
        this.mapInstance.on('mouseup', function (evt) {
          return _this39.zone.run(function () {
            events.mapMouseUp.emit(evt);
            events.mouseUp.emit(evt);
          });
        });
      }

      if (events.mapMouseMove.observers.length || events.mouseMove.observers.length) {
        this.mapInstance.on('mousemove', function (evt) {
          return _this39.zone.run(function () {
            events.mapMouseMove.emit(evt);
            events.mouseMove.emit(evt);
          });
        });
      }

      if (events.mapClick.observers.length || events.click.observers.length) {
        this.mapInstance.on('click', function (evt) {
          return _this39.zone.run(function () {
            events.mapClick.emit(evt);
            events.click.emit(evt);
          });
        });
      }

      if (events.mapDblClick.observers.length || events.dblClick.observers.length) {
        this.mapInstance.on('dblclick', function (evt) {
          return _this39.zone.run(function () {
            events.mapDblClick.emit(evt);
            events.dblClick.emit(evt);
          });
        });
      }

      if (events.mapMouseOver.observers.length || events.mouseOver.observers.length) {
        this.mapInstance.on('mouseover', function (evt) {
          return _this39.zone.run(function () {
            events.mapMouseOver.emit(evt);
            events.mouseOver.emit(evt);
          });
        });
      }

      if (events.mapMouseOut.observers.length || events.mouseOut.observers.length) {
        this.mapInstance.on('mouseout', function (evt) {
          return _this39.zone.run(function () {
            events.mapMouseOut.emit(evt);
            events.mouseOut.emit(evt);
          });
        });
      }

      if (events.mapContextMenu.observers.length || events.contextMenu.observers.length) {
        this.mapInstance.on('contextmenu', function (evt) {
          return _this39.zone.run(function () {
            events.mapContextMenu.emit(evt);
            events.contextMenu.emit(evt);
          });
        });
      }

      if (events.mapTouchStart.observers.length || events.touchStart.observers.length) {
        this.mapInstance.on('touchstart', function (evt) {
          return _this39.zone.run(function () {
            events.mapTouchStart.emit(evt);
            events.touchStart.emit(evt);
          });
        });
      }

      if (events.mapTouchEnd.observers.length || events.touchEnd.observers.length) {
        this.mapInstance.on('touchend', function (evt) {
          return _this39.zone.run(function () {
            events.mapTouchEnd.emit(evt);
            events.touchEnd.emit(evt);
          });
        });
      }

      if (events.mapTouchMove.observers.length || events.touchMove.observers.length) {
        this.mapInstance.on('touchmove', function (evt) {
          return _this39.zone.run(function () {
            events.mapTouchMove.emit(evt);
            events.touchMove.emit(evt);
          });
        });
      }

      if (events.mapTouchCancel.observers.length || events.touchCancel.observers.length) {
        this.mapInstance.on('touchcancel', function (evt) {
          return _this39.zone.run(function () {
            events.mapTouchCancel.emit(evt);
            events.touchCancel.emit(evt);
          });
        });
      }

      if (events.mapWheel.observers.length || events.wheel.observers.length) {
        this.mapInstance.on('wheel', function (evt) {
          return _this39.zone.run(function () {
            events.mapWheel.emit(evt);
            events.wheel.emit(evt);
          });
        });
      }

      if (events.moveStart.observers.length) {
        this.mapInstance.on('movestart', function (evt) {
          return _this39.zone.run(function () {
            return events.moveStart.emit(evt);
          });
        });
      }

      if (events.move.observers.length) {
        this.mapInstance.on('move', function (evt) {
          return _this39.zone.run(function () {
            return events.move.emit(evt);
          });
        });
      }

      if (events.moveEnd.observers.length) {
        this.mapInstance.on('moveend', function (evt) {
          return _this39.zone.run(function () {
            return events.moveEnd.emit(evt);
          });
        });
      }

      if (events.mapDragStart.observers.length || events.dragStart.observers.length) {
        this.mapInstance.on('dragstart', function (evt) {
          return _this39.zone.run(function () {
            events.mapDragStart.emit(evt);
            events.dragStart.emit(evt);
          });
        });
      }

      if (events.mapDrag.observers.length || events.drag.observers.length) {
        this.mapInstance.on('drag', function (evt) {
          return _this39.zone.run(function () {
            events.mapDrag.emit(evt);
            events.drag.emit(evt);
          });
        });
      }

      if (events.mapDragEnd.observers.length || events.dragEnd.observers.length) {
        this.mapInstance.on('dragend', function (evt) {
          return _this39.zone.run(function () {
            events.mapDragEnd.emit(evt);
            events.dragEnd.emit(evt);
          });
        });
      }

      if (events.zoomStart.observers.length) {
        this.mapInstance.on('zoomstart', function (evt) {
          return _this39.zone.run(function () {
            return events.zoomStart.emit(evt);
          });
        });
      }

      if (events.zoomEvt.observers.length) {
        this.mapInstance.on('zoom', function (evt) {
          return _this39.zone.run(function () {
            return events.zoomEvt.emit(evt);
          });
        });
      }

      if (events.zoomEnd.observers.length) {
        this.mapInstance.on('zoomend', function (evt) {
          return _this39.zone.run(function () {
            return events.zoomEnd.emit(evt);
          });
        });
      }

      if (events.rotateStart.observers.length) {
        this.mapInstance.on('rotatestart', function (evt) {
          return _this39.zone.run(function () {
            return events.rotateStart.emit(evt);
          });
        });
      }

      if (events.rotate.observers.length) {
        this.mapInstance.on('rotate', function (evt) {
          return _this39.zone.run(function () {
            return events.rotate.emit(evt);
          });
        });
      }

      if (events.rotateEnd.observers.length) {
        this.mapInstance.on('rotateend', function (evt) {
          return _this39.zone.run(function () {
            return events.rotateEnd.emit(evt);
          });
        });
      }

      if (events.pitchStart.observers.length) {
        this.mapInstance.on('pitchstart', function (evt) {
          return _this39.zone.run(function () {
            return events.pitchStart.emit(evt);
          });
        });
      }

      if (events.pitchEvt.observers.length) {
        this.mapInstance.on('pitch', function (evt) {
          return _this39.zone.run(function () {
            return events.pitchEvt.emit(evt);
          });
        });
      }

      if (events.pitchEnd.observers.length) {
        this.mapInstance.on('pitchend', function (evt) {
          return _this39.zone.run(function () {
            return events.pitchEnd.emit(evt);
          });
        });
      }

      if (events.boxZoomStart.observers.length) {
        this.mapInstance.on('boxzoomstart', function (evt) {
          return _this39.zone.run(function () {
            return events.boxZoomStart.emit(evt);
          });
        });
      }

      if (events.boxZoomEnd.observers.length) {
        this.mapInstance.on('boxzoomend', function (evt) {
          return _this39.zone.run(function () {
            return events.boxZoomEnd.emit(evt);
          });
        });
      }

      if (events.boxZoomCancel.observers.length) {
        this.mapInstance.on('boxzoomcancel', function (evt) {
          return _this39.zone.run(function () {
            return events.boxZoomCancel.emit(evt);
          });
        });
      }

      if (events.webGlContextLost.observers.length) {
        this.mapInstance.on('webglcontextlost', function (evt) {
          return _this39.zone.run(function () {
            return events.webGlContextLost.emit(evt);
          });
        });
      }

      if (events.webGlContextRestored.observers.length) {
        this.mapInstance.on('webglcontextrestored', function (evt) {
          return _this39.zone.run(function () {
            return events.webGlContextRestored.emit(evt);
          });
        });
      }

      if (events.render.observers.length) {
        this.mapInstance.on('render', function (evt) {
          return _this39.zone.run(function () {
            return events.render.emit(evt);
          });
        });
      }

      if (events.mapError.observers.length || events.error.observers.length) {
        this.mapInstance.on('error', function (evt) {
          return _this39.zone.run(function () {
            events.mapError.emit(evt);
            events.error.emit(evt);
          });
        });
      }

      if (events.data.observers.length) {
        this.mapInstance.on('data', function (evt) {
          return _this39.zone.run(function () {
            return events.data.emit(evt);
          });
        });
      }

      if (events.styleData.observers.length) {
        this.mapInstance.on('styledata', function (evt) {
          return _this39.zone.run(function () {
            return events.styleData.emit(evt);
          });
        });
      }

      if (events.sourceData.observers.length) {
        this.mapInstance.on('sourcedata', function (evt) {
          return _this39.zone.run(function () {
            return events.sourceData.emit(evt);
          });
        });
      }

      if (events.dataLoading.observers.length) {
        this.mapInstance.on('dataloading', function (evt) {
          return _this39.zone.run(function () {
            return events.dataLoading.emit(evt);
          });
        });
      }

      if (events.styleDataLoading.observers.length) {
        this.mapInstance.on('styledataloading', function (evt) {
          return _this39.zone.run(function () {
            return events.styleDataLoading.emit(evt);
          });
        });
      }

      if (events.sourceDataLoading.observers.length) {
        this.mapInstance.on('sourcedataloading', function (evt) {
          return _this39.zone.run(function () {
            return events.sourceDataLoading.emit(evt);
          });
        });
      }

      if (events.styleImageMissing.observers.length) {
        this.mapInstance.on('styleimagemissing', function (evt) {
          return _this39.zone.run(function () {
            return events.styleImageMissing.emit(evt);
          });
        });
      }

      if (events.idle.observers.length) {
        this.mapInstance.on('idle', function (evt) {
          return _this39.zone.run(function () {
            return events.idle.emit(evt);
          });
        });
      }
    } // TODO move this elsewhere

  }, {
    key: "assign",
    value: function assign(obj, prop, value) {
      if (typeof prop === 'string') {
        // tslint:disable-next-line:no-parameter-reassignment
        prop = prop.split('.');
      }

      if (prop.length > 1) {
        var e = prop.shift();
        this.assign(obj[e] = Object.prototype.toString.call(obj[e]) === '[object Object]' ? obj[e] : {}, prop, value);
      } else {
        obj[prop[0]] = value;
      }
    }
  }]);

  return MapService;
}();

MapService.ɵfac = function MapService_Factory(t) {
  return new (t || MapService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](MAPBOX_API_KEY, 8));
};

MapService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({
  token: MapService,
  factory: MapService.ɵfac
});

MapService.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"],
      args: [MAPBOX_API_KEY]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](MapService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Injectable"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"],
        args: [MAPBOX_API_KEY]
      }]
    }];
  }, null);
})();

var CustomControl = /*#__PURE__*/function () {
  function CustomControl(container) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, CustomControl);

    this.container = container;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(CustomControl, [{
    key: "onAdd",
    value: function onAdd() {
      return this.container;
    }
  }, {
    key: "onRemove",
    value: function onRemove() {
      return this.container.parentNode.removeChild(this.container);
    }
  }, {
    key: "getDefaultPosition",
    value: function getDefaultPosition() {
      return 'top-right';
    }
  }]);

  return CustomControl;
}();

var ControlComponent = /*#__PURE__*/function () {
  function ControlComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, ControlComponent);

    this.MapService = MapService;
    this.controlAdded = false;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(ControlComponent, [{
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this40 = this;

      if (this.content.nativeElement.childNodes.length) {
        this.control = new CustomControl(this.content.nativeElement);
        this.MapService.mapCreated$.subscribe(function () {
          _this40.MapService.addControl(_this40.control, _this40.position);

          _this40.controlAdded = true;
        });
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this.controlAdded) {
        this.MapService.removeControl(this.control);
      }
    }
  }]);

  return ControlComponent;
}();

ControlComponent.ɵfac = function ControlComponent_Factory(t) {
  return new (t || ControlComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

ControlComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: ControlComponent,
  selectors: [["mgl-control"]],
  viewQuery: function ControlComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵstaticViewQuery"](_c0, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    }
  },
  inputs: {
    position: "position"
  },
  ngContentSelectors: _c1,
  decls: 3,
  vars: 0,
  consts: [[1, "mapboxgl-ctrl"], ["content", ""]],
  template: function ControlComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    }
  },
  encapsulation: 2,
  changeDetection: 0
});

ControlComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

ControlComponent.propDecorators = {
  position: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  content: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"],
    args: ['content', {
      static: true
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](ControlComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-control',
      template: '<div class="mapboxgl-ctrl" #content><ng-content></ng-content></div>',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    position: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    content: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"],
      args: ['content', {
        static: true
      }]
    }]
  });
})();

var AttributionControlDirective = /*#__PURE__*/function () {
  function AttributionControlDirective(MapService, ControlComponent) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, AttributionControlDirective);

    this.MapService = MapService;
    this.ControlComponent = ControlComponent;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(AttributionControlDirective, [{
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this41 = this;

      this.MapService.mapCreated$.subscribe(function () {
        if (_this41.ControlComponent.control) {
          throw new Error('Another control is already set for this control');
        }

        var options = {};

        if (_this41.compact !== undefined) {
          options.compact = _this41.compact;
        }

        if (_this41.customAttribution !== undefined) {
          options.customAttribution = _this41.customAttribution;
        }

        _this41.ControlComponent.control = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5__["AttributionControl"](options);

        _this41.MapService.addControl(_this41.ControlComponent.control, _this41.ControlComponent.position);
      });
    }
  }]);

  return AttributionControlDirective;
}();

AttributionControlDirective.ɵfac = function AttributionControlDirective_Factory(t) {
  return new (t || AttributionControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](ControlComponent, 1));
};

AttributionControlDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: AttributionControlDirective,
  selectors: [["", "mglAttribution", ""]],
  inputs: {
    compact: "compact",
    customAttribution: "customAttribution"
  }
});

AttributionControlDirective.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: ControlComponent,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
    }]
  }];
};

AttributionControlDirective.propDecorators = {
  compact: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  customAttribution: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](AttributionControlDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: '[mglAttribution]'
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: ControlComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
      }]
    }];
  }, {
    compact: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    customAttribution: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var FullscreenControlDirective = /*#__PURE__*/function () {
  function FullscreenControlDirective(MapService, ControlComponent) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, FullscreenControlDirective);

    this.MapService = MapService;
    this.ControlComponent = ControlComponent;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(FullscreenControlDirective, [{
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this42 = this;

      this.MapService.mapCreated$.subscribe(function () {
        if (_this42.ControlComponent.control) {
          throw new Error('Another control is already set for this control');
        }

        _this42.ControlComponent.control = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5__["FullscreenControl"]({
          container: _this42.container
        });

        _this42.MapService.addControl(_this42.ControlComponent.control, _this42.ControlComponent.position);
      });
    }
  }]);

  return FullscreenControlDirective;
}();

FullscreenControlDirective.ɵfac = function FullscreenControlDirective_Factory(t) {
  return new (t || FullscreenControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](ControlComponent, 1));
};

FullscreenControlDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: FullscreenControlDirective,
  selectors: [["", "mglFullscreen", ""]],
  inputs: {
    container: "container"
  }
});

FullscreenControlDirective.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: ControlComponent,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
    }]
  }];
};

FullscreenControlDirective.propDecorators = {
  container: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](FullscreenControlDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: '[mglFullscreen]'
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: ControlComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
      }]
    }];
  }, {
    container: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

function deprecationWarning(context, oldApi, newApi) {
  console.warn("[ngx-mapbox-gl]: ".concat(context, ": ").concat(oldApi, " is deprecated, please use ").concat(newApi, " instead."));
}

var MAPBOX_GEOCODER_API_KEY = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["InjectionToken"]('MapboxApiKey');

var GeocoderControlDirective = /*#__PURE__*/function () {
  function GeocoderControlDirective(MapService, zone, ControlComponent, MAPBOX_GEOCODER_API_KEY) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, GeocoderControlDirective);

    this.MapService = MapService;
    this.zone = zone;
    this.ControlComponent = ControlComponent;
    this.MAPBOX_GEOCODER_API_KEY = MAPBOX_GEOCODER_API_KEY;
    this.marker = false;
    this.clear = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.loading = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.geocoderResults = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.geocoderResult = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.geocoderError = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use geocoderResults instead
     */

    this.results = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use geocoderResult instead
     */

    this.result = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use geocoderError instead
     */

    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(GeocoderControlDirective, [{
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this43 = this;

      this.MapService.mapCreated$.subscribe(function () {
        if (_this43.ControlComponent.control) {
          throw new Error('Another control is already set for this control');
        }

        var options = {
          proximity: _this43.proximity,
          countries: _this43.countries,
          placeholder: _this43.placeholder,
          zoom: _this43.zoom,
          bbox: _this43.bbox,
          types: _this43.types,
          flyTo: _this43.flyTo,
          minLength: _this43.minLength,
          limit: _this43.limit,
          language: _this43.language,
          filter: _this43.filter,
          localGeocoder: _this43.localGeocoder,
          accessToken: _this43.accessToken || _this43.MAPBOX_GEOCODER_API_KEY,
          mapboxgl: _this43.mapboxgl,
          marker: _this43.marker
        };
        Object.keys(options).forEach(function (key) {
          var tkey = key;

          if (options[tkey] === undefined) {
            delete options[tkey];
          }
        });
        _this43.geocoder = new _mapbox_mapbox_gl_geocoder__WEBPACK_IMPORTED_MODULE_9___default.a(options);

        _this43.hookEvents(_this43);

        _this43.addControl();
      });

      if (this.searchInput) {
        this.MapService.mapLoaded$.subscribe(function () {
          _this43.geocoder.query(_this43.searchInput);
        });
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.geocoder) {
        return;
      }

      if (changes.proximity && !changes.proximity.isFirstChange()) {
        this.geocoder.setProximity(changes.proximity.currentValue);
      }

      if (changes.searchInput) {
        this.geocoder.query(this.searchInput);
      }
    }
  }, {
    key: "addControl",
    value: function addControl() {
      this.ControlComponent.control = this.geocoder;
      this.MapService.addControl(this.ControlComponent.control, this.ControlComponent.position);
    }
  }, {
    key: "hookEvents",
    value: function hookEvents(events) {
      var _this44 = this;

      this.warnDeprecatedOutputs(events);

      if (events.results.observers.length || events.geocoderResults.observers.length) {
        this.geocoder.on('results', function (evt) {
          return _this44.zone.run(function () {
            events.geocoderResults.emit(evt);
            events.results.emit(evt);
          });
        });
      }

      if (events.geocoderResult.observers.length || events.result.observers.length) {
        this.geocoder.on('result', function (evt) {
          // Workaroud issue https://github.com/mapbox/mapbox-gl-geocoder/issues/99
          if (_this44.lastResultId !== evt.result.id) {
            _this44.lastResultId = evt.result.id;

            _this44.zone.run(function () {
              events.geocoderResult.emit(evt);
              events.result.emit(evt);
            });
          }
        });
      }

      if (events.error.observers.length || events.geocoderError.observers.length) {
        this.geocoder.on('error', function (evt) {
          return _this44.zone.run(function () {
            events.geocoderError.emit(evt);
            events.error.emit(evt);
          });
        });
      }

      if (events.loading.observers.length) {
        this.geocoder.on('loading', function (evt) {
          return _this44.zone.run(function () {
            return events.loading.emit(evt);
          });
        });
      }

      if (events.clear.observers.length) {
        this.geocoder.on('clear', function () {
          return _this44.zone.run(function () {
            return events.clear.emit();
          });
        });
      }
    }
  }, {
    key: "warnDeprecatedOutputs",
    value: function warnDeprecatedOutputs(events) {
      var dw = deprecationWarning.bind(undefined, GeocoderControlDirective.name);

      if (events.results.observers.length) {
        dw('results', 'geocoderResults');
      }

      if (events.result.observers.length) {
        dw('result', 'geocoderResult');
      }

      if (events.error.observers.length) {
        dw('error', 'geocoderError');
      }
    }
  }]);

  return GeocoderControlDirective;
}();

GeocoderControlDirective.ɵfac = function GeocoderControlDirective_Factory(t) {
  return new (t || GeocoderControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](ControlComponent, 1), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MAPBOX_GEOCODER_API_KEY, 8));
};

GeocoderControlDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: GeocoderControlDirective,
  selectors: [["", "mglGeocoder", ""]],
  inputs: {
    marker: "marker",
    countries: "countries",
    placeholder: "placeholder",
    zoom: "zoom",
    bbox: "bbox",
    types: "types",
    flyTo: "flyTo",
    minLength: "minLength",
    limit: "limit",
    language: "language",
    accessToken: "accessToken",
    filter: "filter",
    localGeocoder: "localGeocoder",
    mapboxgl: "mapboxgl",
    proximity: "proximity",
    searchInput: "searchInput"
  },
  outputs: {
    clear: "clear",
    loading: "loading",
    geocoderResults: "geocoderResults",
    geocoderResult: "geocoderResult",
    geocoderError: "geocoderError",
    results: "results",
    result: "result",
    error: "error"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]]
});

GeocoderControlDirective.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
  }, {
    type: ControlComponent,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"],
      args: [MAPBOX_GEOCODER_API_KEY]
    }]
  }];
};

GeocoderControlDirective.propDecorators = {
  countries: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  placeholder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  zoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  bbox: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  types: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  flyTo: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  minLength: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  limit: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  language: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  accessToken: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  filter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  localGeocoder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  mapboxgl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  marker: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  proximity: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  searchInput: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  clear: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  loading: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  geocoderResults: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  geocoderResult: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  geocoderError: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  results: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  result: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  error: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](GeocoderControlDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: '[mglGeocoder]'
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
    }, {
      type: ControlComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"],
        args: [MAPBOX_GEOCODER_API_KEY]
      }]
    }];
  }, {
    marker: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    clear: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    loading: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    geocoderResults: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    geocoderResult: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    geocoderError: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    results: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    result: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    countries: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    placeholder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    zoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    bbox: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    types: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    flyTo: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    minLength: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    limit: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    language: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    accessToken: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    filter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    localGeocoder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    mapboxgl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    proximity: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    searchInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var GeolocateControlDirective = /*#__PURE__*/function () {
  function GeolocateControlDirective(MapService, ControlComponent) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, GeolocateControlDirective);

    this.MapService = MapService;
    this.ControlComponent = ControlComponent;
    this.geolocate = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(GeolocateControlDirective, [{
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this45 = this;

      this.MapService.mapCreated$.subscribe(function () {
        if (_this45.ControlComponent.control) {
          throw new Error('Another control is already set for this control');
        }

        var options = {
          positionOptions: _this45.positionOptions,
          fitBoundsOptions: _this45.fitBoundsOptions,
          trackUserLocation: _this45.trackUserLocation,
          showUserLocation: _this45.showUserLocation
        };
        Object.keys(options).forEach(function (key) {
          var tkey = key;

          if (options[tkey] === undefined) {
            delete options[tkey];
          }
        });
        _this45.ControlComponent.control = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5__["GeolocateControl"](options);

        _this45.ControlComponent.control.on('geolocate', function (data) {
          _this45.geolocate.emit(data);
        });

        _this45.MapService.addControl(_this45.ControlComponent.control, _this45.ControlComponent.position);
      });
    }
  }]);

  return GeolocateControlDirective;
}();

GeolocateControlDirective.ɵfac = function GeolocateControlDirective_Factory(t) {
  return new (t || GeolocateControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](ControlComponent, 1));
};

GeolocateControlDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: GeolocateControlDirective,
  selectors: [["", "mglGeolocate", ""]],
  inputs: {
    positionOptions: "positionOptions",
    fitBoundsOptions: "fitBoundsOptions",
    trackUserLocation: "trackUserLocation",
    showUserLocation: "showUserLocation"
  },
  outputs: {
    geolocate: "geolocate"
  }
});

GeolocateControlDirective.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: ControlComponent,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
    }]
  }];
};

GeolocateControlDirective.propDecorators = {
  positionOptions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  fitBoundsOptions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  trackUserLocation: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  showUserLocation: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  geolocate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](GeolocateControlDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: '[mglGeolocate]'
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: ControlComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
      }]
    }];
  }, {
    geolocate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    positionOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    fitBoundsOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    trackUserLocation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    showUserLocation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var NavigationControlDirective = /*#__PURE__*/function () {
  function NavigationControlDirective(MapService, ControlComponent) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, NavigationControlDirective);

    this.MapService = MapService;
    this.ControlComponent = ControlComponent;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NavigationControlDirective, [{
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this46 = this;

      this.MapService.mapCreated$.subscribe(function () {
        if (_this46.ControlComponent.control) {
          throw new Error('Another control is already set for this control');
        }

        var options = {};

        if (_this46.showCompass !== undefined) {
          options.showCompass = _this46.showCompass;
        }

        if (_this46.showZoom !== undefined) {
          options.showZoom = _this46.showZoom;
        }

        _this46.ControlComponent.control = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5__["NavigationControl"](options);

        _this46.MapService.addControl(_this46.ControlComponent.control, _this46.ControlComponent.position);
      });
    }
  }]);

  return NavigationControlDirective;
}();

NavigationControlDirective.ɵfac = function NavigationControlDirective_Factory(t) {
  return new (t || NavigationControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](ControlComponent, 1));
};

NavigationControlDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: NavigationControlDirective,
  selectors: [["", "mglNavigation", ""]],
  inputs: {
    showCompass: "showCompass",
    showZoom: "showZoom"
  }
});

NavigationControlDirective.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: ControlComponent,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
    }]
  }];
};

NavigationControlDirective.propDecorators = {
  showCompass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  showZoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](NavigationControlDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: '[mglNavigation]'
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: ControlComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
      }]
    }];
  }, {
    showCompass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    showZoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var ScaleControlDirective = /*#__PURE__*/function () {
  function ScaleControlDirective(MapService, ControlComponent) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, ScaleControlDirective);

    this.MapService = MapService;
    this.ControlComponent = ControlComponent;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(ScaleControlDirective, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.unit && !changes.unit.isFirstChange()) {
        this.ControlComponent.control.setUnit(changes.unit.currentValue);
      }
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this47 = this;

      this.MapService.mapCreated$.subscribe(function () {
        if (_this47.ControlComponent.control) {
          throw new Error('Another control is already set for this control');
        }

        var options = {};

        if (_this47.maxWidth !== undefined) {
          options.maxWidth = _this47.maxWidth;
        }

        if (_this47.unit !== undefined) {
          options.unit = _this47.unit;
        }

        _this47.ControlComponent.control = new mapbox_gl__WEBPACK_IMPORTED_MODULE_5__["ScaleControl"](options);

        _this47.MapService.addControl(_this47.ControlComponent.control, _this47.ControlComponent.position);
      });
    }
  }]);

  return ScaleControlDirective;
}();

ScaleControlDirective.ɵfac = function ScaleControlDirective_Factory(t) {
  return new (t || ScaleControlDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](ControlComponent, 1));
};

ScaleControlDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: ScaleControlDirective,
  selectors: [["", "mglScale", ""]],
  inputs: {
    maxWidth: "maxWidth",
    unit: "unit"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]]
});

ScaleControlDirective.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: ControlComponent,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
    }]
  }];
};

ScaleControlDirective.propDecorators = {
  maxWidth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  unit: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](ScaleControlDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: '[mglScale]'
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: ControlComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
      }]
    }];
  }, {
    maxWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    unit: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var LayerComponent = /*#__PURE__*/function () {
  function LayerComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, LayerComponent);

    this.MapService = MapService;
    this.layerClick = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerDblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerMouseDown = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerMouseUp = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerMouseEnter = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerMouseLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerMouseMove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerMouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerMouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerContextMenu = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerTouchStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerTouchEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerTouchCancel = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerClick instead
     */

    this.click = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerDblClick instead
     */

    this.dblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerMouseDown instead
     */

    this.mouseDown = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerMouseUp instead
     */

    this.mouseUp = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerMouseEnter instead
     */

    this.mouseEnter = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerMouseLeave instead
     */

    this.mouseLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerMouseMove instead
     */

    this.mouseMove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerMouseOver instead
     */

    this.mouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerMouseOut instead
     */

    this.mouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerContextMenu instead
     */

    this.contextMenu = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerTouchStart instead
     */

    this.touchStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerTouchEnd instead
     */

    this.touchEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use layerTouchCancel instead
     */

    this.touchCancel = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.layerAdded = false;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(LayerComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this48 = this;

      this.warnDeprecatedOutputs();
      this.sub = this.MapService.mapLoaded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["switchMap"])(function () {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this48.MapService.mapInstance, 'styledata').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["mapTo"])(false), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !_this48.MapService.mapInstance.getLayer(_this48.id);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["startWith"])(true));
      })).subscribe(function (bindEvents) {
        return _this48.init(bindEvents);
      });
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.layerAdded) {
        return;
      }

      if (changes.paint && !changes.paint.isFirstChange()) {
        this.MapService.setAllLayerPaintProperty(this.id, changes.paint.currentValue);
      }

      if (changes.layout && !changes.layout.isFirstChange()) {
        this.MapService.setAllLayerLayoutProperty(this.id, changes.layout.currentValue);
      }

      if (changes.filter && !changes.filter.isFirstChange()) {
        this.MapService.setLayerFilter(this.id, changes.filter.currentValue);
      }

      if (changes.before && !changes.before.isFirstChange()) {
        this.MapService.setLayerBefore(this.id, changes.before.currentValue);
      }

      if (changes.minzoom && !changes.minzoom.isFirstChange() || changes.maxzoom && !changes.maxzoom.isFirstChange()) {
        this.MapService.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this.layerAdded) {
        this.MapService.removeLayer(this.id);
      }

      if (this.sub) {
        this.sub.unsubscribe();
      }
    }
  }, {
    key: "init",
    value: function init(bindEvents) {
      var layer = {
        layerOptions: {
          id: this.id,
          type: this.type,
          source: this.source,
          metadata: this.metadata,
          'source-layer': this.sourceLayer,
          minzoom: this.minzoom,
          maxzoom: this.maxzoom,
          filter: this.filter,
          layout: this.layout,
          paint: this.paint
        },
        layerEvents: {
          layerClick: this.layerClick,
          layerDblClick: this.layerDblClick,
          layerMouseDown: this.layerMouseDown,
          layerMouseUp: this.layerMouseUp,
          layerMouseEnter: this.layerMouseEnter,
          layerMouseLeave: this.layerMouseLeave,
          layerMouseMove: this.layerMouseMove,
          layerMouseOver: this.layerMouseOver,
          layerMouseOut: this.layerMouseOut,
          layerContextMenu: this.layerContextMenu,
          layerTouchStart: this.layerTouchStart,
          layerTouchEnd: this.layerTouchEnd,
          layerTouchCancel: this.layerTouchCancel,
          click: this.click,
          dblClick: this.dblClick,
          mouseDown: this.mouseDown,
          mouseUp: this.mouseUp,
          mouseEnter: this.mouseEnter,
          mouseLeave: this.mouseLeave,
          mouseMove: this.mouseMove,
          mouseOver: this.mouseOver,
          mouseOut: this.mouseOut,
          contextMenu: this.contextMenu,
          touchStart: this.touchStart,
          touchEnd: this.touchEnd,
          touchCancel: this.touchCancel
        }
      };
      this.MapService.addLayer(layer, bindEvents, this.before);
      this.layerAdded = true;
    }
  }, {
    key: "warnDeprecatedOutputs",
    value: function warnDeprecatedOutputs() {
      var dw = deprecationWarning.bind(undefined, LayerComponent.name);

      if (this.click.observers.length) {
        dw('click', 'layerClick');
      }

      if (this.dblClick.observers.length) {
        dw('dblClick', 'layerDblClick');
      }

      if (this.mouseDown.observers.length) {
        dw('mouseDown', 'layerMouseDown');
      }

      if (this.mouseUp.observers.length) {
        dw('mouseUp', 'layerMouseUp');
      }

      if (this.mouseEnter.observers.length) {
        dw('mouseEnter', 'layerMouseEnter');
      }

      if (this.mouseLeave.observers.length) {
        dw('mouseLeave', 'layerMouseLeave');
      }

      if (this.mouseMove.observers.length) {
        dw('mouseMove', 'layerMouseMove');
      }

      if (this.mouseOver.observers.length) {
        dw('mouseOver', 'layerMouseOver');
      }

      if (this.mouseOut.observers.length) {
        dw('mouseOut', 'layerMouseOut');
      }

      if (this.contextMenu.observers.length) {
        dw('contextMenu', 'layerContextMenu');
      }

      if (this.touchStart.observers.length) {
        dw('touchStart', 'layerTouchStart');
      }

      if (this.touchEnd.observers.length) {
        dw('touchEnd', 'layerTouchEnd');
      }

      if (this.touchCancel.observers.length) {
        dw('touchCancel', 'layerTouchCancel');
      }
    }
  }]);

  return LayerComponent;
}();

LayerComponent.ɵfac = function LayerComponent_Factory(t) {
  return new (t || LayerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

LayerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: LayerComponent,
  selectors: [["mgl-layer"]],
  inputs: {
    id: "id",
    source: "source",
    type: "type",
    metadata: "metadata",
    sourceLayer: "sourceLayer",
    filter: "filter",
    layout: "layout",
    paint: "paint",
    before: "before",
    minzoom: "minzoom",
    maxzoom: "maxzoom"
  },
  outputs: {
    layerClick: "layerClick",
    layerDblClick: "layerDblClick",
    layerMouseDown: "layerMouseDown",
    layerMouseUp: "layerMouseUp",
    layerMouseEnter: "layerMouseEnter",
    layerMouseLeave: "layerMouseLeave",
    layerMouseMove: "layerMouseMove",
    layerMouseOver: "layerMouseOver",
    layerMouseOut: "layerMouseOut",
    layerContextMenu: "layerContextMenu",
    layerTouchStart: "layerTouchStart",
    layerTouchEnd: "layerTouchEnd",
    layerTouchCancel: "layerTouchCancel",
    click: "click",
    dblClick: "dblClick",
    mouseDown: "mouseDown",
    mouseUp: "mouseUp",
    mouseEnter: "mouseEnter",
    mouseLeave: "mouseLeave",
    mouseMove: "mouseMove",
    mouseOver: "mouseOver",
    mouseOut: "mouseOut",
    contextMenu: "contextMenu",
    touchStart: "touchStart",
    touchEnd: "touchEnd",
    touchCancel: "touchCancel"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function LayerComponent_Template(rf, ctx) {},
  encapsulation: 2
});

LayerComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

LayerComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  source: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  type: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  metadata: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  sourceLayer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  filter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  layout: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  paint: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  before: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  minzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  layerClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerDblClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerMouseDown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerMouseUp: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerMouseEnter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerMouseLeave: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerMouseMove: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerMouseOver: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerMouseOut: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerContextMenu: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerTouchStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerTouchEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  layerTouchCancel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  click: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dblClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseDown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseUp: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseEnter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseLeave: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseMove: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseOver: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseOut: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  contextMenu: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  touchStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  touchEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  touchCancel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](LayerComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-layer',
      template: ''
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    layerClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerDblClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerMouseDown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerMouseUp: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerMouseEnter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerMouseLeave: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerMouseMove: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerMouseOver: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerMouseOut: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerContextMenu: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerTouchStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerTouchEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layerTouchCancel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    click: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dblClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseDown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseUp: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseEnter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseLeave: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseMove: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseOver: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseOut: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    contextMenu: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    touchStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    touchEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    touchCancel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    source: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    metadata: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    sourceLayer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    filter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    layout: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    paint: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    before: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    minzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var GeoJSONSourceComponent = /*#__PURE__*/function () {
  function GeoJSONSourceComponent(MapService, zone) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, GeoJSONSourceComponent);

    this.MapService = MapService;
    this.zone = zone;
    this.updateFeatureData = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
    this.sub = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
    this.sourceAdded = false;
    this.featureIdCounter = 0;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(GeoJSONSourceComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this49 = this;

      if (!this.data) {
        this.data = {
          type: 'FeatureCollection',
          features: []
        };
      }

      var sub1 = this.MapService.mapLoaded$.subscribe(function () {
        _this49.init();

        var sub = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this49.MapService.mapInstance, 'styledata').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !_this49.MapService.mapInstance.getSource(_this49.id);
        })).subscribe(function () {
          _this49.init();
        });

        _this49.sub.add(sub);
      });
      this.sub.add(sub1);
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.sourceAdded) {
        return;
      }

      if (changes.maxzoom && !changes.maxzoom.isFirstChange() || changes.attribution && !changes.attribution.isFirstChange() || changes.buffer && !changes.buffer.isFirstChange() || changes.tolerance && !changes.tolerance.isFirstChange() || changes.cluster && !changes.cluster.isFirstChange() || changes.clusterRadius && !changes.clusterRadius.isFirstChange() || changes.clusterMaxZoom && !changes.clusterMaxZoom.isFirstChange() || changes.clusterMinPoints && !changes.clusterMinPoints.isFirstChange() || changes.clusterProperties && !changes.clusterProperties.isFirstChange() || changes.lineMetrics && !changes.lineMetrics.isFirstChange() || changes.generateId && !changes.generateId.isFirstChange() || changes.promoteId && !changes.promoteId.isFirstChange() || changes.filter && !changes.filter.isFirstChange()) {
        this.ngOnDestroy();
        this.ngOnInit();
      }

      if (changes.data && !changes.data.isFirstChange()) {
        var source = this.MapService.getSource(this.id);
        source.setData(this.data);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.sub.unsubscribe();

      if (this.sourceAdded) {
        this.MapService.removeSource(this.id);
        this.sourceAdded = false;
      }
    }
    /**
     * For clustered sources, fetches the zoom at which the given cluster expands.
     * @param clusterId The value of the cluster's cluster_id property.
     */

  }, {
    key: "getClusterExpansionZoom",
    value: function getClusterExpansionZoom(clusterId) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var _this50 = this;

        var source;
        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                source = this.MapService.getSource(this.id);
                return _context3.abrupt("return", this.zone.run(function () {
                  return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(_this50, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            return _context2.abrupt("return", new Promise(function (resolve, reject) {
                              source.getClusterExpansionZoom(clusterId, function (error, zoom) {
                                if (error) {
                                  reject(error);
                                } else {
                                  resolve(zoom);
                                }
                              });
                            }));

                          case 1:
                          case "end":
                            return _context2.stop();
                        }
                      }
                    }, _callee2);
                  }));
                }));

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
    }
    /**
     * For clustered sources, fetches the children of the given cluster on the next zoom level (as an array of GeoJSON features).
     * @param clusterId The value of the cluster's cluster_id property.
     */

  }, {
    key: "getClusterChildren",
    value: function getClusterChildren(clusterId) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        var _this51 = this;

        var source;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                source = this.MapService.getSource(this.id);
                return _context5.abrupt("return", this.zone.run(function () {
                  return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(_this51, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
                    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                      while (1) {
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            return _context4.abrupt("return", new Promise(function (resolve, reject) {
                              source.getClusterChildren(clusterId, function (error, features) {
                                if (error) {
                                  reject(error);
                                } else {
                                  resolve(features);
                                }
                              });
                            }));

                          case 1:
                          case "end":
                            return _context4.stop();
                        }
                      }
                    }, _callee4);
                  }));
                }));

              case 2:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
    }
    /**
     * For clustered sources, fetches the original points that belong to the cluster (as an array of GeoJSON features).
     * @param clusterId The value of the cluster's cluster_id property.
     * @param limit The maximum number of features to return.
     * @param offset The number of features to skip (e.g. for pagination).
     */

  }, {
    key: "getClusterLeaves",
    value: function getClusterLeaves(clusterId, limit, offset) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        var _this52 = this;

        var source;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                source = this.MapService.getSource(this.id);
                return _context7.abrupt("return", this.zone.run(function () {
                  return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(_this52, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
                    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                      while (1) {
                        switch (_context6.prev = _context6.next) {
                          case 0:
                            return _context6.abrupt("return", new Promise(function (resolve, reject) {
                              source.getClusterLeaves(clusterId, limit, offset, function (error, features) {
                                if (error) {
                                  reject(error);
                                } else {
                                  resolve(features);
                                }
                              });
                            }));

                          case 1:
                          case "end":
                            return _context6.stop();
                        }
                      }
                    }, _callee6);
                  }));
                }));

              case 2:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));
    }
  }, {
    key: "_addFeature",
    value: function _addFeature(feature) {
      var collection = this.data;
      collection.features.push(feature);
      this.updateFeatureData.next();
    }
  }, {
    key: "_removeFeature",
    value: function _removeFeature(feature) {
      var collection = this.data;
      var index = collection.features.indexOf(feature);

      if (index > -1) {
        collection.features.splice(index, 1);
      }

      this.updateFeatureData.next();
    }
  }, {
    key: "_getNewFeatureId",
    value: function _getNewFeatureId() {
      return ++this.featureIdCounter;
    }
  }, {
    key: "init",
    value: function init() {
      var _this53 = this;

      var source = {
        type: 'geojson',
        data: this.data,
        maxzoom: this.maxzoom,
        attribution: this.attribution,
        buffer: this.buffer,
        tolerance: this.tolerance,
        cluster: this.cluster,
        clusterRadius: this.clusterRadius,
        clusterMaxZoom: this.clusterMaxZoom,
        clusterMinPoints: this.clusterMinPoints,
        clusterProperties: this.clusterProperties,
        lineMetrics: this.lineMetrics,
        generateId: this.generateId,
        promoteId: this.promoteId,
        filter: this.filter
      };
      this.MapService.addSource(this.id, source);
      var sub = this.updateFeatureData.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["debounceTime"])(0)).subscribe(function () {
        var source = _this53.MapService.getSource(_this53.id);

        source.setData(_this53.data);
      });
      this.sub.add(sub);
      this.sourceAdded = true;
    }
  }]);

  return GeoJSONSourceComponent;
}();

GeoJSONSourceComponent.ɵfac = function GeoJSONSourceComponent_Factory(t) {
  return new (t || GeoJSONSourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]));
};

GeoJSONSourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: GeoJSONSourceComponent,
  selectors: [["mgl-geojson-source"]],
  inputs: {
    data: "data",
    id: "id",
    maxzoom: "maxzoom",
    attribution: "attribution",
    buffer: "buffer",
    tolerance: "tolerance",
    cluster: "cluster",
    clusterRadius: "clusterRadius",
    clusterMaxZoom: "clusterMaxZoom",
    clusterMinPoints: "clusterMinPoints",
    clusterProperties: "clusterProperties",
    lineMetrics: "lineMetrics",
    generateId: "generateId",
    promoteId: "promoteId",
    filter: "filter"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function GeoJSONSourceComponent_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});

GeoJSONSourceComponent.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
  }];
};

GeoJSONSourceComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  data: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  attribution: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  buffer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  tolerance: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  cluster: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  clusterRadius: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  clusterMaxZoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  clusterMinPoints: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  clusterProperties: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  lineMetrics: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  generateId: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  promoteId: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  filter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](GeoJSONSourceComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-geojson-source',
      template: '',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
    }];
  }, {
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    attribution: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    buffer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    tolerance: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    cluster: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    clusterRadius: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    clusterMaxZoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    clusterMinPoints: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    clusterProperties: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    lineMetrics: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    generateId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    promoteId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    filter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var FeatureComponent = /*#__PURE__*/function () {
  function FeatureComponent(GeoJSONSourceComponent) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, FeatureComponent);

    this.GeoJSONSourceComponent = GeoJSONSourceComponent;
    this.type = 'Feature';
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(FeatureComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      if (!this.id) {
        this.id = this.GeoJSONSourceComponent._getNewFeatureId();
      }

      this.feature = {
        type: this.type,
        geometry: this.geometry,
        properties: this.properties ? this.properties : {}
      };
      this.feature.id = this.id;

      this.GeoJSONSourceComponent._addFeature(this.feature);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.GeoJSONSourceComponent._removeFeature(this.feature);
    }
  }, {
    key: "updateCoordinates",
    value: function updateCoordinates(coordinates) {
      this.feature.geometry.coordinates = coordinates;
      this.GeoJSONSourceComponent.updateFeatureData.next();
    }
  }]);

  return FeatureComponent;
}();

FeatureComponent.ɵfac = function FeatureComponent_Factory(t) {
  return new (t || FeatureComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["forwardRef"])(function () {
    return GeoJSONSourceComponent;
  })));
};

FeatureComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: FeatureComponent,
  selectors: [["mgl-feature"]],
  inputs: {
    id: "id",
    geometry: "geometry",
    properties: "properties"
  },
  decls: 0,
  vars: 0,
  template: function FeatureComponent_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});

FeatureComponent.ctorParameters = function () {
  return [{
    type: GeoJSONSourceComponent,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"],
      args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["forwardRef"])(function () {
        return GeoJSONSourceComponent;
      })]
    }]
  }];
};

FeatureComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  geometry: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  properties: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](FeatureComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-feature',
      template: '',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: GeoJSONSourceComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"],
        args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["forwardRef"])(function () {
          return GeoJSONSourceComponent;
        })]
      }]
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    geometry: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    properties: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var DraggableDirective = /*#__PURE__*/function () {
  function DraggableDirective(MapService, NgZone, FeatureComponent) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, DraggableDirective);

    this.MapService = MapService;
    this.NgZone = NgZone;
    this.FeatureComponent = FeatureComponent;
    this.featureDragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.featureDragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.featureDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use featureDragStart instead
     */

    this.dragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use featureDragEnd instead
     */

    this.dragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use featureDrag instead
     */

    this.drag = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.sub = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(DraggableDirective, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      this.warnDeprecatedOutputs();
      var enter$;
      var leave$;
      var updateCoords;

      if (this.FeatureComponent && this.layer) {
        enter$ = this.layer.layerMouseEnter;
        leave$ = this.layer.layerMouseLeave;
        updateCoords = this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent);

        if (this.FeatureComponent.geometry.type !== 'Point') {
          throw new Error('mglDraggable only support point feature');
        }
      } else {
        throw new Error('mglDraggable can only be used on Feature (with a layer as input) or Marker');
      }

      this.handleDraggable(enter$, leave$, updateCoords);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.sub.unsubscribe();
    }
  }, {
    key: "handleDraggable",
    value: function handleDraggable(enter$, leave$, updateCoords) {
      var _this54 = this;

      var moving = false;
      var inside = false;
      this.MapService.mapCreated$.subscribe(function () {
        var mouseUp$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this54.MapService.mapInstance, 'mouseup');
        var dragStart$ = enter$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !moving;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function (evt) {
          return _this54.filterFeature(evt);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["tap"])(function () {
          inside = true;

          _this54.MapService.changeCanvasCursor('move');

          _this54.MapService.updateDragPan(false);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["switchMap"])(function () {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this54.MapService.mapInstance, 'mousedown').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["takeUntil"])(leave$));
        }));
        var dragging$ = dragStart$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["switchMap"])(function () {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this54.MapService.mapInstance, 'mousemove').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["takeUntil"])(mouseUp$));
        }));
        var dragEnd$ = dragStart$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["switchMap"])(function () {
          return mouseUp$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["take"])(1));
        }));

        _this54.sub.add(dragStart$.subscribe(function (evt) {
          moving = true;

          if (_this54.featureDragStart.observers.length || _this54.dragStart.observers.length) {
            _this54.NgZone.run(function () {
              _this54.featureDragStart.emit(evt);

              _this54.dragStart.emit(evt);
            });
          }
        }));

        _this54.sub.add(dragging$.subscribe(function (evt) {
          updateCoords([evt.lngLat.lng, evt.lngLat.lat]);

          if (_this54.featureDrag.observers.length || _this54.drag.observers.length) {
            _this54.NgZone.run(function () {
              _this54.featureDrag.emit(evt);

              _this54.drag.emit(evt);
            });
          }
        }));

        _this54.sub.add(dragEnd$.subscribe(function (evt) {
          moving = false;

          if (_this54.featureDragEnd.observers.length || _this54.dragEnd.observers.length) {
            _this54.NgZone.run(function () {
              _this54.featureDragEnd.emit(evt);

              _this54.dragEnd.emit(evt);
            });
          }

          if (!inside) {
            // It's possible to dragEnd outside the target (small input lag)
            _this54.MapService.changeCanvasCursor('');

            _this54.MapService.updateDragPan(true);
          }
        }));

        _this54.sub.add(leave$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["tap"])(function () {
          return inside = false;
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !moving;
        })).subscribe(function () {
          _this54.MapService.changeCanvasCursor('');

          _this54.MapService.updateDragPan(true);
        }));
      });
    }
  }, {
    key: "filterFeature",
    value: function filterFeature(evt) {
      if (this.FeatureComponent && this.layer) {
        var feature = this.MapService.queryRenderedFeatures(evt.point, {
          layers: [this.layer.id],
          filter: ['all', ['==', '$type', 'Point'], ['==', '$id', this.FeatureComponent.id]]
        })[0];

        if (!feature) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "warnDeprecatedOutputs",
    value: function warnDeprecatedOutputs() {
      var dw = deprecationWarning.bind(undefined, DraggableDirective.name);

      if (this.dragStart.observers.length) {
        dw('dragStart', 'featureDragStart');
      }

      if (this.dragEnd.observers.length) {
        dw('dragEnd', 'featureDragEnd');
      }

      if (this.drag.observers.length) {
        dw('drag', 'featureDrag');
      }
    }
  }]);

  return DraggableDirective;
}();

DraggableDirective.ɵfac = function DraggableDirective_Factory(t) {
  return new (t || DraggableDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](FeatureComponent, 9));
};

DraggableDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: DraggableDirective,
  selectors: [["", "mglDraggable", ""]],
  inputs: {
    layer: ["mglDraggable", "layer"]
  },
  outputs: {
    featureDragStart: "featureDragStart",
    featureDragEnd: "featureDragEnd",
    featureDrag: "featureDrag",
    dragStart: "dragStart",
    dragEnd: "dragEnd",
    drag: "drag"
  }
});

DraggableDirective.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
  }, {
    type: FeatureComponent,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
    }]
  }];
};

DraggableDirective.propDecorators = {
  layer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
    args: ['mglDraggable']
  }],
  featureDragStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  featureDragEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  featureDrag: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dragStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dragEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  drag: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](DraggableDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: '[mglDraggable]'
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
    }, {
      type: FeatureComponent,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Host"]
      }]
    }];
  }, {
    featureDragStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    featureDragEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    featureDrag: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dragStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dragEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    drag: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    layer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
      args: ['mglDraggable']
    }]
  });
})();

var ImageComponent = /*#__PURE__*/function () {
  function ImageComponent(MapService, zone) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, ImageComponent);

    this.MapService = MapService;
    this.zone = zone;
    this.imageError = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.imageLoaded = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use imageError instead
     */

    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use imageLoaded instead
     */

    this.loaded = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.isAdded = false;
    this.isAdding = false;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(ImageComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this55 = this;

      this.warnDeprecatedOutputs();
      this.sub = this.MapService.mapLoaded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["switchMap"])(function () {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this55.MapService.mapInstance, 'styledata').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["startWith"])(undefined), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !_this55.isAdding && !_this55.MapService.mapInstance.hasImage(_this55.id);
        }));
      })).subscribe(function () {
        return _this55.init();
      });
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.data && !changes.data.isFirstChange() || changes.options && !changes.options.isFirstChange() || changes.url && !changes.url.isFirstChange()) {
        this.ngOnDestroy();
        this.ngOnInit();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this.isAdded) {
        this.MapService.removeImage(this.id);
      }

      if (this.sub) {
        this.sub.unsubscribe();
      }
    }
  }, {
    key: "init",
    value: function init() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        var _this56 = this;

        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                this.isAdding = true;

                if (!this.data) {
                  _context8.next = 7;
                  break;
                }

                this.MapService.addImage(this.id, this.data, this.options);
                this.isAdded = true;
                this.isAdding = false;
                _context8.next = 19;
                break;

              case 7:
                if (!this.url) {
                  _context8.next = 19;
                  break;
                }

                _context8.prev = 8;
                _context8.next = 11;
                return this.MapService.loadAndAddImage(this.id, this.url, this.options);

              case 11:
                this.isAdded = true;
                this.isAdding = false;
                this.zone.run(function () {
                  _this56.imageLoaded.emit();

                  _this56.loaded.emit();
                });
                _context8.next = 19;
                break;

              case 16:
                _context8.prev = 16;
                _context8.t0 = _context8["catch"](8);
                this.zone.run(function () {
                  _this56.imageError.emit(_context8.t0);

                  _this56.error.emit(_context8.t0);
                });

              case 19:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this, [[8, 16]]);
      }));
    }
  }, {
    key: "warnDeprecatedOutputs",
    value: function warnDeprecatedOutputs() {
      var dw = deprecationWarning.bind(undefined, ImageComponent.name);

      if (this.error.observers.length) {
        dw('error', 'imageError');
      }

      if (this.loaded.observers.length) {
        dw('loaded', 'imageLoaded');
      }
    }
  }]);

  return ImageComponent;
}();

ImageComponent.ɵfac = function ImageComponent_Factory(t) {
  return new (t || ImageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]));
};

ImageComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: ImageComponent,
  selectors: [["mgl-image"]],
  inputs: {
    id: "id",
    data: "data",
    options: "options",
    url: "url"
  },
  outputs: {
    imageError: "imageError",
    imageLoaded: "imageLoaded",
    error: "error",
    loaded: "loaded"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function ImageComponent_Template(rf, ctx) {},
  encapsulation: 2
});

ImageComponent.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
  }];
};

ImageComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  data: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  options: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  url: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  imageError: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  imageLoaded: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  error: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  loaded: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](ImageComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-image',
      template: ''
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
    }];
  }, {
    imageError: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    imageLoaded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    loaded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    url: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var MapComponent = /*#__PURE__*/function () {
  function MapComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MapComponent);

    this.MapService = MapService;
    /* Added by ngx-mapbox-gl */

    this.movingMethod = 'flyTo';
    this.mapResize = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapRemove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapMouseDown = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapMouseUp = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapMouseMove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapClick = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapDblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapMouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapMouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapContextMenu = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapTouchStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapTouchEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapTouchMove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapTouchCancel = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapWheel = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.moveStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.move = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.moveEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapDragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapDragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.zoomStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.zoomEvt = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.zoomEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.rotateStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.rotate = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.rotateEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.pitchStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.pitchEvt = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.pitchEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.boxZoomStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.boxZoomEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.boxZoomCancel = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.webGlContextLost = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.webGlContextRestored = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapLoad = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.idle = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.render = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.mapError = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.data = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.styleData = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.sourceData = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.dataLoading = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.styleDataLoading = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.sourceDataLoading = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.styleImageMissing = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapResize instead
     */

    this.resize = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapRemove instead
     */

    this.remove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapMouseDown instead
     */

    this.mouseDown = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapMouseUp instead
     */

    this.mouseUp = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapMouseMove instead
     */

    this.mouseMove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapClick instead
     */

    this.click = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapDblClick instead
     */

    this.dblClick = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapMouseOver instead
     */

    this.mouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapMouseOut instead
     */

    this.mouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapContextMenu instead
     */

    this.contextMenu = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapTouchStart instead
     */

    this.touchStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapTouchEnd instead
     */

    this.touchEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapTouchMove instead
     */

    this.touchMove = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapTouchCancel instead
     */

    this.touchCancel = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapWheel instead
     */

    this.wheel = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapDragStart instead
     */

    this.dragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapDrag instead
     */

    this.drag = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapDragEnd instead
     */

    this.dragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapLoad instead
     */

    this.load = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use mapError instead
     */

    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MapComponent, [{
    key: "mapInstance",
    get: function get() {
      return this.MapService.mapInstance;
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this.warnDeprecatedOutputs();
      this.MapService.setup({
        accessToken: this.accessToken,
        customMapboxApiUrl: this.customMapboxApiUrl,
        mapOptions: {
          collectResourceTiming: this.collectResourceTiming,
          container: this.mapContainer.nativeElement,
          crossSourceCollisions: this.crossSourceCollisions,
          fadeDuration: this.fadeDuration,
          minZoom: this.minZoom,
          maxZoom: this.maxZoom,
          minPitch: this.minPitch,
          maxPitch: this.maxPitch,
          style: this.style,
          hash: this.hash,
          interactive: this.interactive,
          bearingSnap: this.bearingSnap,
          pitchWithRotate: this.pitchWithRotate,
          clickTolerance: this.clickTolerance,
          attributionControl: this.attributionControl,
          logoPosition: this.logoPosition,
          failIfMajorPerformanceCaveat: this.failIfMajorPerformanceCaveat,
          preserveDrawingBuffer: this.preserveDrawingBuffer,
          refreshExpiredTiles: this.refreshExpiredTiles,
          maxBounds: this.maxBounds,
          scrollZoom: this.scrollZoom,
          boxZoom: this.boxZoom,
          dragRotate: this.dragRotate,
          dragPan: this.dragPan,
          keyboard: this.keyboard,
          doubleClickZoom: this.doubleClickZoom,
          touchPitch: this.touchPitch,
          touchZoomRotate: this.touchZoomRotate,
          trackResize: this.trackResize,
          center: this.center,
          zoom: this.zoom,
          bearing: this.bearing,
          pitch: this.pitch,
          renderWorldCopies: this.renderWorldCopies,
          maxTileCacheSize: this.maxTileCacheSize,
          localIdeographFontFamily: this.localIdeographFontFamily,
          transformRequest: this.transformRequest,
          bounds: this.bounds ? this.bounds : this.fitBounds,
          fitBoundsOptions: this.fitBoundsOptions,
          antialias: this.antialias,
          locale: this.locale
        },
        mapEvents: this
      });

      if (this.cursorStyle) {
        this.MapService.changeCanvasCursor(this.cursorStyle);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.MapService.destroyMap();
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_6__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.next = 2;
                return this.MapService.mapCreated$.toPromise();

              case 2:
                if (changes.cursorStyle && !changes.cursorStyle.isFirstChange()) {
                  this.MapService.changeCanvasCursor(changes.cursorStyle.currentValue);
                }

                if (changes.minZoom && !changes.minZoom.isFirstChange()) {
                  this.MapService.updateMinZoom(changes.minZoom.currentValue);
                }

                if (changes.maxZoom && !changes.maxZoom.isFirstChange()) {
                  this.MapService.updateMaxZoom(changes.maxZoom.currentValue);
                }

                if (changes.minPitch && !changes.minPitch.isFirstChange()) {
                  this.MapService.updateMinPitch(changes.minPitch.currentValue);
                }

                if (changes.maxPitch && !changes.maxPitch.isFirstChange()) {
                  this.MapService.updateMaxPitch(changes.maxPitch.currentValue);
                }

                if (changes.renderWorldCopies && !changes.renderWorldCopies.isFirstChange()) {
                  this.MapService.updateRenderWorldCopies(changes.renderWorldCopies.currentValue);
                }

                if (changes.scrollZoom && !changes.scrollZoom.isFirstChange()) {
                  this.MapService.updateScrollZoom(changes.scrollZoom.currentValue);
                }

                if (changes.dragRotate && !changes.dragRotate.isFirstChange()) {
                  this.MapService.updateDragRotate(changes.dragRotate.currentValue);
                }

                if (changes.touchPitch && !changes.touchPitch.isFirstChange()) {
                  this.MapService.updateTouchPitch(changes.touchPitch.currentValue);
                }

                if (changes.touchZoomRotate && !changes.touchZoomRotate.isFirstChange()) {
                  this.MapService.updateTouchZoomRotate(changes.touchZoomRotate.currentValue);
                }

                if (changes.doubleClickZoom && !changes.doubleClickZoom.isFirstChange()) {
                  this.MapService.updateDoubleClickZoom(changes.doubleClickZoom.currentValue);
                }

                if (changes.keyboard && !changes.keyboard.isFirstChange()) {
                  this.MapService.updateKeyboard(changes.keyboard.currentValue);
                }

                if (changes.dragPan && !changes.dragPan.isFirstChange()) {
                  this.MapService.updateDragPan(changes.dragPan.currentValue);
                }

                if (changes.boxZoom && !changes.boxZoom.isFirstChange()) {
                  this.MapService.updateBoxZoom(changes.boxZoom.currentValue);
                }

                if (changes.style && !changes.style.isFirstChange()) {
                  this.MapService.updateStyle(changes.style.currentValue);
                }

                if (changes.maxBounds && !changes.maxBounds.isFirstChange()) {
                  this.MapService.updateMaxBounds(changes.maxBounds.currentValue);
                }

                if (changes.fitBounds && changes.fitBounds.currentValue && !changes.fitBounds.isFirstChange()) {
                  this.MapService.fitBounds(changes.fitBounds.currentValue, this.fitBoundsOptions);
                }

                if (changes.fitScreenCoordinates && changes.fitScreenCoordinates.currentValue) {
                  if ((this.center || this.zoom || this.pitch || this.fitBounds) && changes.fitScreenCoordinates.isFirstChange()) {
                    console.warn('[ngx-mapbox-gl] center / zoom / pitch / fitBounds inputs are being overridden by fitScreenCoordinates input');
                  }

                  this.MapService.fitScreenCoordinates(changes.fitScreenCoordinates.currentValue, this.bearing ? this.bearing[0] : 0, this.movingOptions);
                }

                if (this.centerWithPanTo && changes.center && !changes.center.isFirstChange() && !changes.zoom && !changes.bearing && !changes.pitch) {
                  this.MapService.panTo(this.center, this.panToOptions);
                } else if (changes.center && !changes.center.isFirstChange() || changes.zoom && !changes.zoom.isFirstChange() || changes.bearing && !changes.bearing.isFirstChange() && !changes.fitScreenCoordinates || changes.pitch && !changes.pitch.isFirstChange()) {
                  this.MapService.move(this.movingMethod, this.movingOptions, changes.zoom && this.zoom ? this.zoom[0] : undefined, changes.center ? this.center : undefined, changes.bearing && this.bearing ? this.bearing[0] : undefined, changes.pitch && this.pitch ? this.pitch[0] : undefined);
                }

              case 21:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));
    }
  }, {
    key: "warnDeprecatedOutputs",
    value: function warnDeprecatedOutputs() {
      var dw = deprecationWarning.bind(undefined, MapComponent.name);

      if (this.resize.observers.length) {
        dw('resize', 'mapResize');
      }

      if (this.remove.observers.length) {
        dw('remove', 'mapRemove');
      }

      if (this.mouseDown.observers.length) {
        dw('mouseDown', 'mapMouseDown');
      }

      if (this.mouseUp.observers.length) {
        dw('mouseUp', 'mapMouseUp');
      }

      if (this.mouseMove.observers.length) {
        dw('mouseMove', 'mapMouseMove');
      }

      if (this.click.observers.length) {
        dw('click', 'mapClick');
      }

      if (this.dblClick.observers.length) {
        dw('dblClick', 'mapDblClick');
      }

      if (this.mouseOver.observers.length) {
        dw('mouseOver', 'mapMouseOver');
      }

      if (this.mouseOut.observers.length) {
        dw('mouseOut', 'mapMouseOut');
      }

      if (this.contextMenu.observers.length) {
        dw('contextMenu', 'mapContextMenu');
      }

      if (this.touchStart.observers.length) {
        dw('touchStart', 'mapTouchStart');
      }

      if (this.touchEnd.observers.length) {
        dw('touchEnd', 'mapTouchEnd');
      }

      if (this.touchMove.observers.length) {
        dw('touchMove', 'mapTouchMove');
      }

      if (this.touchCancel.observers.length) {
        dw('touchCancel', 'mapTouchCancel');
      }

      if (this.wheel.observers.length) {
        dw('wheel', 'mapWheel');
      }

      if (this.dragStart.observers.length) {
        dw('dragStart', 'mapDragStart');
      }

      if (this.drag.observers.length) {
        dw('drag', 'mapDrag');
      }

      if (this.dragEnd.observers.length) {
        dw('dragEnd', 'mapDragEnd');
      }

      if (this.load.observers.length) {
        dw('load', 'mapLoad');
      }

      if (this.error.observers.length) {
        dw('error', 'mapError');
      }
    }
  }]);

  return MapComponent;
}();

MapComponent.ɵfac = function MapComponent_Factory(t) {
  return new (t || MapComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

MapComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: MapComponent,
  selectors: [["mgl-map"]],
  viewQuery: function MapComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵstaticViewQuery"](_c2, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.mapContainer = _t.first);
    }
  },
  inputs: {
    movingMethod: "movingMethod",
    accessToken: "accessToken",
    collectResourceTiming: "collectResourceTiming",
    crossSourceCollisions: "crossSourceCollisions",
    customMapboxApiUrl: "customMapboxApiUrl",
    fadeDuration: "fadeDuration",
    hash: "hash",
    refreshExpiredTiles: "refreshExpiredTiles",
    failIfMajorPerformanceCaveat: "failIfMajorPerformanceCaveat",
    bearingSnap: "bearingSnap",
    interactive: "interactive",
    pitchWithRotate: "pitchWithRotate",
    clickTolerance: "clickTolerance",
    attributionControl: "attributionControl",
    logoPosition: "logoPosition",
    maxTileCacheSize: "maxTileCacheSize",
    localIdeographFontFamily: "localIdeographFontFamily",
    preserveDrawingBuffer: "preserveDrawingBuffer",
    trackResize: "trackResize",
    transformRequest: "transformRequest",
    bounds: "bounds",
    antialias: "antialias",
    locale: "locale",
    minZoom: "minZoom",
    maxZoom: "maxZoom",
    minPitch: "minPitch",
    maxPitch: "maxPitch",
    scrollZoom: "scrollZoom",
    dragRotate: "dragRotate",
    touchPitch: "touchPitch",
    touchZoomRotate: "touchZoomRotate",
    doubleClickZoom: "doubleClickZoom",
    keyboard: "keyboard",
    dragPan: "dragPan",
    boxZoom: "boxZoom",
    style: "style",
    center: "center",
    maxBounds: "maxBounds",
    zoom: "zoom",
    bearing: "bearing",
    pitch: "pitch",
    fitBoundsOptions: "fitBoundsOptions",
    renderWorldCopies: "renderWorldCopies",
    movingOptions: "movingOptions",
    fitBounds: "fitBounds",
    fitScreenCoordinates: "fitScreenCoordinates",
    centerWithPanTo: "centerWithPanTo",
    panToOptions: "panToOptions",
    cursorStyle: "cursorStyle"
  },
  outputs: {
    mapResize: "mapResize",
    mapRemove: "mapRemove",
    mapMouseDown: "mapMouseDown",
    mapMouseUp: "mapMouseUp",
    mapMouseMove: "mapMouseMove",
    mapClick: "mapClick",
    mapDblClick: "mapDblClick",
    mapMouseOver: "mapMouseOver",
    mapMouseOut: "mapMouseOut",
    mapContextMenu: "mapContextMenu",
    mapTouchStart: "mapTouchStart",
    mapTouchEnd: "mapTouchEnd",
    mapTouchMove: "mapTouchMove",
    mapTouchCancel: "mapTouchCancel",
    mapWheel: "mapWheel",
    moveStart: "moveStart",
    move: "move",
    moveEnd: "moveEnd",
    mapDragStart: "mapDragStart",
    mapDrag: "mapDrag",
    mapDragEnd: "mapDragEnd",
    zoomStart: "zoomStart",
    zoomEvt: "zoomEvt",
    zoomEnd: "zoomEnd",
    rotateStart: "rotateStart",
    rotate: "rotate",
    rotateEnd: "rotateEnd",
    pitchStart: "pitchStart",
    pitchEvt: "pitchEvt",
    pitchEnd: "pitchEnd",
    boxZoomStart: "boxZoomStart",
    boxZoomEnd: "boxZoomEnd",
    boxZoomCancel: "boxZoomCancel",
    webGlContextLost: "webGlContextLost",
    webGlContextRestored: "webGlContextRestored",
    mapLoad: "mapLoad",
    idle: "idle",
    render: "render",
    mapError: "mapError",
    data: "data",
    styleData: "styleData",
    sourceData: "sourceData",
    dataLoading: "dataLoading",
    styleDataLoading: "styleDataLoading",
    sourceDataLoading: "sourceDataLoading",
    styleImageMissing: "styleImageMissing",
    resize: "resize",
    remove: "remove",
    mouseDown: "mouseDown",
    mouseUp: "mouseUp",
    mouseMove: "mouseMove",
    click: "click",
    dblClick: "dblClick",
    mouseOver: "mouseOver",
    mouseOut: "mouseOut",
    contextMenu: "contextMenu",
    touchStart: "touchStart",
    touchEnd: "touchEnd",
    touchMove: "touchMove",
    touchCancel: "touchCancel",
    wheel: "wheel",
    dragStart: "dragStart",
    drag: "drag",
    dragEnd: "dragEnd",
    load: "load",
    error: "error"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵProvidersFeature"]([MapService]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 0,
  consts: [["container", ""]],
  template: function MapComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "div", null, 0);
    }
  },
  styles: ["[_nghost-%COMP%] {\n        display: block;\n      }\n      div[_ngcontent-%COMP%] {\n        height: 100%;\n        width: 100%;\n      }"],
  changeDetection: 0
});

MapComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

MapComponent.propDecorators = {
  accessToken: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  collectResourceTiming: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  crossSourceCollisions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  customMapboxApiUrl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  fadeDuration: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  hash: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  refreshExpiredTiles: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  failIfMajorPerformanceCaveat: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  bearingSnap: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  interactive: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  pitchWithRotate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  clickTolerance: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  attributionControl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  logoPosition: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxTileCacheSize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  localIdeographFontFamily: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  preserveDrawingBuffer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  trackResize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  transformRequest: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  bounds: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  antialias: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  locale: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  minZoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxZoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  minPitch: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxPitch: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  scrollZoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  dragRotate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  touchPitch: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  touchZoomRotate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  doubleClickZoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  keyboard: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  dragPan: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  boxZoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  style: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  center: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxBounds: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  zoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  bearing: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  pitch: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  fitBoundsOptions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  renderWorldCopies: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  movingMethod: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  movingOptions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  fitBounds: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  fitScreenCoordinates: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  centerWithPanTo: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  panToOptions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  cursorStyle: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  mapResize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapRemove: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapMouseDown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapMouseUp: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapMouseMove: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapDblClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapMouseOver: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapMouseOut: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapContextMenu: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapTouchStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapTouchEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapTouchMove: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapTouchCancel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapWheel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  moveStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  move: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  moveEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapDragStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapDrag: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapDragEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  zoomStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  zoomEvt: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  zoomEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  rotateStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  rotate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  rotateEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  pitchStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  pitchEvt: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  pitchEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  boxZoomStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  boxZoomEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  boxZoomCancel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  webGlContextLost: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  webGlContextRestored: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapLoad: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  idle: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  render: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapError: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  data: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  styleData: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  sourceData: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dataLoading: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  styleDataLoading: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  sourceDataLoading: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  styleImageMissing: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  resize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  remove: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseDown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseUp: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseMove: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  click: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dblClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseOver: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mouseOut: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  contextMenu: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  touchStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  touchEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  touchMove: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  touchCancel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  wheel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dragStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  drag: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dragEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  load: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  error: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  mapContainer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"],
    args: ['container', {
      static: true
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](MapComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-map',
      template: '<div #container></div>',
      providers: [MapService],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush,
      styles: ["\n      :host {\n        display: block;\n      }\n      div {\n        height: 100%;\n        width: 100%;\n      }\n    "]
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    movingMethod: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    mapResize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapRemove: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapMouseDown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapMouseUp: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapMouseMove: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapDblClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapMouseOver: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapMouseOut: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapContextMenu: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapTouchStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapTouchEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapTouchMove: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapTouchCancel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapWheel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    moveStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    move: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    moveEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapDragStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapDrag: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapDragEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    zoomStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    zoomEvt: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    zoomEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    rotateStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    rotate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    rotateEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    pitchStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    pitchEvt: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    pitchEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    boxZoomStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    boxZoomEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    boxZoomCancel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    webGlContextLost: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    webGlContextRestored: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapLoad: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    idle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    render: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mapError: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    data: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    styleData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    sourceData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dataLoading: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    styleDataLoading: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    sourceDataLoading: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    styleImageMissing: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    resize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    remove: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseDown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseUp: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseMove: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    click: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dblClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseOver: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    mouseOut: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    contextMenu: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    touchStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    touchEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    touchMove: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    touchCancel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    wheel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dragStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    drag: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dragEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    load: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    accessToken: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    collectResourceTiming: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    crossSourceCollisions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    customMapboxApiUrl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    fadeDuration: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    hash: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    refreshExpiredTiles: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    failIfMajorPerformanceCaveat: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    bearingSnap: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    interactive: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    pitchWithRotate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    clickTolerance: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    attributionControl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    logoPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxTileCacheSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    localIdeographFontFamily: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    preserveDrawingBuffer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    trackResize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    transformRequest: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    bounds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    antialias: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    locale: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    minZoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxZoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    minPitch: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxPitch: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    scrollZoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    dragRotate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    touchPitch: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    touchZoomRotate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    doubleClickZoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    keyboard: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    dragPan: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    boxZoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    center: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxBounds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    zoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    bearing: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    pitch: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    fitBoundsOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    renderWorldCopies: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    movingOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    fitBounds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    fitScreenCoordinates: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    centerWithPanTo: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    panToOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    cursorStyle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    mapContainer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"],
      args: ['container', {
        static: true
      }]
    }]
  });
})();

var MarkerComponent = /*#__PURE__*/function () {
  function MarkerComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MarkerComponent);

    this.MapService = MapService;
    this.markerDragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.markerDragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.markerDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use markerDragStart instead
     */

    this.dragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use markerDragEnd instead
     */

    this.dragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use markerDrag instead
     */

    this.drag = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MarkerComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      this.warnDeprecatedOutputs();

      if (this.feature && this.lngLat) {
        throw new Error('feature and lngLat input are mutually exclusive');
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.lngLat && !changes.lngLat.isFirstChange()) {
        this.markerInstance.setLngLat(this.lngLat);
      }

      if (changes.feature && !changes.feature.isFirstChange()) {
        this.markerInstance.setLngLat(this.feature.geometry.coordinates);
      }

      if (changes.draggable && !changes.draggable.isFirstChange()) {
        this.markerInstance.setDraggable(!!this.draggable);
      }

      if (changes.popupShown && !changes.popupShown.isFirstChange()) {
        changes.popupShown.currentValue ? this.markerInstance.getPopup().addTo(this.MapService.mapInstance) : this.markerInstance.getPopup().remove();
      }

      if (changes.pitchAlignment && !changes.pitchAlignment.isFirstChange()) {
        this.markerInstance.setPitchAlignment(changes.pitchAlignment.currentValue);
      }

      if (changes.rotationAlignment && !changes.rotationAlignment.isFirstChange()) {
        this.markerInstance.setRotationAlignment(changes.rotationAlignment.currentValue);
      }
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this57 = this;

      this.MapService.mapCreated$.subscribe(function () {
        _this57.markerInstance = _this57.MapService.addMarker({
          markersOptions: {
            offset: _this57.offset,
            anchor: _this57.anchor,
            pitchAlignment: _this57.pitchAlignment,
            rotationAlignment: _this57.rotationAlignment,
            draggable: !!_this57.draggable,
            element: _this57.content.nativeElement,
            feature: _this57.feature,
            lngLat: _this57.lngLat,
            clickTolerance: _this57.clickTolerance
          },
          markersEvents: {
            markerDragStart: _this57.markerDragStart,
            markerDrag: _this57.markerDrag,
            markerDragEnd: _this57.markerDragEnd,
            dragStart: _this57.dragStart,
            drag: _this57.drag,
            dragEnd: _this57.dragEnd
          }
        });
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.MapService.removeMarker(this.markerInstance);
      this.markerInstance = undefined;
    }
  }, {
    key: "togglePopup",
    value: function togglePopup() {
      this.markerInstance.togglePopup();
    }
  }, {
    key: "updateCoordinates",
    value: function updateCoordinates(coordinates) {
      this.markerInstance.setLngLat(coordinates);
    }
  }, {
    key: "warnDeprecatedOutputs",
    value: function warnDeprecatedOutputs() {
      var dw = deprecationWarning.bind(undefined, MarkerComponent.name);

      if (this.dragStart.observers.length) {
        dw('dragStart', 'markerDragStart');
      }

      if (this.dragEnd.observers.length) {
        dw('dragEnd', 'markerDragEnd');
      }

      if (this.drag.observers.length) {
        dw('drag', 'markerDrag');
      }
    }
  }]);

  return MarkerComponent;
}();

MarkerComponent.ɵfac = function MarkerComponent_Factory(t) {
  return new (t || MarkerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

MarkerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: MarkerComponent,
  selectors: [["mgl-marker"]],
  viewQuery: function MarkerComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵstaticViewQuery"](_c0, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    }
  },
  inputs: {
    offset: "offset",
    anchor: "anchor",
    clickTolerance: "clickTolerance",
    feature: "feature",
    lngLat: "lngLat",
    draggable: "draggable",
    popupShown: "popupShown",
    className: "className",
    pitchAlignment: "pitchAlignment",
    rotationAlignment: "rotationAlignment"
  },
  outputs: {
    markerDragStart: "markerDragStart",
    markerDragEnd: "markerDragEnd",
    markerDrag: "markerDrag",
    dragStart: "dragStart",
    dragEnd: "dragEnd",
    drag: "drag"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c1,
  decls: 3,
  vars: 2,
  consts: [["content", ""]],
  template: function MarkerComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", null, 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassMap"](ctx.className);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});

MarkerComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

MarkerComponent.propDecorators = {
  offset: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  anchor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  clickTolerance: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  feature: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  lngLat: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  draggable: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  popupShown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  className: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  pitchAlignment: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  rotationAlignment: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  markerDragStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  markerDragEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  markerDrag: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dragStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  dragEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  drag: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  content: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"],
    args: ['content', {
      static: true
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](MarkerComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-marker',
      template: '<div [class]="className" #content><ng-content></ng-content></div>',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    markerDragStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    markerDragEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    markerDrag: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dragStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    dragEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    drag: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    offset: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    anchor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    clickTolerance: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    feature: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    lngLat: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    draggable: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    popupShown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    className: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    pitchAlignment: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    rotationAlignment: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    content: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"],
      args: ['content', {
        static: true
      }]
    }]
  });
})();

var PointDirective = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(function PointDirective() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, PointDirective);
});

PointDirective.ɵfac = function PointDirective_Factory(t) {
  return new (t || PointDirective)();
};

PointDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: PointDirective,
  selectors: [["ng-template", "mglPoint", ""]]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](PointDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: 'ng-template[mglPoint]'
    }]
  }], null, null);
})();

var ClusterPointDirective = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(function ClusterPointDirective() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, ClusterPointDirective);
});

ClusterPointDirective.ɵfac = function ClusterPointDirective_Factory(t) {
  return new (t || ClusterPointDirective)();
};

ClusterPointDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: ClusterPointDirective,
  selectors: [["ng-template", "mglClusterPoint", ""]]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](ClusterPointDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: 'ng-template[mglClusterPoint]'
    }]
  }], null, null);
})();

var uniqId = 0;

var MarkersForClustersComponent = /*#__PURE__*/function () {
  function MarkersForClustersComponent(MapService, ChangeDetectorRef, zone) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MarkersForClustersComponent);

    this.MapService = MapService;
    this.ChangeDetectorRef = ChangeDetectorRef;
    this.zone = zone;
    this.layerId = "mgl-markers-for-clusters-".concat(uniqId++);
    this.sub = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MarkersForClustersComponent, [{
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this58 = this;

      var clusterDataUpdate = function clusterDataUpdate() {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this58.MapService.mapInstance, 'data').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function (e) {
          return e.sourceId === _this58.source && e.sourceDataType !== 'metadata' && _this58.MapService.mapInstance.isSourceLoaded(_this58.source);
        }));
      };

      var sub = this.MapService.mapCreated$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["switchMap"])(clusterDataUpdate), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["switchMap"])(function () {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["merge"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this58.MapService.mapInstance, 'move'), Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this58.MapService.mapInstance, 'moveend')).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["startWith"])(undefined));
      })).subscribe(function () {
        _this58.zone.run(function () {
          _this58.updateCluster();
        });
      });
      this.sub.add(sub);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.sub.unsubscribe();
    }
  }, {
    key: "trackByClusterPoint",
    value: function trackByClusterPoint(_index, clusterPoint) {
      return clusterPoint.id;
    }
  }, {
    key: "updateCluster",
    value: function updateCluster() {
      // Invalid queryRenderedFeatures typing
      var params = {
        layers: [this.layerId]
      };

      if (!this.pointTpl) {
        params.filter = ['==', 'cluster', true];
      }

      this.clusterPoints = this.MapService.mapInstance.queryRenderedFeatures(params);
      this.ChangeDetectorRef.markForCheck();
    }
  }]);

  return MarkersForClustersComponent;
}();

MarkersForClustersComponent.ɵfac = function MarkersForClustersComponent_Factory(t) {
  return new (t || MarkersForClustersComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]));
};

MarkersForClustersComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: MarkersForClustersComponent,
  selectors: [["mgl-markers-for-clusters"]],
  contentQueries: function MarkersForClustersComponent_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵcontentQuery"](dirIndex, PointDirective, true, _angular_core__WEBPACK_IMPORTED_MODULE_4__["TemplateRef"]);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵcontentQuery"](dirIndex, ClusterPointDirective, true, _angular_core__WEBPACK_IMPORTED_MODULE_4__["TemplateRef"]);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.pointTpl = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.clusterPointTpl = _t.first);
    }
  },
  inputs: {
    source: "source"
  },
  decls: 2,
  vars: 6,
  consts: [["type", "circle", 3, "id", "source", "paint"], [4, "ngFor", "ngForOf", "ngForTrackBy"], [4, "ngIf"], [3, "feature"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]],
  template: function MarkersForClustersComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "mgl-layer", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, MarkersForClustersComponent_ng_container_1_Template, 3, 2, "ng-container", 1);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("id", ctx.layerId)("source", ctx.source)("paint", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpureFunction0"](5, _c4));
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngForOf", ctx.clusterPoints)("ngForTrackBy", ctx.trackByClusterPoint);
    }
  },
  directives: [LayerComponent, _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], MarkerComponent, _angular_common__WEBPACK_IMPORTED_MODULE_3__["NgTemplateOutlet"]],
  encapsulation: 2,
  changeDetection: 0
});

MarkersForClustersComponent.ctorParameters = function () {
  return [{
    type: MapService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
  }];
};

MarkersForClustersComponent.propDecorators = {
  source: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  pointTpl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ContentChild"],
    args: [PointDirective, {
      read: _angular_core__WEBPACK_IMPORTED_MODULE_4__["TemplateRef"],
      static: false
    }]
  }],
  clusterPointTpl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ContentChild"],
    args: [ClusterPointDirective, {
      read: _angular_core__WEBPACK_IMPORTED_MODULE_4__["TemplateRef"],
      static: false
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](MarkersForClustersComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-markers-for-clusters',
      template: "\n    <mgl-layer\n      [id]=\"layerId\"\n      [source]=\"source\"\n      type=\"circle\"\n      [paint]=\"{ 'circle-radius': 0 }\"\n    ></mgl-layer>\n    <ng-container\n      *ngFor=\"let feature of clusterPoints; trackBy: trackByClusterPoint\"\n    >\n      <ng-container *ngIf=\"feature.properties.cluster\">\n        <mgl-marker [feature]=\"feature\">\n          <ng-container\n            *ngTemplateOutlet=\"clusterPointTpl; context: { $implicit: feature }\"\n          ></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-container *ngIf=\"!feature.properties.cluster\">\n        <mgl-marker [feature]=\"feature\">\n          <ng-container\n            *ngTemplateOutlet=\"pointTpl; context: { $implicit: feature }\"\n          ></ng-container>\n        </mgl-marker>\n      </ng-container>\n    </ng-container>\n  ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush,
      preserveWhitespaces: false
    }]
  }], function () {
    return [{
      type: MapService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgZone"]
    }];
  }, {
    source: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    pointTpl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ContentChild"],
      args: [PointDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_4__["TemplateRef"],
        static: false
      }]
    }],
    clusterPointTpl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ContentChild"],
      args: [ClusterPointDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_4__["TemplateRef"],
        static: false
      }]
    }]
  });
})();

var PopupComponent = /*#__PURE__*/function () {
  function PopupComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, PopupComponent);

    this.MapService = MapService;
    this.popupClose = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    this.popupOpen = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use popupClose instead
     */

    this.close = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    /**
     * @deprecated Use popupOpen instead
     */

    this.open = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(PopupComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      this.warnDeprecatedOutputs();

      if (this.lngLat && this.marker || this.feature && this.lngLat || this.feature && this.marker) {
        throw new Error('marker, lngLat, feature input are mutually exclusive');
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.lngLat && !changes.lngLat.isFirstChange() || changes.feature && !changes.feature.isFirstChange()) {
        var newlngLat = changes.lngLat ? this.lngLat : this.feature.geometry.coordinates;
        this.MapService.removePopupFromMap(this.popupInstance, true);
        var popupInstanceTmp = this.createPopup();
        this.MapService.addPopupToMap(popupInstanceTmp, newlngLat, this.popupInstance.isOpen());
        this.popupInstance = popupInstanceTmp;
      }

      if (changes.marker && !changes.marker.isFirstChange()) {
        var previousMarker = changes.marker.previousValue;

        if (previousMarker.markerInstance) {
          this.MapService.removePopupFromMarker(previousMarker.markerInstance);
        }

        if (this.marker && this.marker.markerInstance && this.popupInstance) {
          this.MapService.addPopupToMarker(this.marker.markerInstance, this.popupInstance);
        }
      }

      if (changes.offset && !changes.offset.isFirstChange() && this.popupInstance) {
        this.popupInstance.setOffset(this.offset);
      }
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this.popupInstance = this.createPopup();
      this.addPopup(this.popupInstance);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this.popupInstance) {
        if (this.lngLat || this.feature) {
          this.MapService.removePopupFromMap(this.popupInstance);
        } else if (this.marker && this.marker.markerInstance) {
          this.MapService.removePopupFromMarker(this.marker.markerInstance);
        }
      }

      this.popupInstance = undefined;
    }
  }, {
    key: "createPopup",
    value: function createPopup() {
      return this.MapService.createPopup({
        popupOptions: {
          closeButton: this.closeButton,
          closeOnClick: this.closeOnClick,
          anchor: this.anchor,
          offset: this.offset,
          className: this.className,
          maxWidth: this.maxWidth
        },
        popupEvents: {
          open: this.open,
          close: this.close,
          popupOpen: this.popupOpen,
          popupClose: this.popupClose
        }
      }, this.content.nativeElement);
    }
  }, {
    key: "addPopup",
    value: function addPopup(popup) {
      var _this59 = this;

      this.MapService.mapCreated$.subscribe(function () {
        if (_this59.lngLat || _this59.feature) {
          _this59.MapService.addPopupToMap(popup, _this59.lngLat ? _this59.lngLat : _this59.feature.geometry.coordinates);
        } else if (_this59.marker && _this59.marker.markerInstance) {
          _this59.MapService.addPopupToMarker(_this59.marker.markerInstance, popup);
        } else {
          throw new Error('mgl-popup need either lngLat/marker/feature to be set');
        }
      });
    }
  }, {
    key: "warnDeprecatedOutputs",
    value: function warnDeprecatedOutputs() {
      var dw = deprecationWarning.bind(undefined, PopupComponent.name);

      if (this.close.observers.length) {
        dw('close', 'popupClose');
      }

      if (this.open.observers.length) {
        dw('open', 'popupOpen');
      }
    }
  }]);

  return PopupComponent;
}();

PopupComponent.ɵfac = function PopupComponent_Factory(t) {
  return new (t || PopupComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

PopupComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: PopupComponent,
  selectors: [["mgl-popup"]],
  viewQuery: function PopupComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵstaticViewQuery"](_c0, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.content = _t.first);
    }
  },
  inputs: {
    closeButton: "closeButton",
    closeOnClick: "closeOnClick",
    anchor: "anchor",
    className: "className",
    maxWidth: "maxWidth",
    feature: "feature",
    lngLat: "lngLat",
    marker: "marker",
    offset: "offset"
  },
  outputs: {
    popupClose: "popupClose",
    popupOpen: "popupOpen",
    close: "close",
    open: "open"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c1,
  decls: 3,
  vars: 0,
  consts: [["content", ""]],
  template: function PopupComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", null, 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    }
  },
  encapsulation: 2,
  changeDetection: 0
});

PopupComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

PopupComponent.propDecorators = {
  closeButton: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  closeOnClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  anchor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  className: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxWidth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  feature: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  lngLat: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  marker: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  offset: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  popupClose: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  popupOpen: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  close: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  open: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
  }],
  content: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"],
    args: ['content', {
      static: true
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](PopupComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-popup',
      template: '<div #content><ng-content></ng-content></div>',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    popupClose: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    popupOpen: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    close: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    open: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"]
    }],
    closeButton: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    closeOnClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    anchor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    className: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    feature: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    lngLat: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    marker: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    offset: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    content: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"],
      args: ['content', {
        static: true
      }]
    }]
  });
})();

var CanvasSourceComponent = /*#__PURE__*/function () {
  function CanvasSourceComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, CanvasSourceComponent);

    this.MapService = MapService;
    this.sourceAdded = false;
    this.sub = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(CanvasSourceComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this60 = this;

      var sub1 = this.MapService.mapLoaded$.subscribe(function () {
        _this60.init();

        var sub = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this60.MapService.mapInstance, 'styledata').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !_this60.MapService.mapInstance.getSource(_this60.id);
        })).subscribe(function () {
          _this60.init();
        });

        _this60.sub.add(sub);
      });
      this.sub.add(sub1);
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.sourceAdded) {
        return;
      }

      if (changes.canvas && !changes.canvas.isFirstChange() || changes.animate && !changes.animate.isFirstChange()) {
        this.ngOnDestroy();
        this.ngOnInit();
      } else if (changes.coordinates && !changes.coordinates.isFirstChange()) {
        var source = this.MapService.getSource(this.id);
        source.setCoordinates(this.coordinates);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.sub.unsubscribe();

      if (this.sourceAdded) {
        this.MapService.removeSource(this.id);
        this.sourceAdded = false;
      }
    }
  }, {
    key: "init",
    value: function init() {
      var source = {
        type: 'canvas',
        coordinates: this.coordinates,
        canvas: this.canvas,
        animate: this.animate
      };
      this.MapService.addSource(this.id, source);
      this.sourceAdded = true;
    }
  }]);

  return CanvasSourceComponent;
}();

CanvasSourceComponent.ɵfac = function CanvasSourceComponent_Factory(t) {
  return new (t || CanvasSourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

CanvasSourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: CanvasSourceComponent,
  selectors: [["mgl-canvas-source"]],
  inputs: {
    id: "id",
    coordinates: "coordinates",
    canvas: "canvas",
    animate: "animate"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function CanvasSourceComponent_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});

CanvasSourceComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

CanvasSourceComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  coordinates: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  canvas: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  animate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](CanvasSourceComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-canvas-source',
      template: '',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    coordinates: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    canvas: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    animate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var ImageSourceComponent = /*#__PURE__*/function () {
  function ImageSourceComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, ImageSourceComponent);

    this.MapService = MapService;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(ImageSourceComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this61 = this;

      this.sub = this.MapService.mapLoaded$.subscribe(function () {
        return _this61.init();
      });
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (this.sourceId === undefined) {
        return;
      }

      var source = this.MapService.getSource(this.sourceId);
      source.updateImage({
        url: changes.url === undefined ? undefined : this.url,
        coordinates: changes.coordinates === undefined ? undefined : this.coordinates
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this.sub !== undefined) {
        this.sub.unsubscribe();
      }

      if (this.sourceId !== undefined) {
        this.MapService.removeSource(this.sourceId);
        this.sourceId = undefined;
      }
    }
  }, {
    key: "init",
    value: function init() {
      var imageSource = {
        type: 'image',
        url: this.url,
        coordinates: this.coordinates
      };
      this.MapService.addSource(this.id, imageSource);
      this.sourceId = this.id;
    }
  }]);

  return ImageSourceComponent;
}();

ImageSourceComponent.ɵfac = function ImageSourceComponent_Factory(t) {
  return new (t || ImageSourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

ImageSourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: ImageSourceComponent,
  selectors: [["mgl-image-source"]],
  inputs: {
    id: "id",
    url: "url",
    coordinates: "coordinates"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function ImageSourceComponent_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});

ImageSourceComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

ImageSourceComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  url: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  coordinates: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](ImageSourceComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-image-source',
      template: '',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    url: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    coordinates: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var RasterDemSourceComponent = /*#__PURE__*/function () {
  function RasterDemSourceComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, RasterDemSourceComponent);

    this.MapService = MapService;
    this.type = 'raster-dem';
    this.sourceAdded = false;
    this.sub = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(RasterDemSourceComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this62 = this;

      var sub1 = this.MapService.mapLoaded$.subscribe(function () {
        _this62.init();

        var sub = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this62.MapService.mapInstance, 'styledata').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !_this62.MapService.mapInstance.getSource(_this62.id);
        })).subscribe(function () {
          _this62.init();
        });

        _this62.sub.add(sub);
      });
      this.sub.add(sub1);
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.sourceAdded) {
        return;
      }

      if (changes.url && !changes.url.isFirstChange() || changes.tiles && !changes.tiles.isFirstChange() || changes.bounds && !changes.bounds.isFirstChange() || changes.minzoom && !changes.minzoom.isFirstChange() || changes.maxzoom && !changes.maxzoom.isFirstChange() || changes.tileSize && !changes.tileSize.isFirstChange() || changes.attribution && !changes.attribution.isFirstChange() || changes.encoding && !changes.encoding.isFirstChange()) {
        this.ngOnDestroy();
        this.ngOnInit();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.sub.unsubscribe();

      if (this.sourceAdded) {
        this.MapService.removeSource(this.id);
        this.sourceAdded = false;
      }
    }
  }, {
    key: "init",
    value: function init() {
      var source = {
        type: this.type,
        url: this.url,
        tiles: this.tiles,
        bounds: this.bounds,
        minzoom: this.minzoom,
        maxzoom: this.maxzoom,
        tileSize: this.tileSize,
        attribution: this.attribution,
        encoding: this.encoding
      };
      this.MapService.addSource(this.id, source);
      this.sourceAdded = true;
    }
  }]);

  return RasterDemSourceComponent;
}();

RasterDemSourceComponent.ɵfac = function RasterDemSourceComponent_Factory(t) {
  return new (t || RasterDemSourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

RasterDemSourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: RasterDemSourceComponent,
  selectors: [["mgl-raster-dem-source"]],
  inputs: {
    id: "id",
    url: "url",
    tiles: "tiles",
    bounds: "bounds",
    minzoom: "minzoom",
    maxzoom: "maxzoom",
    tileSize: "tileSize",
    attribution: "attribution",
    encoding: "encoding"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function RasterDemSourceComponent_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});

RasterDemSourceComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

RasterDemSourceComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  url: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  tiles: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  bounds: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  minzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  tileSize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  attribution: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  encoding: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](RasterDemSourceComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-raster-dem-source',
      template: '',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    url: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    tiles: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    bounds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    minzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    tileSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    attribution: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    encoding: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var RasterSourceComponent = /*#__PURE__*/function () {
  function RasterSourceComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, RasterSourceComponent);

    this.MapService = MapService;
    this.type = 'raster';
    this.sourceAdded = false;
    this.sub = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(RasterSourceComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this63 = this;

      var sub1 = this.MapService.mapLoaded$.subscribe(function () {
        _this63.init();

        var sub = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this63.MapService.mapInstance, 'styledata').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !_this63.MapService.mapInstance.getSource(_this63.id);
        })).subscribe(function () {
          _this63.init();
        });

        _this63.sub.add(sub);
      });
      this.sub.add(sub1);
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.sourceAdded) {
        return;
      }

      if (changes.url && !changes.url.isFirstChange() || changes.tiles && !changes.tiles.isFirstChange() || changes.bounds && !changes.bounds.isFirstChange() || changes.minzoom && !changes.minzoom.isFirstChange() || changes.maxzoom && !changes.maxzoom.isFirstChange() || changes.tileSize && !changes.tileSize.isFirstChange() || changes.scheme && !changes.scheme.isFirstChange() || changes.attribution && !changes.attribution.isFirstChange()) {
        this.ngOnDestroy();
        this.ngOnInit();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.sub.unsubscribe();

      if (this.sourceAdded) {
        this.MapService.removeSource(this.id);
        this.sourceAdded = false;
      }
    }
  }, {
    key: "init",
    value: function init() {
      var source = {
        type: this.type,
        url: this.url,
        tiles: this.tiles,
        bounds: this.bounds,
        minzoom: this.minzoom,
        maxzoom: this.maxzoom,
        tileSize: this.tileSize,
        scheme: this.scheme,
        attribution: this.attribution
      };
      this.MapService.addSource(this.id, source);
      this.sourceAdded = true;
    }
  }]);

  return RasterSourceComponent;
}();

RasterSourceComponent.ɵfac = function RasterSourceComponent_Factory(t) {
  return new (t || RasterSourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

RasterSourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: RasterSourceComponent,
  selectors: [["mgl-raster-source"]],
  inputs: {
    id: "id",
    url: "url",
    tiles: "tiles",
    bounds: "bounds",
    minzoom: "minzoom",
    maxzoom: "maxzoom",
    tileSize: "tileSize",
    scheme: "scheme",
    attribution: "attribution"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function RasterSourceComponent_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});

RasterSourceComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

RasterSourceComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  url: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  tiles: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  bounds: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  minzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  tileSize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  scheme: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  attribution: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](RasterSourceComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-raster-source',
      template: '',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    url: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    tiles: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    bounds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    minzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    tileSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    scheme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    attribution: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var VectorSourceComponent = /*#__PURE__*/function () {
  function VectorSourceComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, VectorSourceComponent);

    this.MapService = MapService;
    this.type = 'vector';
    this.sourceAdded = false;
    this.sub = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(VectorSourceComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this64 = this;

      var sub1 = this.MapService.mapLoaded$.subscribe(function () {
        _this64.init();

        var sub = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this64.MapService.mapInstance, 'styledata').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !_this64.MapService.mapInstance.getSource(_this64.id);
        })).subscribe(function () {
          _this64.init();
        });

        _this64.sub.add(sub);
      });
      this.sub.add(sub1);
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.sourceAdded) {
        return;
      }

      if (changes.bounds && !changes.bounds.isFirstChange() || changes.scheme && !changes.scheme.isFirstChange() || changes.minzoom && !changes.minzoom.isFirstChange() || changes.maxzoom && !changes.maxzoom.isFirstChange() || changes.attribution && !changes.attribution.isFirstChange() || changes.promoteId && !changes.promoteId.isFirstChange()) {
        this.ngOnDestroy();
        this.ngOnInit();
      } else if (changes.url && !changes.url.isFirstChange() || changes.tiles && !changes.tiles.isFirstChange()) {
        var source = this.MapService.getSource(this.id);

        if (changes.url && this.url) {
          source.setUrl(this.url);
        }

        if (changes.tiles && this.tiles) {
          source.setTiles(this.tiles);
        }
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.sub.unsubscribe();

      if (this.sourceAdded) {
        this.MapService.removeSource(this.id);
        this.sourceAdded = false;
      }
    }
  }, {
    key: "init",
    value: function init() {
      var source = {
        type: this.type,
        url: this.url,
        tiles: this.tiles,
        bounds: this.bounds,
        scheme: this.scheme,
        minzoom: this.minzoom,
        maxzoom: this.maxzoom,
        attribution: this.attribution,
        promoteId: this.promoteId
      };
      this.MapService.addSource(this.id, source);
      this.sourceAdded = true;
    }
  }]);

  return VectorSourceComponent;
}();

VectorSourceComponent.ɵfac = function VectorSourceComponent_Factory(t) {
  return new (t || VectorSourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

VectorSourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: VectorSourceComponent,
  selectors: [["mgl-vector-source"]],
  inputs: {
    id: "id",
    url: "url",
    tiles: "tiles",
    bounds: "bounds",
    scheme: "scheme",
    minzoom: "minzoom",
    maxzoom: "maxzoom",
    attribution: "attribution",
    promoteId: "promoteId"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function VectorSourceComponent_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});

VectorSourceComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

VectorSourceComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  url: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  tiles: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  bounds: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  scheme: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  minzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  maxzoom: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  attribution: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  promoteId: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](VectorSourceComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-vector-source',
      template: '',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    url: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    tiles: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    bounds: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    scheme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    minzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    maxzoom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    attribution: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    promoteId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var VideoSourceComponent = /*#__PURE__*/function () {
  function VideoSourceComponent(MapService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, VideoSourceComponent);

    this.MapService = MapService;
    this.sourceAdded = false;
    this.sub = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subscription"]();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(VideoSourceComponent, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this65 = this;

      var sub1 = this.MapService.mapLoaded$.subscribe(function () {
        _this65.init();

        var sub = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["fromEvent"])(_this65.MapService.mapInstance, 'styledata').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(function () {
          return !_this65.MapService.mapInstance.getSource(_this65.id);
        })).subscribe(function () {
          _this65.init();
        });

        _this65.sub.add(sub);
      });
      this.sub.add(sub1);
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (!this.sourceAdded) {
        return;
      }

      if (changes.urls && !changes.urls.isFirstChange()) {
        this.ngOnDestroy();
        this.ngOnInit();
      } else if (changes.coordinates && !changes.coordinates.isFirstChange()) {
        var source = this.MapService.getSource(this.id);
        source.setCoordinates(this.coordinates);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.sub.unsubscribe();

      if (this.sourceAdded) {
        this.MapService.removeSource(this.id);
        this.sourceAdded = false;
      }
    }
  }, {
    key: "init",
    value: function init() {
      var source = {
        type: 'video',
        urls: this.urls,
        coordinates: this.coordinates
      };
      this.MapService.addSource(this.id, source);
      this.sourceAdded = true;
    }
  }]);

  return VideoSourceComponent;
}();

VideoSourceComponent.ɵfac = function VideoSourceComponent_Factory(t) {
  return new (t || VideoSourceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MapService));
};

VideoSourceComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: VideoSourceComponent,
  selectors: [["mgl-video-source"]],
  inputs: {
    id: "id",
    urls: "urls",
    coordinates: "coordinates"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]],
  decls: 0,
  vars: 0,
  template: function VideoSourceComponent_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});

VideoSourceComponent.ctorParameters = function () {
  return [{
    type: MapService
  }];
};

VideoSourceComponent.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  urls: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  coordinates: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](VideoSourceComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: 'mgl-video-source',
      template: '',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MapService
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    urls: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    coordinates: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();

var NgxMapboxGLModule = /*#__PURE__*/function () {
  function NgxMapboxGLModule() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, NgxMapboxGLModule);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(NgxMapboxGLModule, null, [{
    key: "withConfig",
    value: function withConfig(config) {
      return {
        ngModule: NgxMapboxGLModule,
        providers: [{
          provide: MAPBOX_API_KEY,
          useValue: config.accessToken
        }, {
          provide: MAPBOX_GEOCODER_API_KEY,
          useValue: config.geocoderAccessToken || config.accessToken
        }]
      };
    }
  }]);

  return NgxMapboxGLModule;
}();

NgxMapboxGLModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({
  type: NgxMapboxGLModule
});
NgxMapboxGLModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({
  factory: function NgxMapboxGLModule_Factory(t) {
    return new (t || NgxMapboxGLModule)();
  },
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](NgxMapboxGLModule, {
    declarations: function declarations() {
      return [MapComponent, LayerComponent, DraggableDirective, ImageComponent, VectorSourceComponent, GeoJSONSourceComponent, RasterDemSourceComponent, RasterSourceComponent, ImageSourceComponent, VideoSourceComponent, CanvasSourceComponent, FeatureComponent, MarkerComponent, PopupComponent, ControlComponent, FullscreenControlDirective, NavigationControlDirective, GeocoderControlDirective, GeolocateControlDirective, AttributionControlDirective, ScaleControlDirective, PointDirective, ClusterPointDirective, MarkersForClustersComponent];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]];
    },
    exports: function exports() {
      return [MapComponent, LayerComponent, DraggableDirective, ImageComponent, VectorSourceComponent, GeoJSONSourceComponent, RasterDemSourceComponent, RasterSourceComponent, ImageSourceComponent, VideoSourceComponent, CanvasSourceComponent, FeatureComponent, MarkerComponent, PopupComponent, ControlComponent, FullscreenControlDirective, NavigationControlDirective, GeocoderControlDirective, GeolocateControlDirective, AttributionControlDirective, ScaleControlDirective, PointDirective, ClusterPointDirective, MarkersForClustersComponent];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](NgxMapboxGLModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]],
      declarations: [MapComponent, LayerComponent, DraggableDirective, ImageComponent, VectorSourceComponent, GeoJSONSourceComponent, RasterDemSourceComponent, RasterSourceComponent, ImageSourceComponent, VideoSourceComponent, CanvasSourceComponent, FeatureComponent, MarkerComponent, PopupComponent, ControlComponent, FullscreenControlDirective, NavigationControlDirective, GeocoderControlDirective, GeolocateControlDirective, AttributionControlDirective, ScaleControlDirective, PointDirective, ClusterPointDirective, MarkersForClustersComponent],
      exports: [MapComponent, LayerComponent, DraggableDirective, ImageComponent, VectorSourceComponent, GeoJSONSourceComponent, RasterDemSourceComponent, RasterSourceComponent, ImageSourceComponent, VideoSourceComponent, CanvasSourceComponent, FeatureComponent, MarkerComponent, PopupComponent, ControlComponent, FullscreenControlDirective, NavigationControlDirective, GeocoderControlDirective, GeolocateControlDirective, AttributionControlDirective, ScaleControlDirective, PointDirective, ClusterPointDirective, MarkersForClustersComponent]
    }]
  }], null, null);
})();
/*
 * Public API Surface of ngx-mapbox-gl
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "./node_modules/subtag/subtag.js":
/*!***************************************!*\
  !*** ./node_modules/subtag/subtag.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function (root, name, make) {
  if ( true && module.exports) module.exports = make();else root[name] = make();
}(this, 'subtag', function () {
  var empty = '';
  var pattern = /^([a-zA-Z]{2,3})(?:[_-]+([a-zA-Z]{3})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{4})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{2}|[0-9]{3})(?=$|[_-]+))?/;

  function match(tag) {
    return tag.match(pattern) || [];
  }

  function split(tag) {
    return match(tag).filter(function (v, i) {
      return v && i;
    });
  }

  function api(tag) {
    tag = match(tag);
    return {
      language: tag[1] || empty,
      extlang: tag[2] || empty,
      script: tag[3] || empty,
      region: tag[4] || empty
    };
  }

  function expose(target, key, value) {
    Object.defineProperty(target, key, {
      value: value,
      enumerable: true
    });
  }

  function part(position, pattern, type) {
    function method(tag) {
      return match(tag)[position] || empty;
    }

    expose(method, 'pattern', pattern);
    expose(api, type, method);
  }

  part(1, /^[a-zA-Z]{2,3}$/, 'language');
  part(2, /^[a-zA-Z]{3}$/, 'extlang');
  part(3, /^[a-zA-Z]{4}$/, 'script');
  part(4, /^[a-zA-Z]{2}$|^[0-9]{3}$/, 'region');
  expose(api, 'split', split);
  return api;
});

/***/ }),

/***/ "./node_modules/suggestions/index.js":
/*!*******************************************!*\
  !*** ./node_modules/suggestions/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * A typeahead component for inputs
 * @class Suggestions
 *
 * @param {HTMLInputElement} el A valid HTML input element
 * @param {Array} data An array of data used for results
 * @param {Object} options
 * @param {Number} [options.limit=5] Max number of results to display in the auto suggest list.
 * @param {Number} [options.minLength=2] Number of characters typed into an input to trigger suggestions.
 * @param {Boolean} [options.hideOnBlur=true] If `true`, hides the suggestions when focus is lost.
 * @return {Suggestions} `this`
 * @example
 * // in the browser
 * var input = document.querySelector('input');
 * var data = [
 *   'Roy Eldridge',
 *   'Roy Hargrove',
 *   'Rex Stewart'
 * ];
 *
 * new Suggestions(input, data);
 *
 * // with options
 * var input = document.querySelector('input');
 * var data = [{
 *   name: 'Roy Eldridge',
 *   year: 1911
 * }, {
 *   name: 'Roy Hargrove',
 *   year: 1969
 * }, {
 *   name: 'Rex Stewart',
 *   year: 1907
 * }];
 *
 * var typeahead = new Suggestions(input, data, {
 *   filter: false, // Disable filtering
 *   minLength: 3, // Number of characters typed into an input to trigger suggestions.
 *   limit: 3, //  Max number of results to display.
 *   hideOnBlur: false // Don't hide results when input loses focus
 * });
 *
 * // As we're passing an object of an arrays as data, override
 * // `getItemValue` by specifying the specific property to search on.
 * typeahead.getItemValue = function(item) { return item.name };
 *
 * input.addEventListener('change', function() {
 *   console.log(typeahead.selected); // Current selected item.
 * });
 *
 * // With browserify
 * var Suggestions = require('suggestions');
 *
 * new Suggestions(input, data);
 */

var Suggestions = __webpack_require__(/*! ./src/suggestions */ "./node_modules/suggestions/src/suggestions.js");

module.exports = Suggestions;

if (typeof window !== 'undefined') {
  window.Suggestions = Suggestions;
}

/***/ }),

/***/ "./node_modules/suggestions/src/list.js":
/*!**********************************************!*\
  !*** ./node_modules/suggestions/src/list.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var List = function List(component) {
  this.component = component;
  this.items = [];
  this.active = 0;
  this.wrapper = document.createElement('div');
  this.wrapper.className = 'suggestions-wrapper';
  this.element = document.createElement('ul');
  this.element.className = 'suggestions';
  this.wrapper.appendChild(this.element); // selectingListItem is set to true in the time between the mousedown and mouseup when clicking an item in the list
  // mousedown on a list item will cause the input to blur which normally hides the list, so this flag is used to keep
  // the list open until the mouseup

  this.selectingListItem = false;
  component.el.parentNode.insertBefore(this.wrapper, component.el.nextSibling);
  return this;
};

List.prototype.show = function () {
  this.element.style.display = 'block';
};

List.prototype.hide = function () {
  this.element.style.display = 'none';
};

List.prototype.add = function (item) {
  this.items.push(item);
};

List.prototype.clear = function () {
  this.items = [];
  this.active = 0;
};

List.prototype.isEmpty = function () {
  return !this.items.length;
};

List.prototype.isVisible = function () {
  return this.element.style.display === 'block';
};

List.prototype.draw = function () {
  this.element.innerHTML = '';

  if (this.items.length === 0) {
    this.hide();
    return;
  }

  for (var i = 0; i < this.items.length; i++) {
    this.drawItem(this.items[i], this.active === i);
  }

  this.show();
};

List.prototype.drawItem = function (item, active) {
  var li = document.createElement('li'),
      a = document.createElement('a');
  if (active) li.className += ' active';
  a.innerHTML = item.string;
  li.appendChild(a);
  this.element.appendChild(li);
  li.addEventListener('mousedown', function () {
    this.selectingListItem = true;
  }.bind(this));
  li.addEventListener('mouseup', function () {
    this.handleMouseUp.call(this, item);
  }.bind(this));
};

List.prototype.handleMouseUp = function (item) {
  this.selectingListItem = false;
  this.component.value(item.original);
  this.clear();
  this.draw();
};

List.prototype.move = function (index) {
  this.active = index;
  this.draw();
};

List.prototype.previous = function () {
  this.move(this.active === 0 ? this.items.length - 1 : this.active - 1);
};

List.prototype.next = function () {
  this.move(this.active === this.items.length - 1 ? 0 : this.active + 1);
};

List.prototype.drawError = function (msg) {
  var li = document.createElement('li');
  li.innerHTML = msg;
  this.element.appendChild(li);
  this.show();
};

module.exports = List;

/***/ }),

/***/ "./node_modules/suggestions/src/suggestions.js":
/*!*****************************************************!*\
  !*** ./node_modules/suggestions/src/suggestions.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var extend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js");

var fuzzy = __webpack_require__(/*! fuzzy */ "./node_modules/fuzzy/lib/fuzzy.js");

var List = __webpack_require__(/*! ./list */ "./node_modules/suggestions/src/list.js");

var Suggestions = function Suggestions(el, data, options) {
  options = options || {};
  this.options = extend({
    minLength: 2,
    limit: 5,
    filter: true,
    hideOnBlur: true
  }, options);
  this.el = el;
  this.data = data || [];
  this.list = new List(this);
  this.query = '';
  this.selected = null;
  this.list.draw();
  this.el.addEventListener('keyup', function (e) {
    this.handleKeyUp(e.keyCode);
  }.bind(this), false);
  this.el.addEventListener('keydown', function (e) {
    this.handleKeyDown(e);
  }.bind(this));
  this.el.addEventListener('focus', function () {
    this.handleFocus();
  }.bind(this));
  this.el.addEventListener('blur', function () {
    this.handleBlur();
  }.bind(this));
  this.el.addEventListener('paste', function (e) {
    this.handlePaste(e);
  }.bind(this)); // use user-provided render function if given, otherwise just use the default

  this.render = this.options.render ? this.options.render.bind(this) : this.render.bind(this);
  this.getItemValue = this.options.getItemValue ? this.options.getItemValue.bind(this) : this.getItemValue.bind(this);
  return this;
};

Suggestions.prototype.handleKeyUp = function (keyCode) {
  // 40 - DOWN
  // 38 - UP
  // 27 - ESC
  // 13 - ENTER
  // 9 - TAB
  if (keyCode === 40 || keyCode === 38 || keyCode === 27 || keyCode === 13 || keyCode === 9) return;
  this.handleInputChange(this.el.value);
};

Suggestions.prototype.handleKeyDown = function (e) {
  switch (e.keyCode) {
    case 13: // ENTER

    case 9:
      // TAB
      if (!this.list.isEmpty()) {
        if (this.list.isVisible()) {
          e.preventDefault();
        }

        this.value(this.list.items[this.list.active].original);
        this.list.hide();
      }

      break;

    case 27:
      // ESC
      if (!this.list.isEmpty()) this.list.hide();
      break;

    case 38:
      // UP
      this.list.previous();
      break;

    case 40:
      // DOWN
      this.list.next();
      break;
  }
};

Suggestions.prototype.handleBlur = function () {
  if (!this.list.selectingListItem && this.options.hideOnBlur) {
    this.list.hide();
  }
};

Suggestions.prototype.handlePaste = function (e) {
  if (e.clipboardData) {
    this.handleInputChange(e.clipboardData.getData('Text'));
  } else {
    var self = this;
    setTimeout(function () {
      self.handleInputChange(e.target.value);
    }, 100);
  }
};

Suggestions.prototype.handleInputChange = function (query) {
  this.query = this.normalize(query);
  this.list.clear();

  if (this.query.length < this.options.minLength) {
    this.list.draw();
    return;
  }

  this.getCandidates(function (data) {
    for (var i = 0; i < data.length; i++) {
      this.list.add(data[i]);
      if (i === this.options.limit - 1) break;
    }

    this.list.draw();
  }.bind(this));
};

Suggestions.prototype.handleFocus = function () {
  if (!this.list.isEmpty()) this.list.show();
  this.list.selectingListItem = false;
};
/**
 * Update data previously passed
 *
 * @param {Array} revisedData
 */


Suggestions.prototype.update = function (revisedData) {
  this.data = revisedData;
  this.handleKeyUp();
};
/**
 * Clears data
 */


Suggestions.prototype.clear = function () {
  this.data = [];
  this.list.clear();
};
/**
 * Normalize the results list and input value for matching
 *
 * @param {String} value
 * @return {String}
 */


Suggestions.prototype.normalize = function (value) {
  value = value.toLowerCase();
  return value;
};
/**
 * Evaluates whether an array item qualifies as a match with the current query
 *
 * @param {String} candidate a possible item from the array passed
 * @param {String} query the current query
 * @return {Boolean}
 */


Suggestions.prototype.match = function (candidate, query) {
  return candidate.indexOf(query) > -1;
};

Suggestions.prototype.value = function (value) {
  this.selected = value;
  this.el.value = this.getItemValue(value);

  if (document.createEvent) {
    var e = document.createEvent('HTMLEvents');
    e.initEvent('change', true, false);
    this.el.dispatchEvent(e);
  } else {
    this.el.fireEvent('onchange');
  }
};

Suggestions.prototype.getCandidates = function (callback) {
  var options = {
    pre: '<strong>',
    post: '</strong>',
    extract: function (d) {
      return this.getItemValue(d);
    }.bind(this)
  };
  var results;

  if (this.options.filter) {
    results = fuzzy.filter(this.query, this.data, options);
    results = results.map(function (item) {
      return {
        original: item.original,
        string: this.render(item.original, item.string)
      };
    }.bind(this));
  } else {
    results = this.data.map(function (d) {
      var renderedString = this.render(d);
      return {
        original: d,
        string: renderedString
      };
    }.bind(this));
  }

  callback(results);
};
/**
 * For a given item in the data array, return what should be used as the candidate string
 *
 * @param {Object|String} item an item from the data array
 * @return {String} item
 */


Suggestions.prototype.getItemValue = function (item) {
  return item;
};
/**
 * For a given item in the data array, return a string of html that should be rendered in the dropdown
 * @param {Object|String} item an item from the data array
 * @param {String} sourceFormatting a string that has pre-formatted html that should be passed directly through the render function 
 * @return {String} html
 */


Suggestions.prototype.render = function (item, sourceFormatting) {
  if (sourceFormatting) {
    // use existing formatting on the source string
    return sourceFormatting;
  }

  var boldString = item.original ? this.getItemValue(item.original) : this.getItemValue(item);
  var indexString = this.normalize(boldString);
  var indexOfQuery = indexString.lastIndexOf(this.query);

  while (indexOfQuery > -1) {
    var endIndexOfQuery = indexOfQuery + this.query.length;
    boldString = boldString.slice(0, indexOfQuery) + '<strong>' + boldString.slice(indexOfQuery, endIndexOfQuery) + '</strong>' + boldString.slice(endIndexOfQuery);
    indexOfQuery = indexString.slice(0, indexOfQuery).lastIndexOf(this.query);
  }

  return boldString;
};
/**
 * Render an custom error message in the suggestions list
 * @param {String} msg An html string to render as an error message
 */


Suggestions.prototype.renderError = function (msg) {
  this.list.drawError(msg);
};

module.exports = Suggestions;

/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = extend;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
  var target = {};

  for (var i = 0; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
}

/***/ }),

/***/ "./src/app/shared/modules/form/components/address-search/address-search.component.ts":
/*!*******************************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/address-search/address-search.component.ts ***!
  \*******************************************************************************************/
/*! exports provided: AddressSearchComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressSearchComponent", function() { return AddressSearchComponent; });
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared/AppConsts */ "./src/app/shared/AppConsts.ts");
/* harmony import */ var _app_shared_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/shared/service */ "./src/app/shared/service/index.ts");
/* harmony import */ var _app_shared_service_configuration_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/service/configuration.service */ "./src/app/shared/service/configuration.service.ts");
/* harmony import */ var _mapbox_mapbox_sdk_services_geocoding__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mapbox/mapbox-sdk/services/geocoding */ "./node_modules/@mapbox/mapbox-sdk/services/geocoding.js");
/* harmony import */ var _mapbox_mapbox_sdk_services_geocoding__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_mapbox_mapbox_sdk_services_geocoding__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var _services_address_search_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./services/address-search.service */ "./src/app/shared/modules/form/components/address-search/services/address-search.service.ts");
/* harmony import */ var _lookup_field_lookup_field_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../lookup-field/lookup-field.component */ "./src/app/shared/modules/lookup-field/lookup-field.component.ts");
/* harmony import */ var _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../abp-validation-summary/abp-validation.summary.component */ "./src/app/shared/modules/abp-validation-summary/abp-validation.summary.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var ngx_mapbox_gl__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-mapbox-gl */ "./node_modules/ngx-mapbox-gl/__ivy_ngcc__/fesm2015/ngx-mapbox-gl.js");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




















function AddressSearchComponent_mgl_map_10_mgl_marker_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "mgl-marker", 12, 13);
} if (rf & 2) {
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("lngLat", ctx_r3.markerLatLng);
} }
var _c0 = function () { return [10]; };
function AddressSearchComponent_mgl_map_10_Template(rf, ctx) { if (rf & 1) {
    var _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mgl-map", 9, 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function AddressSearchComponent_mgl_map_10_Template_mgl_map_click_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r6); var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r5.mapClicked($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, AddressSearchComponent_mgl_map_10_mgl_marker_2_Template, 2, 1, "mgl-marker", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstyleMap"]("mapbox://styles/mapbox/streets-v11");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("accessToken", ctx_r1.accessToken)("zoom", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](6, _c0))("center", ctx_r1.centreLatLng);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r1.markerLatLng);
} }
var AddressSearchComponent = /** @class */ (function (_super) {
    __extends(AddressSearchComponent, _super);
    function AddressSearchComponent(injector, fb, mapboxService, _clientConfigService, addressSearchService) {
        var _this = _super.call(this, injector) || this;
        _this.fb = fb;
        _this.mapboxService = mapboxService;
        _this._clientConfigService = _clientConfigService;
        _this.addressSearchService = addressSearchService;
        _this.defaultCentreLngLat = _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__["AppConsts"].mapDefaultLngLat;
        _this.mapboxToken = _environments_environment__WEBPACK_IMPORTED_MODULE_0__["environment"].mapbox.token;
        _this.accessToken = _environments_environment__WEBPACK_IMPORTED_MODULE_0__["environment"].mapbox.token;
        _this.centreLatLng = null;
        return _this;
    }
    AddressSearchComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.setCentre(this.defaultCentreLngLat);
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
        if (this.accessToken) {
            this.geocodeService = _mapbox_mapbox_sdk_services_geocoding__WEBPACK_IMPORTED_MODULE_6__({ accessToken: this.accessToken });
            if (this.initialData && this.initialData[this.field.latDataField]) {
                this.setMarker(this.initialData[this.field.lonDataField], this.initialData[this.field.latDataField]);
            }
        }
        else {
            this._clientConfigService.getWebClientConfiguration()
                .subscribe(function (result) {
                _this.accessToken = result.mapboxToken;
                _this.geocodeService = _mapbox_mapbox_sdk_services_geocoding__WEBPACK_IMPORTED_MODULE_6__({ accessToken: result.mapboxToken });
                if (_this.initialData && _this.initialData[_this.field.latDataField]) {
                    _this.setMarker(_this.initialData[_this.field.lonDataField], _this.initialData[_this.field.latDataField]);
                }
            });
        }
        var addressControl = this.fb.control(null, this.field.required ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : []);
        this.group.addControl('address', addressControl);
        var streetControl = this.fb.control(null, this.field.required ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : []);
        this.group.addControl(this.field.streetDataField, streetControl);
        var cityControl = this.fb.control(null, this.field.required ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : []);
        this.group.addControl(this.field.cityDataField, cityControl);
        var provinceControl = this.fb.control(null, this.field.required ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : []);
        this.group.addControl(this.field.provinceDataField, provinceControl);
        var postalCodeControl = this.fb.control(null, this.field.required ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : []);
        this.group.addControl(this.field.postalCodeDataField, postalCodeControl);
        var latControl = this.fb.control(null, this.field.required ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : []);
        this.group.addControl(this.field.latDataField, latControl);
        var lonControl = this.fb.control(null, this.field.required ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : []);
        this.group.addControl(this.field.lonDataField, lonControl);
    };
    AddressSearchComponent.prototype.initializeFormValue = function () {
        var _a, _b, _c, _d, _e, _f, _g;
        if (this.initialData && Object.keys(this.initialData).length > 0) {
            (_a = this.group.get('address')) === null || _a === void 0 ? void 0 : _a.setValue(this.initialData['address'] || null);
            (_b = this.group.get(this.field.streetDataField)) === null || _b === void 0 ? void 0 : _b.setValue(this.initialData[this.field.streetDataField] || null);
            (_c = this.group.get(this.field.cityDataField)) === null || _c === void 0 ? void 0 : _c.setValue(this.initialData[this.field.cityDataField] || null);
            (_d = this.group.get(this.field.postalCodeDataField)) === null || _d === void 0 ? void 0 : _d.setValue(this.initialData[this.field.postalCodeDataField] || null);
            (_e = this.group.get(this.field.provinceDataField)) === null || _e === void 0 ? void 0 : _e.setValue(this.initialData[this.field.provinceDataField] || null);
            (_f = this.group.get(this.field.latDataField)) === null || _f === void 0 ? void 0 : _f.setValue(this.initialData[this.field.latDataField] || null);
            (_g = this.group.get(this.field.lonDataField)) === null || _g === void 0 ? void 0 : _g.setValue(this.initialData[this.field.lonDataField] || null);
            this.setMarker(this.initialData[this.field.lonDataField], this.initialData[this.field.latDataField]);
        }
    };
    AddressSearchComponent.prototype.onPlaceSelected = function (data) {
        this.address = data.place_name || '';
        this.setMarker(data.center[0], data.center[1]);
    };
    AddressSearchComponent.prototype.onKeyUp = function (evt) {
        this.address = evt.target.value;
        this.group.get('address').setValue(this.address);
        if (this.address.length) {
            this.resetMap();
        }
    };
    AddressSearchComponent.prototype.mapClicked = function (evt) {
        if (evt.hasOwnProperty('lngLat')) {
            var _a = evt.lngLat, lat = _a.lat, lng = _a.lng;
            this.setMarker(lng, lat);
        }
    };
    AddressSearchComponent.prototype.setCentre = function (lngLat) {
        if (lngLat === void 0) { lngLat = this.defaultCentreLngLat; }
        if (!lngLat[0] || !lngLat[1]) {
            // second check incase user pases [undefined, undefined]
            lngLat = this.defaultCentreLngLat;
        }
        this.centreLatLng = lngLat;
    };
    AddressSearchComponent.prototype.setMarker = function (lng, lat) {
        var _this = this;
        var _a;
        this.markerLatLng = null;
        this.setCentre([lng, lat]);
        (_a = this.geocodeService) === null || _a === void 0 ? void 0 : _a.reverseGeocode({
            query: [lng, lat]
        }).send().then(function (response) {
            _this.mapData = response.body;
            var country = _this.mapData.features.find(function (el) { return el.place_type.includes('country'); });
            if (!country || country.place_name.toLowerCase() != 'canada') {
                _this.mapData = null;
                _this.address = null;
                _this.group.get('address').setValue(null);
                _this.group.get(_this.field.latDataField).setValue(null);
                _this.group.get(_this.field.lonDataField).setValue(null);
                _this.group.get(_this.field.streetDataField).setValue(null);
                _this.group.get(_this.field.cityDataField).setValue(null);
                _this.group.get(_this.field.postalCodeDataField).setValue(null);
                _this.group.get(_this.field.provinceDataField).setValue(null);
                _this.group.updateValueAndValidity();
                return _this.setCentre();
            }
            if (!_this.mapData.features.length) {
                _this.address = null;
                _this.group.get('address').setValue(null);
                _this.group.get(_this.field.latDataField).setValue(null);
                _this.group.get(_this.field.lonDataField).setValue(null);
                _this.group.get(_this.field.streetDataField).setValue(null);
                _this.group.get(_this.field.cityDataField).setValue(null);
                _this.group.get(_this.field.postalCodeDataField).setValue(null);
                _this.group.get(_this.field.provinceDataField).setValue(null);
            }
            else {
                _this.address = _this.mapData.features[0].place_name;
                _this.group.get('address').setValue(_this.address);
            }
            var mapPlaceTypes = {};
            mapPlaceTypes['postcode'] = _this.field.postalCodeDataField;
            mapPlaceTypes['region'] = _this.field.provinceDataField;
            mapPlaceTypes['place'] = _this.field.cityDataField;
            if (_this.mapData && _this.mapData.hasOwnProperty('features')) {
                _this.mapData.features.map(function (el) {
                    if (mapPlaceTypes.hasOwnProperty(el.place_type[0])) {
                        _this.group.get(mapPlaceTypes[el.place_type[0]]).setValue(el.text);
                    }
                    else if (el.place_type[0] === 'address') {
                        _this.group.get(_this.field.streetDataField).setValue(((el.address || '') + " " + el.text).trim());
                    }
                });
            }
            _this.group.get(_this.field.latDataField).setValue(lat);
            _this.group.get(_this.field.lonDataField).setValue(lng);
            _this.group.updateValueAndValidity();
            _this.addressSearchService.emitEvent('setMarker', _this.mapData.features);
            _this.markerLatLng = [lng, lat];
            _this.setCentre([lng, lat]);
        }, function (err) { });
    };
    AddressSearchComponent.prototype.resetForm = function () {
    };
    AddressSearchComponent.prototype.resetMap = function (lngLat) {
        if (lngLat === void 0) { lngLat = null; }
        this.centreLatLng = this.defaultCentreLngLat;
        this.markerLatLng = null;
        this.setCentre(lngLat || this.centreLatLng);
        if (lngLat) {
            this.setMarker(lngLat[0], lngLat[1]);
        }
    };
    AddressSearchComponent.ɵfac = function AddressSearchComponent_Factory(t) { return new (t || AddressSearchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_app_shared_service__WEBPACK_IMPORTED_MODULE_4__["MapboxService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_app_shared_service_configuration_service__WEBPACK_IMPORTED_MODULE_5__["ConfigurationService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_services_address_search_service__WEBPACK_IMPORTED_MODULE_8__["AddressSearchService"])); };
    AddressSearchComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: AddressSearchComponent, selectors: [["app-address-search"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 11, vars: 8, consts: [[1, "grid-column", "grid-column-12"], ["id", "address", 1, "form-label"], [1, "m-form-input"], [1, "m-form-textbox"], ["key", "place_name", 3, "initialValue", "service", "reset", "keyup", "itemSelected"], ["el", ""], [3, "controlEl", "control"], [1, "mapbox-container", "m-form-input"], [3, "accessToken", "style", "zoom", "center", "click", 4, "ngIf"], [3, "accessToken", "zoom", "center", "click"], ["map", ""], [3, "lngLat", 4, "ngIf"], [3, "lngLat"], ["marker", ""]], template: function AddressSearchComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "label", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](3, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "app-lookup-field", 4, 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("reset", function AddressSearchComponent_Template_app_lookup_field_reset_6_listener() { return ctx.resetMap(); })("keyup", function AddressSearchComponent_Template_app_lookup_field_keyup_6_listener($event) { return ctx.onKeyUp($event); })("itemSelected", function AddressSearchComponent_Template_app_lookup_field_itemSelected_6_listener($event) { return ctx.onPlaceSelected($event); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](8, "abp-validation-summary", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](9, "div", 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](10, AddressSearchComponent_mgl_map_10_Template, 3, 7, "mgl-map", 8);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        } if (rf & 2) {
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](3, 6, ctx.field.name));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("initialValue", ctx.address)("service", ctx.mapboxService);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("controlEl", _r0)("control", ctx.group.get("address"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.accessToken && ctx.centreLatLng);
        } }, directives: [_lookup_field_lookup_field_component__WEBPACK_IMPORTED_MODULE_9__["LookupFieldComponent"], _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_10__["AbpValidationSummaryComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgIf"], ngx_mapbox_gl__WEBPACK_IMPORTED_MODULE_12__["MapComponent"], ngx_mapbox_gl__WEBPACK_IMPORTED_MODULE_12__["ɵl"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_13__["LocalizePipe"]], styles: [".mapbox-container[_ngcontent-%COMP%] {\n  height: 300px;\n}\n.mapbox-container[_ngcontent-%COMP%]   mgl-map[_ngcontent-%COMP%] {\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL2FkZHJlc3Mtc2VhcmNoL006L3JlcG9zL0RlcGxveVNvbHV0aW9uc0NsaW1hdGVDaGFuZ2UvZHNzX2NjaXBfcHJvdG8vZGV2L3RhL2FuZ3VsYXIvc3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9mb3JtL2NvbXBvbmVudHMvYWRkcmVzcy1zZWFyY2gvYWRkcmVzcy1zZWFyY2guY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vY29tcG9uZW50cy9hZGRyZXNzLXNlYXJjaC9hZGRyZXNzLXNlYXJjaC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLGFBQUE7QUNDRDtBREZBO0VBR0UsWUFBQTtBQ0VGIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL2FkZHJlc3Mtc2VhcmNoL2FkZHJlc3Mtc2VhcmNoLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcGJveC1jb250YWluZXIge1xuXHRoZWlnaHQ6IDMwMHB4O1xuXHRtZ2wtbWFwIHtcblx0XHRoZWlnaHQ6IDEwMCU7XG5cdH1cbn0iLCIubWFwYm94LWNvbnRhaW5lciB7XG4gIGhlaWdodDogMzAwcHg7XG59XG4ubWFwYm94LWNvbnRhaW5lciBtZ2wtbWFwIHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuIl19 */"] });
    return AddressSearchComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_7__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](AddressSearchComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'app-address-search',
                templateUrl: './address-search.component.html',
                styleUrls: ['./address-search.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }, { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] }, { type: _app_shared_service__WEBPACK_IMPORTED_MODULE_4__["MapboxService"] }, { type: _app_shared_service_configuration_service__WEBPACK_IMPORTED_MODULE_5__["ConfigurationService"] }, { type: _services_address_search_service__WEBPACK_IMPORTED_MODULE_8__["AddressSearchService"] }]; }, null); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/address-search/services/address-search.service.ts":
/*!**************************************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/address-search/services/address-search.service.ts ***!
  \**************************************************************************************************/
/*! exports provided: AddressSearchService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressSearchService", function() { return AddressSearchService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



var AddressSearchService = /** @class */ (function () {
    function AddressSearchService() {
        this.addressSearchEventListener$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["ReplaySubject"]();
        this.addressSearchEvent = this.addressSearchEventListener$.asObservable();
    }
    AddressSearchService.prototype.emitEvent = function (action, data) {
        this.addressSearchEventListener$.next({ action: action, data: data });
    };
    AddressSearchService.ɵfac = function AddressSearchService_Factory(t) { return new (t || AddressSearchService)(); };
    AddressSearchService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: AddressSearchService, factory: AddressSearchService.ɵfac, providedIn: 'root' });
    return AddressSearchService;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AddressSearchService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/button/button.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/button/button.component.ts ***!
  \***************************************************************************/
/*! exports provided: ButtonComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ButtonComponent", function() { return ButtonComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var ButtonComponent = /** @class */ (function (_super) {
    __extends(ButtonComponent, _super);
    function ButtonComponent(injector) {
        return _super.call(this, injector) || this;
    }
    ButtonComponent.prototype.ngOnInit = function () {
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
        this.iconName = this.field.buttonType === 'submit' ? 'save' : 'reload';
    };
    // Overrides base class implementation
    ButtonComponent.prototype.initializeFormValue = function () { };
    ButtonComponent.ɵfac = function ButtonComponent_Factory(t) { return new (t || ButtonComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
    ButtonComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ButtonComponent, selectors: [["app-button"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 6, consts: [[1, "main-form", "grid-column", "grid-column-5", 3, "formGroup"], [1, "m-button", "m-button-block", "form-btn-action", 3, "disabled", "type"]], template: function ButtonComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "button", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](3, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.group);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", ctx.isDisabled)("type", ctx.field.buttonType);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](3, 4, ctx.field == null ? null : ctx.field.name), " ");
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__["LocalizePipe"]], styles: [".main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%] {\n  font-size: 20px;\n  height: auto;\n  max-width: none;\n}\n.main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%]   .m-icon-medium[_ngcontent-%COMP%] {\n  display: inline-block;\n  fill: #ffffff;\n  height: 24px;\n  width: 24px;\n}\n.main-form[_ngcontent-%COMP%]   .form-label[_ngcontent-%COMP%] {\n  margin-bottom: 8px;\n  display: block;\n}\ninput[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=color][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\n  font-size: 16px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked) {\n  position: absolute;\n  left: -9999px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  position: relative;\n  padding-left: 28px;\n  cursor: pointer;\n  line-height: 20px;\n  display: inline-block;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ddd;\n  border-radius: 100%;\n  background: #fff;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  content: '';\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  border-radius: 100%;\n  transition: all 0.2s ease;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  opacity: 0;\n  transform: scale(0);\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after {\n  opacity: 1;\n  transform: scale(1);\n}\nvalidation-messages[_ngcontent-%COMP%] {\n  display: block;\n}\n.grid-row[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n  flex-grow: 1;\n}\n.m-button[_ngcontent-%COMP%] {\n  font-size: 8.75px;\n  font-size: 0.875rem;\n  background: #2b2d31;\n  cursor: pointer;\n  display: block;\n  max-width: 280px;\n  outline: none;\n  padding: 6px;\n  margin: 0;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  margin-bottom: 4px;\n  height: 32px;\n  color: var(--theme-text-color-in-background);\n  border: 1px solid var(--theme-text-color-in-background);\n  border-radius: 3px;\n  background-color: transparent;\n  font-size: 16px;\n}\n.m-button[_ngcontent-%COMP%]:hover {\n  color: var(--primary-color);\n  border-color: var(--primary-color);\n  background-color: rgba(112, 219, 213, 0.1);\n}\n.m-button[_ngcontent-%COMP%]:hover.m-button-primary-border.m-button-icon   app-svg[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%] {\n  fill: var(--primary-color) !important;\n}\n.m-button.m-button-primary[_ngcontent-%COMP%] {\n  color: var(--primary-color);\n  border-color: var(--primary-color);\n  background-color: rgba(112, 219, 213, 0.1);\n}\n.m-button[_ngcontent-%COMP%]:disabled {\n  background-color: var(--modal-background) !important;\n  color: #45474b;\n  border: 1px solid #45474b;\n  cursor: not-allowed;\n}\n.m-button.m-button-block[_ngcontent-%COMP%] {\n  max-width: 100%;\n  width: 100%;\n}\n.m-button.m-button-lg[_ngcontent-%COMP%] {\n  min-height: 44px;\n  padding: 4px 16px;\n}\n.m-button-primary[_ngcontent-%COMP%] {\n  background: #45474b;\n}\n.m-button-primary[_ngcontent-%COMP%]:hover {\n  background: #5e6064;\n}\n.m-button-secondary[_ngcontent-%COMP%] {\n  background: #5e6064;\n}\n.m-button-secondary[_ngcontent-%COMP%]:hover {\n  background: #787a7e;\n}\n.m-button-blue[_ngcontent-%COMP%] {\n  background: #42a5f5;\n}\n.m-button-icon[_ngcontent-%COMP%] {\n  *zoom: 1;\n  background: var(--input-background);\n  color: var(--button-primary-color);\n  display: flex;\n}\n.m-button-icon[_ngcontent-%COMP%]:before, .m-button-icon[_ngcontent-%COMP%]:after {\n  content: \" \";\n  display: table;\n}\n.m-button-icon[_ngcontent-%COMP%]:after {\n  display: block;\n  clear: both;\n  height: 1px;\n  margin-top: -1px;\n  visibility: hidden;\n}\n.m-button-icon[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%] {\n  fill: var(--button-primary-color);\n  height: 16px;\n  width: 16px;\n}\n.m-button-icon[_ngcontent-%COMP%]:hover {\n  background: var(--button-primary-background-hover);\n}\n.m-button-circle[_ngcontent-%COMP%]:focus, .m-button-circle[_ngcontent-%COMP%]:active {\n  outline: none !important;\n  box-shadow: none;\n}\n.m-button-circle[_ngcontent-%COMP%] {\n  position: absolute;\n  cursor: pointer;\n  bottom: 40px;\n  right: 40px;\n  padding: 8px 16px 12px 12px;\n  height: 52px;\n  width: 52px;\n  fill: #ffffff;\n  background-color: #42a5f5;\n  border-radius: 50%;\n  border: none;\n  z-index: 1;\n}\n/*# sourceMappingURL=data:application/json;base64, */"] });
    return ButtonComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_1__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ButtonComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-button',
                template: "\n    <div  [formGroup]='group' class='main-form grid-column grid-column-5'>\n        <button [disabled]='isDisabled' [type]='field.buttonType' class='m-button m-button-block form-btn-action'>\n            {{ field?.name | localize }}\n        <!-- <div class='m-icon-medium' [ngClass] = 'iconName'>\n            <app-svg [name]='iconName'></app-svg>\n        </div> -->\n        </button>\n    </div>\n",
                styleUrls: ['./button.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/checkbox/checkbox.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/checkbox/checkbox.component.ts ***!
  \*******************************************************************************/
/*! exports provided: CheckboxComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckboxComponent", function() { return CheckboxComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var CheckboxComponent = /** @class */ (function (_super) {
    __extends(CheckboxComponent, _super);
    function CheckboxComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.checked = false;
        return _this;
    }
    CheckboxComponent.prototype.ngOnInit = function () {
        var _a;
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
        if (this.initialData) {
            this.checked = !!this.initialData[this.field.dataField];
        }
        (_a = this.group.get(this.field.dataField)) === null || _a === void 0 ? void 0 : _a.setValue(this.checked);
    };
    CheckboxComponent.prototype.onCheckChanged = function () {
        var _a;
        this.checked = !this.checked;
        (_a = this.group.get(this.field.dataField)) === null || _a === void 0 ? void 0 : _a.setValue(this.checked);
    };
    CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) { return new (t || CheckboxComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
    CheckboxComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: CheckboxComponent, selectors: [["app-checkbox"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 8, vars: 11, consts: [[1, "m-form-toggle", "m-form-input", 3, "formGroup"], [1, "control"], [1, "form-label", 3, "for"], [1, "switch"], ["type", "checkbox", 3, "checked", "name", "formControlName", "id", "change"], [1, "slider", "round"]], template: function CheckboxComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "label", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](4, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "label", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "input", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function CheckboxComponent_Template_input_change_6_listener() { return ctx.onCheckChanged(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "span", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.group);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("for", ctx.field.name);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](4, 9, ctx.field == null ? null : ctx.field.name));
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("checked", ctx.checked)("name", ctx.field.dataField)("formControlName", ctx.field.dataField)("id", ctx.field.dataField);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.field.dataField)("aria-labelledby", "lbl-" + ctx.field.dataField);
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["CheckboxControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__["LocalizePipe"]], styles: [".m-form-toggle[_ngcontent-%COMP%]   .control[_ngcontent-%COMP%] {\n  flex-direction: column;\n  align-content: stretch;\n  height: 36px;\n  line-height: 26px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL2NoZWNrYm94L006L3JlcG9zL0RlcGxveVNvbHV0aW9uc0NsaW1hdGVDaGFuZ2UvZHNzX2NjaXBfcHJvdG8vZGV2L3RhL2FuZ3VsYXIvc3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9mb3JtL2NvbXBvbmVudHMvY2hlY2tib3gvY2hlY2tib3guY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vY29tcG9uZW50cy9jaGVja2JveC9jaGVja2JveC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLHNCQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUNBUiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vY29tcG9uZW50cy9jaGVja2JveC9jaGVja2JveC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tLWZvcm0tdG9nZ2xlIHtcbiAgICAuY29udHJvbCB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG4gICAgICAgIGhlaWdodDogMzZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gICAgfVxufSIsIi5tLWZvcm0tdG9nZ2xlIC5jb250cm9sIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24tY29udGVudDogc3RyZXRjaDtcbiAgaGVpZ2h0OiAzNnB4O1xuICBsaW5lLWhlaWdodDogMjZweDtcbn1cbiJdfQ== */"] });
    return CheckboxComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_1__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CheckboxComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-checkbox',
                template: "\n    <div class='m-form-toggle m-form-input' [formGroup]='group'>\n      <div class='control'>\n      <label class='form-label' [for]='field.name'>{{ field?.name | localize }}</label>\n        <label class='switch'>\n        <input type='checkbox' (change)='onCheckChanged()' [checked]='checked' [name]='field.dataField' [formControlName]='field.dataField' [id]='field.dataField' [attr.aria-label]='field.dataField' [attr.aria-labelledby]='\"lbl-\"+field.dataField' >\n          <span class='slider round'></span>\n        </label>\n      </div>\n    </div>\n  ",
                styleUrls: ['./checkbox.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/datepicker/datepicker.component.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/datepicker/datepicker.component.ts ***!
  \***********************************************************************************/
/*! exports provided: FormDatepickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormDatepickerComponent", function() { return FormDatepickerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/AppConsts */ "./src/app/shared/AppConsts.ts");
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var angular_mydatepicker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular-mydatepicker */ "./node_modules/angular-mydatepicker/__ivy_ngcc__/fesm2015/angular-mydatepicker.js");
/* harmony import */ var _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../abp-validation-summary/abp-validation.summary.component */ "./src/app/shared/modules/abp-validation-summary/abp-validation.summary.component.ts");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();










var FormDatepickerComponent = /** @class */ (function (_super) {
    __extends(FormDatepickerComponent, _super);
    function FormDatepickerComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.valueChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.datePickerOptions = _shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__["AppConsts"].datePickerOption;
        _this.input = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]('');
        _this.dateMeta = undefined;
        _this.listenInputChanges();
        return _this;
    }
    FormDatepickerComponent.prototype.ngOnInit = function () {
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
        if (this.initialData) {
            this.initValue = this.initialData[this.field.dataField] || null;
            this.initiateValue(this.initValue);
        }
    };
    FormDatepickerComponent.prototype.ngOnChanges = function (changes) {
        if (changes.initValue && changes.initValue.currentValue !== undefined) {
            this.initiateValue(changes.initValue.currentValue);
        }
    };
    FormDatepickerComponent.prototype.listenInputChanges = function () {
        var _this = this;
        this.input.valueChanges
            .subscribe(function (value) {
            var date = _this.parseDatePickerValue(value);
            _this.valueChanges.emit(date);
        });
    };
    FormDatepickerComponent.prototype.initializeFormValue = function () { };
    FormDatepickerComponent.prototype.toggleCalendar = function (dp) {
        dp.toggleCalendar();
    };
    FormDatepickerComponent.prototype.initiateValue = function (initValue) {
        var date = moment__WEBPACK_IMPORTED_MODULE_2__["utc"](initValue).local();
        if (date.isValid()) {
            var newObj = {
                raw: initValue,
                datePickerInitInputValue: this.generateDatePickerInitValue(date),
                datePickerNewInputValue: null,
                timeValue: date.format('LTS')
            };
            this.dateMeta = newObj;
            this.input.setValue(newObj.datePickerInitInputValue);
            this.group.get(this.field.dataField).setValue(newObj.datePickerInitInputValue);
        }
    };
    FormDatepickerComponent.prototype.generateDatePickerInitValue = function (date) {
        return {
            isRange: false,
            singleDate: { jsDate: date.toDate() },
            dateRange: null
        };
    };
    FormDatepickerComponent.prototype.parseDatePickerValue = function (formValue) {
        if (!formValue) {
            return null;
        }
        var date = moment__WEBPACK_IMPORTED_MODULE_2__(formValue.singleDate.jsDate, moment__WEBPACK_IMPORTED_MODULE_2__["ISO_8601"]).format('YYYY-MM-DD');
        var time = this.dateMeta ? this.dateMeta.timeValue : '';
        var dateTime = moment__WEBPACK_IMPORTED_MODULE_2__(date + " " + time, 'YYYY-MM-DD LTS');
        if (dateTime.isValid()) {
            return dateTime.format();
        }
        return null;
    };
    FormDatepickerComponent.ɵfac = function FormDatepickerComponent_Factory(t) { return new (t || FormDatepickerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
    FormDatepickerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: FormDatepickerComponent, selectors: [["app-form-datepicker"]], inputs: { initValue: "initValue" }, outputs: { valueChanges: "valueChanges" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]], decls: 8, vars: 8, consts: [[1, "m-form-input", "m-form-datepicker", 3, "formGroup"], [1, "form-label"], [1, "m-form-textbox"], ["angular-mydatepicker", "", "type", "text", 3, "id", "formControlName", "options", "click"], ["inputDP", "angular-mydatepicker"], [3, "control"]], template: function FormDatepickerComponent_Template(rf, ctx) { if (rf & 1) {
            var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](3, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "input", 3, 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function FormDatepickerComponent_Template_input_click_5_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r1); var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](6); return ctx.toggleCalendar(_r0); });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "abp-validation-summary", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.group);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](3, 6, ctx.field == null ? null : ctx.field.name));
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", "item-" + ctx.field.dataField)("formControlName", ctx.field.dataField)("options", ctx.datePickerOptions);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("control", ctx.group.get(ctx.field.dataField));
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], angular_mydatepicker__WEBPACK_IMPORTED_MODULE_5__["AngularMyDatePickerDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_6__["AbpValidationSummaryComponent"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__["LocalizePipe"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vY29tcG9uZW50cy9kYXRlcGlja2VyL2RhdGVwaWNrZXIuY29tcG9uZW50Lmxlc3MifQ== */"] });
    return FormDatepickerComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_4__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormDatepickerComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-form-datepicker',
                templateUrl: './datepicker.component.html',
                styleUrls: ['./datepicker.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, { valueChanges: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }], initValue: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }] }); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/dynamic-field/dynamic-field.directive.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/dynamic-field/dynamic-field.directive.ts ***!
  \*****************************************************************************************/
/*! exports provided: DynamicFieldDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DynamicFieldDirective", function() { return DynamicFieldDirective; });
/* harmony import */ var _utils_data_types_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../utils/data-types.service */ "./src/app/shared/utils/data-types.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _input_input_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../input/input.component */ "./src/app/shared/modules/form/components/input/input.component.ts");
/* harmony import */ var _button_button_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../button/button.component */ "./src/app/shared/modules/form/components/button/button.component.ts");
/* harmony import */ var _select_select_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../select/select.component */ "./src/app/shared/modules/form/components/select/select.component.ts");
/* harmony import */ var _radiobutton_radiobutton_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../radiobutton/radiobutton.component */ "./src/app/shared/modules/form/components/radiobutton/radiobutton.component.ts");
/* harmony import */ var _checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../checkbox/checkbox.component */ "./src/app/shared/modules/form/components/checkbox/checkbox.component.ts");
/* harmony import */ var _address_search_address_search_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../address-search/address-search.component */ "./src/app/shared/modules/form/components/address-search/address-search.component.ts");
/* harmony import */ var _app_shared_modules_form_components_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/shared/modules/form/components/datepicker/datepicker.component */ "./src/app/shared/modules/form/components/datepicker/datepicker.component.ts");
/* harmony import */ var _text_area_text_area_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../text-area/text-area.component */ "./src/app/shared/modules/form/components/text-area/text-area.component.ts");
/* harmony import */ var _file_uploader_file_uploader_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../file-uploader/file-uploader.component */ "./src/app/shared/modules/form/components/file-uploader/file-uploader.component.ts");














var componentMap = {
    input: _input_input_component__WEBPACK_IMPORTED_MODULE_3__["InputComponent"],
    button: _button_button_component__WEBPACK_IMPORTED_MODULE_4__["ButtonComponent"],
    select: _select_select_component__WEBPACK_IMPORTED_MODULE_5__["SelectComponent"],
    radiobutton: _radiobutton_radiobutton_component__WEBPACK_IMPORTED_MODULE_6__["RadiobuttonComponent"],
    checkbox: _checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_7__["CheckboxComponent"],
    addressmap: _address_search_address_search_component__WEBPACK_IMPORTED_MODULE_8__["AddressSearchComponent"],
    datetime: _app_shared_modules_form_components_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_9__["FormDatepickerComponent"],
    textarea: _text_area_text_area_component__WEBPACK_IMPORTED_MODULE_10__["TextAreaComponent"],
    fileuploader: _file_uploader_file_uploader_component__WEBPACK_IMPORTED_MODULE_11__["FileUploaderComponent"]
};
var DynamicFieldDirective = /** @class */ (function () {
    function DynamicFieldDirective(resolver, container, dataTypeService) {
        this.resolver = resolver;
        this.container = container;
        this.dataTypeService = dataTypeService;
        this.componentLoadState = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    DynamicFieldDirective.prototype.ngOnChanges = function () {
        var _a, _b;
        try {
            var factory = this.resolver.resolveComponentFactory(((_a = this.field) === null || _a === void 0 ? void 0 : _a.component) ? (_b = this.field) === null || _b === void 0 ? void 0 : _b.component : componentMap[this.mapToComponent(this.field)]);
            if (this.componentRef) {
                this.componentRef.destroy();
            }
            this.componentRef = this.container.createComponent(factory);
            this.componentRef.instance.fieldInput = this.field;
            this.componentRef.instance.groupInput = this.group;
            this.componentRef.instance.fieldMetadataInput = this.fieldMetadata;
            this.componentRef.instance.initialDataInput = this.initialData;
            this.componentRef.instance.inputTypeInput = this.getFieldInputType(this.field.dataType);
            if (['Image', 'Images', 'Document', 'Documents', 'GeoJSON', 'GeoJSONs'].includes(this.field.dataType)) {
                if (['Image', 'Images'].includes(this.field.dataType)) {
                    this.componentRef.instance.type = 'image';
                    this.componentRef.instance.multi = this.field.dataType === 'Images';
                }
                else if (['Document', 'Documents'].includes(this.field.dataType)) {
                    this.componentRef.instance.type = 'file';
                    this.componentRef.instance.multi = this.field.dataType === 'Documents';
                }
                else if (['GeoJSON', 'GeoJSONs'].includes(this.field.dataType)) {
                    this.componentRef.instance.type = 'json';
                    this.componentRef.instance.multi = this.field.dataType === 'GeoJSONs';
                }
            }
            this.componentLoadState.emit({
                loaded: true,
                component: this.componentRef
            });
        }
        catch (e) {
            this.componentLoadState.emit({
                loaded: false,
                error: e
            });
        }
    };
    DynamicFieldDirective.prototype.mapToComponent = function (field) {
        if (field.itemType && field.itemType === 'input') {
            return this.getFieldDataInputType(field.dataType);
        }
        return field.itemType || '';
    };
    DynamicFieldDirective.prototype.getFieldDataInputType = function (serverType) {
        if (serverType === 'AddressMap') {
            return 'addressmap';
        }
        if (serverType === 'Enum') {
            return 'select';
        }
        if (['Image', 'Images', 'Document', 'Documents', 'GeoJSON', 'GeoJSONs'].includes(serverType)) {
            return 'fileuploader';
        }
        var type = this.dataTypeService.getFieldType(serverType);
        switch (type) {
            case 'datetime':
                return 'datetime';
            case 'boolean':
                return 'checkbox';
            default:
                return 'input';
        }
    };
    DynamicFieldDirective.prototype.getFieldInputType = function (serverType) {
        if (serverType === 'AddressMap') {
            return 'addressmap';
        }
        if (serverType === 'Enum') {
            return 'select';
        }
        if (['Image', 'Images', 'Document', 'Documents', 'GeoJSON', 'GeoJSONs'].includes(serverType)) {
            return 'fileuploader';
        }
        var type = this.dataTypeService.getFieldType(serverType);
        switch (type) {
            case 'datetime':
                return 'date';
            case 'color':
                return 'color';
            case 'boolean':
                return 'checkbox';
            default:
                return 'text';
        }
    };
    DynamicFieldDirective.ɵfac = function DynamicFieldDirective_Factory(t) { return new (t || DynamicFieldDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_utils_data_types_service__WEBPACK_IMPORTED_MODULE_0__["DataTypeService"])); };
    DynamicFieldDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({ type: DynamicFieldDirective, selectors: [["", "dynamicField", ""]], inputs: { field: "field", group: "group", initialData: "initialData", fieldMetadata: "fieldMetadata" }, outputs: { componentLoadState: "componentLoadState" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]] });
    return DynamicFieldDirective;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFieldDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
        args: [{
                selector: '[dynamicField]'
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"] }, { type: _utils_data_types_service__WEBPACK_IMPORTED_MODULE_0__["DataTypeService"] }]; }, { field: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }], group: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }], initialData: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }], fieldMetadata: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }], componentLoadState: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }] }); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/dynamic-form/dynamic-form.component.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/dynamic-form/dynamic-form.component.ts ***!
  \***************************************************************************************/
/*! exports provided: DynamicFormComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DynamicFormComponent", function() { return DynamicFormComponent; });
/* harmony import */ var _shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _services_form_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/form.service */ "./src/app/shared/modules/form/services/form.service.ts");
/* harmony import */ var _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/layout */ "./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _dynamic_field_dynamic_field_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../dynamic-field/dynamic-field.directive */ "./src/app/shared/modules/form/components/dynamic-field/dynamic-field.directive.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};











function DynamicFormComponent_form_0_table_1_ng_container_2_td_2_table_1_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {
    var _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](1, 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("componentLoadState", function DynamicFormComponent_form_0_table_1_ng_container_2_td_2_table_1_tr_1_td_1_Template_ng_container_componentLoadState_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r17); var j_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().index; var i_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3).index; var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r16.onComponentLoad($event, i_r6, j_r13); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var nextedItem_r15 = ctx.$implicit;
    var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("colSpan", nextedItem_r15.span || ctx_r14.maxColSpans);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("field", nextedItem_r15)("fieldMetadata", ctx_r14.fieldMetadata)("group", ctx_r14.form)("initialData", ctx_r14.initialData);
} }
function DynamicFormComponent_form_0_table_1_ng_container_2_td_2_table_1_tr_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_table_1_ng_container_2_td_2_table_1_tr_1_td_1_Template, 2, 5, "td", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var nextedRow_r12 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", nextedRow_r12.items);
} }
function DynamicFormComponent_form_0_table_1_ng_container_2_td_2_table_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "table");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_table_1_ng_container_2_td_2_table_1_tr_1_Template, 2, 1, "tr", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var item_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", item_r9.rows);
} }
var _c0 = function (a0, a1, a2, a3, a4) { return { "border group mb-12": a0, "w-100-p": a1, "w-50-p": a2, "w-33-p": a3, "w-25-p": a4 }; };
function DynamicFormComponent_form_0_table_1_ng_container_2_td_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "td", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_table_1_ng_container_2_td_2_table_1_Template, 2, 1, "table", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var item_r9 = ctx.$implicit;
    var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction5"](2, _c0, item_r9.itemType === "group", ctx_r7.rows.length === 1, ctx_r7.rows.length === 2, ctx_r7.rows.length === 3, ctx_r7.rows.length === 4));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", item_r9.rows);
} }
var _c1 = function (a0) { return { "border group mb-12": a0 }; };
function DynamicFormComponent_form_0_table_1_ng_container_2_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "td", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](3, 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("componentLoadState", function DynamicFormComponent_form_0_table_1_ng_container_2_ng_container_4_ng_container_1_Template_ng_container_componentLoadState_3_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r24); var i_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).index; var ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r23.onComponentLoad($event, i_r6, 0); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var item_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;
    var ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("colSpan", item_r21.span);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](6, _c1, item_r21.itemType === "group"));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("field", item_r21)("fieldMetadata", ctx_r22.fieldMetadata)("group", ctx_r22.form)("initialData", ctx_r22.initialData);
} }
function DynamicFormComponent_form_0_table_1_ng_container_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_table_1_ng_container_2_ng_container_4_ng_container_1_Template, 4, 8, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var item_r21 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !item_r21.rows);
} }
var _c2 = function (a0) { return [a0]; };
function DynamicFormComponent_form_0_table_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "tr", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, DynamicFormComponent_form_0_table_1_ng_container_2_td_2_Template, 2, 8, "td", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "tr", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, DynamicFormComponent_form_0_table_1_ng_container_2_ng_container_4_Template, 2, 1, "ng-container", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var row_r5 = ctx.$implicit;
    var i_r6 = ctx.index;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](4, _c2, "row-" + i_r6));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", row_r5.items);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](6, _c2, "row-" + i_r6));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", row_r5.items);
} }
function DynamicFormComponent_form_0_table_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "table");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "tbody");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, DynamicFormComponent_form_0_table_1_ng_container_2_Template, 5, 8, "ng-container", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx_r1.rows);
} }
function DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r40 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](2, 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("componentLoadState", function DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_Template_ng_container_componentLoadState_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r40); var j_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().index; var i_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3).index; var ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r39.onComponentLoad($event, i_r29, j_r36); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var nextedItem_r38 = ctx.$implicit;
    var ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("field", nextedItem_r38)("fieldMetadata", ctx_r37.fieldMetadata)("group", ctx_r37.form)("initialData", ctx_r37.initialData);
} }
function DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_ng_container_2_ng_container_1_ng_container_1_Template, 3, 4, "ng-container", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var nextedRow_r35 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", nextedRow_r35.items);
} }
function DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_ng_container_2_ng_container_1_Template, 2, 1, "ng-container", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var item_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", item_r31.rows);
} }
var _c3 = function (a0) { return { "border group": a0 }; };
function DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_div_3_Template(rf, ctx) { if (rf & 1) {
    var _r45 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](1, 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("componentLoadState", function DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_div_3_Template_ng_container_componentLoadState_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r45); var i_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).index; var ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3); return ctx_r44.onComponentLoad($event, i_r29, 0); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var item_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;
    var ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](5, _c3, item_r31.itemType === "group"));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("field", item_r31)("fieldMetadata", ctx_r33.fieldMetadata)("group", ctx_r33.form)("initialData", ctx_r33.initialData);
} }
var _c4 = function (a0) { return { "border mb-12": a0 }; };
function DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_ng_container_2_Template, 2, 1, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_div_3_Template, 2, 7, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var item_r31 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](3, _c4, item_r31.itemType === "group"));
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", item_r31.rows);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !item_r31.rows);
} }
function DynamicFormComponent_form_0_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_div_2_ng_container_1_ng_container_1_Template, 4, 5, "ng-container", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var row_r28 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", row_r28.items);
} }
function DynamicFormComponent_form_0_div_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_div_2_ng_container_1_Template, 2, 1, "ng-container", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx_r2.rows);
} }
function DynamicFormComponent_form_0_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r3.httpError, " ");
} }
function DynamicFormComponent_form_0_Template(rf, ctx) { if (rf & 1) {
    var _r49 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "form", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("submit", function DynamicFormComponent_form_0_Template_form_submit_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r49); var ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r48.onSubmit($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, DynamicFormComponent_form_0_table_1_Template, 3, 1, "table", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, DynamicFormComponent_form_0_div_2_Template, 2, 1, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, DynamicFormComponent_form_0_div_3_Template, 2, 1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx_r0.form);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", !ctx_r0.isHandsetDevise);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r0.isHandsetDevise);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r0.httpError);
} }
var DynamicFormComponent = /** @class */ (function (_super) {
    __extends(DynamicFormComponent, _super);
    function DynamicFormComponent(injector, fb, formService, changeDetectorRef, breakpointObserver) {
        var _this = _super.call(this, injector) || this;
        _this.fb = fb;
        _this.formService = formService;
        _this.changeDetectorRef = changeDetectorRef;
        _this.breakpointObserver = breakpointObserver;
        _this.submit = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.reset = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.componentsLoaded = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        _this.rows = [];
        _this.groupRows = [];
        _this.maxColSpans = 0;
        _this.maxRowSpans = 0;
        _this.tempTds = [];
        _this.isHandsetDevise = false;
        return _this;
    }
    Object.defineProperty(DynamicFormComponent.prototype, "value", {
        get: function () {
            return this.form.value;
        },
        enumerable: false,
        configurable: true
    });
    DynamicFormComponent.prototype.ngOnChanges = function (changes) {
        this.changeDetectorRef.detectChanges();
        this.initialData = changes.initialData.currentValue;
        this.onBeforeFormSubmit = changes.onBeforeFormSubmit.currentValue;
        this.isCreateForm = !this.initialData;
    };
    DynamicFormComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this.metadata && this.metadata.rows) {
            this.rows = this.metadata.rows || [];
        }
        if (this.metadata && this.metadata.groupRows) {
            this.groupRows = this.metadata.groupRows || [];
        }
        this.form = this.createControl();
        this.resetFn = this.form.reset;
        var self = this;
        this.form.reset = function (value, options) {
            self.reset.emit();
            self.formService.emitEvent('reset');
            self.resetFn.apply(self.form, arguments);
        };
        this.countMaxSpanInDefinition(this.rows);
        // this.tempTds = Array(this.maxColSpans).fill(0);
        this.breakpointObserver.observe([
            _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_4__["Breakpoints"].Handset,
            _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_4__["Breakpoints"].HandsetLandscape,
            _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_4__["Breakpoints"].HandsetPortrait
        ]).subscribe(function (result) {
            _this.isHandsetDevise = !!result.matches;
        });
    };
    DynamicFormComponent.prototype.ngAfterViewChecked = function () {
        this.changeDetectorRef.detectChanges();
    };
    DynamicFormComponent.prototype.onComponentLoad = function (e, rowIndex, columnIndex) {
        if (rowIndex === this.rows.length - 1 && columnIndex === this.rows[rowIndex].items.length - 1) {
            this.componentsLoaded.emit(true);
        }
    };
    DynamicFormComponent.prototype.onSubmit = function (event) {
        return __awaiter(this, void 0, void 0, function () {
            var value, service;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        event.preventDefault();
                        event.stopPropagation();
                        value = this.form.value;
                        if (!this.form.valid) return [3 /*break*/, 3];
                        if (!this.onBeforeFormSubmit) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.onBeforeFormSubmit(value)];
                    case 1:
                        value = _a.sent();
                        _a.label = 2;
                    case 2:
                        this.submit.emit({ state: 'submit', data: value });
                        if (this.isCreateForm) {
                            service = this.formService.create(value, this.metadata.domainEntity);
                        }
                        else {
                            service = this.formService.update(value, this.metadata.domainEntity);
                        }
                        this.submitAction(service, value);
                        return [3 /*break*/, 4];
                    case 3:
                        this.validateAllFormFields(this.form);
                        _a.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    DynamicFormComponent.prototype.submitAction = function (service, formData) {
        var _this = this;
        service.subscribe(function (res) {
            _this.submit.emit({ state: 'success', data: __assign(__assign({}, formData), res) });
            if (res && res.hasOwnProperty('error')) {
                _this.showError(res.error.details);
                return;
            }
        }, function (err) {
            _this.submit.emit({ state: 'error', data: err });
            _this.showError(err);
        });
    };
    DynamicFormComponent.prototype.showError = function (error) {
        if (error === void 0) { error = undefined; }
        this.httpError = error;
    };
    DynamicFormComponent.prototype.createControl = function () {
        var _this = this;
        var group = this.fb.group({});
        if (this.rows) {
            this.rows.forEach(function (row) {
                _this.createGroupControl(group, row);
            });
        }
        return group;
    };
    DynamicFormComponent.prototype.createGroupControl = function (group, row) {
        var _this = this;
        row.items.forEach(function (item) {
            var _a;
            if (item.itemType === 'button')
                return;
            if (item.itemType === 'group' || ((_a = item === null || item === void 0 ? void 0 : item.rows) === null || _a === void 0 ? void 0 : _a.length) > 0)
                return item.rows.forEach(function (itemRow) { return _this.createGroupControl(group, itemRow); });
            if (item.dataField) {
                var control = _this.fb.control(null, item.required ? [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required] : [] // this.bindValidations(item.validations || [])
                );
                group.addControl(item.dataField, control);
            }
        });
    };
    DynamicFormComponent.prototype.getMaxColSpan = function (row) {
        var colSpan = 1;
        this.currentMaxCol = colSpan;
        row.items.forEach(function (item) {
            if (item.span && item.span > colSpan) {
                colSpan = item.span;
            }
        });
        var maxColspanRow = row.items.forEach(function (item) {
            if (item.span && item.span > colSpan) {
                colSpan = item.span;
            }
        });
        this.currentMaxCol = colSpan;
        return colSpan;
    };
    DynamicFormComponent.prototype.getMaxRowSpan = function (rows) {
        var rowSpan = 1;
        var colsCount = 0;
        this.currentMaxRow = rowSpan;
        rows.forEach(function (row) {
            if (row.span && row.span > rowSpan) {
                rowSpan = row.span;
            }
        });
        var maxColsCount = 0;
        rows.forEach(function (row) {
            if (row.items && row.items.length > maxColsCount) {
                maxColsCount = row.items.length;
            }
        });
        rows.forEach(function (row) {
            var colsLength = 0;
            if (row.items) {
                row.items.forEach(function (item) {
                    colsLength += item.span || 1;
                });
                if (colsLength > colsCount) {
                    colsCount = colsLength;
                }
            }
        });
        this.currentMaxRow = rowSpan;
        return { rowSpan: rowSpan, colsCount: colsCount };
    };
    DynamicFormComponent.prototype.bindValidations = function (validations) {
        if (validations.length > 0) {
            var validList_1 = [];
            validations.forEach(function (valid) {
                validList_1.push(valid.validator);
            });
            return _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose(validList_1);
        }
        return null;
    };
    DynamicFormComponent.prototype.validateAllFormFields = function (formGroup) {
        Object.keys(formGroup.controls).forEach(function (field) {
            var control = formGroup.get(field);
            control.markAsDirty({ onlySelf: true });
        });
    };
    DynamicFormComponent.prototype.countMaxSpanInDefinition = function (rows) {
        var _this = this;
        var rowSpans = 0, colSpans = 0;
        rows.forEach(function (row) {
            var items = row === null || row === void 0 ? void 0 : row.items;
            if (!(row === null || row === void 0 ? void 0 : row.span) && rowSpans > 0) {
                row.span = 1;
            }
            else {
                row.span = (row === null || row === void 0 ? void 0 : row.span) || null;
            }
            rowSpans += row.span || 1;
            items.forEach(function (item) {
                var _a;
                if (((_a = item === null || item === void 0 ? void 0 : item.rows) === null || _a === void 0 ? void 0 : _a.length) > 0) {
                    colSpans = 0;
                    _this.countMaxSpanInDefinition(item.rows);
                }
                else {
                    if (!(item === null || item === void 0 ? void 0 : item.span) && colSpans > 0) {
                        item.span = 1;
                    }
                    else {
                        item.span = (item === null || item === void 0 ? void 0 : item.span) || null;
                    }
                    colSpans += item.span || 1;
                }
            });
            if (colSpans >= _this.maxColSpans) {
                _this.maxColSpans = colSpans;
            }
            if (rowSpans >= _this.maxRowSpans) {
                _this.maxRowSpans = rowSpans;
            }
        });
    };
    DynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) { return new (t || DynamicFormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_services_form_service__WEBPACK_IMPORTED_MODULE_3__["FormService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_4__["BreakpointObserver"])); };
    DynamicFormComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: DynamicFormComponent, selectors: [["dynamic-form"]], inputs: { metadata: "metadata", fieldMetadata: "fieldMetadata", initialData: "initialData", onBeforeFormSubmit: "onBeforeFormSubmit" }, outputs: { submit: "submit", reset: "reset", componentsLoaded: "componentsLoaded" }, exportAs: ["dynamicForm"], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]], decls: 1, vars: 1, consts: [["class", "dynamic-form main-form", 3, "formGroup", "submit", 4, "ngIf"], [1, "dynamic-form", "main-form", 3, "formGroup", "submit"], [4, "ngIf"], ["class", "d-flex flex-column flex-center w-100-p", 4, "ngIf"], ["class", "m-form-error httpError mt-4", 4, "ngIf"], [4, "ngFor", "ngForOf"], [3, "ngClass"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "colSpan", 4, "ngFor", "ngForOf"], [3, "colSpan"], ["dynamicField", "", 3, "field", "fieldMetadata", "group", "initialData", "componentLoadState"], [1, "w-100-p", 3, "ngClass"], [1, "d-flex", "flex-column", "flex-center", "w-100-p"], [1, "d-flex", "flex-column", "w-100-p", 3, "ngClass"], ["class", "w-100-p", 3, "ngClass", 4, "ngIf"], [1, "group", "w-100-p"], [1, "m-form-error", "httpError", "mt-4"]], template: function DynamicFormComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, DynamicFormComponent_form_0_Template, 4, 4, "form", 0);
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.rows.length);
        } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgClass"], _dynamic_field_dynamic_field_directive__WEBPACK_IMPORTED_MODULE_6__["DynamicFieldDirective"]], styles: [".main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%] {\n  font-size: 20px;\n  height: auto;\n  max-width: none;\n}\n.main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%]   .m-icon-medium[_ngcontent-%COMP%] {\n  display: inline-block;\n  fill: #ffffff;\n  height: 24px;\n  width: 24px;\n}\n.main-form[_ngcontent-%COMP%]   .form-label[_ngcontent-%COMP%] {\n  margin-bottom: 8px;\n  display: block;\n}\ninput[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=color][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\n  font-size: 16px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked) {\n  position: absolute;\n  left: -9999px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  position: relative;\n  padding-left: 28px;\n  cursor: pointer;\n  line-height: 20px;\n  display: inline-block;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ddd;\n  border-radius: 100%;\n  background: #fff;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  content: '';\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  border-radius: 100%;\n  transition: all 0.2s ease;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  opacity: 0;\n  transform: scale(0);\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after {\n  opacity: 1;\n  transform: scale(1);\n}\nvalidation-messages[_ngcontent-%COMP%] {\n  display: block;\n}\n.grid-row[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n  flex-grow: 1;\n}\nform[_ngcontent-%COMP%] {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  overflow: hidden;\n}\nform[_ngcontent-%COMP%]   table[_ngcontent-%COMP%] {\n  width: 100%;\n  border-spacing: 0px;\n  border-collapse: collapse;\n  border: 1px solid transparent;\n}\nform[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\n  vertical-align: top;\n  padding: 0px 4px;\n}\n.group[_ngcontent-%COMP%], .groups[_ngcontent-%COMP%] {\n  display: flex;\n}\n.groups[_ngcontent-%COMP%] {\n  flex-direction: column;\n  width: 100%;\n}\n.group[_ngcontent-%COMP%] {\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 12px;\n}\n.groups-container[_ngcontent-%COMP%] {\n  display: flex;\n  width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64, */"] });
    return DynamicFormComponent;
}(_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_0__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](DynamicFormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                exportAs: 'dynamicForm',
                selector: 'dynamic-form',
                templateUrl: './dynamic-form.component.html',
                styleUrls: ['./dynamic-form.component.less'],
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }, { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] }, { type: _services_form_service__WEBPACK_IMPORTED_MODULE_3__["FormService"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] }, { type: _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_4__["BreakpointObserver"] }]; }, { metadata: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }], fieldMetadata: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }], initialData: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }], onBeforeFormSubmit: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }], submit: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }], reset: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }], componentsLoaded: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }] }); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/file-uploader/file-uploader.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/file-uploader/file-uploader.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: FileUploaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileUploaderComponent", function() { return FileUploaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_modules_uploader_uploader_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/modules/uploader/uploader.component */ "./src/app/shared/modules/uploader/uploader.component.ts");
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../abp-validation-summary/abp-validation.summary.component */ "./src/app/shared/modules/abp-validation-summary/abp-validation.summary.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var FileUploaderComponent = /** @class */ (function (_super) {
    __extends(FileUploaderComponent, _super);
    function FileUploaderComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.multi = false;
        _this.initialValue = '';
        return _this;
    }
    FileUploaderComponent.prototype.ngOnInit = function () {
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
    };
    FileUploaderComponent.prototype.initializeFormValue = function () {
        if (this.initialData) {
            this.initialValue = this.initialData[this.field.dataField] || null;
            this.setFileUploaderValue(this.initialValue);
        }
    };
    FileUploaderComponent.prototype.setFileUploaderValue = function (value) {
        this.group.get(this.field.dataField).setValue(value);
    };
    FileUploaderComponent.prototype.getFileUploaderValue = function () {
        return this.group.get(this.field.dataField).value;
    };
    FileUploaderComponent.prototype.onFileSelected = function (evt) {
        var _a;
        if ((_a = evt === null || evt === void 0 ? void 0 : evt[0]) === null || _a === void 0 ? void 0 : _a['base64']) {
            var isMultiple = this.multi ? this.multi : ['Image', 'Document', 'GeoJSON'].includes(this.field.dataType);
            var isGeoType_1 = ['GeoJSON', 'GeoJSONs'].includes(this.field.dataType);
            var vals_1 = isMultiple ? (this.getFileUploaderValue() || []) : [];
            evt.forEach(function (e) {
                var val = isGeoType_1 ? JSON.parse(atob(evt[0]['base64'])) : evt[0]['base64'];
                vals_1.push(val);
            });
            this.setFileUploaderValue(isMultiple ? vals_1 : vals_1[0]);
        }
    };
    FileUploaderComponent.prototype.onFileRemoved = function (evt) {
        if (evt === null) {
            this.setFileUploaderValue([]);
        }
        else {
            var files = this.getFileUploaderValue() || [];
            if (files.length > 0) {
                files.splice(evt.index, 1);
            }
            this.setFileUploaderValue(files);
        }
    };
    FileUploaderComponent.ɵfac = function FileUploaderComponent_Factory(t) { return new (t || FileUploaderComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
    FileUploaderComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: FileUploaderComponent, selectors: [["app-file-uploader"]], viewQuery: function FileUploaderComponent_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_app_shared_modules_uploader_uploader_component__WEBPACK_IMPORTED_MODULE_1__["UploaderComponent"], true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.upload = _t.first);
        } }, inputs: { type: "type", multi: "multi" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 3, vars: 3, consts: [[1, "file-uploader", 3, "multi", "type", "onFileSelected", "onFileRemoved"], ["upload", ""], [3, "control"]], template: function FileUploaderComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "uploader", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onFileSelected", function FileUploaderComponent_Template_uploader_onFileSelected_0_listener($event) { return ctx.onFileSelected($event); })("onFileRemoved", function FileUploaderComponent_Template_uploader_onFileRemoved_0_listener($event) { return ctx.onFileRemoved($event); });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "abp-validation-summary", 2);
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("multi", ctx.multi)("type", ctx.type);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("control", ctx.group.get(ctx.field.dataField));
        } }, directives: [_app_shared_modules_uploader_uploader_component__WEBPACK_IMPORTED_MODULE_1__["UploaderComponent"], _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_3__["AbpValidationSummaryComponent"]], styles: [".main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%] {\n  font-size: 20px;\n  height: auto;\n  max-width: none;\n}\n.main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%]   .m-icon-medium[_ngcontent-%COMP%] {\n  display: inline-block;\n  fill: #ffffff;\n  height: 24px;\n  width: 24px;\n}\n.main-form[_ngcontent-%COMP%]   .form-label[_ngcontent-%COMP%] {\n  margin-bottom: 8px;\n  display: block;\n}\ninput[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=color][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\n  font-size: 16px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked) {\n  position: absolute;\n  left: -9999px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  position: relative;\n  padding-left: 28px;\n  cursor: pointer;\n  line-height: 20px;\n  display: inline-block;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ddd;\n  border-radius: 100%;\n  background: #fff;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  content: '';\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  border-radius: 100%;\n  transition: all 0.2s ease;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  opacity: 0;\n  transform: scale(0);\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after {\n  opacity: 1;\n  transform: scale(1);\n}\nvalidation-messages[_ngcontent-%COMP%] {\n  display: block;\n}\n.grid-row[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n  flex-grow: 1;\n}\n.m-form-input[_ngcontent-%COMP%] {\n  margin-bottom: 20px;\n}\n.m-form-input[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\n  margin: 12px 0;\n  display: block;\n}\n.m-form-input.last[_ngcontent-%COMP%] {\n  margin-bottom: 0;\n}\n.m-form-input-horizontal[_ngcontent-%COMP%] {\n  margin-right: 8px;\n}\napp-input[_ngcontent-%COMP%], app-button[_ngcontent-%COMP%], app-checkbox[_ngcontent-%COMP%], app-address-search[_ngcontent-%COMP%], app-radiobutton[_ngcontent-%COMP%], app-select[_ngcontent-%COMP%], app-text-area[_ngcontent-%COMP%], app-datepicker[_ngcontent-%COMP%], app-file-uploader[_ngcontent-%COMP%] {\n  display: block;\n  flex-grow: 1;\n  margin-right: 4px;\n}\napp-radiobutton[_ngcontent-%COMP%] {\n  flex-grow: unset;\n}\n[_nghost-%COMP%] {\n  margin-bottom: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64, */"] });
    return FileUploaderComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_2__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FileUploaderComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-file-uploader',
                templateUrl: './file-uploader.component.html',
                styleUrls: ['./file-uploader.component.less'],
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, { type: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], multi: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], upload: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: [_app_shared_modules_uploader_uploader_component__WEBPACK_IMPORTED_MODULE_1__["UploaderComponent"]]
        }] }); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: FormComponentBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormComponentBase", function() { return FormComponentBase; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var FormComponentBase = /** @class */ (function (_super) {
    __extends(FormComponentBase, _super);
    function FormComponentBase(injector) {
        var _this = _super.call(this, injector) || this;
        _this.isDisabled = false;
        _this.init(_this.groupInput, _this.fieldInput, _this.inputTypeInput, _this.initialDataInput);
        return _this;
    }
    FormComponentBase.prototype.init = function (group, field, inputType, initialData) {
        var _this = this;
        var _a;
        this.group = group;
        this.field = field;
        this.inputType = inputType;
        this.initialData = initialData;
        (_a = this.group) === null || _a === void 0 ? void 0 : _a.statusChanges.subscribe(function (status) {
            var _a, _b;
            if (_this.field.formValidEnabled) {
                _this.isDisabled = !(status === 'VALID');
                if (_this.isDisabled) {
                    (_a = _this.group.get(_this.field.dataField)) === null || _a === void 0 ? void 0 : _a.disable();
                }
                else {
                    (_b = _this.group.get(_this.field.dataField)) === null || _b === void 0 ? void 0 : _b.enable();
                }
            }
        });
        this.initializeFormValue();
    };
    FormComponentBase.prototype.initializeFormValue = function () {
        var _a, _b, _c;
        if ((_a = this.initialData) === null || _a === void 0 ? void 0 : _a[(_b = this.field) === null || _b === void 0 ? void 0 : _b.dataField]) {
            (_c = this.group.get(this.field.dataField)) === null || _c === void 0 ? void 0 : _c.setValue(this.initialData[this.field.dataField] || null);
        }
    };
    FormComponentBase.prototype.setFieldValues = function (values) {
        throw new Error('Method not implemented.');
    };
    FormComponentBase.prototype.getFieldValues = function () {
        throw new Error('Method not implemented.');
    };
    FormComponentBase.ɵfac = function FormComponentBase_Factory(t) { return new (t || FormComponentBase)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
    FormComponentBase.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: FormComponentBase, selectors: [["app-form-component-base"]], inputs: { groupInput: "groupInput", fieldInput: "fieldInput", fieldMetadataInput: "fieldMetadataInput", inputTypeInput: "inputTypeInput", initialDataInput: "initialDataInput" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function FormComponentBase_Template(rf, ctx) { }, encapsulation: 2 });
    return FormComponentBase;
}(_app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_2__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormComponentBase, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-form-component-base',
                template: "",
                styleUrls: []
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, { groupInput: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], fieldInput: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], fieldMetadataInput: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], inputTypeInput: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], initialDataInput: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }] }); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/input/input.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/input/input.component.ts ***!
  \*************************************************************************/
/*! exports provided: InputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InputComponent", function() { return InputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../abp-validation-summary/abp-validation.summary.component */ "./src/app/shared/modules/abp-validation-summary/abp-validation.summary.component.ts");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var InputComponent = /** @class */ (function (_super) {
    __extends(InputComponent, _super);
    function InputComponent(injector) {
        return _super.call(this, injector) || this;
    }
    InputComponent.prototype.ngOnInit = function () {
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
    };
    InputComponent.ɵfac = function InputComponent_Factory(t) { return new (t || InputComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
    InputComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: InputComponent, selectors: [["app-input"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 7, vars: 11, consts: [[1, "m-form-input", 3, "formGroup"], [1, "form-label", 3, "id"], [1, "m-form-textbox"], [3, "type", "formControlName", "disabled"], [3, "control"]], template: function InputComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](3, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "input", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "abp-validation-summary", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.group);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.field.dataField);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](3, 9, ctx.field == null ? null : ctx.field.name));
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("type", ctx.inputType)("formControlName", ctx.field.dataField)("disabled", ctx.isDisabled);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.field.dataField)("aria-labelledby", "lbl-" + ctx.field.dataField);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("control", ctx.group.get(ctx.field.dataField));
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"], _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_3__["AbpValidationSummaryComponent"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_4__["LocalizePipe"]], styles: [".main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%] {\n  font-size: 20px;\n  height: auto;\n  max-width: none;\n}\n.main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%]   .m-icon-medium[_ngcontent-%COMP%] {\n  display: inline-block;\n  fill: #ffffff;\n  height: 24px;\n  width: 24px;\n}\n.main-form[_ngcontent-%COMP%]   .form-label[_ngcontent-%COMP%] {\n  margin-bottom: 8px;\n  display: block;\n}\ninput[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=color][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\n  font-size: 16px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked) {\n  position: absolute;\n  left: -9999px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  position: relative;\n  padding-left: 28px;\n  cursor: pointer;\n  line-height: 20px;\n  display: inline-block;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ddd;\n  border-radius: 100%;\n  background: #fff;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  content: '';\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  border-radius: 100%;\n  transition: all 0.2s ease;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  opacity: 0;\n  transform: scale(0);\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after {\n  opacity: 1;\n  transform: scale(1);\n}\nvalidation-messages[_ngcontent-%COMP%] {\n  display: block;\n}\n.grid-row[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n  flex-grow: 1;\n}\n.m-form-input[_ngcontent-%COMP%] {\n  margin-bottom: 20px;\n}\n.m-form-input[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\n  margin: 12px 0;\n  display: block;\n}\n.m-form-input.last[_ngcontent-%COMP%] {\n  margin-bottom: 0;\n}\n.m-form-input-horizontal[_ngcontent-%COMP%] {\n  margin-right: 8px;\n}\napp-input[_ngcontent-%COMP%], app-button[_ngcontent-%COMP%], app-checkbox[_ngcontent-%COMP%], app-address-search[_ngcontent-%COMP%], app-radiobutton[_ngcontent-%COMP%], app-select[_ngcontent-%COMP%], app-text-area[_ngcontent-%COMP%], app-datepicker[_ngcontent-%COMP%], app-file-uploader[_ngcontent-%COMP%] {\n  display: block;\n  flex-grow: 1;\n  margin-right: 4px;\n}\napp-radiobutton[_ngcontent-%COMP%] {\n  flex-grow: unset;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL2lucHV0L006L3JlcG9zL0RlcGxveVNvbHV0aW9uc0NsaW1hdGVDaGFuZ2UvZHNzX2NjaXBfcHJvdG8vZGV2L3RhL2FuZ3VsYXIvc3JjL3N0eWxlcy9jb21wb25lbnRzL2Zvcm0ubGVzcyIsInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL2lucHV0L2lucHV0LmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9mb3JtL2NvbXBvbmVudHMvaW5wdXQvTTovcmVwb3MvRGVwbG95U29sdXRpb25zQ2xpbWF0ZUNoYW5nZS9kc3NfY2NpcF9wcm90by9kZXYvdGEvYW5ndWxhci9zcmMvc3R5bGVzL2NvbXBvbmVudHMvZm9ybS1pbnB1dC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksZUFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDQUo7QURKQTtFQU1NLHFCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDQ047QURWQTtFQWFJLGtCQUFBO0VBQ0EsY0FBQTtBQ0FKO0FER0E7Ozs7OztFQU1FLGVBQUE7QUNERjtBRElBOztFQUVJLGtCQUFBO0VBQ0EsYUFBQTtBQ0ZKO0FESUE7O0VBR0ksa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLHFCQUFBO0FDSEo7QURLQTs7RUFFSSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxPQUFBO0VBQ0EsTUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0FDSEo7QURLQTs7RUFFSSxXQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0EsbUJBQUE7RUFFQSx5QkFBQTtBQ0hKO0FES0E7RUFDSSxVQUFBO0VBRUEsbUJBQUE7QUNISjtBREtBO0VBQ0ksVUFBQTtFQUVBLG1CQUFBO0FDSEo7QURNQTtFQUNFLGNBQUE7QUNKRjtBRFlFO0VBQ0UsWUFBQTtBQ1ZKO0FDdkVBO0VBQ0UsbUJBQUE7QUR5RUY7QUMxRUE7RUFJSSxjQUFBO0VBQ0EsY0FBQTtBRHlFSjtBQ3RFRTtFQUNFLGdCQUFBO0FEd0VKO0FDcEVBO0VBQ0UsaUJBQUE7QURzRUY7QUNuRUE7Ozs7Ozs7OztFQUdJLGNBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUQyRUo7QUN6RUE7RUFDRSxnQkFBQTtBRDJFRiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vY29tcG9uZW50cy9pbnB1dC9pbnB1dC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluLWZvcm0ge1xuXHQuZm9ybS1idG4tYWN0aW9uIHtcbiAgICBmb250LXNpemU6IEBzcGFjaW5nLTIwO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgLm0taWNvbi1tZWRpdW0ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZmlsbDogQGNvbG9yLXdoaXRlO1xuICAgICAgaGVpZ2h0OiBAc3BhY2luZy0yNDtcbiAgICAgIHdpZHRoOiBAc3BhY2luZy0yNDtcbiAgICB9XG5cdH1cbiAgLmZvcm0tbGFiZWwge1xuICAgIG1hcmdpbi1ib3R0b206IEBzcGFjaW5nLTg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbmlucHV0W3R5cGU9dGV4dF0sXG5pbnB1dFt0eXBlPW51bWJlcl0sXG5pbnB1dFt0eXBlPWVtYWlsXSxcbmlucHV0W3R5cGU9Y29sb3JdLFxuaW5wdXRbdHlwZT1wYXNzd29yZF0sXG50ZXh0YXJlYSB7XG4gIGZvbnQtc2l6ZTogQGZvbnQtc2l6ZTtcbn1cblxuW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkLFxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTk5OTlweDtcbn1cblt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsLFxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpICsgbGFiZWxcbntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZy1sZWZ0OiAyOHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDphZnRlcixcblt0eXBlPVwicmFkaW9cIl06bm90KDpjaGVja2VkKSArIGxhYmVsOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMHB4O1xuICAgIGxlZnQ6IDBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpICsgbGFiZWw6YWZ0ZXIge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDphZnRlciB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbn1cblxudmFsaWRhdGlvbi1tZXNzYWdlcyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5cbi5ncmlkLXJvdyB7XG5cbiAgLy8gZGlzcGxheTogdGFibGUtcm93O1xuICBcbiAgJiA+IGRpdiB7XG4gICAgZmxleC1ncm93OiAxO1xuICB9XG59IiwiLm1haW4tZm9ybSAuZm9ybS1idG4tYWN0aW9uIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogbm9uZTtcbn1cbi5tYWluLWZvcm0gLmZvcm0tYnRuLWFjdGlvbiAubS1pY29uLW1lZGl1bSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmlsbDogI2ZmZmZmZjtcbiAgaGVpZ2h0OiAyNHB4O1xuICB3aWR0aDogMjRweDtcbn1cbi5tYWluLWZvcm0gLmZvcm0tbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuaW5wdXRbdHlwZT10ZXh0XSxcbmlucHV0W3R5cGU9bnVtYmVyXSxcbmlucHV0W3R5cGU9ZW1haWxdLFxuaW5wdXRbdHlwZT1jb2xvcl0sXG5pbnB1dFt0eXBlPXBhc3N3b3JkXSxcbnRleHRhcmVhIHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkLFxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtOTk5OXB4O1xufVxuW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkICsgbGFiZWwsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiAyOHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbDpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDphZnRlcixcblt0eXBlPVwicmFkaW9cIl06bm90KDpjaGVja2VkKSArIGxhYmVsOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpICsgbGFiZWw6YWZ0ZXIge1xuICBvcGFjaXR5OiAwO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDphZnRlciB7XG4gIG9wYWNpdHk6IDE7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbn1cbnZhbGlkYXRpb24tbWVzc2FnZXMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5ncmlkLXJvdyA+IGRpdiB7XG4gIGZsZXgtZ3JvdzogMTtcbn1cbi5tLWZvcm0taW5wdXQge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuLm0tZm9ybS1pbnB1dCBzbWFsbCB7XG4gIG1hcmdpbjogMTJweCAwO1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5tLWZvcm0taW5wdXQubGFzdCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG4ubS1mb3JtLWlucHV0LWhvcml6b250YWwge1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbn1cbmFwcC1pbnB1dCxcbmFwcC1idXR0b24sXG5hcHAtY2hlY2tib3gsXG5hcHAtYWRkcmVzcy1zZWFyY2gsXG5hcHAtcmFkaW9idXR0b24sXG5hcHAtc2VsZWN0LFxuYXBwLXRleHQtYXJlYSxcbmFwcC1kYXRlcGlja2VyLFxuYXBwLWZpbGUtdXBsb2FkZXIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZmxleC1ncm93OiAxO1xuICBtYXJnaW4tcmlnaHQ6IDRweDtcbn1cbmFwcC1yYWRpb2J1dHRvbiB7XG4gIGZsZXgtZ3JvdzogdW5zZXQ7XG59XG4iLCJAaW1wb3J0ICcuLi92YXJpYWJsZXMubGVzcyc7XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ09NUE9ORU5UUyAtIEZPUk0gSU5QVVRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4ubS1mb3JtLWlucHV0IHtcbiAgbWFyZ2luLWJvdHRvbTogQHNwYWNpbmctMjA7XG5cbiAgc21hbGwge1xuICAgIG1hcmdpbjogQHNwYWNpbmctMTIgMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gICYubGFzdCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuXG4ubS1mb3JtLWlucHV0LWhvcml6b250YWwge1xuICBtYXJnaW4tcmlnaHQ6IEBzcGFjaW5nLTg7XG59XG5cbmFwcC1pbnB1dCwgYXBwLWJ1dHRvbiwgYXBwLWNoZWNrYm94LFxuYXBwLWFkZHJlc3Mtc2VhcmNoLCBhcHAtcmFkaW9idXR0b24sIGFwcC1zZWxlY3QsXG5hcHAtdGV4dC1hcmVhLCBhcHAtZGF0ZXBpY2tlciwgYXBwLWZpbGUtdXBsb2FkZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBtYXJnaW4tcmlnaHQ6IEBzcGFjaW5nLTQ7XG59XG5hcHAtcmFkaW9idXR0b24ge1xuICBmbGV4LWdyb3c6IHVuc2V0O1xufSJdfQ== */"] });
    return InputComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_1__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](InputComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-input',
                template: "\n        <div class='m-form-input' [formGroup]='group'>\n            <label class='form-label' [id]='field.dataField' >{{ field?.name | localize }}</label>\n            <div class='m-form-textbox'>\n                <input\n                    [type]='inputType'\n                    [formControlName]='field.dataField'\n                    [disabled]='isDisabled'\n                    [attr.aria-label]='field.dataField'\n                    [attr.aria-labelledby]='\"lbl-\"+field.dataField'\n                />\n            </div>\n            <abp-validation-summary\n                [control]='group.get(field.dataField)'\n            ></abp-validation-summary>\n        </div>\n\n    ",
                styleUrls: ['./input.component.less'],
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/radiobutton/radiobutton.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/radiobutton/radiobutton.component.ts ***!
  \*************************************************************************************/
/*! exports provided: RadiobuttonComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadiobuttonComponent", function() { return RadiobuttonComponent; });
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var RadiobuttonComponent = /** @class */ (function (_super) {
    __extends(RadiobuttonComponent, _super);
    function RadiobuttonComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.checked = false;
        return _this;
    }
    RadiobuttonComponent.prototype.ngOnInit = function () {
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
    };
    RadiobuttonComponent.ɵfac = function RadiobuttonComponent_Factory(t) { return new (t || RadiobuttonComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"])); };
    RadiobuttonComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: RadiobuttonComponent, selectors: [["app-radiobutton"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 5, vars: 9, consts: [[1, "d-flex", "flex-center", "mr-24", 3, "formGroup"], ["type", "radio", 3, "formControlName", "value"]], template: function RadiobuttonComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "input", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "label");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](4, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formControlName", ctx.field.dataField)("value", ctx.initialData == null ? null : ctx.initialData.value);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("name", ctx.field.dataField)("id", ctx.field.dataField + ctx.initialData.value);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("for", ctx.field.dataField + ctx.initialData.value);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](4, 7, ctx.field == null ? null : ctx.field.name));
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["RadioControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControlName"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__["LocalizePipe"]], encapsulation: 2 });
    return RadiobuttonComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_0__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](RadiobuttonComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'app-radiobutton',
                template: "\n    <div [formGroup]='group' class=\"d-flex flex-center mr-24\" >\n      <input type=\"radio\" [formControlName]=\"field.dataField\" [attr.name]=\"field.dataField\" [attr.id]=\"field.dataField + initialData.value\" [value]=\"initialData?.value\" >\n      <label [attr.for]=\"field.dataField + initialData.value\" >{{ field?.name | localize }}</label>\n    </div>\n  ",
                styles: []
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }]; }, null); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/select/select.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/select/select.component.ts ***!
  \***************************************************************************/
/*! exports provided: SelectComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectComponent", function() { return SelectComponent; });
/* harmony import */ var _services_form_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../services/form.service */ "./src/app/shared/modules/form/services/form.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../abp-validation-summary/abp-validation.summary.component */ "./src/app/shared/modules/abp-validation-summary/abp-validation.summary.component.ts");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();











function SelectComponent_ng_container_6_option_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "option", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var option_r4 = ctx.$implicit;
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("selected", option_r4.id === ctx_r3.selectedIndex)("value", option_r4.id);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](option_r4.name);
} }
function SelectComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, SelectComponent_ng_container_6_option_1_Template, 2, 3, "option", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx_r0.enums);
} }
function SelectComponent_ng_template_8_option_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "option", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var option_r6 = ctx.$implicit;
    var i_r7 = ctx.index;
    var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("selected", i_r7 === ctx_r5.selectedIndex)("value", i_r7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](option_r6);
} }
function SelectComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, SelectComponent_ng_template_8_option_0_Template, 2, 3, "option", 7);
} if (rf & 2) {
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx_r2.enums);
} }
var SelectComponent = /** @class */ (function (_super) {
    __extends(SelectComponent, _super);
    function SelectComponent(injector, fb, formService) {
        var _this = _super.call(this, injector) || this;
        _this.fb = fb;
        _this.formService = formService;
        return _this;
    }
    SelectComponent.prototype.ngOnInit = function () {
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
    };
    SelectComponent.prototype.initializeFormValue = function () {
        var _this = this;
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        if (((_a = this.field) === null || _a === void 0 ? void 0 : _a.dataField) === 'dropdownStatic') {
            this.enums = (((_b = this.field) === null || _b === void 0 ? void 0 : _b.enums) || []);
        }
        else if (((_c = this.field) === null || _c === void 0 ? void 0 : _c.dataField) === 'dropdownAPI') {
            this.formService.getEnumsByApi((_d = this.field) === null || _d === void 0 ? void 0 : _d.enums.toString()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1)).subscribe(function (res) {
                _this.enums = res;
            });
        }
        else if ((_e = this.field) === null || _e === void 0 ? void 0 : _e.dynamicEnums) {
            this.enums = this.field.dynamicEnums
                ? (_f = this.fieldMetadataInput) === null || _f === void 0 ? void 0 : _f[this.field.dataField] : this.field.enums;
        }
        if ((_g = this.field) === null || _g === void 0 ? void 0 : _g.hasEmptyState) {
            this.enums.unshift(this.field.emptyStateText || '');
        }
        if (this.initialData) {
            this.selectedIndex = (_h = this.enums) === null || _h === void 0 ? void 0 : _h.findIndex(function (e) { return e === _this.initialData[_this.field.dataField]; });
            (_j = this.group.get(this.field.dataField)) === null || _j === void 0 ? void 0 : _j.setValue(this.initialData[this.field.dataField] || null);
        }
    };
    SelectComponent.prototype.onSelectChanged = function (evt) {
        var _a;
        this.selectedIndex = Number(evt.target.value);
        (_a = this.group.get(this.field.dataField)) === null || _a === void 0 ? void 0 : _a.setValue(this.enums[this.selectedIndex] || null);
    };
    SelectComponent.ɵfac = function SelectComponent_Factory(t) { return new (t || SelectComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_services_form_service__WEBPACK_IMPORTED_MODULE_0__["FormService"])); };
    SelectComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: SelectComponent, selectors: [["app-select"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 10, vars: 7, consts: [[1, "m-form-input", "m-form-select", 3, "formGroup"], [1, "form-label"], [1, "m-form-textbox"], [3, "change"], [4, "ngIf", "ngIfElse"], [3, "control"], ["staticOptionsTemplate", ""], [3, "selected", "value", 4, "ngFor", "ngForOf"], [3, "selected", "value"]], template: function SelectComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "label", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](3, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "select", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("change", function SelectComponent_Template_select_change_5_listener($event) { return ctx.onSelectChanged($event); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](6, SelectComponent_ng_container_6_Template, 2, 1, "ng-container", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](7, "abp-validation-summary", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](8, SelectComponent_ng_template_8_Template, 1, 1, "ng-template", null, 6, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);
        } if (rf & 2) {
            var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](9);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.group);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](3, 5, ctx.field == null ? null : ctx.field.name));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", (ctx.field == null ? null : ctx.field.dataField) === "dropdownAPI")("ngIfElse", _r1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("control", ctx.group.get(ctx.field.dataField));
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroupDirective"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_6__["AbpValidationSummaryComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ɵangular_packages_forms_forms_x"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__["LocalizePipe"]], styles: [".main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%] {\n  font-size: 20px;\n  height: auto;\n  max-width: none;\n}\n.main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%]   .m-icon-medium[_ngcontent-%COMP%] {\n  display: inline-block;\n  fill: #ffffff;\n  height: 24px;\n  width: 24px;\n}\n.main-form[_ngcontent-%COMP%]   .form-label[_ngcontent-%COMP%] {\n  margin-bottom: 8px;\n  display: block;\n}\ninput[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=color][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\n  font-size: 16px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked) {\n  position: absolute;\n  left: -9999px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  position: relative;\n  padding-left: 28px;\n  cursor: pointer;\n  line-height: 20px;\n  display: inline-block;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ddd;\n  border-radius: 100%;\n  background: #fff;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  content: '';\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  border-radius: 100%;\n  transition: all 0.2s ease;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  opacity: 0;\n  transform: scale(0);\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after {\n  opacity: 1;\n  transform: scale(1);\n}\nvalidation-messages[_ngcontent-%COMP%] {\n  display: block;\n}\n.grid-row[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n  flex-grow: 1;\n}\n.m-form-input[_ngcontent-%COMP%] {\n  margin-bottom: 20px;\n}\n.m-form-input[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\n  margin: 12px 0;\n  display: block;\n}\n.m-form-input.last[_ngcontent-%COMP%] {\n  margin-bottom: 0;\n}\n.m-form-input-horizontal[_ngcontent-%COMP%] {\n  margin-right: 8px;\n}\napp-input[_ngcontent-%COMP%], app-button[_ngcontent-%COMP%], app-checkbox[_ngcontent-%COMP%], app-address-search[_ngcontent-%COMP%], app-radiobutton[_ngcontent-%COMP%], app-select[_ngcontent-%COMP%], app-text-area[_ngcontent-%COMP%], app-datepicker[_ngcontent-%COMP%], app-file-uploader[_ngcontent-%COMP%] {\n  display: block;\n  flex-grow: 1;\n  margin-right: 4px;\n}\napp-radiobutton[_ngcontent-%COMP%] {\n  flex-grow: unset;\n}\n.m-form-select[_ngcontent-%COMP%] {\n  margin-right: 5px;\n}\n.m-form-select[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\n  height: 36px;\n}\n/*# sourceMappingURL=data:application/json;base64, */"] });
    return SelectComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_3__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](SelectComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'app-select',
                template: "\n    <div class='m-form-input m-form-select' [formGroup]='group'>\n        <label class='form-label'>{{ field?.name | localize }}</label>\n        <div class='m-form-textbox'>\n          <select (change)='onSelectChanged($event)'>\n            <ng-container *ngIf=\"field?.dataField === 'dropdownAPI'; else staticOptionsTemplate\" >\n            <option [selected]='option.id === selectedIndex' *ngFor='let option of enums;' [value]='option.id'>{{option.name}}</option>\n            </ng-container>                      \n          </select>\n        </div>\n          <abp-validation-summary\n            [control]='group.get(field.dataField)'\n        ></abp-validation-summary>\n    </div>\n\n    <ng-template #staticOptionsTemplate>\n      <option [selected]='i === selectedIndex' *ngFor='let option of enums; let i = index' [value]='i'>{{option}}</option>\n    </ng-template>    \n",
                styleUrls: ['./select.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }, { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] }, { type: _services_form_service__WEBPACK_IMPORTED_MODULE_0__["FormService"] }]; }, null); })();


/***/ }),

/***/ "./src/app/shared/modules/form/components/text-area/text-area.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/shared/modules/form/components/text-area/text-area.component.ts ***!
  \*********************************************************************************/
/*! exports provided: TextAreaComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextAreaComponent", function() { return TextAreaComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_modules_text_editor_text_editor_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/modules/text-editor/text-editor.component */ "./src/app/shared/modules/text-editor/text-editor.component.ts");
/* harmony import */ var _services_form_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/form.service */ "./src/app/shared/modules/form/services/form.service.ts");
/* harmony import */ var _form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../abp-validation-summary/abp-validation.summary.component */ "./src/app/shared/modules/abp-validation-summary/abp-validation.summary.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();











function TextAreaComponent_text_editor_6_Template(rf, ctx) { if (rf & 1) {
    var _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "text-editor", 7, 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("textResponse", function TextAreaComponent_text_editor_6_Template_text_editor_textResponse_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r4); var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](); return ctx_r3.setTextareaValue($event, ctx_r3.field.dataField); });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("initialValue", ctx_r0.initialValue);
} }
function TextAreaComponent_textarea_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "textarea", 9);
} if (rf & 2) {
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formControl", ctx_r1.group.get(ctx_r1.field.dataField))("disabled", ctx_r1.isDisabled);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx_r1.field.dataField)("aria-labelledby", "lbl-" + ctx_r1.field.dataField);
} }
var TextAreaComponent = /** @class */ (function (_super) {
    __extends(TextAreaComponent, _super);
    function TextAreaComponent(injector, formService) {
        var _this = _super.call(this, injector) || this;
        _this.formService = formService;
        return _this;
    }
    TextAreaComponent.prototype.ngOnInit = function () {
        var _a;
        this.init(this.groupInput, this.fieldInput, this.inputTypeInput, this.initialDataInput);
        this.isEditorField = ((_a = this.fieldInput) === null || _a === void 0 ? void 0 : _a.dataType) === 'HTML';
        if (this.isEditorField) {
            this.initResetHandler();
        }
    };
    TextAreaComponent.prototype.initializeFormValue = function () {
        if (this.initialData) {
            this.initialValue = this.initialData[this.field.dataField] || null;
            this.setTextareaValue(this.initialValue, this.field.dataField);
        }
    };
    TextAreaComponent.prototype.setTextareaValue = function (value, field) {
        this.group.get(field).setValue(value);
    };
    TextAreaComponent.prototype.initResetHandler = function () {
        var _this = this;
        this.formService.formEvent.subscribe(function (evt) {
            var _a;
            if (evt.action === 'reset') {
                (_a = _this.editor) === null || _a === void 0 ? void 0 : _a.resetForm();
            }
        });
    };
    TextAreaComponent.ɵfac = function TextAreaComponent_Factory(t) { return new (t || TextAreaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_services_form_service__WEBPACK_IMPORTED_MODULE_2__["FormService"])); };
    TextAreaComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: TextAreaComponent, selectors: [["app-text-area"]], viewQuery: function TextAreaComponent_Query(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_app_shared_modules_text_editor_text_editor_component__WEBPACK_IMPORTED_MODULE_1__["TextEditorComponent"], true);
        } if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.editor = _t.first);
        } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 9, vars: 7, consts: [[1, "grid-column-12"], [1, "form-label", 3, "id"], [1, "m-form-input"], [1, "m-form-textbox"], ["class", "m-form-input", 3, "initialValue", "textResponse", 4, "ngIf"], [3, "formControl", "disabled", 4, "ngIf"], [3, "control"], [1, "m-form-input", 3, "initialValue", "textResponse"], ["textEditor", ""], [3, "formControl", "disabled"]], template: function TextAreaComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](3, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, TextAreaComponent_text_editor_6_Template, 2, 1, "text-editor", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, TextAreaComponent_textarea_7_Template, 1, 4, "textarea", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "abp-validation-summary", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.field.dataField);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](3, 5, ctx.field == null ? null : ctx.field.name));
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isEditorField);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.isEditorField);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("control", ctx.group.get(ctx.field.dataField));
        } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["NgIf"], _abp_validation_summary_abp_validation_summary_component__WEBPACK_IMPORTED_MODULE_5__["AbpValidationSummaryComponent"], _app_shared_modules_text_editor_text_editor_component__WEBPACK_IMPORTED_MODULE_1__["TextEditorComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormControlDirective"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__["LocalizePipe"]], styles: [".main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%] {\n  font-size: 20px;\n  height: auto;\n  max-width: none;\n}\n.main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%]   .m-icon-medium[_ngcontent-%COMP%] {\n  display: inline-block;\n  fill: #ffffff;\n  height: 24px;\n  width: 24px;\n}\n.main-form[_ngcontent-%COMP%]   .form-label[_ngcontent-%COMP%] {\n  margin-bottom: 8px;\n  display: block;\n}\ninput[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=color][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\n  font-size: 16px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked) {\n  position: absolute;\n  left: -9999px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  position: relative;\n  padding-left: 28px;\n  cursor: pointer;\n  line-height: 20px;\n  display: inline-block;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ddd;\n  border-radius: 100%;\n  background: #fff;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  content: '';\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  border-radius: 100%;\n  transition: all 0.2s ease;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  opacity: 0;\n  transform: scale(0);\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after {\n  opacity: 1;\n  transform: scale(1);\n}\nvalidation-messages[_ngcontent-%COMP%] {\n  display: block;\n}\n.grid-row[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n  flex-grow: 1;\n}\n.m-form-input[_ngcontent-%COMP%] {\n  margin-bottom: 20px;\n}\n.m-form-input[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\n  margin: 12px 0;\n  display: block;\n}\n.m-form-input.last[_ngcontent-%COMP%] {\n  margin-bottom: 0;\n}\n.m-form-input-horizontal[_ngcontent-%COMP%] {\n  margin-right: 8px;\n}\napp-input[_ngcontent-%COMP%], app-button[_ngcontent-%COMP%], app-checkbox[_ngcontent-%COMP%], app-address-search[_ngcontent-%COMP%], app-radiobutton[_ngcontent-%COMP%], app-select[_ngcontent-%COMP%], app-text-area[_ngcontent-%COMP%], app-datepicker[_ngcontent-%COMP%], app-file-uploader[_ngcontent-%COMP%] {\n  display: block;\n  flex-grow: 1;\n  margin-right: 4px;\n}\napp-radiobutton[_ngcontent-%COMP%] {\n  flex-grow: unset;\n}\ntextarea[_ngcontent-%COMP%] {\n  width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL3RleHQtYXJlYS9NOi9yZXBvcy9EZXBsb3lTb2x1dGlvbnNDbGltYXRlQ2hhbmdlL2Rzc19jY2lwX3Byb3RvL2Rldi90YS9hbmd1bGFyL3NyYy9zdHlsZXMvY29tcG9uZW50cy9mb3JtLmxlc3MiLCJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vY29tcG9uZW50cy90ZXh0LWFyZWEvdGV4dC1hcmVhLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9mb3JtL2NvbXBvbmVudHMvdGV4dC1hcmVhL006L3JlcG9zL0RlcGxveVNvbHV0aW9uc0NsaW1hdGVDaGFuZ2UvZHNzX2NjaXBfcHJvdG8vZGV2L3RhL2FuZ3VsYXIvc3JjL3N0eWxlcy9jb21wb25lbnRzL2Zvcm0taW5wdXQubGVzcyIsInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL3RleHQtYXJlYS9NOi9yZXBvcy9EZXBsb3lTb2x1dGlvbnNDbGltYXRlQ2hhbmdlL2Rzc19jY2lwX3Byb3RvL2Rldi90YS9hbmd1bGFyL3NyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9jb21wb25lbnRzL3RleHQtYXJlYS90ZXh0LWFyZWEuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7QUNBSjtBREpBO0VBTU0scUJBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDTjtBRFZBO0VBYUksa0JBQUE7RUFDQSxjQUFBO0FDQUo7QURHQTs7Ozs7O0VBTUUsZUFBQTtBQ0RGO0FESUE7O0VBRUksa0JBQUE7RUFDQSxhQUFBO0FDRko7QURJQTs7RUFHSSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EscUJBQUE7QUNISjtBREtBOztFQUVJLFdBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxNQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZ0JBQUE7QUNISjtBREtBOztFQUVJLFdBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxtQkFBQTtFQUVBLHlCQUFBO0FDSEo7QURLQTtFQUNJLFVBQUE7RUFFQSxtQkFBQTtBQ0hKO0FES0E7RUFDSSxVQUFBO0VBRUEsbUJBQUE7QUNISjtBRE1BO0VBQ0UsY0FBQTtBQ0pGO0FEWUU7RUFDRSxZQUFBO0FDVko7QUN2RUE7RUFDRSxtQkFBQTtBRHlFRjtBQzFFQTtFQUlJLGNBQUE7RUFDQSxjQUFBO0FEeUVKO0FDdEVFO0VBQ0UsZ0JBQUE7QUR3RUo7QUNwRUE7RUFDRSxpQkFBQTtBRHNFRjtBQ25FQTs7Ozs7Ozs7O0VBR0ksY0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtBRDJFSjtBQ3pFQTtFQUNFLGdCQUFBO0FEMkVGO0FFcEdBO0VBQ0UsV0FBQTtBRnNHRiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vY29tcG9uZW50cy90ZXh0LWFyZWEvdGV4dC1hcmVhLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4tZm9ybSB7XG5cdC5mb3JtLWJ0bi1hY3Rpb24ge1xuICAgIGZvbnQtc2l6ZTogQHNwYWNpbmctMjA7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAubS1pY29uLW1lZGl1bSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBmaWxsOiBAY29sb3Itd2hpdGU7XG4gICAgICBoZWlnaHQ6IEBzcGFjaW5nLTI0O1xuICAgICAgd2lkdGg6IEBzcGFjaW5nLTI0O1xuICAgIH1cblx0fVxuICAuZm9ybS1sYWJlbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogQHNwYWNpbmctODtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuaW5wdXRbdHlwZT10ZXh0XSxcbmlucHV0W3R5cGU9bnVtYmVyXSxcbmlucHV0W3R5cGU9ZW1haWxdLFxuaW5wdXRbdHlwZT1jb2xvcl0sXG5pbnB1dFt0eXBlPXBhc3N3b3JkXSxcbnRleHRhcmVhIHtcbiAgZm9udC1zaXplOiBAZm9udC1zaXplO1xufVxuXG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtOTk5OXB4O1xufVxuW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkICsgbGFiZWwsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbFxue1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nLWxlZnQ6IDI4cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsOmJlZm9yZSxcblt0eXBlPVwicmFkaW9cIl06bm90KDpjaGVja2VkKSArIGxhYmVsOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsOmFmdGVyLFxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpICsgbGFiZWw6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG59XG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbDphZnRlciB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbn1cblt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsOmFmdGVyIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xufVxuXG52YWxpZGF0aW9uLW1lc3NhZ2VzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cblxuLmdyaWQtcm93IHtcblxuICAvLyBkaXNwbGF5OiB0YWJsZS1yb3c7XG4gIFxuICAmID4gZGl2IHtcbiAgICBmbGV4LWdyb3c6IDE7XG4gIH1cbn0iLCIubWFpbi1mb3JtIC5mb3JtLWJ0bi1hY3Rpb24ge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGhlaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiBub25lO1xufVxuLm1haW4tZm9ybSAuZm9ybS1idG4tYWN0aW9uIC5tLWljb24tbWVkaXVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmaWxsOiAjZmZmZmZmO1xuICBoZWlnaHQ6IDI0cHg7XG4gIHdpZHRoOiAyNHB4O1xufVxuLm1haW4tZm9ybSAuZm9ybS1sYWJlbCB7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5pbnB1dFt0eXBlPXRleHRdLFxuaW5wdXRbdHlwZT1udW1iZXJdLFxuaW5wdXRbdHlwZT1lbWFpbF0sXG5pbnB1dFt0eXBlPWNvbG9yXSxcbmlucHV0W3R5cGU9cGFzc3dvcmRdLFxudGV4dGFyZWEge1xuICBmb250LXNpemU6IDE2cHg7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC05OTk5cHg7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbCxcblt0eXBlPVwicmFkaW9cIl06bm90KDpjaGVja2VkKSArIGxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLWxlZnQ6IDI4cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsOmJlZm9yZSxcblt0eXBlPVwicmFkaW9cIl06bm90KDpjaGVja2VkKSArIGxhYmVsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsOmFmdGVyLFxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpICsgbGFiZWw6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgbGVmdDogMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG59XG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbDphZnRlciB7XG4gIG9wYWNpdHk6IDA7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbn1cblt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsOmFmdGVyIHtcbiAgb3BhY2l0eTogMTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xufVxudmFsaWRhdGlvbi1tZXNzYWdlcyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmdyaWQtcm93ID4gZGl2IHtcbiAgZmxleC1ncm93OiAxO1xufVxuLm0tZm9ybS1pbnB1dCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG4ubS1mb3JtLWlucHV0IHNtYWxsIHtcbiAgbWFyZ2luOiAxMnB4IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLm0tZm9ybS1pbnB1dC5sYXN0IHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5tLWZvcm0taW5wdXQtaG9yaXpvbnRhbCB7XG4gIG1hcmdpbi1yaWdodDogOHB4O1xufVxuYXBwLWlucHV0LFxuYXBwLWJ1dHRvbixcbmFwcC1jaGVja2JveCxcbmFwcC1hZGRyZXNzLXNlYXJjaCxcbmFwcC1yYWRpb2J1dHRvbixcbmFwcC1zZWxlY3QsXG5hcHAtdGV4dC1hcmVhLFxuYXBwLWRhdGVwaWNrZXIsXG5hcHAtZmlsZS11cGxvYWRlciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmbGV4LWdyb3c6IDE7XG4gIG1hcmdpbi1yaWdodDogNHB4O1xufVxuYXBwLXJhZGlvYnV0dG9uIHtcbiAgZmxleC1ncm93OiB1bnNldDtcbn1cbnRleHRhcmVhIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iLCJAaW1wb3J0ICcuLi92YXJpYWJsZXMubGVzcyc7XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ09NUE9ORU5UUyAtIEZPUk0gSU5QVVRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4ubS1mb3JtLWlucHV0IHtcbiAgbWFyZ2luLWJvdHRvbTogQHNwYWNpbmctMjA7XG5cbiAgc21hbGwge1xuICAgIG1hcmdpbjogQHNwYWNpbmctMTIgMDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gICYubGFzdCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxufVxuXG4ubS1mb3JtLWlucHV0LWhvcml6b250YWwge1xuICBtYXJnaW4tcmlnaHQ6IEBzcGFjaW5nLTg7XG59XG5cbmFwcC1pbnB1dCwgYXBwLWJ1dHRvbiwgYXBwLWNoZWNrYm94LFxuYXBwLWFkZHJlc3Mtc2VhcmNoLCBhcHAtcmFkaW9idXR0b24sIGFwcC1zZWxlY3QsXG5hcHAtdGV4dC1hcmVhLCBhcHAtZGF0ZXBpY2tlciwgYXBwLWZpbGUtdXBsb2FkZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBtYXJnaW4tcmlnaHQ6IEBzcGFjaW5nLTQ7XG59XG5hcHAtcmFkaW9idXR0b24ge1xuICBmbGV4LWdyb3c6IHVuc2V0O1xufSIsIkBpbXBvcnQgdXJsKC4uLy4uLy4uLy4uLy4uLy4uL3N0eWxlcy92YXJpYWJsZXMubGVzcyk7XG5AaW1wb3J0IHVybCguLi8uLi8uLi8uLi8uLi8uLi9zdHlsZXMvY29tcG9uZW50cy9mb3JtLmxlc3MpO1xuQGltcG9ydCB1cmwoLi4vLi4vLi4vLi4vLi4vLi4vc3R5bGVzL2NvbXBvbmVudHMvZm9ybS1pbnB1dC5sZXNzKTtcblxudGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */"] });
    return TextAreaComponent;
}(_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_3__["FormComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TextAreaComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-text-area',
                templateUrl: './text-area.component.html',
                styleUrls: ['./text-area.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }, { type: _services_form_service__WEBPACK_IMPORTED_MODULE_2__["FormService"] }]; }, { editor: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
            args: [_app_shared_modules_text_editor_text_editor_component__WEBPACK_IMPORTED_MODULE_1__["TextEditorComponent"]]
        }] }); })();


/***/ }),

/***/ "./src/app/shared/modules/form/form.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/shared/modules/form/form.component.ts ***!
  \*******************************************************/
/*! exports provided: FormComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormComponent", function() { return FormComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
/* harmony import */ var _app_shared_class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/class */ "./src/app/shared/class/index.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _components_dynamic_form_dynamic_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/dynamic-form/dynamic-form.component */ "./src/app/shared/modules/form/components/dynamic-form/dynamic-form.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






function FormComponent_dynamic_form_0_Template(rf, ctx) { if (rf & 1) {
    var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "dynamic-form", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("reset", function FormComponent_dynamic_form_0_Template_dynamic_form_reset_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r2); var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](); return ctx_r1.onFormReset(); })("componentsLoaded", function FormComponent_dynamic_form_0_Template_dynamic_form_componentsLoaded_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r2); var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](); return ctx_r3.onComponentsLoaded($event); })("submit", function FormComponent_dynamic_form_0_Template_dynamic_form_submit_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r2); var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](); return ctx_r4.onFormSubmit($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("onBeforeFormSubmit", ctx_r0.onBeforeSubmit)("initialData", ctx_r0.initialData)("metadata", ctx_r0.formDefinitionInterface)("fieldMetadata", ctx_r0.fieldMetaData);
} }
var FormComponent = /** @class */ (function (_super) {
    __extends(FormComponent, _super);
    function FormComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.fieldMetaData = [];
        _this.submit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.formLoaded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.formReset = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        return _this;
    }
    FormComponent.prototype.ngOnChanges = function (changes) {
        var _a;
        this.formDefinitionInterface = (_a = this.formDefinition) === null || _a === void 0 ? void 0 : _a.getDefinition();
        if (changes.initialData && changes.initialData.currentValue) {
            this.initialData = changes.initialData.currentValue;
        }
    };
    FormComponent.prototype.onFormSubmit = function (data) {
        this.submit.emit(data);
    };
    FormComponent.prototype.onFormReset = function () {
        this.formReset.emit();
    };
    FormComponent.prototype.onComponentsLoaded = function (e) {
        this.formLoaded.emit(true);
    };
    FormComponent.ɵfac = function FormComponent_Factory(t) { return new (t || FormComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
    FormComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: FormComponent, selectors: [["app-form"]], inputs: { formDefinition: "formDefinition", initialData: "initialData", fieldMetaData: "fieldMetaData", onBeforeSubmit: "onBeforeSubmit" }, outputs: { submit: "submit", formLoaded: "formLoaded", formReset: "formReset" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]], decls: 1, vars: 1, consts: [[3, "onBeforeFormSubmit", "initialData", "metadata", "fieldMetadata", "reset", "componentsLoaded", "submit", 4, "ngIf"], [3, "onBeforeFormSubmit", "initialData", "metadata", "fieldMetadata", "reset", "componentsLoaded", "submit"]], template: function FormComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, FormComponent_dynamic_form_0_Template, 1, 4, "dynamic-form", 0);
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.formDefinitionInterface);
        } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["NgIf"], _components_dynamic_form_dynamic_form_component__WEBPACK_IMPORTED_MODULE_4__["DynamicFormComponent"]], styles: [".main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%] {\n  font-size: 20px;\n  height: auto;\n  max-width: none;\n}\n.main-form[_ngcontent-%COMP%]   .form-btn-action[_ngcontent-%COMP%]   .m-icon-medium[_ngcontent-%COMP%] {\n  display: inline-block;\n  fill: #ffffff;\n  height: 24px;\n  width: 24px;\n}\n.main-form[_ngcontent-%COMP%]   .form-label[_ngcontent-%COMP%] {\n  margin-bottom: 8px;\n  display: block;\n}\ninput[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], input[type=email][_ngcontent-%COMP%], input[type=color][_ngcontent-%COMP%], input[type=password][_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\n  font-size: 16px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked) {\n  position: absolute;\n  left: -9999px;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  position: relative;\n  padding-left: 28px;\n  cursor: pointer;\n  line-height: 20px;\n  display: inline-block;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:before, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 20px;\n  height: 20px;\n  border: 1px solid #ddd;\n  border-radius: 100%;\n  background: #fff;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after, [type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  content: '';\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  border-radius: 100%;\n  transition: all 0.2s ease;\n}\n[type=\"radio\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%]:after {\n  opacity: 0;\n  transform: scale(0);\n}\n[type=\"radio\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%]:after {\n  opacity: 1;\n  transform: scale(1);\n}\nvalidation-messages[_ngcontent-%COMP%] {\n  display: block;\n}\n.grid-row[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\n  flex-grow: 1;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvZm9ybS9NOi9yZXBvcy9EZXBsb3lTb2x1dGlvbnNDbGltYXRlQ2hhbmdlL2Rzc19jY2lwX3Byb3RvL2Rldi90YS9hbmd1bGFyL3NyYy9zdHlsZXMvY29tcG9uZW50cy9mb3JtLmxlc3MiLCJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vZm9ybS5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGVBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQ0FKO0FESkE7RUFNTSxxQkFBQTtFQUNBLGFBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQ0NOO0FEVkE7RUFhSSxrQkFBQTtFQUNBLGNBQUE7QUNBSjtBREdBOzs7Ozs7RUFNRSxlQUFBO0FDREY7QURJQTs7RUFFSSxrQkFBQTtFQUNBLGFBQUE7QUNGSjtBRElBOztFQUdJLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxxQkFBQTtBQ0hKO0FES0E7O0VBRUksV0FBQTtFQUNBLGtCQUFBO0VBQ0EsT0FBQTtFQUNBLE1BQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtBQ0hKO0FES0E7O0VBRUksV0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLG1CQUFBO0VBRUEseUJBQUE7QUNISjtBREtBO0VBQ0ksVUFBQTtFQUVBLG1CQUFBO0FDSEo7QURLQTtFQUNJLFVBQUE7RUFFQSxtQkFBQTtBQ0hKO0FETUE7RUFDRSxjQUFBO0FDSkY7QURZRTtFQUNFLFlBQUE7QUNWSiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL2Zvcm0vZm9ybS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluLWZvcm0ge1xuXHQuZm9ybS1idG4tYWN0aW9uIHtcbiAgICBmb250LXNpemU6IEBzcGFjaW5nLTIwO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgLm0taWNvbi1tZWRpdW0ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZmlsbDogQGNvbG9yLXdoaXRlO1xuICAgICAgaGVpZ2h0OiBAc3BhY2luZy0yNDtcbiAgICAgIHdpZHRoOiBAc3BhY2luZy0yNDtcbiAgICB9XG5cdH1cbiAgLmZvcm0tbGFiZWwge1xuICAgIG1hcmdpbi1ib3R0b206IEBzcGFjaW5nLTg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbmlucHV0W3R5cGU9dGV4dF0sXG5pbnB1dFt0eXBlPW51bWJlcl0sXG5pbnB1dFt0eXBlPWVtYWlsXSxcbmlucHV0W3R5cGU9Y29sb3JdLFxuaW5wdXRbdHlwZT1wYXNzd29yZF0sXG50ZXh0YXJlYSB7XG4gIGZvbnQtc2l6ZTogQGZvbnQtc2l6ZTtcbn1cblxuW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkLFxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTk5OTlweDtcbn1cblt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsLFxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpICsgbGFiZWxcbntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZy1sZWZ0OiAyOHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDphZnRlcixcblt0eXBlPVwicmFkaW9cIl06bm90KDpjaGVja2VkKSArIGxhYmVsOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMHB4O1xuICAgIGxlZnQ6IDBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpICsgbGFiZWw6YWZ0ZXIge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDphZnRlciB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbn1cblxudmFsaWRhdGlvbi1tZXNzYWdlcyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5cbi5ncmlkLXJvdyB7XG5cbiAgLy8gZGlzcGxheTogdGFibGUtcm93O1xuICBcbiAgJiA+IGRpdiB7XG4gICAgZmxleC1ncm93OiAxO1xuICB9XG59IiwiLm1haW4tZm9ybSAuZm9ybS1idG4tYWN0aW9uIHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogbm9uZTtcbn1cbi5tYWluLWZvcm0gLmZvcm0tYnRuLWFjdGlvbiAubS1pY29uLW1lZGl1bSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmlsbDogI2ZmZmZmZjtcbiAgaGVpZ2h0OiAyNHB4O1xuICB3aWR0aDogMjRweDtcbn1cbi5tYWluLWZvcm0gLmZvcm0tbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuaW5wdXRbdHlwZT10ZXh0XSxcbmlucHV0W3R5cGU9bnVtYmVyXSxcbmlucHV0W3R5cGU9ZW1haWxdLFxuaW5wdXRbdHlwZT1jb2xvcl0sXG5pbnB1dFt0eXBlPXBhc3N3b3JkXSxcbnRleHRhcmVhIHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkLFxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAtOTk5OXB4O1xufVxuW3R5cGU9XCJyYWRpb1wiXTpjaGVja2VkICsgbGFiZWwsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiAyOHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUsXG5bdHlwZT1cInJhZGlvXCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbDpiZWZvcmUge1xuICBjb250ZW50OiAnJztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDphZnRlcixcblt0eXBlPVwicmFkaW9cIl06bm90KDpjaGVja2VkKSArIGxhYmVsOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuW3R5cGU9XCJyYWRpb1wiXTpub3QoOmNoZWNrZWQpICsgbGFiZWw6YWZ0ZXIge1xuICBvcGFjaXR5OiAwO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMCk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7XG59XG5bdHlwZT1cInJhZGlvXCJdOmNoZWNrZWQgKyBsYWJlbDphZnRlciB7XG4gIG9wYWNpdHk6IDE7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbn1cbnZhbGlkYXRpb24tbWVzc2FnZXMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5ncmlkLXJvdyA+IGRpdiB7XG4gIGZsZXgtZ3JvdzogMTtcbn1cbiJdfQ== */"] });
    return FormComponent;
}(_app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_1__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FormComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-form',
                templateUrl: './form.component.html',
                styleUrls: ['./form.component.less'],
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, { formDefinition: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], initialData: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], fieldMetaData: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], onBeforeSubmit: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], submit: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }], formLoaded: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }], formReset: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }] }); })();


/***/ }),

/***/ "./src/app/shared/modules/form/form.module.ts":
/*!****************************************************!*\
  !*** ./src/app/shared/modules/form/form.module.ts ***!
  \****************************************************/
/*! exports provided: FormModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormModule", function() { return FormModule; });
/* harmony import */ var _components_dynamic_field_dynamic_field_directive__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/dynamic-field/dynamic-field.directive */ "./src/app/shared/modules/form/components/dynamic-field/dynamic-field.directive.ts");
/* harmony import */ var _components_radiobutton_radiobutton_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/radiobutton/radiobutton.component */ "./src/app/shared/modules/form/components/radiobutton/radiobutton.component.ts");
/* harmony import */ var _components_select_select_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/select/select.component */ "./src/app/shared/modules/form/components/select/select.component.ts");
/* harmony import */ var _components_input_input_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/input/input.component */ "./src/app/shared/modules/form/components/input/input.component.ts");
/* harmony import */ var _components_dynamic_form_dynamic_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/dynamic-form/dynamic-form.component */ "./src/app/shared/modules/form/components/dynamic-form/dynamic-form.component.ts");
/* harmony import */ var _components_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/checkbox/checkbox.component */ "./src/app/shared/modules/form/components/checkbox/checkbox.component.ts");
/* harmony import */ var _components_button_button_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/button/button.component */ "./src/app/shared/modules/form/components/button/button.component.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _form_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./form.component */ "./src/app/shared/modules/form/form.component.ts");
/* harmony import */ var _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @app/shared/modules */ "./src/app/shared/modules/index.ts");
/* harmony import */ var _components_address_search_address_search_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/address-search/address-search.component */ "./src/app/shared/modules/form/components/address-search/address-search.component.ts");
/* harmony import */ var ngx_mapbox_gl__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-mapbox-gl */ "./node_modules/ngx-mapbox-gl/__ivy_ngcc__/fesm2015/ngx-mapbox-gl.js");
/* harmony import */ var angular_mydatepicker__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! angular-mydatepicker */ "./node_modules/angular-mydatepicker/__ivy_ngcc__/fesm2015/angular-mydatepicker.js");
/* harmony import */ var _components_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./components/datepicker/datepicker.component */ "./src/app/shared/modules/form/components/datepicker/datepicker.component.ts");
/* harmony import */ var _components_text_area_text_area_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./components/text-area/text-area.component */ "./src/app/shared/modules/form/components/text-area/text-area.component.ts");
/* harmony import */ var _components_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./components/form-component-base/form-component-base.component */ "./src/app/shared/modules/form/components/form-component-base/form-component-base.component.ts");
/* harmony import */ var _app_shared_utils_utils_module__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @app/shared/utils/utils.module */ "./src/app/shared/utils/utils.module.ts");
/* harmony import */ var _app_shared_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @app/shared/service */ "./src/app/shared/service/index.ts");
/* harmony import */ var _components_file_uploader_file_uploader_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./components/file-uploader/file-uploader.component */ "./src/app/shared/modules/form/components/file-uploader/file-uploader.component.ts");
/* harmony import */ var _uploader_uploader_module__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../uploader/uploader.module */ "./src/app/shared/modules/uploader/uploader.module.ts");























var FormModule = /** @class */ (function () {
    function FormModule() {
    }
    FormModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineNgModule"]({ type: FormModule });
    FormModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjector"]({ factory: function FormModule_Factory(t) { return new (t || FormModule)(); }, providers: [_app_shared_service__WEBPACK_IMPORTED_MODULE_19__["MapboxService"]], imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_9__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
                _app_shared_utils_utils_module__WEBPACK_IMPORTED_MODULE_18__["UtilsModule"],
                _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["AbpValidationSummaryModule"],
                angular_mydatepicker__WEBPACK_IMPORTED_MODULE_14__["AngularMyDatePickerModule"],
                _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["LookupFieldModule"],
                ngx_mapbox_gl__WEBPACK_IMPORTED_MODULE_13__["NgxMapboxGLModule"],
                _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["TextEditorModule"],
                _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["SvgModule"],
                _uploader_uploader_module__WEBPACK_IMPORTED_MODULE_21__["UploaderModule"]
            ], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
            _uploader_uploader_module__WEBPACK_IMPORTED_MODULE_21__["UploaderModule"]] });
    return FormModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsetNgModuleScope"](FormModule, { declarations: [_form_component__WEBPACK_IMPORTED_MODULE_10__["FormComponent"],
        _components_button_button_component__WEBPACK_IMPORTED_MODULE_6__["ButtonComponent"],
        _components_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_5__["CheckboxComponent"],
        _components_dynamic_form_dynamic_form_component__WEBPACK_IMPORTED_MODULE_4__["DynamicFormComponent"],
        _components_input_input_component__WEBPACK_IMPORTED_MODULE_3__["InputComponent"],
        _components_radiobutton_radiobutton_component__WEBPACK_IMPORTED_MODULE_1__["RadiobuttonComponent"],
        _components_select_select_component__WEBPACK_IMPORTED_MODULE_2__["SelectComponent"],
        _components_dynamic_field_dynamic_field_directive__WEBPACK_IMPORTED_MODULE_0__["DynamicFieldDirective"],
        _components_address_search_address_search_component__WEBPACK_IMPORTED_MODULE_12__["AddressSearchComponent"],
        _components_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_15__["FormDatepickerComponent"],
        _components_text_area_text_area_component__WEBPACK_IMPORTED_MODULE_16__["TextAreaComponent"],
        _components_file_uploader_file_uploader_component__WEBPACK_IMPORTED_MODULE_20__["FileUploaderComponent"],
        _components_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_17__["FormComponentBase"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_9__["CommonModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
        _app_shared_utils_utils_module__WEBPACK_IMPORTED_MODULE_18__["UtilsModule"],
        _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["AbpValidationSummaryModule"],
        angular_mydatepicker__WEBPACK_IMPORTED_MODULE_14__["AngularMyDatePickerModule"],
        _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["LookupFieldModule"],
        ngx_mapbox_gl__WEBPACK_IMPORTED_MODULE_13__["NgxMapboxGLModule"],
        _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["TextEditorModule"],
        _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["SvgModule"],
        _uploader_uploader_module__WEBPACK_IMPORTED_MODULE_21__["UploaderModule"]], exports: [_form_component__WEBPACK_IMPORTED_MODULE_10__["FormComponent"],
        _components_button_button_component__WEBPACK_IMPORTED_MODULE_6__["ButtonComponent"],
        _components_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_5__["CheckboxComponent"],
        _components_dynamic_form_dynamic_form_component__WEBPACK_IMPORTED_MODULE_4__["DynamicFormComponent"],
        _components_input_input_component__WEBPACK_IMPORTED_MODULE_3__["InputComponent"],
        _components_radiobutton_radiobutton_component__WEBPACK_IMPORTED_MODULE_1__["RadiobuttonComponent"],
        _components_select_select_component__WEBPACK_IMPORTED_MODULE_2__["SelectComponent"],
        _components_address_search_address_search_component__WEBPACK_IMPORTED_MODULE_12__["AddressSearchComponent"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
        _components_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_15__["FormDatepickerComponent"],
        _components_text_area_text_area_component__WEBPACK_IMPORTED_MODULE_16__["TextAreaComponent"],
        _components_file_uploader_file_uploader_component__WEBPACK_IMPORTED_MODULE_20__["FileUploaderComponent"],
        _uploader_uploader_module__WEBPACK_IMPORTED_MODULE_21__["UploaderModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](FormModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgModule"],
        args: [{
                declarations: [
                    _form_component__WEBPACK_IMPORTED_MODULE_10__["FormComponent"],
                    _components_button_button_component__WEBPACK_IMPORTED_MODULE_6__["ButtonComponent"],
                    _components_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_5__["CheckboxComponent"],
                    _components_dynamic_form_dynamic_form_component__WEBPACK_IMPORTED_MODULE_4__["DynamicFormComponent"],
                    _components_input_input_component__WEBPACK_IMPORTED_MODULE_3__["InputComponent"],
                    _components_radiobutton_radiobutton_component__WEBPACK_IMPORTED_MODULE_1__["RadiobuttonComponent"],
                    _components_select_select_component__WEBPACK_IMPORTED_MODULE_2__["SelectComponent"],
                    _components_dynamic_field_dynamic_field_directive__WEBPACK_IMPORTED_MODULE_0__["DynamicFieldDirective"],
                    _components_address_search_address_search_component__WEBPACK_IMPORTED_MODULE_12__["AddressSearchComponent"],
                    _components_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_15__["FormDatepickerComponent"],
                    _components_text_area_text_area_component__WEBPACK_IMPORTED_MODULE_16__["TextAreaComponent"],
                    _components_file_uploader_file_uploader_component__WEBPACK_IMPORTED_MODULE_20__["FileUploaderComponent"],
                    _components_form_component_base_form_component_base_component__WEBPACK_IMPORTED_MODULE_17__["FormComponentBase"]
                ],
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_9__["CommonModule"],
                    _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"],
                    _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
                    _app_shared_utils_utils_module__WEBPACK_IMPORTED_MODULE_18__["UtilsModule"],
                    _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["AbpValidationSummaryModule"],
                    angular_mydatepicker__WEBPACK_IMPORTED_MODULE_14__["AngularMyDatePickerModule"],
                    _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["LookupFieldModule"],
                    ngx_mapbox_gl__WEBPACK_IMPORTED_MODULE_13__["NgxMapboxGLModule"],
                    _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["TextEditorModule"],
                    _app_shared_modules__WEBPACK_IMPORTED_MODULE_11__["SvgModule"],
                    _uploader_uploader_module__WEBPACK_IMPORTED_MODULE_21__["UploaderModule"]
                ],
                exports: [
                    _form_component__WEBPACK_IMPORTED_MODULE_10__["FormComponent"],
                    _components_button_button_component__WEBPACK_IMPORTED_MODULE_6__["ButtonComponent"],
                    _components_checkbox_checkbox_component__WEBPACK_IMPORTED_MODULE_5__["CheckboxComponent"],
                    _components_dynamic_form_dynamic_form_component__WEBPACK_IMPORTED_MODULE_4__["DynamicFormComponent"],
                    _components_input_input_component__WEBPACK_IMPORTED_MODULE_3__["InputComponent"],
                    _components_radiobutton_radiobutton_component__WEBPACK_IMPORTED_MODULE_1__["RadiobuttonComponent"],
                    _components_select_select_component__WEBPACK_IMPORTED_MODULE_2__["SelectComponent"],
                    _components_address_search_address_search_component__WEBPACK_IMPORTED_MODULE_12__["AddressSearchComponent"],
                    _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"],
                    _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
                    _components_datepicker_datepicker_component__WEBPACK_IMPORTED_MODULE_15__["FormDatepickerComponent"],
                    _components_text_area_text_area_component__WEBPACK_IMPORTED_MODULE_16__["TextAreaComponent"],
                    _components_file_uploader_file_uploader_component__WEBPACK_IMPORTED_MODULE_20__["FileUploaderComponent"],
                    _uploader_uploader_module__WEBPACK_IMPORTED_MODULE_21__["UploaderModule"]
                ],
                providers: [_app_shared_service__WEBPACK_IMPORTED_MODULE_19__["MapboxService"]]
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/app/shared/modules/form/services/form.service.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/modules/form/services/form.service.ts ***!
  \**************************************************************/
/*! exports provided: FormService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormService", function() { return FormService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/class */ "./src/app/shared/class/index.ts");
/* harmony import */ var _app_shared_helpers_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared/helpers/helpers */ "./src/app/shared/helpers/helpers.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();








var FormService = /** @class */ (function (_super) {
    __extends(FormService, _super);
    function FormService(injector, http) {
        var _this = _super.call(this, injector) || this;
        _this.formEventListener$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["ReplaySubject"]();
        _this.formEvent = _this.formEventListener$.asObservable();
        _this.http = http;
        return _this;
    }
    FormService.prototype.create = function (body, domainEntity) {
        var _this = this;
        var endpoint = this.baseUrl + "/api/services/app/" + domainEntity + "/Create";
        var url_ = endpoint;
        url_ = url_.replace(/[?&]$/, '');
        body = Object(_app_shared_helpers_helpers__WEBPACK_IMPORTED_MODULE_3__["removeUndefinedAndEmpty"])(body);
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            observe: 'response',
            responseType: 'blob',
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]({
                'Content-Type': 'application/json-patch+json',
                Accept: 'text/plain',
            }),
        };
        return this.http
            .request('post', url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["mergeMap"])(function (response_) {
            return _this.processCreate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(function (response_) {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpResponseBase"]) {
                try {
                    return _this.processCreate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["throwError"])(response_);
        }));
    };
    FormService.prototype.update = function (body, domainEntity) {
        var _this = this;
        var endpoint = this.baseUrl + "/api/services/app/" + domainEntity + "/Update";
        var url_ = endpoint;
        url_ = url_.replace(/[?&]$/, '');
        body = Object(_app_shared_helpers_helpers__WEBPACK_IMPORTED_MODULE_3__["removeUndefinedAndEmpty"])(body);
        var content_ = JSON.stringify(body);
        var options_ = {
            body: content_,
            observe: 'response',
            responseType: 'blob',
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]({
                'Content-Type': 'application/json-patch+json',
                Accept: 'text/plain',
            }),
        };
        return this.http
            .request('put', url_, options_)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["mergeMap"])(function (response_) {
            return _this.processUpdate(response_);
        }))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(function (response_) {
            if (response_ instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpResponseBase"]) {
                try {
                    return _this.processUpdate(response_);
                }
                catch (e) {
                    return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["throwError"])(e);
                }
            }
            else
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["throwError"])(response_);
        }));
    };
    FormService.prototype.emitEvent = function (action, data) {
        this.formEventListener$.next({ action: action, data: data });
    };
    FormService.prototype.getEnumsByApi = function (url) {
        var endpoint = "" + this.baseUrl + url;
        return this.http.get(endpoint).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (res) { var _a; return ((_a = res === null || res === void 0 ? void 0 : res.result) === null || _a === void 0 ? void 0 : _a.items) || []; }));
    };
    FormService.ɵfac = function FormService_Factory(t) { return new (t || FormService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"])); };
    FormService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: FormService, factory: FormService.ɵfac, providedIn: 'root' });
    return FormService;
}(_app_shared_class__WEBPACK_IMPORTED_MODULE_2__["APIServiceBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](FormService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }, { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"], decorators: [{
                type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
                args: [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]]
            }] }]; }, null); })();


/***/ })

}]);
//# sourceMappingURL=default~modules-firestation-firestation-module~modules-gasstation-gasstation-module~modules-healthca~47d48f87.js.map