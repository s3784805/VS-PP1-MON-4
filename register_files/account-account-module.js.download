(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["account-account-module"],{

/***/ "./node_modules/adal-angular/lib/adal.js":
/*!***********************************************!*\
  !*** ./node_modules/adal-angular/lib/adal.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

//----------------------------------------------------------------------
// AdalJS v1.0.18
// @preserve Copyright (c) Microsoft Open Technologies, Inc.
// All Rights Reserved
// Apache License 2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//id
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//----------------------------------------------------------------------
var _AuthenticationContext = function () {
  'use strict';
  /**
   * Configuration options for Authentication Context.
   * @class config
   *  @property {string} tenant - Your target tenant.
   *  @property {string} clientId - Client ID assigned to your app by Azure Active Directory.
   *  @property {string} redirectUri - Endpoint at which you expect to receive tokens.Defaults to `window.location.href`.
   *  @property {string} instance - Azure Active Directory Instance.Defaults to `https://login.microsoftonline.com/`.
   *  @property {Array} endpoints - Collection of {Endpoint-ResourceId} used for automatically attaching tokens in webApi calls.
   *  @property {Boolean} popUp - Set this to true to enable login in a popup winodow instead of a full redirect.Defaults to `false`.
   *  @property {string} localLoginUrl - Set this to redirect the user to a custom login page.
   *  @property {function} displayCall - User defined function of handling the navigation to Azure AD authorization endpoint in case of login. Defaults to 'null'.
   *  @property {string} postLogoutRedirectUri - Redirects the user to postLogoutRedirectUri after logout. Defaults is 'redirectUri'.
   *  @property {string} cacheLocation - Sets browser storage to either 'localStorage' or sessionStorage'. Defaults to 'sessionStorage'.
   *  @property {Array.<string>} anonymousEndpoints Array of keywords or URI's. Adal will not attach a token to outgoing requests that have these keywords or uri. Defaults to 'null'.
   *  @property {number} expireOffsetSeconds If the cached token is about to be expired in the expireOffsetSeconds (in seconds), Adal will renew the token instead of using the cached token. Defaults to 300 seconds.
   *  @property {string} correlationId Unique identifier used to map the request with the response. Defaults to RFC4122 version 4 guid (128 bits).
   *  @property {number} loadFrameTimeout The number of milliseconds of inactivity before a token renewal response from AAD should be considered timed out.
   */

  /**
   * Creates a new AuthenticationContext object.
   * @constructor
   * @param {config}  config               Configuration options for AuthenticationContext
   */

  _AuthenticationContext = function AuthenticationContext(config) {
    /**
     * Enum for request type
     * @enum {string}
     */
    this.REQUEST_TYPE = {
      LOGIN: 'LOGIN',
      RENEW_TOKEN: 'RENEW_TOKEN',
      UNKNOWN: 'UNKNOWN'
    };
    this.RESPONSE_TYPE = {
      ID_TOKEN_TOKEN: 'id_token token',
      TOKEN: 'token'
    };
    /**
     * Enum for storage constants
     * @enum {string}
     */

    this.CONSTANTS = {
      ACCESS_TOKEN: 'access_token',
      EXPIRES_IN: 'expires_in',
      ID_TOKEN: 'id_token',
      ERROR_DESCRIPTION: 'error_description',
      SESSION_STATE: 'session_state',
      ERROR: 'error',
      STORAGE: {
        TOKEN_KEYS: 'adal.token.keys',
        ACCESS_TOKEN_KEY: 'adal.access.token.key',
        EXPIRATION_KEY: 'adal.expiration.key',
        STATE_LOGIN: 'adal.state.login',
        STATE_RENEW: 'adal.state.renew',
        NONCE_IDTOKEN: 'adal.nonce.idtoken',
        SESSION_STATE: 'adal.session.state',
        USERNAME: 'adal.username',
        IDTOKEN: 'adal.idtoken',
        ERROR: 'adal.error',
        ERROR_DESCRIPTION: 'adal.error.description',
        LOGIN_REQUEST: 'adal.login.request',
        LOGIN_ERROR: 'adal.login.error',
        RENEW_STATUS: 'adal.token.renew.status',
        ANGULAR_LOGIN_REQUEST: 'adal.angular.login.request'
      },
      RESOURCE_DELIMETER: '|',
      CACHE_DELIMETER: '||',
      LOADFRAME_TIMEOUT: 6000,
      TOKEN_RENEW_STATUS_CANCELED: 'Canceled',
      TOKEN_RENEW_STATUS_COMPLETED: 'Completed',
      TOKEN_RENEW_STATUS_IN_PROGRESS: 'In Progress',
      LOGGING_LEVEL: {
        ERROR: 0,
        WARN: 1,
        INFO: 2,
        VERBOSE: 3
      },
      LEVEL_STRING_MAP: {
        0: 'ERROR:',
        1: 'WARNING:',
        2: 'INFO:',
        3: 'VERBOSE:'
      },
      POPUP_WIDTH: 483,
      POPUP_HEIGHT: 600
    };

    if (_AuthenticationContext.prototype._singletonInstance) {
      return _AuthenticationContext.prototype._singletonInstance;
    }

    _AuthenticationContext.prototype._singletonInstance = this; // public

    this.instance = 'https://login.microsoftonline.com/';
    this.config = {};
    this.callback = null;
    this.popUp = false;
    this.isAngular = false; // private

    this._user = null;
    this._activeRenewals = {};
    this._loginInProgress = false;
    this._acquireTokenInProgress = false;
    this._renewStates = [];
    this._callBackMappedToRenewStates = {};
    this._callBacksMappedToRenewStates = {};
    this._openedWindows = [];
    this._requestType = this.REQUEST_TYPE.LOGIN;
    window._adalInstance = this; // validate before constructor assignments

    if (config.displayCall && typeof config.displayCall !== 'function') {
      throw new Error('displayCall is not a function');
    }

    if (!config.clientId) {
      throw new Error('clientId is required');
    }

    this.config = this._cloneConfig(config);
    if (this.config.navigateToLoginRequestUrl === undefined) this.config.navigateToLoginRequestUrl = true;
    if (this.config.popUp) this.popUp = true;
    if (this.config.callback && typeof this.config.callback === 'function') this.callback = this.config.callback;

    if (this.config.instance) {
      this.instance = this.config.instance;
    } // App can request idtoken for itself using clientid as resource


    if (!this.config.loginResource) {
      this.config.loginResource = this.config.clientId;
    } // redirect and logout_redirect are set to current location by default


    if (!this.config.redirectUri) {
      // strip off query parameters or hashes from the redirect uri as AAD does not allow those.
      this.config.redirectUri = window.location.href.split("?")[0].split("#")[0];
    }

    if (!this.config.postLogoutRedirectUri) {
      // strip off query parameters or hashes from the post logout redirect uri as AAD does not allow those.
      this.config.postLogoutRedirectUri = window.location.href.split("?")[0].split("#")[0];
    }

    if (!this.config.anonymousEndpoints) {
      this.config.anonymousEndpoints = [];
    }

    if (this.config.isAngular) {
      this.isAngular = this.config.isAngular;
    }

    if (this.config.loadFrameTimeout) {
      this.CONSTANTS.LOADFRAME_TIMEOUT = this.config.loadFrameTimeout;
    }
  };

  if (typeof window !== 'undefined') {
    window.Logging = {
      piiLoggingEnabled: false,
      level: 0,
      log: function log(message) {}
    };
  }
  /**
   * Initiates the login process by redirecting the user to Azure AD authorization endpoint.
   */


  _AuthenticationContext.prototype.login = function () {
    if (this._loginInProgress) {
      this.info("Login in progress");
      return;
    }

    this._loginInProgress = true; // Token is not present and user needs to login

    var expectedState = this._guid();

    this.config.state = expectedState;
    this._idTokenNonce = this._guid();

    var loginStartPage = this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);

    if (!loginStartPage || loginStartPage === "") {
      loginStartPage = window.location.href;
    } else {
      this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, "");
    }

    this.verbose('Expected state: ' + expectedState + ' startPage:' + loginStartPage);

    this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, loginStartPage);

    this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');

    this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, expectedState, true);

    this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);

    this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');

    this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');

    var urlNavigate = this._getNavigateUrl('id_token', null) + '&nonce=' + encodeURIComponent(this._idTokenNonce);

    if (this.config.displayCall) {
      // User defined way of handling the navigation
      this.config.displayCall(urlNavigate);
    } else if (this.popUp) {
      this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, ''); // so requestInfo does not match redirect case


      this._renewStates.push(expectedState);

      this.registerCallback(expectedState, this.config.clientId, this.callback);

      this._loginPopup(urlNavigate);
    } else {
      this.promptUser(urlNavigate);
    }
  };
  /**
   * Configures popup window for login.
   * @ignore
   */


  _AuthenticationContext.prototype._openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {
    try {
      /**
      * adding winLeft and winTop to account for dual monitor
      * using screenLeft and screenTop for IE8 and earlier
      */
      var winLeft = window.screenLeft ? window.screenLeft : window.screenX;
      var winTop = window.screenTop ? window.screenTop : window.screenY;
      /**
      * window.innerWidth displays browser window's height and width excluding toolbars
      * using document.documentElement.clientWidth for IE8 and earlier
      */

      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
      var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
      var left = width / 2 - popUpWidth / 2 + winLeft;
      var top = height / 2 - popUpHeight / 2 + winTop;
      var popupWindow = window.open(urlNavigate, title, 'width=' + popUpWidth + ', height=' + popUpHeight + ', top=' + top + ', left=' + left);

      if (popupWindow.focus) {
        popupWindow.focus();
      }

      return popupWindow;
    } catch (e) {
      this.warn('Error opening popup, ' + e.message);
      this._loginInProgress = false;
      this._acquireTokenInProgress = false;
      return null;
    }
  };

  _AuthenticationContext.prototype._handlePopupError = function (loginCallback, resource, error, errorDesc, loginError) {
    this.warn(errorDesc);

    this._saveItem(this.CONSTANTS.STORAGE.ERROR, error);

    this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, errorDesc);

    this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, loginError);

    if (resource && this._activeRenewals[resource]) {
      this._activeRenewals[resource] = null;
    }

    this._loginInProgress = false;
    this._acquireTokenInProgress = false;

    if (loginCallback) {
      loginCallback(errorDesc, null, error);
    }
  };
  /**
   * After authorization, the user will be sent to your specified redirect_uri with the user's bearer token
   * attached to the URI fragment as an id_token field. It closes popup window after redirection.
   * @ignore
   */


  _AuthenticationContext.prototype._loginPopup = function (urlNavigate, resource, callback) {
    var popupWindow = this._openPopup(urlNavigate, "login", this.CONSTANTS.POPUP_WIDTH, this.CONSTANTS.POPUP_HEIGHT);

    var loginCallback = callback || this.callback;

    if (popupWindow == null) {
      var error = 'Error opening popup';
      var errorDesc = 'Popup Window is null. This can happen if you are using IE';

      this._handlePopupError(loginCallback, resource, error, errorDesc, errorDesc);

      return;
    }

    this._openedWindows.push(popupWindow);

    if (this.config.redirectUri.indexOf('#') != -1) {
      var registeredRedirectUri = this.config.redirectUri.split("#")[0];
    } else {
      var registeredRedirectUri = this.config.redirectUri;
    }

    var that = this;
    var pollTimer = window.setInterval(function () {
      if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {
        var error = 'Popup Window closed';
        var errorDesc = 'Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge';

        if (that.isAngular) {
          that._broadcast('adal:popUpClosed', errorDesc + that.CONSTANTS.RESOURCE_DELIMETER + error);
        }

        that._handlePopupError(loginCallback, resource, error, errorDesc, errorDesc);

        window.clearInterval(pollTimer);
        return;
      }

      try {
        var popUpWindowLocation = popupWindow.location;

        if (encodeURI(popUpWindowLocation.href).indexOf(encodeURI(registeredRedirectUri)) != -1) {
          if (that.isAngular) {
            that._broadcast('adal:popUpHashChanged', popUpWindowLocation.hash);
          } else {
            that.handleWindowCallback(popUpWindowLocation.hash);
          }

          window.clearInterval(pollTimer);
          that._loginInProgress = false;
          that._acquireTokenInProgress = false;
          that.info("Closing popup window");
          that._openedWindows = [];
          popupWindow.close();
          return;
        }
      } catch (e) {}
    }, 1);
  };

  _AuthenticationContext.prototype._broadcast = function (eventName, data) {
    // Custom Event is not supported in IE, below IIFE will polyfill the CustomEvent() constructor functionality in Internet Explorer 9 and higher
    (function () {
      if (typeof window.CustomEvent === "function") {
        return false;
      }

      function CustomEvent(event, params) {
        params = params || {
          bubbles: false,
          cancelable: false,
          detail: undefined
        };
        var evt = document.createEvent('CustomEvent');
        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
        return evt;
      }

      CustomEvent.prototype = window.Event.prototype;
      window.CustomEvent = CustomEvent;
    })();

    var evt = new CustomEvent(eventName, {
      detail: data
    });
    window.dispatchEvent(evt);
  };

  _AuthenticationContext.prototype.loginInProgress = function () {
    return this._loginInProgress;
  };
  /**
   * Checks for the resource in the cache. By default, cache location is Session Storage
   * @ignore
   * @returns {Boolean} 'true' if login is in progress, else returns 'false'.
   */


  _AuthenticationContext.prototype._hasResource = function (key) {
    var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);

    return keys && !this._isEmpty(keys) && keys.indexOf(key + this.CONSTANTS.RESOURCE_DELIMETER) > -1;
  };
  /**
   * Gets token for the specified resource from the cache.
   * @param {string}   resource A URI that identifies the resource for which the token is requested.
   * @returns {string} token if if it exists and not expired, otherwise null.
   */


  _AuthenticationContext.prototype.getCachedToken = function (resource) {
    if (!this._hasResource(resource)) {
      return null;
    }

    var token = this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource);

    var expiry = this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource); // If expiration is within offset, it will force renew


    var offset = this.config.expireOffsetSeconds || 300;

    if (expiry && expiry > this._now() + offset) {
      return token;
    } else {
      this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');

      this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);

      return null;
    }
  };
  /**
  * User information from idtoken.
  *  @class User
  *  @property {string} userName - username assigned from upn or email.
  *  @property {object} profile - properties parsed from idtoken.
  */

  /**
   * If user object exists, returns it. Else creates a new user object by decoding id_token from the cache.
   * @returns {User} user object
   */


  _AuthenticationContext.prototype.getCachedUser = function () {
    if (this._user) {
      return this._user;
    }

    var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);

    this._user = this._createUser(idtoken);
    return this._user;
  };
  /**
   * Adds the passed callback to the array of callbacks for the specified resource and puts the array on the window object. 
   * @param {string}   resource A URI that identifies the resource for which the token is requested.
   * @param {string}   expectedState A unique identifier (guid).
   * @param {tokenCallback} callback - The callback provided by the caller. It will be called with token or error.
   */


  _AuthenticationContext.prototype.registerCallback = function (expectedState, resource, callback) {
    this._activeRenewals[resource] = expectedState;

    if (!this._callBacksMappedToRenewStates[expectedState]) {
      this._callBacksMappedToRenewStates[expectedState] = [];
    }

    var self = this;

    this._callBacksMappedToRenewStates[expectedState].push(callback);

    if (!this._callBackMappedToRenewStates[expectedState]) {
      this._callBackMappedToRenewStates[expectedState] = function (errorDesc, token, error, tokenType) {
        self._activeRenewals[resource] = null;

        for (var i = 0; i < self._callBacksMappedToRenewStates[expectedState].length; ++i) {
          try {
            self._callBacksMappedToRenewStates[expectedState][i](errorDesc, token, error, tokenType);
          } catch (error) {
            self.warn(error);
          }
        }

        self._callBacksMappedToRenewStates[expectedState] = null;
        self._callBackMappedToRenewStates[expectedState] = null;
      };
    }
  }; // var errorResponse = {error:'', error_description:''};
  // var token = 'string token';
  // callback(errorResponse, token)
  // with callback

  /**
   * Acquires access token with hidden iframe
   * @ignore
   */


  _AuthenticationContext.prototype._renewToken = function (resource, callback, responseType) {
    // use iframe to try to renew token
    // use given resource to create new authz url
    this.info('renewToken is called for resource:' + resource);

    var frameHandle = this._addAdalFrame('adalRenewFrame' + resource);

    var expectedState = this._guid() + '|' + resource;
    this.config.state = expectedState; // renew happens in iframe, so it keeps javascript context

    this._renewStates.push(expectedState);

    this.verbose('Renew token Expected state: ' + expectedState); // remove the existing prompt=... query parameter and add prompt=none

    responseType = responseType || 'token';

    var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl(responseType, resource), 'prompt');

    if (responseType === this.RESPONSE_TYPE.ID_TOKEN_TOKEN) {
      this._idTokenNonce = this._guid();

      this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);

      urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);
    }

    urlNavigate = urlNavigate + '&prompt=none';
    urlNavigate = this._addHintParameters(urlNavigate);
    this.registerCallback(expectedState, resource, callback);
    this.verbosePii('Navigate to:' + urlNavigate);
    frameHandle.src = 'about:blank';

    this._loadFrameTimeout(urlNavigate, 'adalRenewFrame' + resource, resource);
  };
  /**
   * Renews idtoken for app's own backend when resource is clientId and calls the callback with token/error
   * @ignore
   */


  _AuthenticationContext.prototype._renewIdToken = function (callback, responseType) {
    // use iframe to try to renew token
    this.info('renewIdToken is called');

    var frameHandle = this._addAdalFrame('adalIdTokenFrame');

    var expectedState = this._guid() + '|' + this.config.clientId;
    this._idTokenNonce = this._guid();

    this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, this._idTokenNonce, true);

    this.config.state = expectedState; // renew happens in iframe, so it keeps javascript context

    this._renewStates.push(expectedState);

    this.verbose('Renew Idtoken Expected state: ' + expectedState); // remove the existing prompt=... query parameter and add prompt=none

    var resource = responseType === null || typeof responseType === "undefined" ? null : this.config.clientId;
    var responseType = responseType || 'id_token';

    var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl(responseType, resource), 'prompt');

    urlNavigate = urlNavigate + '&prompt=none';
    urlNavigate = this._addHintParameters(urlNavigate);
    urlNavigate += '&nonce=' + encodeURIComponent(this._idTokenNonce);
    this.registerCallback(expectedState, this.config.clientId, callback);
    this.verbosePii('Navigate to:' + urlNavigate);
    frameHandle.src = 'about:blank';

    this._loadFrameTimeout(urlNavigate, 'adalIdTokenFrame', this.config.clientId);
  };
  /**
   * Checks if the authorization endpoint URL contains query string parameters
   * @ignore
   */


  _AuthenticationContext.prototype._urlContainsQueryStringParameter = function (name, url) {
    // regex to detect pattern of a ? or & followed by the name parameter and an equals character
    var regex = new RegExp("[\\?&]" + name + "=");
    return regex.test(url);
  };
  /**
   * Removes the query string parameter from the authorization endpoint URL if it exists
   * @ignore
   */


  _AuthenticationContext.prototype._urlRemoveQueryStringParameter = function (url, name) {
    // we remove &name=value, name=value& and name=value
    // &name=value
    var regex = new RegExp('(\\&' + name + '=)[^\&]+');
    url = url.replace(regex, ''); // name=value&

    regex = new RegExp('(' + name + '=)[^\&]+&');
    url = url.replace(regex, ''); // name=value

    regex = new RegExp('(' + name + '=)[^\&]+');
    url = url.replace(regex, '');
    return url;
  }; // Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left
  // registered when network errors occur and subsequent token requests for same resource are registered to the pending request

  /**
   * @ignore
   */


  _AuthenticationContext.prototype._loadFrameTimeout = function (urlNavigation, frameName, resource) {
    //set iframe session to pending
    this.verbose('Set loading state to pending for: ' + resource);

    this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS);

    this._loadFrame(urlNavigation, frameName);

    var self = this;
    setTimeout(function () {
      if (self._getItem(self.CONSTANTS.STORAGE.RENEW_STATUS + resource) === self.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS) {
        // fail the iframe session if it's in pending state
        self.verbose('Loading frame has timed out after: ' + self.CONSTANTS.LOADFRAME_TIMEOUT / 1000 + ' seconds for resource ' + resource);
        var expectedState = self._activeRenewals[resource];

        if (expectedState && self._callBackMappedToRenewStates[expectedState]) {
          self._callBackMappedToRenewStates[expectedState]('Token renewal operation failed due to timeout', null, 'Token Renewal Failed');
        }

        self._saveItem(self.CONSTANTS.STORAGE.RENEW_STATUS + resource, self.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED);
      }
    }, self.CONSTANTS.LOADFRAME_TIMEOUT);
  };
  /**
   * Loads iframe with authorization endpoint URL
   * @ignore
   */


  _AuthenticationContext.prototype._loadFrame = function (urlNavigate, frameName) {
    // This trick overcomes iframe navigation in IE
    // IE does not load the page consistently in iframe
    var self = this;
    self.info('LoadFrame: ' + frameName);
    var frameCheck = frameName;
    setTimeout(function () {
      var frameHandle = self._addAdalFrame(frameCheck);

      if (frameHandle.src === '' || frameHandle.src === 'about:blank') {
        frameHandle.src = urlNavigate;

        self._loadFrame(urlNavigate, frameCheck);
      }
    }, 500);
  };
  /**
   * @callback tokenCallback
   * @param {string} error_description error description returned from AAD if token request fails.
   * @param {string} token token returned from AAD if token request is successful.
   * @param {string} error error message returned from AAD if token request fails.
   */

  /**
   * Acquires token from the cache if it is not expired. Otherwise sends request to AAD to obtain a new token.
   * @param {string}   resource  ResourceUri identifying the target resource
   * @param {tokenCallback} callback -  The callback provided by the caller. It will be called with token or error.
   */


  _AuthenticationContext.prototype.acquireToken = function (resource, callback) {
    if (this._isEmpty(resource)) {
      this.warn('resource is required');
      callback('resource is required', null, 'resource is required');
      return;
    }

    var token = this.getCachedToken(resource);

    if (token) {
      this.info('Token is already in cache for resource:' + resource);
      callback(null, token, null);
      return;
    }

    if (!this._user && !(this.config.extraQueryParameter && this.config.extraQueryParameter.indexOf('login_hint') !== -1)) {
      this.warn('User login is required');
      callback('User login is required', null, 'login required');
      return;
    } // renew attempt with iframe
    // Already renewing for this resource, callback when we get the token.


    if (this._activeRenewals[resource]) {
      // Active renewals contains the state for each renewal.
      this.registerCallback(this._activeRenewals[resource], resource, callback);
    } else {
      this._requestType = this.REQUEST_TYPE.RENEW_TOKEN;

      if (resource === this.config.clientId) {
        // App uses idtoken to send to api endpoints
        // Default resource is tracked as clientid to store this token
        if (this._user) {
          this.verbose('renewing idtoken');

          this._renewIdToken(callback);
        } else {
          this.verbose('renewing idtoken and access_token');

          this._renewIdToken(callback, this.RESPONSE_TYPE.ID_TOKEN_TOKEN);
        }
      } else {
        if (this._user) {
          this.verbose('renewing access_token');

          this._renewToken(resource, callback);
        } else {
          this.verbose('renewing idtoken and access_token');

          this._renewToken(resource, callback, this.RESPONSE_TYPE.ID_TOKEN_TOKEN);
        }
      }
    }
  };
  /**
  * Acquires token (interactive flow using a popUp window) by sending request to AAD to obtain a new token.
  * @param {string}   resource  ResourceUri identifying the target resource
  * @param {string}   extraQueryParameters  extraQueryParameters to add to the authentication request
  * @param {tokenCallback} callback -  The callback provided by the caller. It will be called with token or error.
  */


  _AuthenticationContext.prototype.acquireTokenPopup = function (resource, extraQueryParameters, claims, callback) {
    if (this._isEmpty(resource)) {
      this.warn('resource is required');
      callback('resource is required', null, 'resource is required');
      return;
    }

    if (!this._user) {
      this.warn('User login is required');
      callback('User login is required', null, 'login required');
      return;
    }

    if (this._acquireTokenInProgress) {
      this.warn("Acquire token interactive is already in progress");
      callback("Acquire token interactive is already in progress", null, "Acquire token interactive is already in progress");
      return;
    }

    var expectedState = this._guid() + '|' + resource;
    this.config.state = expectedState;

    this._renewStates.push(expectedState);

    this._requestType = this.REQUEST_TYPE.RENEW_TOKEN;
    this.verbose('Renew token Expected state: ' + expectedState); // remove the existing prompt=... query parameter and add prompt=select_account

    var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl('token', resource), 'prompt');

    urlNavigate = urlNavigate + '&prompt=select_account';

    if (extraQueryParameters) {
      urlNavigate += extraQueryParameters;
    }

    if (claims && urlNavigate.indexOf("&claims") === -1) {
      urlNavigate += '&claims=' + encodeURIComponent(claims);
    } else if (claims && urlNavigate.indexOf("&claims") !== -1) {
      throw new Error('Claims cannot be passed as an extraQueryParameter');
    }

    urlNavigate = this._addHintParameters(urlNavigate);
    this._acquireTokenInProgress = true;
    this.info('acquireToken interactive is called for the resource ' + resource);
    this.registerCallback(expectedState, resource, callback);

    this._loginPopup(urlNavigate, resource, callback);
  };
  /**
    * Acquires token (interactive flow using a redirect) by sending request to AAD to obtain a new token. In this case the callback passed in the Authentication
    * request constructor will be called.
    * @param {string}   resource  ResourceUri identifying the target resource
    * @param {string}   extraQueryParameters  extraQueryParameters to add to the authentication request
    */


  _AuthenticationContext.prototype.acquireTokenRedirect = function (resource, extraQueryParameters, claims) {
    if (this._isEmpty(resource)) {
      this.warn('resource is required');
      callback('resource is required', null, 'resource is required');
      return;
    }

    var callback = this.callback;

    if (!this._user) {
      this.warn('User login is required');
      callback('User login is required', null, 'login required');
      return;
    }

    if (this._acquireTokenInProgress) {
      this.warn("Acquire token interactive is already in progress");
      callback("Acquire token interactive is already in progress", null, "Acquire token interactive is already in progress");
      return;
    }

    var expectedState = this._guid() + '|' + resource;
    this.config.state = expectedState;
    this.verbose('Renew token Expected state: ' + expectedState); // remove the existing prompt=... query parameter and add prompt=select_account

    var urlNavigate = this._urlRemoveQueryStringParameter(this._getNavigateUrl('token', resource), 'prompt');

    urlNavigate = urlNavigate + '&prompt=select_account';

    if (extraQueryParameters) {
      urlNavigate += extraQueryParameters;
    }

    if (claims && urlNavigate.indexOf("&claims") === -1) {
      urlNavigate += '&claims=' + encodeURIComponent(claims);
    } else if (claims && urlNavigate.indexOf("&claims") !== -1) {
      throw new Error('Claims cannot be passed as an extraQueryParameter');
    }

    urlNavigate = this._addHintParameters(urlNavigate);
    this._acquireTokenInProgress = true;
    this.info('acquireToken interactive is called for the resource ' + resource);

    this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, window.location.href);

    this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, expectedState, true);

    this.promptUser(urlNavigate);
  };
  /**
   * Redirects the browser to Azure AD authorization endpoint.
   * @param {string}   urlNavigate  Url of the authorization endpoint.
   */


  _AuthenticationContext.prototype.promptUser = function (urlNavigate) {
    if (urlNavigate) {
      this.infoPii('Navigate to:' + urlNavigate);
      window.location.replace(urlNavigate);
    } else {
      this.info('Navigate url is empty');
    }
  };
  /**
   * Clears cache items.
   */


  _AuthenticationContext.prototype.clearCache = function () {
    this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, '');

    this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, '');

    this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, '');

    this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN, '');

    this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');

    this._renewStates = [];

    this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN, '');

    this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, '');

    this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');

    this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');

    this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');

    this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, '');

    var keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);

    if (!this._isEmpty(keys)) {
      keys = keys.split(this.CONSTANTS.RESOURCE_DELIMETER);

      for (var i = 0; i < keys.length && keys[i] !== ""; i++) {
        this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + keys[i], '');

        this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + keys[i], 0);
      }
    }

    this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, '');
  };
  /**
   * Clears cache items for a given resource.
   * @param {string}  resource a URI that identifies the resource.
   */


  _AuthenticationContext.prototype.clearCacheForResource = function (resource) {
    this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW, '');

    this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');

    this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');

    if (this._hasResource(resource)) {
      this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, '');

      this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, 0);
    }
  };
  /**
   * Redirects user to logout endpoint.
   * After logout, it will redirect to postLogoutRedirectUri if added as a property on the config object.
   */


  _AuthenticationContext.prototype.logOut = function () {
    this.clearCache();
    this._user = null;
    var urlNavigate;

    if (this.config.logOutUri) {
      urlNavigate = this.config.logOutUri;
    } else {
      var tenant = 'common';
      var logout = '';

      if (this.config.tenant) {
        tenant = this.config.tenant;
      }

      if (this.config.postLogoutRedirectUri) {
        logout = 'post_logout_redirect_uri=' + encodeURIComponent(this.config.postLogoutRedirectUri);
      }

      urlNavigate = this.instance + tenant + '/oauth2/logout?' + logout;
    }

    this.infoPii('Logout navigate to: ' + urlNavigate);
    this.promptUser(urlNavigate);
  };

  _AuthenticationContext.prototype._isEmpty = function (str) {
    return typeof str === 'undefined' || !str || 0 === str.length;
  };
  /**
   * @callback userCallback
   * @param {string} error error message if user info is not available.
   * @param {User} user user object retrieved from the cache.
   */

  /**
   * Calls the passed in callback with the user object or error message related to the user.
   * @param {userCallback} callback - The callback provided by the caller. It will be called with user or error.
   */


  _AuthenticationContext.prototype.getUser = function (callback) {
    // IDToken is first call
    if (typeof callback !== 'function') {
      throw new Error('callback is not a function');
    } // user in memory


    if (this._user) {
      callback(null, this._user);
      return;
    } // frame is used to get idtoken


    var idtoken = this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);

    if (!this._isEmpty(idtoken)) {
      this.info('User exists in cache: ');
      this._user = this._createUser(idtoken);
      callback(null, this._user);
    } else {
      this.warn('User information is not available');
      callback('User information is not available', null);
    }
  };
  /**
   * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time.
   * domain_hint can be one of users/organisations which when added skips the email based discovery process of the user.
   * @ignore
   */


  _AuthenticationContext.prototype._addHintParameters = function (urlNavigate) {
    //If you don�t use prompt=none, then if the session does not exist, there will be a failure.
    //If sid is sent alongside domain or login hints, there will be a failure since request is ambiguous.
    //If sid is sent with a prompt value other than none or attempt_none, there will be a failure since the request is ambiguous.
    if (this._user && this._user.profile) {
      if (this._user.profile.sid && urlNavigate.indexOf('&prompt=none') !== -1) {
        // don't add sid twice if user provided it in the extraQueryParameter value
        if (!this._urlContainsQueryStringParameter("sid", urlNavigate)) {
          // add sid
          urlNavigate += '&sid=' + encodeURIComponent(this._user.profile.sid);
        }
      } else if (this._user.profile.upn) {
        // don't add login_hint twice if user provided it in the extraQueryParameter value
        if (!this._urlContainsQueryStringParameter("login_hint", urlNavigate)) {
          // add login_hint
          urlNavigate += '&login_hint=' + encodeURIComponent(this._user.profile.upn);
        } // don't add domain_hint twice if user provided it in the extraQueryParameter value


        if (!this._urlContainsQueryStringParameter("domain_hint", urlNavigate) && this._user.profile.upn.indexOf('@') > -1) {
          var parts = this._user.profile.upn.split('@'); // local part can include @ in quotes. Sending last part handles that.


          urlNavigate += '&domain_hint=' + encodeURIComponent(parts[parts.length - 1]);
        }
      }
    }

    return urlNavigate;
  };
  /**
   * Creates a user object by decoding the id_token
   * @ignore
   */


  _AuthenticationContext.prototype._createUser = function (idToken) {
    var user = null;

    var parsedJson = this._extractIdToken(idToken);

    if (parsedJson && parsedJson.hasOwnProperty('aud')) {
      if (parsedJson.aud.toLowerCase() === this.config.clientId.toLowerCase()) {
        user = {
          userName: '',
          profile: parsedJson
        };

        if (parsedJson.hasOwnProperty('upn')) {
          user.userName = parsedJson.upn;
        } else if (parsedJson.hasOwnProperty('email')) {
          user.userName = parsedJson.email;
        }
      } else {
        this.warn('IdToken has invalid aud field');
      }
    }

    return user;
  };
  /**
   * Returns the anchor part(#) of the URL
   * @ignore
   */


  _AuthenticationContext.prototype._getHash = function (hash) {
    if (hash.indexOf('#/') > -1) {
      hash = hash.substring(hash.indexOf('#/') + 2);
    } else if (hash.indexOf('#') > -1) {
      hash = hash.substring(1);
    }

    return hash;
  };
  /**
   * Checks if the URL fragment contains access token, id token or error_description.
   * @param {string} hash  -  Hash passed from redirect page
   * @returns {Boolean} true if response contains id_token, access_token or error, false otherwise.
   */


  _AuthenticationContext.prototype.isCallback = function (hash) {
    hash = this._getHash(hash);

    var parameters = this._deserialize(hash);

    return parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) || parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) || parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN);
  };
  /**
   * Gets login error
   * @returns {string} error message related to login.
   */


  _AuthenticationContext.prototype.getLoginError = function () {
    return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR);
  };
  /**
   * Request info object created from the response received from AAD.
   *  @class RequestInfo
   *  @property {object} parameters - object comprising of fields such as id_token/error, session_state, state, e.t.c.
   *  @property {REQUEST_TYPE} requestType - either LOGIN, RENEW_TOKEN or UNKNOWN.
   *  @property {boolean} stateMatch - true if state is valid, false otherwise.
   *  @property {string} stateResponse - unique guid used to match the response with the request.
   *  @property {boolean} valid - true if requestType contains id_token, access_token or error, false otherwise.
   */

  /**
   * Creates a requestInfo object from the URL fragment and returns it.
   * @returns {RequestInfo} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.
   */


  _AuthenticationContext.prototype.getRequestInfo = function (hash) {
    hash = this._getHash(hash);

    var parameters = this._deserialize(hash);

    var requestInfo = {
      valid: false,
      parameters: {},
      stateMatch: false,
      stateResponse: '',
      requestType: this.REQUEST_TYPE.UNKNOWN
    };

    if (parameters) {
      requestInfo.parameters = parameters;

      if (parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION) || parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN) || parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {
        requestInfo.valid = true; // which call

        var stateResponse = '';

        if (parameters.hasOwnProperty('state')) {
          this.verbose('State: ' + parameters.state);
          stateResponse = parameters.state;
        } else {
          this.warn('No state returned');
          return requestInfo;
        }

        requestInfo.stateResponse = stateResponse; // async calls can fire iframe and login request at the same time if developer does not use the API as expected
        // incoming callback needs to be looked up to find the request type

        if (this._matchState(requestInfo)) {
          // loginRedirect or acquireTokenRedirect
          return requestInfo;
        } // external api requests may have many renewtoken requests for different resource


        if (!requestInfo.stateMatch && window.parent) {
          requestInfo.requestType = this._requestType;
          var statesInParentContext = this._renewStates;

          for (var i = 0; i < statesInParentContext.length; i++) {
            if (statesInParentContext[i] === requestInfo.stateResponse) {
              requestInfo.stateMatch = true;
              break;
            }
          }
        }
      }
    }

    return requestInfo;
  };
  /**
  * Matches nonce from the request with the response.
  * @ignore
  */


  _AuthenticationContext.prototype._matchNonce = function (user) {
    var requestNonce = this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);

    if (requestNonce) {
      requestNonce = requestNonce.split(this.CONSTANTS.CACHE_DELIMETER);

      for (var i = 0; i < requestNonce.length; i++) {
        if (requestNonce[i] && requestNonce[i] === user.profile.nonce) {
          return true;
        }
      }
    }

    return false;
  };
  /**
  * Matches state from the request with the response.
  * @ignore
  */


  _AuthenticationContext.prototype._matchState = function (requestInfo) {
    var loginStates = this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);

    if (loginStates) {
      loginStates = loginStates.split(this.CONSTANTS.CACHE_DELIMETER);

      for (var i = 0; i < loginStates.length; i++) {
        if (loginStates[i] && loginStates[i] === requestInfo.stateResponse) {
          requestInfo.requestType = this.REQUEST_TYPE.LOGIN;
          requestInfo.stateMatch = true;
          return true;
        }
      }
    }

    var acquireTokenStates = this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);

    if (acquireTokenStates) {
      acquireTokenStates = acquireTokenStates.split(this.CONSTANTS.CACHE_DELIMETER);

      for (var i = 0; i < acquireTokenStates.length; i++) {
        if (acquireTokenStates[i] && acquireTokenStates[i] === requestInfo.stateResponse) {
          requestInfo.requestType = this.REQUEST_TYPE.RENEW_TOKEN;
          requestInfo.stateMatch = true;
          return true;
        }
      }
    }

    return false;
  };
  /**
   * Extracts resource value from state.
   * @ignore
   */


  _AuthenticationContext.prototype._getResourceFromState = function (state) {
    if (state) {
      var splitIndex = state.indexOf('|');

      if (splitIndex > -1 && splitIndex + 1 < state.length) {
        return state.substring(splitIndex + 1);
      }
    }

    return '';
  };
  /**
   * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the user object.
   */


  _AuthenticationContext.prototype.saveTokenFromHash = function (requestInfo) {
    this.info('State status:' + requestInfo.stateMatch + '; Request type:' + requestInfo.requestType);

    this._saveItem(this.CONSTANTS.STORAGE.ERROR, '');

    this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, '');

    var resource = this._getResourceFromState(requestInfo.stateResponse); // Record error


    if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)) {
      this.infoPii('Error :' + requestInfo.parameters.error + '; Error description:' + requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);

      this._saveItem(this.CONSTANTS.STORAGE.ERROR, requestInfo.parameters.error);

      this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, requestInfo.parameters[this.CONSTANTS.ERROR_DESCRIPTION]);

      if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {
        this._loginInProgress = false;

        this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, requestInfo.parameters.error_description);
      }
    } else {
      // It must verify the state from redirect
      if (requestInfo.stateMatch) {
        // record tokens to storage if exists
        this.info('State is right');

        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)) {
          this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, requestInfo.parameters[this.CONSTANTS.SESSION_STATE]);
        }

        var keys;

        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)) {
          this.info('Fragment has access token');

          if (!this._hasResource(resource)) {
            keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';

            this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);
          } // save token with related resource


          this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ACCESS_TOKEN]);

          this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._expiresIn(requestInfo.parameters[this.CONSTANTS.EXPIRES_IN]));
        }

        if (requestInfo.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)) {
          this.info('Fragment has id token');
          this._loginInProgress = false;
          this._user = this._createUser(requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);

          if (this._user && this._user.profile) {
            if (!this._matchNonce(this._user)) {
              this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR, 'Nonce received: ' + this._user.profile.nonce + ' is not same as requested: ' + this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN));

              this._user = null;
            } else {
              this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]); // Save idtoken as access token for app itself


              resource = this.config.loginResource ? this.config.loginResource : this.config.clientId;

              if (!this._hasResource(resource)) {
                keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';

                this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);
              }

              this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);

              this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._user.profile.exp);
            }
          } else {
            requestInfo.parameters['error'] = 'invalid id_token';
            requestInfo.parameters['error_description'] = 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN];

            this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'invalid id_token');

            this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid id_token. id_token: ' + requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);
          }
        }
      } else {
        requestInfo.parameters['error'] = 'Invalid_state';
        requestInfo.parameters['error_description'] = 'Invalid_state. state: ' + requestInfo.stateResponse;

        this._saveItem(this.CONSTANTS.STORAGE.ERROR, 'Invalid_state');

        this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION, 'Invalid_state. state: ' + requestInfo.stateResponse);
      }
    }

    this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS + resource, this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED);
  };
  /**
   * Gets resource for given endpoint if mapping is provided with config.
   * @param {string} endpoint  -  The URI for which the resource Id is requested.
   * @returns {string} resource for this API endpoint.
   */


  _AuthenticationContext.prototype.getResourceForEndpoint = function (endpoint) {
    // if user specified list of anonymous endpoints, no need to send token to these endpoints, return null.
    if (this.config && this.config.anonymousEndpoints) {
      for (var i = 0; i < this.config.anonymousEndpoints.length; i++) {
        if (endpoint.indexOf(this.config.anonymousEndpoints[i]) > -1) {
          return null;
        }
      }
    }

    if (this.config && this.config.endpoints) {
      for (var configEndpoint in this.config.endpoints) {
        // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1
        if (endpoint.indexOf(configEndpoint) > -1) {
          return this.config.endpoints[configEndpoint];
        }
      }
    } // default resource will be clientid if nothing specified
    // App will use idtoken for calls to itself
    // check if it's staring from http or https, needs to match with app host


    if (endpoint.indexOf('http://') > -1 || endpoint.indexOf('https://') > -1) {
      if (this._getHostFromUri(endpoint) === this._getHostFromUri(this.config.redirectUri)) {
        return this.config.loginResource;
      }
    } else {
      // in angular level, the url for $http interceptor call could be relative url,
      // if it's relative call, we'll treat it as app backend call.            
      return this.config.loginResource;
    } // if not the app's own backend or not a domain listed in the endpoints structure


    return null;
  };
  /**
   * Strips the protocol part of the URL and returns it.
   * @ignore
   */


  _AuthenticationContext.prototype._getHostFromUri = function (uri) {
    // remove http:// or https:// from uri
    var extractedUri = String(uri).replace(/^(https?:)\/\//, '');
    extractedUri = extractedUri.split('/')[0];
    return extractedUri;
  };
  /**
   * This method must be called for processing the response received from AAD. It extracts the hash, processes the token or error, saves it in the cache and calls the registered callbacks with the result.
   * @param {string} [hash=window.location.hash] - Hash fragment of Url.
   */


  _AuthenticationContext.prototype.handleWindowCallback = function (hash) {
    // This is for regular javascript usage for redirect handling
    // need to make sure this is for callback
    if (hash == null) {
      hash = window.location.hash;
    }

    if (this.isCallback(hash)) {
      var self = null;
      var isPopup = false;

      if (this._openedWindows.length > 0 && this._openedWindows[this._openedWindows.length - 1].opener && this._openedWindows[this._openedWindows.length - 1].opener._adalInstance) {
        self = this._openedWindows[this._openedWindows.length - 1].opener._adalInstance;
        isPopup = true;
      } else if (window.parent && window.parent._adalInstance) {
        self = window.parent._adalInstance;
      }

      var requestInfo = self.getRequestInfo(hash);
      var token,
          tokenReceivedCallback,
          tokenType = null;

      if (isPopup || window.parent !== window) {
        tokenReceivedCallback = self._callBackMappedToRenewStates[requestInfo.stateResponse];
      } else {
        tokenReceivedCallback = self.callback;
      }

      self.info("Returned from redirect url");
      self.saveTokenFromHash(requestInfo);

      if (requestInfo.requestType === this.REQUEST_TYPE.RENEW_TOKEN && window.parent) {
        if (window.parent !== window) {
          self.verbose("Window is in iframe, acquiring token silently");
        } else {
          self.verbose("acquiring token interactive in progress");
        }

        token = requestInfo.parameters[self.CONSTANTS.ACCESS_TOKEN] || requestInfo.parameters[self.CONSTANTS.ID_TOKEN];
        tokenType = self.CONSTANTS.ACCESS_TOKEN;
      } else if (requestInfo.requestType === this.REQUEST_TYPE.LOGIN) {
        token = requestInfo.parameters[self.CONSTANTS.ID_TOKEN];
        tokenType = self.CONSTANTS.ID_TOKEN;
      }

      var errorDesc = requestInfo.parameters[self.CONSTANTS.ERROR_DESCRIPTION];
      var error = requestInfo.parameters[self.CONSTANTS.ERROR];

      try {
        if (tokenReceivedCallback) {
          tokenReceivedCallback(errorDesc, token, error, tokenType);
        }
      } catch (err) {
        self.error("Error occurred in user defined callback function: " + err);
      }

      if (window.parent === window && !isPopup) {
        if (self.config.navigateToLoginRequestUrl) {
          window.location.href = self._getItem(self.CONSTANTS.STORAGE.LOGIN_REQUEST);
        } else window.location.hash = '';
      }
    }
  };
  /**
   * Constructs the authorization endpoint URL and returns it.
   * @ignore
   */


  _AuthenticationContext.prototype._getNavigateUrl = function (responseType, resource) {
    var tenant = 'common';

    if (this.config.tenant) {
      tenant = this.config.tenant;
    }

    var urlNavigate = this.instance + tenant + '/oauth2/authorize' + this._serialize(responseType, this.config, resource) + this._addLibMetadata();

    this.info('Navigate url:' + urlNavigate);
    return urlNavigate;
  };
  /**
   * Returns the decoded id_token.
   * @ignore
   */


  _AuthenticationContext.prototype._extractIdToken = function (encodedIdToken) {
    // id token will be decoded to get the username
    var decodedToken = this._decodeJwt(encodedIdToken);

    if (!decodedToken) {
      return null;
    }

    try {
      var base64IdToken = decodedToken.JWSPayload;

      var base64Decoded = this._base64DecodeStringUrlSafe(base64IdToken);

      if (!base64Decoded) {
        this.info('The returned id_token could not be base64 url safe decoded.');
        return null;
      } // ECMA script has JSON built-in support


      return JSON.parse(base64Decoded);
    } catch (err) {
      this.error('The returned id_token could not be decoded', err);
    }

    return null;
  };
  /**
   * Decodes a string of data which has been encoded using base-64 encoding.
   * @ignore
   */


  _AuthenticationContext.prototype._base64DecodeStringUrlSafe = function (base64IdToken) {
    // html5 should support atob function for decoding
    base64IdToken = base64IdToken.replace(/-/g, '+').replace(/_/g, '/');

    if (window.atob) {
      return decodeURIComponent(escape(window.atob(base64IdToken))); // jshint ignore:line
    } else {
      return decodeURIComponent(escape(this._decode(base64IdToken)));
    }
  }; //Take https://cdnjs.cloudflare.com/ajax/libs/Base64/0.3.0/base64.js and https://en.wikipedia.org/wiki/Base64 as reference. 


  _AuthenticationContext.prototype._decode = function (base64IdToken) {
    var codes = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
    base64IdToken = String(base64IdToken).replace(/=+$/, '');
    var length = base64IdToken.length;

    if (length % 4 === 1) {
      throw new Error('The token to be decoded is not correctly encoded.');
    }

    var h1,
        h2,
        h3,
        h4,
        bits,
        c1,
        c2,
        c3,
        decoded = '';

    for (var i = 0; i < length; i += 4) {
      //Every 4 base64 encoded character will be converted to 3 byte string, which is 24 bits
      // then 6 bits per base64 encoded character
      h1 = codes.indexOf(base64IdToken.charAt(i));
      h2 = codes.indexOf(base64IdToken.charAt(i + 1));
      h3 = codes.indexOf(base64IdToken.charAt(i + 2));
      h4 = codes.indexOf(base64IdToken.charAt(i + 3)); // For padding, if last two are '='

      if (i + 2 === length - 1) {
        bits = h1 << 18 | h2 << 12 | h3 << 6;
        c1 = bits >> 16 & 255;
        c2 = bits >> 8 & 255;
        decoded += String.fromCharCode(c1, c2);
        break;
      } // if last one is '='
      else if (i + 1 === length - 1) {
        bits = h1 << 18 | h2 << 12;
        c1 = bits >> 16 & 255;
        decoded += String.fromCharCode(c1);
        break;
      }

      bits = h1 << 18 | h2 << 12 | h3 << 6 | h4; // then convert to 3 byte chars

      c1 = bits >> 16 & 255;
      c2 = bits >> 8 & 255;
      c3 = bits & 255;
      decoded += String.fromCharCode(c1, c2, c3);
    }

    return decoded;
  };
  /**
   * Decodes an id token into an object with header, payload and signature fields.
   * @ignore
   */
  // Adal.node js crack function


  _AuthenticationContext.prototype._decodeJwt = function (jwtToken) {
    if (this._isEmpty(jwtToken)) {
      return null;
    }

    ;
    var idTokenPartsRegex = /^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/;
    var matches = idTokenPartsRegex.exec(jwtToken);

    if (!matches || matches.length < 4) {
      this.warn('The returned id_token is not parseable.');
      return null;
    }

    var crackedToken = {
      header: matches[1],
      JWSPayload: matches[2],
      JWSSig: matches[3]
    };
    return crackedToken;
  };
  /**
   * Converts string to represent binary data in ASCII string format by translating it into a radix-64 representation and returns it
   * @ignore
   */


  _AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString = function (str) {
    return str.replace('-', '+').replace('_', '/');
  };
  /**
   * Serializes the parameters for the authorization endpoint URL and returns the serialized uri string.
   * @ignore
   */


  _AuthenticationContext.prototype._serialize = function (responseType, obj, resource) {
    var str = [];

    if (obj !== null) {
      str.push('?response_type=' + responseType);
      str.push('client_id=' + encodeURIComponent(obj.clientId));

      if (resource) {
        str.push('resource=' + encodeURIComponent(resource));
      }

      str.push('redirect_uri=' + encodeURIComponent(obj.redirectUri));
      str.push('state=' + encodeURIComponent(obj.state));

      if (obj.hasOwnProperty('slice')) {
        str.push('slice=' + encodeURIComponent(obj.slice));
      }

      if (obj.hasOwnProperty('extraQueryParameter')) {
        str.push(obj.extraQueryParameter);
      }

      var correlationId = obj.correlationId ? obj.correlationId : this._guid();
      str.push('client-request-id=' + encodeURIComponent(correlationId));
    }

    return str.join('&');
  };
  /**
   * Parses the query string parameters into a key-value pair object.
   * @ignore
   */


  _AuthenticationContext.prototype._deserialize = function (query) {
    var match,
        pl = /\+/g,
        // Regex for replacing addition symbol with a space
    search = /([^&=]+)=([^&]*)/g,
        decode = function decode(s) {
      return decodeURIComponent(s.replace(pl, ' '));
    },
        obj = {};

    match = search.exec(query);

    while (match) {
      obj[decode(match[1])] = decode(match[2]);
      match = search.exec(query);
    }

    return obj;
  };
  /**
   * Converts decimal value to hex equivalent
   * @ignore
   */


  _AuthenticationContext.prototype._decimalToHex = function (number) {
    var hex = number.toString(16);

    while (hex.length < 2) {
      hex = '0' + hex;
    }

    return hex;
  };
  /**
   * Generates RFC4122 version 4 guid (128 bits)
   * @ignore
   */

  /* jshint ignore:start */


  _AuthenticationContext.prototype._guid = function () {
    // RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or
    // pseudo-random numbers.
    // The algorithm is as follows:
    //     Set the two most significant bits (bits 6 and 7) of the
    //        clock_seq_hi_and_reserved to zero and one, respectively.
    //     Set the four most significant bits (bits 12 through 15) of the
    //        time_hi_and_version field to the 4-bit version number from
    //        Section 4.1.3. Version4
    //     Set all the other bits to randomly (or pseudo-randomly) chosen
    //     values.
    // UUID                   = time-low "-" time-mid "-"time-high-and-version "-"clock-seq-reserved and low(2hexOctet)"-" node
    // time-low               = 4hexOctet
    // time-mid               = 2hexOctet
    // time-high-and-version  = 2hexOctet
    // clock-seq-and-reserved = hexOctet:
    // clock-seq-low          = hexOctet
    // node                   = 6hexOctet
    // Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx
    // y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10
    // y values are 8, 9, A, B
    var cryptoObj = window.crypto || window.msCrypto; // for IE 11

    if (cryptoObj && cryptoObj.getRandomValues) {
      var buffer = new Uint8Array(16);
      cryptoObj.getRandomValues(buffer); //buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).

      buffer[6] |= 0x40; //buffer[6] | 01000000 will set the 6 bit to 1.

      buffer[6] &= 0x4f; //buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = "4".
      //buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.

      buffer[8] |= 0x80; //buffer[8] | 10000000 will set the 7 bit to 1.

      buffer[8] &= 0xbf; //buffer[8] & 10111111 will set the 6 bit to 0.

      return this._decimalToHex(buffer[0]) + this._decimalToHex(buffer[1]) + this._decimalToHex(buffer[2]) + this._decimalToHex(buffer[3]) + '-' + this._decimalToHex(buffer[4]) + this._decimalToHex(buffer[5]) + '-' + this._decimalToHex(buffer[6]) + this._decimalToHex(buffer[7]) + '-' + this._decimalToHex(buffer[8]) + this._decimalToHex(buffer[9]) + '-' + this._decimalToHex(buffer[10]) + this._decimalToHex(buffer[11]) + this._decimalToHex(buffer[12]) + this._decimalToHex(buffer[13]) + this._decimalToHex(buffer[14]) + this._decimalToHex(buffer[15]);
    } else {
      var guidHolder = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';
      var hex = '0123456789abcdef';
      var r = 0;
      var guidResponse = "";

      for (var i = 0; i < 36; i++) {
        if (guidHolder[i] !== '-' && guidHolder[i] !== '4') {
          // each x and y needs to be random
          r = Math.random() * 16 | 0;
        }

        if (guidHolder[i] === 'x') {
          guidResponse += hex[r];
        } else if (guidHolder[i] === 'y') {
          // clock-seq-and-reserved first hex is filtered and remaining hex values are random
          r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??

          r |= 0x8; // set pos 3 to 1 as 1???

          guidResponse += hex[r];
        } else {
          guidResponse += guidHolder[i];
        }
      }

      return guidResponse;
    }
  };
  /* jshint ignore:end */

  /**
   * Calculates the expires in value in milliseconds for the acquired token
   * @ignore
   */


  _AuthenticationContext.prototype._expiresIn = function (expires) {
    // if AAD did not send "expires_in" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as "expires_in" value instead of 3600
    if (!expires) expires = 3599;
    return this._now() + parseInt(expires, 10);
  };
  /**
   * Return the number of milliseconds since 1970/01/01
   * @ignore
   */


  _AuthenticationContext.prototype._now = function () {
    return Math.round(new Date().getTime() / 1000.0);
  };
  /**
   * Adds the hidden iframe for silent token renewal
   * @ignore
   */


  _AuthenticationContext.prototype._addAdalFrame = function (iframeId) {
    if (typeof iframeId === 'undefined') {
      return;
    }

    this.info('Add adal frame to document:' + iframeId);
    var adalFrame = document.getElementById(iframeId);

    if (!adalFrame) {
      if (document.createElement && document.documentElement && (window.opera || window.navigator.userAgent.indexOf('MSIE 5.0') === -1)) {
        var ifr = document.createElement('iframe');
        ifr.setAttribute('id', iframeId);
        ifr.setAttribute('aria-hidden', 'true');
        ifr.style.visibility = 'hidden';
        ifr.style.position = 'absolute';
        ifr.style.width = ifr.style.height = ifr.borderWidth = '0px';
        adalFrame = document.getElementsByTagName('body')[0].appendChild(ifr);
      } else if (document.body && document.body.insertAdjacentHTML) {
        document.body.insertAdjacentHTML('beforeEnd', '<iframe name="' + iframeId + '" id="' + iframeId + '" style="display:none"></iframe>');
      }

      if (window.frames && window.frames[iframeId]) {
        adalFrame = window.frames[iframeId];
      }
    }

    return adalFrame;
  };
  /**
   * Saves the key-value pair in the cache
   * @ignore
   */


  _AuthenticationContext.prototype._saveItem = function (key, obj, preserve) {
    if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {
      if (!this._supportsLocalStorage()) {
        this.info('Local storage is not supported');
        return false;
      }

      if (preserve) {
        var value = this._getItem(key) || '';
        localStorage.setItem(key, value + obj + this.CONSTANTS.CACHE_DELIMETER);
      } else {
        localStorage.setItem(key, obj);
      }

      return true;
    } // Default as session storage


    if (!this._supportsSessionStorage()) {
      this.info('Session storage is not supported');
      return false;
    }

    sessionStorage.setItem(key, obj);
    return true;
  };
  /**
   * Searches the value for the given key in the cache
   * @ignore
   */


  _AuthenticationContext.prototype._getItem = function (key) {
    if (this.config && this.config.cacheLocation && this.config.cacheLocation === 'localStorage') {
      if (!this._supportsLocalStorage()) {
        this.info('Local storage is not supported');
        return null;
      }

      return localStorage.getItem(key);
    } // Default as session storage


    if (!this._supportsSessionStorage()) {
      this.info('Session storage is not supported');
      return null;
    }

    return sessionStorage.getItem(key);
  };
  /**
   * Returns true if browser supports localStorage, false otherwise.
   * @ignore
   */


  _AuthenticationContext.prototype._supportsLocalStorage = function () {
    try {
      if (!window.localStorage) return false; // Test availability

      window.localStorage.setItem('storageTest', 'A'); // Try write

      if (window.localStorage.getItem('storageTest') != 'A') return false; // Test read/write

      window.localStorage.removeItem('storageTest'); // Try delete

      if (window.localStorage.getItem('storageTest')) return false; // Test delete

      return true; // Success
    } catch (e) {
      return false;
    }
  };
  /**
   * Returns true if browser supports sessionStorage, false otherwise.
   * @ignore
   */


  _AuthenticationContext.prototype._supportsSessionStorage = function () {
    try {
      if (!window.sessionStorage) return false; // Test availability

      window.sessionStorage.setItem('storageTest', 'A'); // Try write

      if (window.sessionStorage.getItem('storageTest') != 'A') return false; // Test read/write

      window.sessionStorage.removeItem('storageTest'); // Try delete

      if (window.sessionStorage.getItem('storageTest')) return false; // Test delete

      return true; // Success
    } catch (e) {
      return false;
    }
  };
  /**
   * Returns a cloned copy of the passed object.
   * @ignore
   */


  _AuthenticationContext.prototype._cloneConfig = function (obj) {
    if (null === obj || 'object' !== typeof obj) {
      return obj;
    }

    var copy = {};

    for (var attr in obj) {
      if (obj.hasOwnProperty(attr)) {
        copy[attr] = obj[attr];
      }
    }

    return copy;
  };
  /**
   * Adds the library version and returns it.
   * @ignore
   */


  _AuthenticationContext.prototype._addLibMetadata = function () {
    // x-client-SKU
    // x-client-Ver
    return '&x-client-SKU=Js&x-client-Ver=' + this._libVersion();
  };
  /**
   * Checks the Logging Level, constructs the Log message and logs it. Users need to implement/override this method to turn on Logging. 
   * @param {number} level  -  Level can be set 0,1,2 and 3 which turns on 'error', 'warning', 'info' or 'verbose' level logging respectively.
   * @param {string} message  -  Message to log.
   * @param {string} error  -  Error to log.
   */


  _AuthenticationContext.prototype.log = function (level, message, error, containsPii) {
    if (level <= Logging.level) {
      if (!Logging.piiLoggingEnabled && containsPii) return;
      var timestamp = new Date().toUTCString();
      var formattedMessage = '';
      if (this.config.correlationId) formattedMessage = timestamp + ':' + this.config.correlationId + '-' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;else formattedMessage = timestamp + ':' + this._libVersion() + '-' + this.CONSTANTS.LEVEL_STRING_MAP[level] + ' ' + message;

      if (error) {
        formattedMessage += '\nstack:\n' + error.stack;
      }

      Logging.log(formattedMessage);
    }
  };
  /**
   * Logs messages when Logging Level is set to 0.
   * @param {string} message  -  Message to log.
   * @param {string} error  -  Error to log.
   */


  _AuthenticationContext.prototype.error = function (message, error) {
    this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, error);
  };
  /**
   * Logs messages when Logging Level is set to 1.
   * @param {string} message  -  Message to log.
   */


  _AuthenticationContext.prototype.warn = function (message) {
    this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null);
  };
  /**
   * Logs messages when Logging Level is set to 2.
   * @param {string} message  -  Message to log.
   */


  _AuthenticationContext.prototype.info = function (message) {
    this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null);
  };
  /**
   * Logs messages when Logging Level is set to 3.
   * @param {string} message  -  Message to log.
   */


  _AuthenticationContext.prototype.verbose = function (message) {
    this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null);
  };
  /**
  * Logs Pii messages when Logging Level is set to 0 and window.piiLoggingEnabled is set to true.
  * @param {string} message  -  Message to log.
  * @param {string} error  -  Error to log.
  */


  _AuthenticationContext.prototype.errorPii = function (message, error) {
    this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR, message, error, true);
  };
  /**
   * Logs  Pii messages when Logging Level is set to 1 and window.piiLoggingEnabled is set to true.
   * @param {string} message  -  Message to log.
   */


  _AuthenticationContext.prototype.warnPii = function (message) {
    this.log(this.CONSTANTS.LOGGING_LEVEL.WARN, message, null, true);
  };
  /**
   * Logs messages when Logging Level is set to 2 and window.piiLoggingEnabled is set to true.
   * @param {string} message  -  Message to log.
   */


  _AuthenticationContext.prototype.infoPii = function (message) {
    this.log(this.CONSTANTS.LOGGING_LEVEL.INFO, message, null, true);
  };
  /**
   * Logs messages when Logging Level is set to 3 and window.piiLoggingEnabled is set to true.
   * @param {string} message  -  Message to log.
   */


  _AuthenticationContext.prototype.verbosePii = function (message) {
    this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE, message, null, true);
  };
  /**
   * Returns the library version.
   * @ignore
   */


  _AuthenticationContext.prototype._libVersion = function () {
    return '1.0.18';
  };
  /**
   * Returns a reference of Authentication Context as a result of a require call.
   * @ignore
   */


  if ( true && module.exports) {
    module.exports = _AuthenticationContext;

    module.exports.inject = function (conf) {
      return new _AuthenticationContext(conf);
    };
  }

  return _AuthenticationContext;
}();

/***/ }),

/***/ "./node_modules/angular-oauth2-oidc/__ivy_ngcc__/fesm2015/angular-oauth2-oidc.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/angular-oauth2-oidc/__ivy_ngcc__/fesm2015/angular-oauth2-oidc.js ***!
  \***************************************************************************************/
/*! exports provided: AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DefaultOAuthInterceptor, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, UrlHelperService, ValidationHandler, ɵa, ɵb, ɵc, ɵd */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AUTH_CONFIG", function() { return AUTH_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbstractValidationHandler", function() { return AbstractValidationHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthConfig", function() { return AuthConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultOAuthInterceptor", function() { return DefaultOAuthInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JwksValidationHandler", function() { return JwksValidationHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginOptions", function() { return LoginOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MemoryStorage", function() { return MemoryStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NullValidationHandler", function() { return NullValidationHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthErrorEvent", function() { return OAuthErrorEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthEvent", function() { return OAuthEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthInfoEvent", function() { return OAuthInfoEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthLogger", function() { return OAuthLogger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthModule", function() { return OAuthModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthModuleConfig", function() { return OAuthModuleConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthNoopResourceServerErrorHandler", function() { return OAuthNoopResourceServerErrorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthResourceServerConfig", function() { return OAuthResourceServerConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthResourceServerErrorHandler", function() { return OAuthResourceServerErrorHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthService", function() { return OAuthService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthStorage", function() { return OAuthStorage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OAuthSuccessEvent", function() { return OAuthSuccessEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReceivedTokens", function() { return ReceivedTokens; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlHelperService", function() { return UrlHelperService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValidationHandler", function() { return ValidationHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵa", function() { return HashHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵb", function() { return DefaultHashHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵc", function() { return createDefaultLogger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵd", function() { return createDefaultStorage; });
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "./node_modules/@babel/runtime/helpers/esm/createSuper.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! tslib */ "./node_modules/ngx-mapbox-gl/node_modules/tslib/tslib.es6.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");







function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }







/**
 * Additional options that can be passed to tryLogin.
 */




var LoginOptions = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function LoginOptions() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, LoginOptions);

  /**
   * Normally, you want to clear your hash fragment after
   * the lib read the token(s) so that they are not displayed
   * anymore in the url. If not, set this to true. For code flow
   * this controls removing query string values.
   */
  this.preventClearHashAfterLogin = false;
});
/**
 * Defines the logging interface the OAuthService uses
 * internally. Is compatible with the `console` object,
 * but you can provide your own implementation as well
 * through dependency injection.
 */


var OAuthLogger = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function OAuthLogger() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthLogger);
});
/**
 * Defines a simple storage that can be used for
 * storing the tokens at client side.
 * Is compatible to localStorage and sessionStorage,
 * but you can also create your own implementations.
 */


var OAuthStorage = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function OAuthStorage() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthStorage);
});

var MemoryStorage = /*#__PURE__*/function () {
  function MemoryStorage() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MemoryStorage);

    this.data = new Map();
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(MemoryStorage, [{
    key: "getItem",
    value: function getItem(key) {
      return this.data.get(key);
    }
  }, {
    key: "removeItem",
    value: function removeItem(key) {
      this.data.delete(key);
    }
  }, {
    key: "setItem",
    value: function setItem(key, data) {
      this.data.set(key, data);
    }
  }]);

  return MemoryStorage;
}();

MemoryStorage.ɵfac = function MemoryStorage_Factory(t) {
  return new (t || MemoryStorage)();
};

MemoryStorage.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: MemoryStorage,
  factory: MemoryStorage.ɵfac
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MemoryStorage, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [];
  }, null);
})();
/**
 * Represents the received tokens, the received state
 * and the parsed claims from the id-token.
 */


var ReceivedTokens = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function ReceivedTokens() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ReceivedTokens);
}); // see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22


function b64DecodeUnicode(str) {
  var base64 = str.replace(/\-/g, '+').replace(/\_/g, '/');
  return decodeURIComponent(atob(base64).split('').map(function (c) {
    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(''));
}

function base64UrlEncode(str) {
  var base64 = btoa(str);
  return base64.replace(/\+/g, '-').replace(/\//g, '_').replace(/=/g, '');
}
/**
 * Interface for Handlers that are hooked in to
 * validate tokens.
 */


var ValidationHandler = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function ValidationHandler() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ValidationHandler);
});
/**
 * This abstract implementation of ValidationHandler already implements
 * the method validateAtHash. However, to make use of it,
 * you have to override the method calcHash.
 */


var AbstractValidationHandler = /*#__PURE__*/function () {
  function AbstractValidationHandler() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, AbstractValidationHandler);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(AbstractValidationHandler, [{
    key: "validateAtHash",
    value:
    /**
     * Validates the at_hash in an id_token against the received access_token.
     */
    function validateAtHash(params) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_9__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var hashAlg, tokenHash, leftMostHalf, atHash, claimsAtHash;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                hashAlg = this.inferHashAlgorithm(params.idTokenHeader);
                _context.next = 3;
                return this.calcHash(params.accessToken, hashAlg);

              case 3:
                tokenHash = _context.sent;
                // sha256(accessToken, { asString: true });
                leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);
                atHash = base64UrlEncode(leftMostHalf);
                claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');

                if (atHash !== claimsAtHash) {
                  console.error('exptected at_hash: ' + atHash);
                  console.error('actual at_hash: ' + claimsAtHash);
                }

                return _context.abrupt("return", atHash === claimsAtHash);

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Infers the name of the hash algorithm to use
     * from the alg field of an id_token.
     *
     * @param jwtHeader the id_token's parsed header
     */

  }, {
    key: "inferHashAlgorithm",
    value: function inferHashAlgorithm(jwtHeader) {
      var alg = jwtHeader['alg'];

      if (!alg.match(/^.S[0-9]{3}$/)) {
        throw new Error('Algorithm not supported: ' + alg);
      }

      return 'sha-' + alg.substr(2);
    }
  }]);

  return AbstractValidationHandler;
}();

var UrlHelperService = /*#__PURE__*/function () {
  function UrlHelperService() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, UrlHelperService);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(UrlHelperService, [{
    key: "getHashFragmentParams",
    value: function getHashFragmentParams(customHashFragment) {
      var hash = customHashFragment || window.location.hash;
      hash = decodeURIComponent(hash);

      if (hash.indexOf('#') !== 0) {
        return {};
      }

      var questionMarkPosition = hash.indexOf('?');

      if (questionMarkPosition > -1) {
        hash = hash.substr(questionMarkPosition + 1);
      } else {
        hash = hash.substr(1);
      }

      return this.parseQueryString(hash);
    }
  }, {
    key: "parseQueryString",
    value: function parseQueryString(queryString) {
      var data = {};
      var pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;

      if (queryString === null) {
        return data;
      }

      pairs = queryString.split('&');

      for (var i = 0; i < pairs.length; i++) {
        pair = pairs[i];
        separatorIndex = pair.indexOf('=');

        if (separatorIndex === -1) {
          escapedKey = pair;
          escapedValue = null;
        } else {
          escapedKey = pair.substr(0, separatorIndex);
          escapedValue = pair.substr(separatorIndex + 1);
        }

        key = decodeURIComponent(escapedKey);
        value = decodeURIComponent(escapedValue);

        if (key.substr(0, 1) === '/') {
          key = key.substr(1);
        }

        data[key] = value;
      }

      return data;
    }
  }]);

  return UrlHelperService;
}();

UrlHelperService.ɵfac = function UrlHelperService_Factory(t) {
  return new (t || UrlHelperService)();
};

UrlHelperService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: UrlHelperService,
  factory: UrlHelperService.ɵfac
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](UrlHelperService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], null, null);
})();

var OAuthEvent = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function OAuthEvent(type) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthEvent);

  this.type = type;
});

var OAuthSuccessEvent = /*#__PURE__*/function (_OAuthEvent) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(OAuthSuccessEvent, _OAuthEvent);

  var _super = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(OAuthSuccessEvent);

  function OAuthSuccessEvent(type) {
    var _this;

    var info = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthSuccessEvent);

    _this = _super.call(this, type);
    _this.info = info;
    return _this;
  }

  return Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(OAuthSuccessEvent);
}(OAuthEvent);

var OAuthInfoEvent = /*#__PURE__*/function (_OAuthEvent2) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(OAuthInfoEvent, _OAuthEvent2);

  var _super2 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(OAuthInfoEvent);

  function OAuthInfoEvent(type) {
    var _this2;

    var info = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthInfoEvent);

    _this2 = _super2.call(this, type);
    _this2.info = info;
    return _this2;
  }

  return Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(OAuthInfoEvent);
}(OAuthEvent);

var OAuthErrorEvent = /*#__PURE__*/function (_OAuthEvent3) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(OAuthErrorEvent, _OAuthEvent3);

  var _super3 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(OAuthErrorEvent);

  function OAuthErrorEvent(type, reason) {
    var _this3;

    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthErrorEvent);

    _this3 = _super3.call(this, type);
    _this3.reason = reason;
    _this3.params = params;
    return _this3;
  }

  return Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(OAuthErrorEvent);
}(OAuthEvent);

var AuthConfig = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function AuthConfig(json) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, AuthConfig);

  /**
   * The client's id as registered with the auth server
   */
  this.clientId = '';
  /**
   * The client's redirectUri as registered with the auth server
   */

  this.redirectUri = '';
  /**
   * An optional second redirectUri where the auth server
   * redirects the user to after logging out.
   */

  this.postLogoutRedirectUri = '';
  /**
   * The auth server's endpoint that allows to log
   * the user in when using implicit flow.
   */

  this.loginUrl = '';
  /**
   * The requested scopes
   */

  this.scope = 'openid profile';
  this.resource = '';
  this.rngUrl = '';
  /**
   * Defines whether to use OpenId Connect during
   * implicit flow.
   */

  this.oidc = true;
  /**
   * Defines whether to request an access token during
   * implicit flow.
   */

  this.requestAccessToken = true;
  this.options = null;
  /**
   * The issuer's uri.
   */

  this.issuer = '';
  /**
   * The logout url.
   */

  this.logoutUrl = '';
  /**
   * Defines whether to clear the hash fragment after logging in.
   */

  this.clearHashAfterLogin = true;
  /**
   * Url of the token endpoint as defined by OpenId Connect and OAuth 2.
   */

  this.tokenEndpoint = null;
  /**
   * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.
   */

  this.revocationEndpoint = null;
  /**
   * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1
   */

  this.customTokenParameters = [];
  /**
   * Url of the userinfo endpoint as defined by OpenId Connect.
   */

  this.userinfoEndpoint = null;
  this.responseType = '';
  /**
   * Defines whether additional debug information should
   * be shown at the console. Note that in certain browsers
   * the verbosity of the console needs to be explicitly set
   * to include Debug level messages.
   */

  this.showDebugInformation = false;
  /**
   * The redirect uri used when doing silent refresh.
   */

  this.silentRefreshRedirectUri = '';
  this.silentRefreshMessagePrefix = '';
  /**
   * Set this to true to display the iframe used for
   * silent refresh for debugging.
   */

  this.silentRefreshShowIFrame = false;
  /**
   * Timeout for silent refresh.
   * @internal
   * depreacted b/c of typo, see silentRefreshTimeout
   */

  this.siletRefreshTimeout = 1000 * 20;
  /**
   * Timeout for silent refresh.
   */

  this.silentRefreshTimeout = 1000 * 20;
  /**
   * Some auth servers don't allow using password flow
   * w/o a client secret while the standards do not
   * demand for it. In this case, you can set a password
   * here. As this password is exposed to the public
   * it does not bring additional security and is therefore
   * as good as using no password.
   */

  this.dummyClientSecret = null;
  /**
   * Defines whether https is required.
   * The default value is remoteOnly which only allows
   * http for localhost, while every other domains need
   * to be used with https.
   */

  this.requireHttps = 'remoteOnly';
  /**
   * Defines whether every url provided by the discovery
   * document has to start with the issuer's url.
   */

  this.strictDiscoveryDocumentValidation = true;
  /**
   * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)
   * with keys used to validate received id_tokens.
   * This is taken out of the disovery document. Can be set manually too.
   */

  this.jwks = null;
  /**
   * Map with additional query parameter that are appended to
   * the request when initializing implicit flow.
   */

  this.customQueryParams = null;
  this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';
  /**
   * Defines when the token_timeout event should be raised.
   * If you set this to the default value 0.75, the event
   * is triggered after 75% of the token's life time.
   */

  this.timeoutFactor = 0.75;
  /**
   * If true, the lib will try to check whether the user
   * is still logged in on a regular basis as described
   * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification
   */

  this.sessionChecksEnabled = false;
  /**
   * Interval in msec for checking the session
   * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification
   */

  this.sessionCheckIntervall = 3 * 1000;
  /**
   * Url for the iframe used for session checks
   */

  this.sessionCheckIFrameUrl = null;
  /**
   * Name of the iframe to use for session checks
   */

  this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';
  /**
   * This property has been introduced to disable at_hash checks
   * and is indented for Identity Provider that does not deliver
   * an at_hash EVEN THOUGH its recommended by the OIDC specs.
   * Of course, when disabling these checks the we are bypassing
   * a security check which means we are more vulnerable.
   */

  this.disableAtHashCheck = false;
  /**
   * Defines wether to check the subject of a refreshed token after silent refresh.
   * Normally, it should be the same as before.
   */

  this.skipSubjectCheck = false;
  this.useIdTokenHintForSilentRefresh = false;
  /**
   * Defined whether to skip the validation of the issuer in the discovery document.
   * Normally, the discovey document's url starts with the url of the issuer.
   */

  this.skipIssuerCheck = false;
  /**
   * final state sent to issuer is built as follows:
   * state = nonce + nonceStateSeparator + additional state
   * Default separator is ';' (encoded %3B).
   * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.
   */

  this.nonceStateSeparator = ';';
  /**
   * Set this to true to use HTTP BASIC auth for AJAX calls
   */

  this.useHttpBasicAuth = false;
  /**
   * The interceptors waits this time span if there is no token
   */

  this.waitForTokenInMsec = 0;
  /**
   * Code Flow is by defauld used together with PKCI which is also higly recommented.
   * You can disbale it here by setting this flag to true.
   * https://tools.ietf.org/html/rfc7636#section-1.1
   */

  this.disablePKCE = false;
  /**
   * This property allows you to override the method that is used to open the login url,
   * allowing a way for implementations to specify their own method of routing to new
   * urls.
   */

  this.openUri = function (uri) {
    location.href = uri;
  };

  if (json) {
    Object.assign(this, json);
  }
});
/**
 * This custom encoder allows charactes like +, % and / to be used in passwords
 */


var WebHttpUrlEncodingCodec = /*#__PURE__*/function () {
  function WebHttpUrlEncodingCodec() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, WebHttpUrlEncodingCodec);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(WebHttpUrlEncodingCodec, [{
    key: "encodeKey",
    value: function encodeKey(k) {
      return encodeURIComponent(k);
    }
  }, {
    key: "encodeValue",
    value: function encodeValue(v) {
      return encodeURIComponent(v);
    }
  }, {
    key: "decodeKey",
    value: function decodeKey(k) {
      return decodeURIComponent(k);
    }
  }, {
    key: "decodeValue",
    value: function decodeValue(v) {
      return decodeURIComponent(v);
    }
  }]);

  return WebHttpUrlEncodingCodec;
}();
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */

/*jslint bitwise: true */


var ERROR = 'input is invalid type';
var WINDOW = typeof window === 'object';
var root = WINDOW ? window : {};

if (root.JS_SHA256_NO_WINDOW) {
  WINDOW = false;
}

var WEB_WORKER = !WINDOW && typeof self === 'object';
var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;

if (NODE_JS) {
  root = global;
} else if (WEB_WORKER) {
  root = self;
}

var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;
var AMD = typeof define === 'function' && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js");
var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
var HEX_CHARS = '0123456789abcdef'.split('');
var EXTRA = [-2147483648, 8388608, 32768, 128];
var SHIFT = [24, 16, 8, 0];
var K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];
var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];
var blocks = [];

if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {
  Array.isArray = function (obj) {
    return Object.prototype.toString.call(obj) === '[object Array]';
  };
}

if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
  ArrayBuffer.isView = function (obj) {
    return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
  };
}

var createOutputMethod = function createOutputMethod(outputType, is224) {
  return function (message) {
    return new Sha256(is224, true).update(message)[outputType]();
  };
};

var ɵ0 = createOutputMethod;

var createMethod = function createMethod(is224) {
  var method = createOutputMethod('hex', is224);

  if (NODE_JS) {
    method = nodeWrap(method, is224);
  }

  method.create = function () {
    return new Sha256(is224);
  };

  method.update = function (message) {
    return method.create().update(message);
  };

  for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
    var type = OUTPUT_TYPES[i];
    method[type] = createOutputMethod(type, is224);
  }

  return method;
};

var ɵ1 = createMethod;

var nodeWrap = function nodeWrap(method, is224) {
  var crypto = eval("require('crypto')");
  var Buffer = eval("require('buffer').Buffer");
  var algorithm = is224 ? 'sha224' : 'sha256';

  var nodeMethod = function nodeMethod(message) {
    if (typeof message === 'string') {
      return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');
    } else {
      if (message === null || message === undefined) {
        throw new Error(ERROR);
      } else if (message.constructor === ArrayBuffer) {
        message = new Uint8Array(message);
      }
    }

    if (Array.isArray(message) || ArrayBuffer.isView(message) || message.constructor === Buffer) {
      return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');
    } else {
      return method(message);
    }
  };

  return nodeMethod;
};

var ɵ2 = nodeWrap;

var createHmacOutputMethod = function createHmacOutputMethod(outputType, is224) {
  return function (key, message) {
    return new HmacSha256(key, is224, true).update(message)[outputType]();
  };
};

var ɵ3 = createHmacOutputMethod;

var createHmacMethod = function createHmacMethod(is224) {
  var method = createHmacOutputMethod('hex', is224);

  method.create = function (key) {
    return new HmacSha256(key, is224);
  };

  method.update = function (key, message) {
    return method.create(key).update(message);
  };

  for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
    var type = OUTPUT_TYPES[i];
    method[type] = createHmacOutputMethod(type, is224);
  }

  return method;
};

var ɵ4 = createHmacMethod;

function Sha256(is224, sharedMemory) {
  if (sharedMemory) {
    blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
    this.blocks = blocks;
  } else {
    this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
  }

  if (is224) {
    this.h0 = 0xc1059ed8;
    this.h1 = 0x367cd507;
    this.h2 = 0x3070dd17;
    this.h3 = 0xf70e5939;
    this.h4 = 0xffc00b31;
    this.h5 = 0x68581511;
    this.h6 = 0x64f98fa7;
    this.h7 = 0xbefa4fa4;
  } else {
    // 256
    this.h0 = 0x6a09e667;
    this.h1 = 0xbb67ae85;
    this.h2 = 0x3c6ef372;
    this.h3 = 0xa54ff53a;
    this.h4 = 0x510e527f;
    this.h5 = 0x9b05688c;
    this.h6 = 0x1f83d9ab;
    this.h7 = 0x5be0cd19;
  }

  this.block = this.start = this.bytes = this.hBytes = 0;
  this.finalized = this.hashed = false;
  this.first = true;
  this.is224 = is224;
}

Sha256.prototype.update = function (message) {
  if (this.finalized) {
    return;
  }

  var notString,
      type = typeof message;

  if (type !== 'string') {
    if (type === 'object') {
      if (message === null) {
        throw new Error(ERROR);
      } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
        message = new Uint8Array(message);
      } else if (!Array.isArray(message)) {
        if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
          throw new Error(ERROR);
        }
      }
    } else {
      throw new Error(ERROR);
    }

    notString = true;
  }

  var code,
      index = 0,
      i,
      length = message.length,
      blocks = this.blocks;

  while (index < length) {
    if (this.hashed) {
      this.hashed = false;
      blocks[0] = this.block;
      blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
    }

    if (notString) {
      for (i = this.start; index < length && i < 64; ++index) {
        blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
      }
    } else {
      for (i = this.start; index < length && i < 64; ++index) {
        code = message.charCodeAt(index);

        if (code < 0x80) {
          blocks[i >> 2] |= code << SHIFT[i++ & 3];
        } else if (code < 0x800) {
          blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];
          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
        } else if (code < 0xd800 || code >= 0xe000) {
          blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];
          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
        } else {
          code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);
          blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];
          blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];
          blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
          blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
        }
      }
    }

    this.lastByteIndex = i;
    this.bytes += i - this.start;

    if (i >= 64) {
      this.block = blocks[16];
      this.start = i - 64;
      this.hash();
      this.hashed = true;
    } else {
      this.start = i;
    }
  }

  if (this.bytes > 4294967295) {
    this.hBytes += this.bytes / 4294967296 << 0;
    this.bytes = this.bytes % 4294967296;
  }

  return this;
};

Sha256.prototype.finalize = function () {
  if (this.finalized) {
    return;
  }

  this.finalized = true;
  var blocks = this.blocks,
      i = this.lastByteIndex;
  blocks[16] = this.block;
  blocks[i >> 2] |= EXTRA[i & 3];
  this.block = blocks[16];

  if (i >= 56) {
    if (!this.hashed) {
      this.hash();
    }

    blocks[0] = this.block;
    blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
  }

  blocks[14] = this.hBytes << 3 | this.bytes >>> 29;
  blocks[15] = this.bytes << 3;
  this.hash();
};

Sha256.prototype.hash = function () {
  var a = this.h0,
      b = this.h1,
      c = this.h2,
      d = this.h3,
      e = this.h4,
      f = this.h5,
      g = this.h6,
      h = this.h7,
      blocks = this.blocks,
      j,
      s0,
      s1,
      maj,
      t1,
      t2,
      ch,
      ab,
      da,
      cd,
      bc;

  for (j = 16; j < 64; ++j) {
    // rightrotate
    t1 = blocks[j - 15];
    s0 = (t1 >>> 7 | t1 << 25) ^ (t1 >>> 18 | t1 << 14) ^ t1 >>> 3;
    t1 = blocks[j - 2];
    s1 = (t1 >>> 17 | t1 << 15) ^ (t1 >>> 19 | t1 << 13) ^ t1 >>> 10;
    blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;
  }

  bc = b & c;

  for (j = 0; j < 64; j += 4) {
    if (this.first) {
      if (this.is224) {
        ab = 300032;
        t1 = blocks[0] - 1413257819;
        h = t1 - 150054599 << 0;
        d = t1 + 24177077 << 0;
      } else {
        ab = 704751109;
        t1 = blocks[0] - 210244248;
        h = t1 - 1521486534 << 0;
        d = t1 + 143694565 << 0;
      }

      this.first = false;
    } else {
      s0 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);
      s1 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);
      ab = a & b;
      maj = ab ^ a & c ^ bc;
      ch = e & f ^ ~e & g;
      t1 = h + s1 + ch + K[j] + blocks[j];
      t2 = s0 + maj;
      h = d + t1 << 0;
      d = t1 + t2 << 0;
    }

    s0 = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10);
    s1 = (h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7);
    da = d & a;
    maj = da ^ d & b ^ ab;
    ch = h & e ^ ~h & f;
    t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];
    t2 = s0 + maj;
    g = c + t1 << 0;
    c = t1 + t2 << 0;
    s0 = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10);
    s1 = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7);
    cd = c & d;
    maj = cd ^ c & a ^ da;
    ch = g & h ^ ~g & e;
    t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];
    t2 = s0 + maj;
    f = b + t1 << 0;
    b = t1 + t2 << 0;
    s0 = (b >>> 2 | b << 30) ^ (b >>> 13 | b << 19) ^ (b >>> 22 | b << 10);
    s1 = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7);
    bc = b & c;
    maj = bc ^ b & d ^ cd;
    ch = f & g ^ ~f & h;
    t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];
    t2 = s0 + maj;
    e = a + t1 << 0;
    a = t1 + t2 << 0;
  }

  this.h0 = this.h0 + a << 0;
  this.h1 = this.h1 + b << 0;
  this.h2 = this.h2 + c << 0;
  this.h3 = this.h3 + d << 0;
  this.h4 = this.h4 + e << 0;
  this.h5 = this.h5 + f << 0;
  this.h6 = this.h6 + g << 0;
  this.h7 = this.h7 + h << 0;
};

Sha256.prototype.hex = function () {
  this.finalize();
  var h0 = this.h0,
      h1 = this.h1,
      h2 = this.h2,
      h3 = this.h3,
      h4 = this.h4,
      h5 = this.h5,
      h6 = this.h6,
      h7 = this.h7;
  var hex = HEX_CHARS[h0 >> 28 & 0x0F] + HEX_CHARS[h0 >> 24 & 0x0F] + HEX_CHARS[h0 >> 20 & 0x0F] + HEX_CHARS[h0 >> 16 & 0x0F] + HEX_CHARS[h0 >> 12 & 0x0F] + HEX_CHARS[h0 >> 8 & 0x0F] + HEX_CHARS[h0 >> 4 & 0x0F] + HEX_CHARS[h0 & 0x0F] + HEX_CHARS[h1 >> 28 & 0x0F] + HEX_CHARS[h1 >> 24 & 0x0F] + HEX_CHARS[h1 >> 20 & 0x0F] + HEX_CHARS[h1 >> 16 & 0x0F] + HEX_CHARS[h1 >> 12 & 0x0F] + HEX_CHARS[h1 >> 8 & 0x0F] + HEX_CHARS[h1 >> 4 & 0x0F] + HEX_CHARS[h1 & 0x0F] + HEX_CHARS[h2 >> 28 & 0x0F] + HEX_CHARS[h2 >> 24 & 0x0F] + HEX_CHARS[h2 >> 20 & 0x0F] + HEX_CHARS[h2 >> 16 & 0x0F] + HEX_CHARS[h2 >> 12 & 0x0F] + HEX_CHARS[h2 >> 8 & 0x0F] + HEX_CHARS[h2 >> 4 & 0x0F] + HEX_CHARS[h2 & 0x0F] + HEX_CHARS[h3 >> 28 & 0x0F] + HEX_CHARS[h3 >> 24 & 0x0F] + HEX_CHARS[h3 >> 20 & 0x0F] + HEX_CHARS[h3 >> 16 & 0x0F] + HEX_CHARS[h3 >> 12 & 0x0F] + HEX_CHARS[h3 >> 8 & 0x0F] + HEX_CHARS[h3 >> 4 & 0x0F] + HEX_CHARS[h3 & 0x0F] + HEX_CHARS[h4 >> 28 & 0x0F] + HEX_CHARS[h4 >> 24 & 0x0F] + HEX_CHARS[h4 >> 20 & 0x0F] + HEX_CHARS[h4 >> 16 & 0x0F] + HEX_CHARS[h4 >> 12 & 0x0F] + HEX_CHARS[h4 >> 8 & 0x0F] + HEX_CHARS[h4 >> 4 & 0x0F] + HEX_CHARS[h4 & 0x0F] + HEX_CHARS[h5 >> 28 & 0x0F] + HEX_CHARS[h5 >> 24 & 0x0F] + HEX_CHARS[h5 >> 20 & 0x0F] + HEX_CHARS[h5 >> 16 & 0x0F] + HEX_CHARS[h5 >> 12 & 0x0F] + HEX_CHARS[h5 >> 8 & 0x0F] + HEX_CHARS[h5 >> 4 & 0x0F] + HEX_CHARS[h5 & 0x0F] + HEX_CHARS[h6 >> 28 & 0x0F] + HEX_CHARS[h6 >> 24 & 0x0F] + HEX_CHARS[h6 >> 20 & 0x0F] + HEX_CHARS[h6 >> 16 & 0x0F] + HEX_CHARS[h6 >> 12 & 0x0F] + HEX_CHARS[h6 >> 8 & 0x0F] + HEX_CHARS[h6 >> 4 & 0x0F] + HEX_CHARS[h6 & 0x0F];

  if (!this.is224) {
    hex += HEX_CHARS[h7 >> 28 & 0x0F] + HEX_CHARS[h7 >> 24 & 0x0F] + HEX_CHARS[h7 >> 20 & 0x0F] + HEX_CHARS[h7 >> 16 & 0x0F] + HEX_CHARS[h7 >> 12 & 0x0F] + HEX_CHARS[h7 >> 8 & 0x0F] + HEX_CHARS[h7 >> 4 & 0x0F] + HEX_CHARS[h7 & 0x0F];
  }

  return hex;
};

Sha256.prototype.toString = Sha256.prototype.hex;

Sha256.prototype.digest = function () {
  this.finalize();
  var h0 = this.h0,
      h1 = this.h1,
      h2 = this.h2,
      h3 = this.h3,
      h4 = this.h4,
      h5 = this.h5,
      h6 = this.h6,
      h7 = this.h7;
  var arr = [h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF];

  if (!this.is224) {
    arr.push(h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF);
  }

  return arr;
};

Sha256.prototype.array = Sha256.prototype.digest;

Sha256.prototype.arrayBuffer = function () {
  this.finalize();
  var buffer = new ArrayBuffer(this.is224 ? 28 : 32);
  var dataView = new DataView(buffer);
  dataView.setUint32(0, this.h0);
  dataView.setUint32(4, this.h1);
  dataView.setUint32(8, this.h2);
  dataView.setUint32(12, this.h3);
  dataView.setUint32(16, this.h4);
  dataView.setUint32(20, this.h5);
  dataView.setUint32(24, this.h6);

  if (!this.is224) {
    dataView.setUint32(28, this.h7);
  }

  return buffer;
};

function HmacSha256(key, is224, sharedMemory) {
  var i,
      type = typeof key;

  if (type === 'string') {
    var bytes = [],
        length = key.length,
        index = 0,
        code;

    for (i = 0; i < length; ++i) {
      code = key.charCodeAt(i);

      if (code < 0x80) {
        bytes[index++] = code;
      } else if (code < 0x800) {
        bytes[index++] = 0xc0 | code >> 6;
        bytes[index++] = 0x80 | code & 0x3f;
      } else if (code < 0xd800 || code >= 0xe000) {
        bytes[index++] = 0xe0 | code >> 12;
        bytes[index++] = 0x80 | code >> 6 & 0x3f;
        bytes[index++] = 0x80 | code & 0x3f;
      } else {
        code = 0x10000 + ((code & 0x3ff) << 10 | key.charCodeAt(++i) & 0x3ff);
        bytes[index++] = 0xf0 | code >> 18;
        bytes[index++] = 0x80 | code >> 12 & 0x3f;
        bytes[index++] = 0x80 | code >> 6 & 0x3f;
        bytes[index++] = 0x80 | code & 0x3f;
      }
    }

    key = bytes;
  } else {
    if (type === 'object') {
      if (key === null) {
        throw new Error(ERROR);
      } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {
        key = new Uint8Array(key);
      } else if (!Array.isArray(key)) {
        if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {
          throw new Error(ERROR);
        }
      }
    } else {
      throw new Error(ERROR);
    }
  }

  if (key.length > 64) {
    key = new Sha256(is224, true).update(key).array();
  }

  var oKeyPad = [],
      iKeyPad = [];

  for (i = 0; i < 64; ++i) {
    var b = key[i] || 0;
    oKeyPad[i] = 0x5c ^ b;
    iKeyPad[i] = 0x36 ^ b;
  }

  Sha256.call(this, is224, sharedMemory);
  this.update(iKeyPad);
  this.oKeyPad = oKeyPad;
  this.inner = true;
  this.sharedMemory = sharedMemory;
}

HmacSha256.prototype = new Sha256();

HmacSha256.prototype.finalize = function () {
  Sha256.prototype.finalize.call(this);

  if (this.inner) {
    this.inner = false;
    var innerHash = this.array();
    Sha256.call(this, this.is224, this.sharedMemory);
    this.update(this.oKeyPad);
    this.update(innerHash);
    Sha256.prototype.finalize.call(this);
  }
};

var exports = createMethod();
exports.sha256 = exports;
exports.sha224 = createMethod(true);
exports.sha256.hmac = createHmacMethod();
exports.sha224.hmac = createHmacMethod(true);
/**
 * Abstraction for crypto algorithms
 */

var HashHandler = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function HashHandler() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, HashHandler);
});

var DefaultHashHandler = /*#__PURE__*/function () {
  function DefaultHashHandler() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DefaultHashHandler);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(DefaultHashHandler, [{
    key: "calcHash",
    value: function calcHash(valueToHash, algorithm) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_9__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var hashArray, hashString;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                // const encoder = new TextEncoder();
                // const hashArray = await window.crypto.subtle.digest(algorithm, data);
                // const data = encoder.encode(valueToHash);
                hashArray = exports.array(valueToHash); // const hashString = this.toHashString(hashArray);

                hashString = this.toHashString2(hashArray);
                return _context2.abrupt("return", hashString);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
    }
  }, {
    key: "toHashString2",
    value: function toHashString2(byteArray) {
      var result = '';

      var _iterator = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(byteArray),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var e = _step.value;
          result += String.fromCharCode(e);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return result;
    }
  }, {
    key: "toHashString",
    value: function toHashString(buffer) {
      var byteArray = new Uint8Array(buffer);
      var result = '';

      var _iterator2 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(byteArray),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var e = _step2.value;
          result += String.fromCharCode(e);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      return result;
    }
  }]);

  return DefaultHashHandler;
}();

DefaultHashHandler.ɵfac = function DefaultHashHandler_Factory(t) {
  return new (t || DefaultHashHandler)();
};

DefaultHashHandler.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: DefaultHashHandler,
  factory: DefaultHashHandler.ɵfac
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](DefaultHashHandler, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], null, null);
})();
/**
 * Service for logging in and logging out with
 * OIDC and OAuth2. Supports implicit flow and
 * password flow.
 */


var OAuthService = /*#__PURE__*/function (_AuthConfig) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(OAuthService, _AuthConfig);

  var _super4 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(OAuthService);

  function OAuthService(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document) {
    var _this4;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthService);

    var _a;

    _this4 = _super4.call(this);
    _this4.ngZone = ngZone;
    _this4.http = http;
    _this4.config = config;
    _this4.urlHelper = urlHelper;
    _this4.logger = logger;
    _this4.crypto = crypto;
    /**
     * @internal
     * Deprecated:  use property events instead
     */

    _this4.discoveryDocumentLoaded = false;
    /**
     * The received (passed around) state, when logging
     * in with implicit flow.
     */

    _this4.state = '';
    _this4.eventsSubject = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    _this4.discoveryDocumentLoadedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    _this4.grantTypesSupported = [];
    _this4.inImplicitFlow = false;
    _this4.saveNoncesInLocalStorage = false;

    _this4.debug('angular-oauth2-oidc v10'); // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed


    _this4.document = document;

    if (!config) {
      config = {};
    }

    _this4.discoveryDocumentLoaded$ = _this4.discoveryDocumentLoadedSubject.asObservable();
    _this4.events = _this4.eventsSubject.asObservable();

    if (tokenValidationHandler) {
      _this4.tokenValidationHandler = tokenValidationHandler;
    }

    if (config) {
      _this4.configure(config);
    }

    try {
      if (storage) {
        _this4.setStorage(storage);
      } else if (typeof sessionStorage !== 'undefined') {
        _this4.setStorage(sessionStorage);
      }
    } catch (e) {
      console.error('No OAuthStorage provided and cannot access default (sessionStorage).' + 'Consider providing a custom OAuthStorage implementation in your module.', e);
    } // in IE, sessionStorage does not always survive a redirect


    if (typeof window !== 'undefined' && typeof window['localStorage'] !== 'undefined') {
      var ua = (_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent;
      var msie = (ua === null || ua === void 0 ? void 0 : ua.includes('MSIE ')) || (ua === null || ua === void 0 ? void 0 : ua.includes('Trident'));

      if (msie) {
        _this4.saveNoncesInLocalStorage = true;
      }
    }

    _this4.setupRefreshTimer();

    return _this4;
  }
  /**
   * Use this method to configure the service
   * @param config the configuration
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(OAuthService, [{
    key: "configure",
    value: function configure(config) {
      // For the sake of downward compatibility with
      // original configuration API
      Object.assign(this, new AuthConfig(), config);
      this.config = Object.assign({}, new AuthConfig(), config);

      if (this.sessionChecksEnabled) {
        this.setupSessionCheck();
      }

      this.configChanged();
    }
  }, {
    key: "configChanged",
    value: function configChanged() {
      this.setupRefreshTimer();
    }
  }, {
    key: "restartSessionChecksIfStillLoggedIn",
    value: function restartSessionChecksIfStillLoggedIn() {
      if (this.hasValidIdToken()) {
        this.initSessionCheck();
      }
    }
  }, {
    key: "restartRefreshTimerIfStillLoggedIn",
    value: function restartRefreshTimerIfStillLoggedIn() {
      this.setupExpirationTimers();
    }
  }, {
    key: "setupSessionCheck",
    value: function setupSessionCheck() {
      var _this5 = this;

      this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
        return e.type === 'token_received';
      })).subscribe(function (e) {
        _this5.initSessionCheck();
      });
    }
    /**
     * Will setup up silent refreshing for when the token is
     * about to expire. When the user is logged out via this.logOut method, the
     * silent refreshing will pause and not refresh the tokens until the user is
     * logged back in via receiving a new token.
     * @param params Additional parameter to pass
     * @param listenTo Setup automatic refresh of a specific token type
     */

  }, {
    key: "setupAutomaticSilentRefresh",
    value: function setupAutomaticSilentRefresh() {
      var _this6 = this;

      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var listenTo = arguments.length > 1 ? arguments[1] : undefined;
      var noPrompt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var shouldRunSilentRefresh = true;
      this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["tap"])(function (e) {
        if (e.type === 'token_received') {
          shouldRunSilentRefresh = true;
        } else if (e.type === 'logout') {
          shouldRunSilentRefresh = false;
        }
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
        return e.type === 'token_expires';
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["debounceTime"])(1000)).subscribe(function (e) {
        var event = e;

        if ((listenTo == null || listenTo === 'any' || event.info === listenTo) && shouldRunSilentRefresh) {
          // this.silentRefresh(params, noPrompt).catch(_ => {
          _this6.refreshInternal(params, noPrompt).catch(function (_) {
            _this6.debug('Automatic silent refresh did not work');
          });
        }
      });
      this.restartRefreshTimerIfStillLoggedIn();
    }
  }, {
    key: "refreshInternal",
    value: function refreshInternal(params, noPrompt) {
      if (!this.useSilentRefresh && this.responseType === 'code') {
        return this.refreshToken();
      } else {
        return this.silentRefresh(params, noPrompt);
      }
    }
    /**
     * Convenience method that first calls `loadDiscoveryDocument(...)` and
     * directly chains using the `then(...)` part of the promise to call
     * the `tryLogin(...)` method.
     *
     * @param options LoginOptions to pass through to `tryLogin(...)`
     */

  }, {
    key: "loadDiscoveryDocumentAndTryLogin",
    value: function loadDiscoveryDocumentAndTryLogin() {
      var _this7 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      return this.loadDiscoveryDocument().then(function (doc) {
        return _this7.tryLogin(options);
      });
    }
    /**
     * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`
     * and if then chains to `initLoginFlow()`, but only if there is no valid
     * IdToken or no valid AccessToken.
     *
     * @param options LoginOptions to pass through to `tryLogin(...)`
     */

  }, {
    key: "loadDiscoveryDocumentAndLogin",
    value: function loadDiscoveryDocumentAndLogin() {
      var _this8 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      options = options || {};
      return this.loadDiscoveryDocumentAndTryLogin(options).then(function (_) {
        if (!_this8.hasValidIdToken() || !_this8.hasValidAccessToken()) {
          var state = typeof options.state === 'string' ? options.state : '';

          _this8.initLoginFlow(state);

          return false;
        } else {
          return true;
        }
      });
    }
  }, {
    key: "debug",
    value: function debug() {
      if (this.showDebugInformation) {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        this.logger.debug.apply(this.logger, args);
      }
    }
  }, {
    key: "validateUrlFromDiscoveryDocument",
    value: function validateUrlFromDiscoveryDocument(url) {
      var errors = [];
      var httpsCheck = this.validateUrlForHttps(url);
      var issuerCheck = this.validateUrlAgainstIssuer(url);

      if (!httpsCheck) {
        errors.push('https for all urls required. Also for urls received by discovery.');
      }

      if (!issuerCheck) {
        errors.push('Every url in discovery document has to start with the issuer url.' + 'Also see property strictDiscoveryDocumentValidation.');
      }

      return errors;
    }
  }, {
    key: "validateUrlForHttps",
    value: function validateUrlForHttps(url) {
      if (!url) {
        return true;
      }

      var lcUrl = url.toLowerCase();

      if (this.requireHttps === false) {
        return true;
      }

      if ((lcUrl.match(/^http:\/\/localhost($|[:\/])/) || lcUrl.match(/^http:\/\/localhost($|[:\/])/)) && this.requireHttps === 'remoteOnly') {
        return true;
      }

      return lcUrl.startsWith('https://');
    }
  }, {
    key: "assertUrlNotNullAndCorrectProtocol",
    value: function assertUrlNotNullAndCorrectProtocol(url, description) {
      if (!url) {
        throw new Error("'".concat(description, "' should not be null"));
      }

      if (!this.validateUrlForHttps(url)) {
        throw new Error("'".concat(description, "' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS)."));
      }
    }
  }, {
    key: "validateUrlAgainstIssuer",
    value: function validateUrlAgainstIssuer(url) {
      if (!this.strictDiscoveryDocumentValidation) {
        return true;
      }

      if (!url) {
        return true;
      }

      return url.toLowerCase().startsWith(this.issuer.toLowerCase());
    }
  }, {
    key: "setupRefreshTimer",
    value: function setupRefreshTimer() {
      var _this9 = this;

      if (typeof window === 'undefined') {
        this.debug('timer not supported on this plattform');
        return;
      }

      if (this.hasValidIdToken() || this.hasValidAccessToken()) {
        this.clearAccessTokenTimer();
        this.clearIdTokenTimer();
        this.setupExpirationTimers();
      }

      if (this.tokenReceivedSubscription) this.tokenReceivedSubscription.unsubscribe();
      this.tokenReceivedSubscription = this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
        return e.type === 'token_received';
      })).subscribe(function (_) {
        _this9.clearAccessTokenTimer();

        _this9.clearIdTokenTimer();

        _this9.setupExpirationTimers();
      });
    }
  }, {
    key: "setupExpirationTimers",
    value: function setupExpirationTimers() {
      if (this.hasValidAccessToken()) {
        this.setupAccessTokenTimer();
      }

      if (this.hasValidIdToken()) {
        this.setupIdTokenTimer();
      }
    }
  }, {
    key: "setupAccessTokenTimer",
    value: function setupAccessTokenTimer() {
      var _this10 = this;

      var expiration = this.getAccessTokenExpiration();
      var storedAt = this.getAccessTokenStoredAt();
      var timeout = this.calcTimeout(storedAt, expiration);
      this.ngZone.runOutsideAngular(function () {
        _this10.accessTokenTimeoutSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(new OAuthInfoEvent('token_expires', 'access_token')).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["delay"])(timeout)).subscribe(function (e) {
          _this10.ngZone.run(function () {
            _this10.eventsSubject.next(e);
          });
        });
      });
    }
  }, {
    key: "setupIdTokenTimer",
    value: function setupIdTokenTimer() {
      var _this11 = this;

      var expiration = this.getIdTokenExpiration();
      var storedAt = this.getIdTokenStoredAt();
      var timeout = this.calcTimeout(storedAt, expiration);
      this.ngZone.runOutsideAngular(function () {
        _this11.idTokenTimeoutSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(new OAuthInfoEvent('token_expires', 'id_token')).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["delay"])(timeout)).subscribe(function (e) {
          _this11.ngZone.run(function () {
            _this11.eventsSubject.next(e);
          });
        });
      });
    }
    /**
     * Stops timers for automatic refresh.
     * To restart it, call setupAutomaticSilentRefresh again.
     */

  }, {
    key: "stopAutomaticRefresh",
    value: function stopAutomaticRefresh() {
      this.clearAccessTokenTimer();
      this.clearIdTokenTimer();
    }
  }, {
    key: "clearAccessTokenTimer",
    value: function clearAccessTokenTimer() {
      if (this.accessTokenTimeoutSubscription) {
        this.accessTokenTimeoutSubscription.unsubscribe();
      }
    }
  }, {
    key: "clearIdTokenTimer",
    value: function clearIdTokenTimer() {
      if (this.idTokenTimeoutSubscription) {
        this.idTokenTimeoutSubscription.unsubscribe();
      }
    }
  }, {
    key: "calcTimeout",
    value: function calcTimeout(storedAt, expiration) {
      var now = Date.now();
      var delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);
      return Math.max(0, delta);
    }
    /**
     * DEPRECATED. Use a provider for OAuthStorage instead:
     *
     * { provide: OAuthStorage, useFactory: oAuthStorageFactory }
     * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }
     * Sets a custom storage used to store the received
     * tokens on client side. By default, the browser's
     * sessionStorage is used.
     * @ignore
     *
     * @param storage
     */

  }, {
    key: "setStorage",
    value: function setStorage(storage) {
      this._storage = storage;
      this.configChanged();
    }
    /**
     * Loads the discovery document to configure most
     * properties of this service. The url of the discovery
     * document is infered from the issuer's url according
     * to the OpenId Connect spec. To use another url you
     * can pass it to to optional parameter fullUrl.
     *
     * @param fullUrl
     */

  }, {
    key: "loadDiscoveryDocument",
    value: function loadDiscoveryDocument() {
      var _this12 = this;

      var fullUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      return new Promise(function (resolve, reject) {
        if (!fullUrl) {
          fullUrl = _this12.issuer || '';

          if (!fullUrl.endsWith('/')) {
            fullUrl += '/';
          }

          fullUrl += '.well-known/openid-configuration';
        }

        if (!_this12.validateUrlForHttps(fullUrl)) {
          reject("issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");
          return;
        }

        _this12.http.get(fullUrl).subscribe(function (doc) {
          if (!_this12.validateDiscoveryDocument(doc)) {
            _this12.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));

            reject('discovery_document_validation_error');
            return;
          }

          _this12.loginUrl = doc.authorization_endpoint;
          _this12.logoutUrl = doc.end_session_endpoint || _this12.logoutUrl;
          _this12.grantTypesSupported = doc.grant_types_supported;
          _this12.issuer = doc.issuer;
          _this12.tokenEndpoint = doc.token_endpoint;
          _this12.userinfoEndpoint = doc.userinfo_endpoint || _this12.userinfoEndpoint;
          _this12.jwksUri = doc.jwks_uri;
          _this12.sessionCheckIFrameUrl = doc.check_session_iframe || _this12.sessionCheckIFrameUrl;
          _this12.discoveryDocumentLoaded = true;

          _this12.discoveryDocumentLoadedSubject.next(doc);

          _this12.revocationEndpoint = doc.revocation_endpoint;

          if (_this12.sessionChecksEnabled) {
            _this12.restartSessionChecksIfStillLoggedIn();
          }

          _this12.loadJwks().then(function (jwks) {
            var result = {
              discoveryDocument: doc,
              jwks: jwks
            };
            var event = new OAuthSuccessEvent('discovery_document_loaded', result);

            _this12.eventsSubject.next(event);

            resolve(event);
            return;
          }).catch(function (err) {
            _this12.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));

            reject(err);
            return;
          });
        }, function (err) {
          _this12.logger.error('error loading discovery document', err);

          _this12.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));

          reject(err);
        });
      });
    }
  }, {
    key: "loadJwks",
    value: function loadJwks() {
      var _this13 = this;

      return new Promise(function (resolve, reject) {
        if (_this13.jwksUri) {
          _this13.http.get(_this13.jwksUri).subscribe(function (jwks) {
            _this13.jwks = jwks;

            _this13.eventsSubject.next(new OAuthSuccessEvent('discovery_document_loaded'));

            resolve(jwks);
          }, function (err) {
            _this13.logger.error('error loading jwks', err);

            _this13.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));

            reject(err);
          });
        } else {
          resolve(null);
        }
      });
    }
  }, {
    key: "validateDiscoveryDocument",
    value: function validateDiscoveryDocument(doc) {
      var errors;

      if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {
        this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);
        return false;
      }

      errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);

      if (errors.length > 0) {
        this.logger.error('error validating authorization_endpoint in discovery document', errors);
        return false;
      }

      errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);

      if (errors.length > 0) {
        this.logger.error('error validating end_session_endpoint in discovery document', errors);
        return false;
      }

      errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);

      if (errors.length > 0) {
        this.logger.error('error validating token_endpoint in discovery document', errors);
      }

      errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);

      if (errors.length > 0) {
        this.logger.error('error validating revocation_endpoint in discovery document', errors);
      }

      errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);

      if (errors.length > 0) {
        this.logger.error('error validating userinfo_endpoint in discovery document', errors);
        return false;
      }

      errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);

      if (errors.length > 0) {
        this.logger.error('error validating jwks_uri in discovery document', errors);
        return false;
      }

      if (this.sessionChecksEnabled && !doc.check_session_iframe) {
        this.logger.warn('sessionChecksEnabled is activated but discovery document' + ' does not contain a check_session_iframe field');
      }

      return true;
    }
    /**
     * Uses password flow to exchange userName and password for an
     * access_token. After receiving the access_token, this method
     * uses it to query the userinfo endpoint in order to get information
     * about the user in question.
     *
     * When using this, make sure that the property oidc is set to false.
     * Otherwise stricter validations take place that make this operation
     * fail.
     *
     * @param userName
     * @param password
     * @param headers Optional additional http-headers.
     */

  }, {
    key: "fetchTokenUsingPasswordFlowAndLoadUserProfile",
    value: function fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password) {
      var _this14 = this;

      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpHeaders"]();
      return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(function () {
        return _this14.loadUserProfile();
      });
    }
    /**
     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.
     *
     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.
     * Otherwise stricter validations take place that make this operation fail.
     */

  }, {
    key: "loadUserProfile",
    value: function loadUserProfile() {
      var _this15 = this;

      if (!this.hasValidAccessToken()) {
        throw new Error('Can not load User Profile without access_token');
      }

      if (!this.validateUrlForHttps(this.userinfoEndpoint)) {
        throw new Error("userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");
      }

      return new Promise(function (resolve, reject) {
        var headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpHeaders"]().set('Authorization', 'Bearer ' + _this15.getAccessToken());

        _this15.http.get(_this15.userinfoEndpoint, {
          headers: headers
        }).subscribe(function (info) {
          _this15.debug('userinfo received', info);

          var existingClaims = _this15.getIdentityClaims() || {};

          if (!_this15.skipSubjectCheck) {
            if (_this15.oidc && (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {
              var _err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' + 'of the user that has logged in with oidc.\n' + 'if you are not using oidc but just oauth2 password flow set oidc to false';

              reject(_err);
              return;
            }
          }

          info = Object.assign({}, existingClaims, info);

          _this15._storage.setItem('id_token_claims_obj', JSON.stringify(info));

          _this15.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));

          resolve(info);
        }, function (err) {
          _this15.logger.error('error loading user info', err);

          _this15.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));

          reject(err);
        });
      });
    }
    /**
     * Uses password flow to exchange userName and password for an access_token.
     * @param userName
     * @param password
     * @param headers Optional additional http-headers.
     */

  }, {
    key: "fetchTokenUsingPasswordFlow",
    value: function fetchTokenUsingPasswordFlow(userName, password) {
      var _this16 = this;

      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpHeaders"]();
      this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');
      return new Promise(function (resolve, reject) {
        /**
         * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to
         * serialize and parse URL parameter keys and values.
         *
         * @stable
         */
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpParams"]({
          encoder: new WebHttpUrlEncodingCodec()
        }).set('grant_type', 'password').set('scope', _this16.scope).set('username', userName).set('password', password);

        if (_this16.useHttpBasicAuth) {
          var header = btoa("".concat(_this16.clientId, ":").concat(_this16.dummyClientSecret));
          headers = headers.set('Authorization', 'Basic ' + header);
        }

        if (!_this16.useHttpBasicAuth) {
          params = params.set('client_id', _this16.clientId);
        }

        if (!_this16.useHttpBasicAuth && _this16.dummyClientSecret) {
          params = params.set('client_secret', _this16.dummyClientSecret);
        }

        if (_this16.customQueryParams) {
          var _iterator3 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyNames(_this16.customQueryParams)),
              _step3;

          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var key = _step3.value;
              params = params.set(key, _this16.customQueryParams[key]);
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }

        headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');

        _this16.http.post(_this16.tokenEndpoint, params, {
          headers: headers
        }).subscribe(function (tokenResponse) {
          _this16.debug('tokenResponse', tokenResponse);

          _this16.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || _this16.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, _this16.extractRecognizedCustomParameters(tokenResponse));

          _this16.eventsSubject.next(new OAuthSuccessEvent('token_received'));

          resolve(tokenResponse);
        }, function (err) {
          _this16.logger.error('Error performing password flow', err);

          _this16.eventsSubject.next(new OAuthErrorEvent('token_error', err));

          reject(err);
        });
      });
    }
    /**
     * Refreshes the token using a refresh_token.
     * This does not work for implicit flow, b/c
     * there is no refresh_token in this flow.
     * A solution for this is provided by the
     * method silentRefresh.
     */

  }, {
    key: "refreshToken",
    value: function refreshToken() {
      var _this17 = this;

      this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');
      return new Promise(function (resolve, reject) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpParams"]().set('grant_type', 'refresh_token').set('scope', _this17.scope).set('refresh_token', _this17._storage.getItem('refresh_token'));
        var headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpHeaders"]().set('Content-Type', 'application/x-www-form-urlencoded');

        if (_this17.useHttpBasicAuth) {
          var header = btoa("".concat(_this17.clientId, ":").concat(_this17.dummyClientSecret));
          headers = headers.set('Authorization', 'Basic ' + header);
        }

        if (!_this17.useHttpBasicAuth) {
          params = params.set('client_id', _this17.clientId);
        }

        if (!_this17.useHttpBasicAuth && _this17.dummyClientSecret) {
          params = params.set('client_secret', _this17.dummyClientSecret);
        }

        if (_this17.customQueryParams) {
          var _iterator4 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyNames(_this17.customQueryParams)),
              _step4;

          try {
            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
              var key = _step4.value;
              params = params.set(key, _this17.customQueryParams[key]);
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }
        }

        _this17.http.post(_this17.tokenEndpoint, params, {
          headers: headers
        }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["switchMap"])(function (tokenResponse) {
          if (tokenResponse.id_token) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["from"])(_this17.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["tap"])(function (result) {
              return _this17.storeIdToken(result);
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["map"])(function (_) {
              return tokenResponse;
            }));
          } else {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(tokenResponse);
          }
        })).subscribe(function (tokenResponse) {
          _this17.debug('refresh tokenResponse', tokenResponse);

          _this17.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || _this17.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, _this17.extractRecognizedCustomParameters(tokenResponse));

          _this17.eventsSubject.next(new OAuthSuccessEvent('token_received'));

          _this17.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));

          resolve(tokenResponse);
        }, function (err) {
          _this17.logger.error('Error refreshing token', err);

          _this17.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));

          reject(err);
        });
      });
    }
  }, {
    key: "removeSilentRefreshEventListener",
    value: function removeSilentRefreshEventListener() {
      if (this.silentRefreshPostMessageEventListener) {
        window.removeEventListener('message', this.silentRefreshPostMessageEventListener);
        this.silentRefreshPostMessageEventListener = null;
      }
    }
  }, {
    key: "setupSilentRefreshEventListener",
    value: function setupSilentRefreshEventListener() {
      var _this18 = this;

      this.removeSilentRefreshEventListener();

      this.silentRefreshPostMessageEventListener = function (e) {
        var message = _this18.processMessageEventMessage(e);

        _this18.tryLogin({
          customHashFragment: message,
          preventClearHashAfterLogin: true,
          customRedirectUri: _this18.silentRefreshRedirectUri || _this18.redirectUri
        }).catch(function (err) {
          return _this18.debug('tryLogin during silent refresh failed', err);
        });
      };

      window.addEventListener('message', this.silentRefreshPostMessageEventListener);
    }
    /**
     * Performs a silent refresh for implicit flow.
     * Use this method to get new tokens when/before
     * the existing tokens expire.
     */

  }, {
    key: "silentRefresh",
    value: function silentRefresh() {
      var _this19 = this;

      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var noPrompt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var claims = this.getIdentityClaims() || {};

      if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {
        params['id_token_hint'] = this.getIdToken();
      }

      if (!this.validateUrlForHttps(this.loginUrl)) {
        throw new Error("loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");
      }

      if (typeof this.document === 'undefined') {
        throw new Error('silent refresh is not supported on this platform');
      }

      var existingIframe = this.document.getElementById(this.silentRefreshIFrameName);

      if (existingIframe) {
        this.document.body.removeChild(existingIframe);
      }

      this.silentRefreshSubject = claims['sub'];
      var iframe = this.document.createElement('iframe');
      iframe.id = this.silentRefreshIFrameName;
      this.setupSilentRefreshEventListener();
      var redirectUri = this.silentRefreshRedirectUri || this.redirectUri;
      this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(function (url) {
        iframe.setAttribute('src', url);

        if (!_this19.silentRefreshShowIFrame) {
          iframe.style['display'] = 'none';
        }

        _this19.document.body.appendChild(iframe);
      });
      var errors = this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
        return e instanceof OAuthErrorEvent;
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["first"])());
      var success = this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
        return e.type === 'token_received';
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["first"])());
      var timeout = Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["delay"])(this.silentRefreshTimeout));
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["race"])([errors, success, timeout]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["map"])(function (e) {
        if (e instanceof OAuthErrorEvent) {
          if (e.type === 'silent_refresh_timeout') {
            _this19.eventsSubject.next(e);
          } else {
            e = new OAuthErrorEvent('silent_refresh_error', e);

            _this19.eventsSubject.next(e);
          }

          throw e;
        } else if (e.type === 'token_received') {
          e = new OAuthSuccessEvent('silently_refreshed');

          _this19.eventsSubject.next(e);
        }

        return e;
      })).toPromise();
    }
    /**
     * This method exists for backwards compatibility.
     * {@link OAuthService#initLoginFlowInPopup} handles both code
     * and implicit flows.
     */

  }, {
    key: "initImplicitFlowInPopup",
    value: function initImplicitFlowInPopup(options) {
      return this.initLoginFlowInPopup(options);
    }
  }, {
    key: "initLoginFlowInPopup",
    value: function initLoginFlowInPopup(options) {
      var _this20 = this;

      options = options || {};
      return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {
        display: 'popup'
      }).then(function (url) {
        return new Promise(function (resolve, reject) {
          /**
           * Error handling section
           */
          var checkForPopupClosedInterval = 500;
          var windowRef = window.open(url, '_blank', _this20.calculatePopupFeatures(options));
          var checkForPopupClosedTimer;

          var checkForPopupClosed = function checkForPopupClosed() {
            if (!windowRef || windowRef.closed) {
              cleanup();
              reject(new OAuthErrorEvent('popup_closed', {}));
            }
          };

          if (!windowRef) {
            reject(new OAuthErrorEvent('popup_blocked', {}));
          } else {
            checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);
          }

          var cleanup = function cleanup() {
            window.clearInterval(checkForPopupClosedTimer);
            window.removeEventListener('message', listener);

            if (windowRef !== null) {
              windowRef.close();
            }

            windowRef = null;
          };

          var listener = function listener(e) {
            var message = _this20.processMessageEventMessage(e);

            if (message && message !== null) {
              _this20.tryLogin({
                customHashFragment: message,
                preventClearHashAfterLogin: true,
                customRedirectUri: _this20.silentRefreshRedirectUri
              }).then(function () {
                cleanup();
                resolve();
              }, function (err) {
                cleanup();
                reject(err);
              });
            } else {
              console.log('false event firing');
            }
          };

          window.addEventListener('message', listener);
        });
      });
    }
  }, {
    key: "calculatePopupFeatures",
    value: function calculatePopupFeatures(options) {
      // Specify an static height and width and calculate centered position
      var height = options.height || 470;
      var width = options.width || 500;
      var left = window.screenLeft + (window.outerWidth - width) / 2;
      var top = window.screenTop + (window.outerHeight - height) / 2;
      return "location=no,toolbar=no,width=".concat(width, ",height=").concat(height, ",top=").concat(top, ",left=").concat(left);
    }
  }, {
    key: "processMessageEventMessage",
    value: function processMessageEventMessage(e) {
      var expectedPrefix = '#';

      if (this.silentRefreshMessagePrefix) {
        expectedPrefix += this.silentRefreshMessagePrefix;
      }

      if (!e || !e.data || typeof e.data !== 'string') {
        return;
      }

      var prefixedMessage = e.data;

      if (!prefixedMessage.startsWith(expectedPrefix)) {
        return;
      }

      return '#' + prefixedMessage.substr(expectedPrefix.length);
    }
  }, {
    key: "canPerformSessionCheck",
    value: function canPerformSessionCheck() {
      if (!this.sessionChecksEnabled) {
        return false;
      }

      if (!this.sessionCheckIFrameUrl) {
        console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');
        return false;
      }

      var sessionState = this.getSessionState();

      if (!sessionState) {
        console.warn('sessionChecksEnabled is activated but there is no session_state');
        return false;
      }

      if (typeof this.document === 'undefined') {
        return false;
      }

      return true;
    }
  }, {
    key: "setupSessionCheckEventListener",
    value: function setupSessionCheckEventListener() {
      var _this21 = this;

      this.removeSessionCheckEventListener();

      this.sessionCheckEventListener = function (e) {
        var origin = e.origin.toLowerCase();

        var issuer = _this21.issuer.toLowerCase();

        _this21.debug('sessionCheckEventListener');

        if (!issuer.startsWith(origin)) {
          _this21.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);

          return;
        } // only run in Angular zone if it is 'changed' or 'error'


        switch (e.data) {
          case 'unchanged':
            _this21.handleSessionUnchanged();

            break;

          case 'changed':
            _this21.ngZone.run(function () {
              _this21.handleSessionChange();
            });

            break;

          case 'error':
            _this21.ngZone.run(function () {
              _this21.handleSessionError();
            });

            break;
        }

        _this21.debug('got info from session check inframe', e);
      }; // prevent Angular from refreshing the view on every message (runs in intervals)


      this.ngZone.runOutsideAngular(function () {
        window.addEventListener('message', _this21.sessionCheckEventListener);
      });
    }
  }, {
    key: "handleSessionUnchanged",
    value: function handleSessionUnchanged() {
      this.debug('session check', 'session unchanged');
    }
  }, {
    key: "handleSessionChange",
    value: function handleSessionChange() {
      var _this22 = this;

      this.eventsSubject.next(new OAuthInfoEvent('session_changed'));
      this.stopSessionCheckTimer();

      if (!this.useSilentRefresh && this.responseType === 'code') {
        this.refreshToken().then(function (_) {
          _this22.debug('token refresh after session change worked');
        }).catch(function (_) {
          _this22.debug('token refresh did not work after session changed');

          _this22.eventsSubject.next(new OAuthInfoEvent('session_terminated'));

          _this22.logOut(true);
        });
      } else if (this.silentRefreshRedirectUri) {
        this.silentRefresh().catch(function (_) {
          return _this22.debug('silent refresh failed after session changed');
        });
        this.waitForSilentRefreshAfterSessionChange();
      } else {
        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));
        this.logOut(true);
      }
    }
  }, {
    key: "waitForSilentRefreshAfterSessionChange",
    value: function waitForSilentRefreshAfterSessionChange() {
      var _this23 = this;

      this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
        return e.type === 'silently_refreshed' || e.type === 'silent_refresh_timeout' || e.type === 'silent_refresh_error';
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["first"])()).subscribe(function (e) {
        if (e.type !== 'silently_refreshed') {
          _this23.debug('silent refresh did not work after session changed');

          _this23.eventsSubject.next(new OAuthInfoEvent('session_terminated'));

          _this23.logOut(true);
        }
      });
    }
  }, {
    key: "handleSessionError",
    value: function handleSessionError() {
      this.stopSessionCheckTimer();
      this.eventsSubject.next(new OAuthInfoEvent('session_error'));
    }
  }, {
    key: "removeSessionCheckEventListener",
    value: function removeSessionCheckEventListener() {
      if (this.sessionCheckEventListener) {
        window.removeEventListener('message', this.sessionCheckEventListener);
        this.sessionCheckEventListener = null;
      }
    }
  }, {
    key: "initSessionCheck",
    value: function initSessionCheck() {
      if (!this.canPerformSessionCheck()) {
        return;
      }

      var existingIframe = this.document.getElementById(this.sessionCheckIFrameName);

      if (existingIframe) {
        this.document.body.removeChild(existingIframe);
      }

      var iframe = this.document.createElement('iframe');
      iframe.id = this.sessionCheckIFrameName;
      this.setupSessionCheckEventListener();
      var url = this.sessionCheckIFrameUrl;
      iframe.setAttribute('src', url);
      iframe.style.display = 'none';
      this.document.body.appendChild(iframe);
      this.startSessionCheckTimer();
    }
  }, {
    key: "startSessionCheckTimer",
    value: function startSessionCheckTimer() {
      var _this24 = this;

      this.stopSessionCheckTimer();
      this.ngZone.runOutsideAngular(function () {
        _this24.sessionCheckTimer = setInterval(_this24.checkSession.bind(_this24), _this24.sessionCheckIntervall);
      });
    }
  }, {
    key: "stopSessionCheckTimer",
    value: function stopSessionCheckTimer() {
      if (this.sessionCheckTimer) {
        clearInterval(this.sessionCheckTimer);
        this.sessionCheckTimer = null;
      }
    }
  }, {
    key: "checkSession",
    value: function checkSession() {
      var iframe = this.document.getElementById(this.sessionCheckIFrameName);

      if (!iframe) {
        this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);
      }

      var sessionState = this.getSessionState();

      if (!sessionState) {
        this.stopSessionCheckTimer();
      }

      var message = this.clientId + ' ' + sessionState;
      iframe.contentWindow.postMessage(message, this.issuer);
    }
  }, {
    key: "createLoginUrl",
    value: function createLoginUrl() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var loginHint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      var customRedirectUri = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      var noPrompt = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      var params = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
      return Object(tslib__WEBPACK_IMPORTED_MODULE_9__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
        var that, redirectUri, nonce, seperationChar, scope, url, _yield$this$createCha, _yield$this$createCha2, challenge, verifier, _i, _Object$keys, key, _iterator5, _step5, _key2;

        return _regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                that = this;

                if (customRedirectUri) {
                  redirectUri = customRedirectUri;
                } else {
                  redirectUri = this.redirectUri;
                }

                _context3.next = 4;
                return this.createAndSaveNonce();

              case 4:
                nonce = _context3.sent;

                if (state) {
                  state = nonce + this.config.nonceStateSeparator + encodeURIComponent(state);
                } else {
                  state = nonce;
                }

                if (!(!this.requestAccessToken && !this.oidc)) {
                  _context3.next = 8;
                  break;
                }

                throw new Error('Either requestAccessToken or oidc or both must be true');

              case 8:
                if (this.config.responseType) {
                  this.responseType = this.config.responseType;
                } else {
                  if (this.oidc && this.requestAccessToken) {
                    this.responseType = 'id_token token';
                  } else if (this.oidc && !this.requestAccessToken) {
                    this.responseType = 'id_token';
                  } else {
                    this.responseType = 'token';
                  }
                }

                seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';
                scope = that.scope;

                if (this.oidc && !scope.match(/(^|\s)openid($|\s)/)) {
                  scope = 'openid ' + scope;
                }

                url = that.loginUrl + seperationChar + 'response_type=' + encodeURIComponent(that.responseType) + '&client_id=' + encodeURIComponent(that.clientId) + '&state=' + encodeURIComponent(state) + '&redirect_uri=' + encodeURIComponent(redirectUri) + '&scope=' + encodeURIComponent(scope);

                if (!(this.responseType.includes('code') && !this.disablePKCE)) {
                  _context3.next = 23;
                  break;
                }

                _context3.next = 16;
                return this.createChallangeVerifierPairForPKCE();

              case 16:
                _yield$this$createCha = _context3.sent;
                _yield$this$createCha2 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_yield$this$createCha, 2);
                challenge = _yield$this$createCha2[0];
                verifier = _yield$this$createCha2[1];

                if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {
                  localStorage.setItem('PKCE_verifier', verifier);
                } else {
                  this._storage.setItem('PKCE_verifier', verifier);
                }

                url += '&code_challenge=' + challenge;
                url += '&code_challenge_method=S256';

              case 23:
                if (loginHint) {
                  url += '&login_hint=' + encodeURIComponent(loginHint);
                }

                if (that.resource) {
                  url += '&resource=' + encodeURIComponent(that.resource);
                }

                if (that.oidc) {
                  url += '&nonce=' + encodeURIComponent(nonce);
                }

                if (noPrompt) {
                  url += '&prompt=none';
                }

                for (_i = 0, _Object$keys = Object.keys(params); _i < _Object$keys.length; _i++) {
                  key = _Object$keys[_i];
                  url += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);
                }

                if (this.customQueryParams) {
                  _iterator5 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyNames(this.customQueryParams));

                  try {
                    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                      _key2 = _step5.value;
                      url += '&' + _key2 + '=' + encodeURIComponent(this.customQueryParams[_key2]);
                    }
                  } catch (err) {
                    _iterator5.e(err);
                  } finally {
                    _iterator5.f();
                  }
                }

                return _context3.abrupt("return", url);

              case 30:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
    }
  }, {
    key: "initImplicitFlowInternal",
    value: function initImplicitFlowInternal() {
      var _this25 = this;

      var additionalState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

      if (this.inImplicitFlow) {
        return;
      }

      this.inImplicitFlow = true;

      if (!this.validateUrlForHttps(this.loginUrl)) {
        throw new Error("loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");
      }

      var addParams = {};
      var loginHint = null;

      if (typeof params === 'string') {
        loginHint = params;
      } else if (typeof params === 'object') {
        addParams = params;
      }

      this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(function (error) {
        console.error('Error in initImplicitFlow', error);
        _this25.inImplicitFlow = false;
      });
    }
    /**
     * Starts the implicit flow and redirects to user to
     * the auth servers' login url.
     *
     * @param additionalState Optional state that is passed around.
     *  You'll find this state in the property `state` after `tryLogin` logged in the user.
     * @param params Hash with additional parameter. If it is a string, it is used for the
     *               parameter loginHint (for the sake of compatibility with former versions)
     */

  }, {
    key: "initImplicitFlow",
    value: function initImplicitFlow() {
      var _this26 = this;

      var additionalState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

      if (this.loginUrl !== '') {
        this.initImplicitFlowInternal(additionalState, params);
      } else {
        this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
          return e.type === 'discovery_document_loaded';
        })).subscribe(function (_) {
          return _this26.initImplicitFlowInternal(additionalState, params);
        });
      }
    }
    /**
     * Reset current implicit flow
     *
     * @description This method allows resetting the current implict flow in order to be initialized again.
     */

  }, {
    key: "resetImplicitFlow",
    value: function resetImplicitFlow() {
      this.inImplicitFlow = false;
    }
  }, {
    key: "callOnTokenReceivedIfExists",
    value: function callOnTokenReceivedIfExists(options) {
      var that = this;

      if (options.onTokenReceived) {
        var tokenParams = {
          idClaims: that.getIdentityClaims(),
          idToken: that.getIdToken(),
          accessToken: that.getAccessToken(),
          state: that.state
        };
        options.onTokenReceived(tokenParams);
      }
    }
  }, {
    key: "storeAccessTokenResponse",
    value: function storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {
      var _this27 = this;

      this._storage.setItem('access_token', accessToken);

      if (grantedScopes && !Array.isArray(grantedScopes)) {
        this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split('+')));
      } else if (grantedScopes && Array.isArray(grantedScopes)) {
        this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));
      }

      this._storage.setItem('access_token_stored_at', '' + Date.now());

      if (expiresIn) {
        var expiresInMilliSeconds = expiresIn * 1000;
        var now = new Date();
        var expiresAt = now.getTime() + expiresInMilliSeconds;

        this._storage.setItem('expires_at', '' + expiresAt);
      }

      if (refreshToken) {
        this._storage.setItem('refresh_token', refreshToken);
      }

      if (customParameters) {
        customParameters.forEach(function (value, key) {
          _this27._storage.setItem(key, value);
        });
      }
    }
    /**
     * Delegates to tryLoginImplicitFlow for the sake of competability
     * @param options Optional options.
     */

  }, {
    key: "tryLogin",
    value: function tryLogin() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      if (this.config.responseType === 'code') {
        return this.tryLoginCodeFlow(options).then(function (_) {
          return true;
        });
      } else {
        return this.tryLoginImplicitFlow(options);
      }
    }
  }, {
    key: "parseQueryString",
    value: function parseQueryString(queryString) {
      if (!queryString || queryString.length === 0) {
        return {};
      }

      if (queryString.charAt(0) === '?') {
        queryString = queryString.substr(1);
      }

      return this.urlHelper.parseQueryString(queryString);
    }
  }, {
    key: "tryLoginCodeFlow",
    value: function tryLoginCodeFlow() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      options = options || {};
      var querySource = options.customHashFragment ? options.customHashFragment.substring(1) : window.location.search;
      var parts = this.getCodePartsFromUrl(querySource);
      var code = parts['code'];
      var state = parts['state'];
      var sessionState = parts['session_state'];

      if (!options.preventClearHashAfterLogin) {
        var href = location.href.replace(/[&\?]code=[^&\$]*/, '').replace(/[&\?]scope=[^&\$]*/, '').replace(/[&\?]state=[^&\$]*/, '').replace(/[&\?]session_state=[^&\$]*/, '');
        history.replaceState(null, window.name, href);
      }

      var _this$parseState = this.parseState(state),
          _this$parseState2 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$parseState, 2),
          nonceInState = _this$parseState2[0],
          userState = _this$parseState2[1];

      this.state = userState;

      if (parts['error']) {
        this.debug('error trying to login');
        this.handleLoginError({}, parts);

        var _err2 = new OAuthErrorEvent('code_error', {}, parts);

        this.eventsSubject.next(_err2);
        return Promise.reject(_err2);
      }

      if (!nonceInState) {
        return Promise.resolve();
      }

      var success = this.validateNonce(nonceInState);

      if (!success) {
        var event = new OAuthErrorEvent('invalid_nonce_in_state', null);
        this.eventsSubject.next(event);
        return Promise.reject(event);
      }

      this.storeSessionState(sessionState);

      if (code) {
        return this.getTokenFromCode(code, options).then(function (_) {
          return null;
        });
      } else {
        return Promise.resolve();
      }
    }
    /**
     * Retrieve the returned auth code from the redirect uri that has been called.
     * If required also check hash, as we could use hash location strategy.
     */

  }, {
    key: "getCodePartsFromUrl",
    value: function getCodePartsFromUrl(queryString) {
      if (!queryString || queryString.length === 0) {
        return this.urlHelper.getHashFragmentParams();
      } // normalize query string


      if (queryString.charAt(0) === '?') {
        queryString = queryString.substr(1);
      }

      return this.urlHelper.parseQueryString(queryString);
    }
    /**
     * Get token using an intermediate code. Works for the Authorization Code flow.
     */

  }, {
    key: "getTokenFromCode",
    value: function getTokenFromCode(code, options) {
      var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpParams"]().set('grant_type', 'authorization_code').set('code', code).set('redirect_uri', options.customRedirectUri || this.redirectUri);

      if (!this.disablePKCE) {
        var PKCEVerifier;

        if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {
          PKCEVerifier = localStorage.getItem('PKCE_verifier');
        } else {
          PKCEVerifier = this._storage.getItem('PKCE_verifier');
        }

        if (!PKCEVerifier) {
          console.warn('No PKCE verifier found in oauth storage!');
        } else {
          params = params.set('code_verifier', PKCEVerifier);
        }
      }

      return this.fetchAndProcessToken(params);
    }
  }, {
    key: "fetchAndProcessToken",
    value: function fetchAndProcessToken(params) {
      var _this28 = this;

      this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');
      var headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpHeaders"]().set('Content-Type', 'application/x-www-form-urlencoded');

      if (this.useHttpBasicAuth) {
        var header = btoa("".concat(this.clientId, ":").concat(this.dummyClientSecret));
        headers = headers.set('Authorization', 'Basic ' + header);
      }

      if (!this.useHttpBasicAuth) {
        params = params.set('client_id', this.clientId);
      }

      if (!this.useHttpBasicAuth && this.dummyClientSecret) {
        params = params.set('client_secret', this.dummyClientSecret);
      }

      return new Promise(function (resolve, reject) {
        if (_this28.customQueryParams) {
          var _iterator6 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyNames(_this28.customQueryParams)),
              _step6;

          try {
            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
              var key = _step6.value;
              params = params.set(key, _this28.customQueryParams[key]);
            }
          } catch (err) {
            _iterator6.e(err);
          } finally {
            _iterator6.f();
          }
        }

        _this28.http.post(_this28.tokenEndpoint, params, {
          headers: headers
        }).subscribe(function (tokenResponse) {
          _this28.debug('refresh tokenResponse', tokenResponse);

          _this28.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || _this28.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, _this28.extractRecognizedCustomParameters(tokenResponse));

          if (_this28.oidc && tokenResponse.id_token) {
            _this28.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then(function (result) {
              _this28.storeIdToken(result);

              _this28.eventsSubject.next(new OAuthSuccessEvent('token_received'));

              _this28.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));

              resolve(tokenResponse);
            }).catch(function (reason) {
              _this28.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));

              console.error('Error validating tokens');
              console.error(reason);
              reject(reason);
            });
          } else {
            _this28.eventsSubject.next(new OAuthSuccessEvent('token_received'));

            _this28.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));

            resolve(tokenResponse);
          }
        }, function (err) {
          console.error('Error getting token', err);

          _this28.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));

          reject(err);
        });
      });
    }
    /**
     * Checks whether there are tokens in the hash fragment
     * as a result of the implicit flow. These tokens are
     * parsed, validated and used to sign the user in to the
     * current client.
     *
     * @param options Optional options.
     */

  }, {
    key: "tryLoginImplicitFlow",
    value: function tryLoginImplicitFlow() {
      var _this29 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      options = options || {};
      var parts;

      if (options.customHashFragment) {
        parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);
      } else {
        parts = this.urlHelper.getHashFragmentParams();
      }

      this.debug('parsed url', parts);
      var state = parts['state'];

      var _this$parseState3 = this.parseState(state),
          _this$parseState4 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$parseState3, 2),
          nonceInState = _this$parseState4[0],
          userState = _this$parseState4[1];

      this.state = userState;

      if (parts['error']) {
        this.debug('error trying to login');
        this.handleLoginError(options, parts);

        var _err3 = new OAuthErrorEvent('token_error', {}, parts);

        this.eventsSubject.next(_err3);
        return Promise.reject(_err3);
      }

      var accessToken = parts['access_token'];
      var idToken = parts['id_token'];
      var sessionState = parts['session_state'];
      var grantedScopes = parts['scope'];

      if (!this.requestAccessToken && !this.oidc) {
        return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');
      }

      if (this.requestAccessToken && !accessToken) {
        return Promise.resolve(false);
      }

      if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {
        return Promise.resolve(false);
      }

      if (this.oidc && !idToken) {
        return Promise.resolve(false);
      }

      if (this.sessionChecksEnabled && !sessionState) {
        this.logger.warn('session checks (Session Status Change Notification) ' + 'were activated in the configuration but the id_token ' + 'does not contain a session_state claim');
      }

      if (this.requestAccessToken && !options.disableOAuth2StateCheck) {
        var success = this.validateNonce(nonceInState);

        if (!success) {
          var event = new OAuthErrorEvent('invalid_nonce_in_state', null);
          this.eventsSubject.next(event);
          return Promise.reject(event);
        }
      }

      if (this.requestAccessToken) {
        this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);
      }

      if (!this.oidc) {
        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));

        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {
          location.hash = '';
        }

        this.callOnTokenReceivedIfExists(options);
        return Promise.resolve(true);
      }

      return this.processIdToken(idToken, accessToken).then(function (result) {
        if (options.validationHandler) {
          return options.validationHandler({
            accessToken: accessToken,
            idClaims: result.idTokenClaims,
            idToken: result.idToken,
            state: state
          }).then(function (_) {
            return result;
          });
        }

        return result;
      }).then(function (result) {
        _this29.storeIdToken(result);

        _this29.storeSessionState(sessionState);

        if (_this29.clearHashAfterLogin && !options.preventClearHashAfterLogin) {
          location.hash = '';
        }

        _this29.eventsSubject.next(new OAuthSuccessEvent('token_received'));

        _this29.callOnTokenReceivedIfExists(options);

        _this29.inImplicitFlow = false;
        return true;
      }).catch(function (reason) {
        _this29.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));

        _this29.logger.error('Error validating tokens');

        _this29.logger.error(reason);

        return Promise.reject(reason);
      });
    }
  }, {
    key: "parseState",
    value: function parseState(state) {
      var nonce = state;
      var userState = '';

      if (state) {
        var idx = state.indexOf(this.config.nonceStateSeparator);

        if (idx > -1) {
          nonce = state.substr(0, idx);
          userState = state.substr(idx + this.config.nonceStateSeparator.length);
        }
      }

      return [nonce, userState];
    }
  }, {
    key: "validateNonce",
    value: function validateNonce(nonceInState) {
      var savedNonce;

      if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {
        savedNonce = localStorage.getItem('nonce');
      } else {
        savedNonce = this._storage.getItem('nonce');
      }

      if (savedNonce !== nonceInState) {
        var _err4 = 'Validating access_token failed, wrong state/nonce.';
        console.error(_err4, savedNonce, nonceInState);
        return false;
      }

      return true;
    }
  }, {
    key: "storeIdToken",
    value: function storeIdToken(idToken) {
      this._storage.setItem('id_token', idToken.idToken);

      this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);

      this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);

      this._storage.setItem('id_token_stored_at', '' + Date.now());
    }
  }, {
    key: "storeSessionState",
    value: function storeSessionState(sessionState) {
      this._storage.setItem('session_state', sessionState);
    }
  }, {
    key: "getSessionState",
    value: function getSessionState() {
      return this._storage.getItem('session_state');
    }
  }, {
    key: "handleLoginError",
    value: function handleLoginError(options, parts) {
      if (options.onLoginError) {
        options.onLoginError(parts);
      }

      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {
        location.hash = '';
      }
    }
    /**
     * @ignore
     */

  }, {
    key: "processIdToken",
    value: function processIdToken(idToken, accessToken) {
      var _this30 = this;

      var skipNonceCheck = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var tokenParts = idToken.split('.');
      var headerBase64 = this.padBase64(tokenParts[0]);
      var headerJson = b64DecodeUnicode(headerBase64);
      var header = JSON.parse(headerJson);
      var claimsBase64 = this.padBase64(tokenParts[1]);
      var claimsJson = b64DecodeUnicode(claimsBase64);
      var claims = JSON.parse(claimsJson);
      var savedNonce;

      if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {
        savedNonce = localStorage.getItem('nonce');
      } else {
        savedNonce = this._storage.getItem('nonce');
      }

      if (Array.isArray(claims.aud)) {
        if (claims.aud.every(function (v) {
          return v !== _this30.clientId;
        })) {
          var _err5 = 'Wrong audience: ' + claims.aud.join(',');

          this.logger.warn(_err5);
          return Promise.reject(_err5);
        }
      } else {
        if (claims.aud !== this.clientId) {
          var _err6 = 'Wrong audience: ' + claims.aud;

          this.logger.warn(_err6);
          return Promise.reject(_err6);
        }
      }

      if (!claims.sub) {
        var _err7 = 'No sub claim in id_token';
        this.logger.warn(_err7);
        return Promise.reject(_err7);
      }
      /* For now, we only check whether the sub against
       * silentRefreshSubject when sessionChecksEnabled is on
       * We will reconsider in a later version to do this
       * in every other case too.
       */


      if (this.sessionChecksEnabled && this.silentRefreshSubject && this.silentRefreshSubject !== claims['sub']) {
        var _err8 = 'After refreshing, we got an id_token for another user (sub). ' + "Expected sub: ".concat(this.silentRefreshSubject, ", received sub: ").concat(claims['sub']);

        this.logger.warn(_err8);
        return Promise.reject(_err8);
      }

      if (!claims.iat) {
        var _err9 = 'No iat claim in id_token';
        this.logger.warn(_err9);
        return Promise.reject(_err9);
      }

      if (!this.skipIssuerCheck && claims.iss !== this.issuer) {
        var _err10 = 'Wrong issuer: ' + claims.iss;

        this.logger.warn(_err10);
        return Promise.reject(_err10);
      }

      if (!skipNonceCheck && claims.nonce !== savedNonce) {
        var _err11 = 'Wrong nonce: ' + claims.nonce;

        this.logger.warn(_err11);
        return Promise.reject(_err11);
      } // at_hash is not applicable to authorization code flow
      // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661
      // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate
      // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html


      if (this.hasOwnProperty('responseType') && (this.responseType === 'code' || this.responseType === 'id_token')) {
        this.disableAtHashCheck = true;
      }

      if (!this.disableAtHashCheck && this.requestAccessToken && !claims['at_hash']) {
        var _err12 = 'An at_hash is needed!';
        this.logger.warn(_err12);
        return Promise.reject(_err12);
      }

      var now = Date.now();
      var issuedAtMSec = claims.iat * 1000;
      var expiresAtMSec = claims.exp * 1000;
      var clockSkewInMSec = (this.clockSkewInSec || 600) * 1000;

      if (issuedAtMSec - clockSkewInMSec >= now || expiresAtMSec + clockSkewInMSec <= now) {
        var _err13 = 'Token has expired';
        console.error(_err13);
        console.error({
          now: now,
          issuedAtMSec: issuedAtMSec,
          expiresAtMSec: expiresAtMSec
        });
        return Promise.reject(_err13);
      }

      var validationParams = {
        accessToken: accessToken,
        idToken: idToken,
        jwks: this.jwks,
        idTokenClaims: claims,
        idTokenHeader: header,
        loadKeys: function loadKeys() {
          return _this30.loadJwks();
        }
      };

      if (this.disableAtHashCheck) {
        return this.checkSignature(validationParams).then(function (_) {
          var result = {
            idToken: idToken,
            idTokenClaims: claims,
            idTokenClaimsJson: claimsJson,
            idTokenHeader: header,
            idTokenHeaderJson: headerJson,
            idTokenExpiresAt: expiresAtMSec
          };
          return result;
        });
      }

      return this.checkAtHash(validationParams).then(function (atHashValid) {
        if (!_this30.disableAtHashCheck && _this30.requestAccessToken && !atHashValid) {
          var _err14 = 'Wrong at_hash';

          _this30.logger.warn(_err14);

          return Promise.reject(_err14);
        }

        return _this30.checkSignature(validationParams).then(function (_) {
          var atHashCheckEnabled = !_this30.disableAtHashCheck;
          var result = {
            idToken: idToken,
            idTokenClaims: claims,
            idTokenClaimsJson: claimsJson,
            idTokenHeader: header,
            idTokenHeaderJson: headerJson,
            idTokenExpiresAt: expiresAtMSec
          };

          if (atHashCheckEnabled) {
            return _this30.checkAtHash(validationParams).then(function (atHashValid) {
              if (_this30.requestAccessToken && !atHashValid) {
                var _err15 = 'Wrong at_hash';

                _this30.logger.warn(_err15);

                return Promise.reject(_err15);
              } else {
                return result;
              }
            });
          } else {
            return result;
          }
        });
      });
    }
    /**
     * Returns the received claims about the user.
     */

  }, {
    key: "getIdentityClaims",
    value: function getIdentityClaims() {
      var claims = this._storage.getItem('id_token_claims_obj');

      if (!claims) {
        return null;
      }

      return JSON.parse(claims);
    }
    /**
     * Returns the granted scopes from the server.
     */

  }, {
    key: "getGrantedScopes",
    value: function getGrantedScopes() {
      var scopes = this._storage.getItem('granted_scopes');

      if (!scopes) {
        return null;
      }

      return JSON.parse(scopes);
    }
    /**
     * Returns the current id_token.
     */

  }, {
    key: "getIdToken",
    value: function getIdToken() {
      return this._storage ? this._storage.getItem('id_token') : null;
    }
  }, {
    key: "padBase64",
    value: function padBase64(base64data) {
      while (base64data.length % 4 !== 0) {
        base64data += '=';
      }

      return base64data;
    }
    /**
     * Returns the current access_token.
     */

  }, {
    key: "getAccessToken",
    value: function getAccessToken() {
      return this._storage ? this._storage.getItem('access_token') : null;
    }
  }, {
    key: "getRefreshToken",
    value: function getRefreshToken() {
      return this._storage ? this._storage.getItem('refresh_token') : null;
    }
    /**
     * Returns the expiration date of the access_token
     * as milliseconds since 1970.
     */

  }, {
    key: "getAccessTokenExpiration",
    value: function getAccessTokenExpiration() {
      if (!this._storage.getItem('expires_at')) {
        return null;
      }

      return parseInt(this._storage.getItem('expires_at'), 10);
    }
  }, {
    key: "getAccessTokenStoredAt",
    value: function getAccessTokenStoredAt() {
      return parseInt(this._storage.getItem('access_token_stored_at'), 10);
    }
  }, {
    key: "getIdTokenStoredAt",
    value: function getIdTokenStoredAt() {
      return parseInt(this._storage.getItem('id_token_stored_at'), 10);
    }
    /**
     * Returns the expiration date of the id_token
     * as milliseconds since 1970.
     */

  }, {
    key: "getIdTokenExpiration",
    value: function getIdTokenExpiration() {
      if (!this._storage.getItem('id_token_expires_at')) {
        return null;
      }

      return parseInt(this._storage.getItem('id_token_expires_at'), 10);
    }
    /**
     * Checkes, whether there is a valid access_token.
     */

  }, {
    key: "hasValidAccessToken",
    value: function hasValidAccessToken() {
      if (this.getAccessToken()) {
        var expiresAt = this._storage.getItem('expires_at');

        var now = new Date();

        if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {
          return false;
        }

        return true;
      }

      return false;
    }
    /**
     * Checks whether there is a valid id_token.
     */

  }, {
    key: "hasValidIdToken",
    value: function hasValidIdToken() {
      if (this.getIdToken()) {
        var expiresAt = this._storage.getItem('id_token_expires_at');

        var now = new Date();

        if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {
          return false;
        }

        return true;
      }

      return false;
    }
    /**
     * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.
     */

  }, {
    key: "getCustomTokenResponseProperty",
    value: function getCustomTokenResponseProperty(requestedProperty) {
      return this._storage && this.config.customTokenParameters && this.config.customTokenParameters.indexOf(requestedProperty) >= 0 && this._storage.getItem(requestedProperty) !== null ? JSON.parse(this._storage.getItem(requestedProperty)) : null;
    }
    /**
     * Returns the auth-header that can be used
     * to transmit the access_token to a service
     */

  }, {
    key: "authorizationHeader",
    value: function authorizationHeader() {
      return 'Bearer ' + this.getAccessToken();
    }
  }, {
    key: "logOut",
    value: function logOut() {
      var _this31 = this;

      var customParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      var noRedirectToLogoutUrl = false;

      if (typeof customParameters === 'boolean') {
        noRedirectToLogoutUrl = customParameters;
        customParameters = {};
      }

      var id_token = this.getIdToken();

      this._storage.removeItem('access_token');

      this._storage.removeItem('id_token');

      this._storage.removeItem('refresh_token');

      if (this.saveNoncesInLocalStorage) {
        localStorage.removeItem('nonce');
        localStorage.removeItem('PKCE_verifier');
      } else {
        this._storage.removeItem('nonce');

        this._storage.removeItem('PKCE_verifier');
      }

      this._storage.removeItem('expires_at');

      this._storage.removeItem('id_token_claims_obj');

      this._storage.removeItem('id_token_expires_at');

      this._storage.removeItem('id_token_stored_at');

      this._storage.removeItem('access_token_stored_at');

      this._storage.removeItem('granted_scopes');

      this._storage.removeItem('session_state');

      if (this.config.customTokenParameters) {
        this.config.customTokenParameters.forEach(function (customParam) {
          return _this31._storage.removeItem(customParam);
        });
      }

      this.silentRefreshSubject = null;
      this.eventsSubject.next(new OAuthInfoEvent('logout'));

      if (!this.logoutUrl) {
        return;
      }

      if (noRedirectToLogoutUrl) {
        return;
      }

      if (!id_token && !this.postLogoutRedirectUri) {
        return;
      }

      var logoutUrl;

      if (!this.validateUrlForHttps(this.logoutUrl)) {
        throw new Error("logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");
      } // For backward compatibility


      if (this.logoutUrl.indexOf('{{') > -1) {
        logoutUrl = this.logoutUrl.replace(/\{\{id_token\}\}/, id_token).replace(/\{\{client_id\}\}/, this.clientId);
      } else {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpParams"]();

        if (id_token) {
          params = params.set('id_token_hint', id_token);
        }

        var postLogoutUrl = this.postLogoutRedirectUri || this.redirectUri;

        if (postLogoutUrl) {
          params = params.set('post_logout_redirect_uri', postLogoutUrl);

          if (state) {
            params = params.set('state', state);
          }
        }

        for (var key in customParameters) {
          params = params.set(key, customParameters[key]);
        }

        logoutUrl = this.logoutUrl + (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') + params.toString();
      }

      this.config.openUri(logoutUrl);
    }
    /**
     * @ignore
     */

  }, {
    key: "createAndSaveNonce",
    value: function createAndSaveNonce() {
      var that = this;
      return this.createNonce().then(function (nonce) {
        // Use localStorage for nonce if possible
        // localStorage is the only storage who survives a
        // redirect in ALL browsers (also IE)
        // Otherwiese we'd force teams who have to support
        // IE into using localStorage for everything
        if (that.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {
          localStorage.setItem('nonce', nonce);
        } else {
          that._storage.setItem('nonce', nonce);
        }

        return nonce;
      });
    }
    /**
     * @ignore
     */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.clearAccessTokenTimer();
      this.clearIdTokenTimer();
      this.removeSilentRefreshEventListener();
      var silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);

      if (silentRefreshFrame) {
        silentRefreshFrame.remove();
      }

      this.stopSessionCheckTimer();
      this.removeSessionCheckEventListener();
      var sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);

      if (sessionCheckFrame) {
        sessionCheckFrame.remove();
      }
    }
  }, {
    key: "createNonce",
    value: function createNonce() {
      var _this32 = this;

      return new Promise(function (resolve) {
        if (_this32.rngUrl) {
          throw new Error('createNonce with rng-web-api has not been implemented so far');
        }
        /*
         * This alphabet is from:
         * https://tools.ietf.org/html/rfc7636#section-4.1
         *
         * [A-Z] / [a-z] / [0-9] / "-" / "." / "_" / "~"
         */


        var unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';
        var size = 45;
        var id = '';
        var crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];

        if (crypto) {
          var bytes = new Uint8Array(size);
          crypto.getRandomValues(bytes); // Needed for IE

          if (!bytes.map) {
            bytes.map = Array.prototype.map;
          }

          bytes = bytes.map(function (x) {
            return unreserved.charCodeAt(x % unreserved.length);
          });
          id = String.fromCharCode.apply(null, bytes);
        } else {
          while (0 < size--) {
            id += unreserved[Math.random() * unreserved.length | 0];
          }
        }

        resolve(base64UrlEncode(id));
      });
    }
  }, {
    key: "checkAtHash",
    value: function checkAtHash(params) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_9__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
        return _regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (this.tokenValidationHandler) {
                  _context4.next = 3;
                  break;
                }

                this.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');
                return _context4.abrupt("return", true);

              case 3:
                return _context4.abrupt("return", this.tokenValidationHandler.validateAtHash(params));

              case 4:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
    }
  }, {
    key: "checkSignature",
    value: function checkSignature(params) {
      if (!this.tokenValidationHandler) {
        this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');
        return Promise.resolve(null);
      }

      return this.tokenValidationHandler.validateSignature(params);
    }
    /**
     * Start the implicit flow or the code flow,
     * depending on your configuration.
     */

  }, {
    key: "initLoginFlow",
    value: function initLoginFlow() {
      var additionalState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (this.responseType === 'code') {
        return this.initCodeFlow(additionalState, params);
      } else {
        return this.initImplicitFlow(additionalState, params);
      }
    }
    /**
     * Starts the authorization code flow and redirects to user to
     * the auth servers login url.
     */

  }, {
    key: "initCodeFlow",
    value: function initCodeFlow() {
      var _this33 = this;

      var additionalState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (this.loginUrl !== '') {
        this.initCodeFlowInternal(additionalState, params);
      } else {
        this.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
          return e.type === 'discovery_document_loaded';
        })).subscribe(function (_) {
          return _this33.initCodeFlowInternal(additionalState, params);
        });
      }
    }
  }, {
    key: "initCodeFlowInternal",
    value: function initCodeFlowInternal() {
      var additionalState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!this.validateUrlForHttps(this.loginUrl)) {
        throw new Error("loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).");
      }

      this.createLoginUrl(additionalState, '', null, false, params).then(this.config.openUri).catch(function (error) {
        console.error('Error in initAuthorizationCodeFlow');
        console.error(error);
      });
    }
  }, {
    key: "createChallangeVerifierPairForPKCE",
    value: function createChallangeVerifierPairForPKCE() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_9__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        var verifier, challengeRaw, challenge;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (this.crypto) {
                  _context5.next = 2;
                  break;
                }

                throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');

              case 2:
                _context5.next = 4;
                return this.createNonce();

              case 4:
                verifier = _context5.sent;
                _context5.next = 7;
                return this.crypto.calcHash(verifier, 'sha-256');

              case 7:
                challengeRaw = _context5.sent;
                challenge = base64UrlEncode(challengeRaw);
                return _context5.abrupt("return", [challenge, verifier]);

              case 10:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
    }
  }, {
    key: "extractRecognizedCustomParameters",
    value: function extractRecognizedCustomParameters(tokenResponse) {
      var foundParameters = new Map();

      if (!this.config.customTokenParameters) {
        return foundParameters;
      }

      this.config.customTokenParameters.forEach(function (recognizedParameter) {
        if (tokenResponse[recognizedParameter]) {
          foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));
        }
      });
      return foundParameters;
    }
    /**
     * Revokes the auth token to secure the vulnarability
     * of the token issued allowing the authorization server to clean
     * up any security credentials associated with the authorization
     */

  }, {
    key: "revokeTokenAndLogout",
    value: function revokeTokenAndLogout() {
      var _this34 = this;

      var customParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var ignoreCorsIssues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var revokeEndpoint = this.revocationEndpoint;
      var accessToken = this.getAccessToken();
      var refreshToken = this.getRefreshToken();

      if (!accessToken) {
        return;
      }

      var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpParams"]();
      var headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpHeaders"]().set('Content-Type', 'application/x-www-form-urlencoded');

      if (this.useHttpBasicAuth) {
        var header = btoa("".concat(this.clientId, ":").concat(this.dummyClientSecret));
        headers = headers.set('Authorization', 'Basic ' + header);
      }

      if (!this.useHttpBasicAuth) {
        params = params.set('client_id', this.clientId);
      }

      if (!this.useHttpBasicAuth && this.dummyClientSecret) {
        params = params.set('client_secret', this.dummyClientSecret);
      }

      if (this.customQueryParams) {
        var _iterator7 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(Object.getOwnPropertyNames(this.customQueryParams)),
            _step7;

        try {
          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
            var key = _step7.value;
            params = params.set(key, this.customQueryParams[key]);
          }
        } catch (err) {
          _iterator7.e(err);
        } finally {
          _iterator7.f();
        }
      }

      return new Promise(function (resolve, reject) {
        var revokeAccessToken;
        var revokeRefreshToken;

        if (accessToken) {
          var revokationParams = params.set('token', accessToken).set('token_type_hint', 'access_token');
          revokeAccessToken = _this34.http.post(revokeEndpoint, revokationParams, {
            headers: headers
          });
        } else {
          revokeAccessToken = Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(null);
        }

        if (refreshToken) {
          var _revokationParams = params.set('token', refreshToken).set('token_type_hint', 'refresh_token');

          revokeRefreshToken = _this34.http.post(revokeEndpoint, _revokationParams, {
            headers: headers
          });
        } else {
          revokeRefreshToken = Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(null);
        }

        if (ignoreCorsIssues) {
          revokeAccessToken = revokeAccessToken.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (err) {
            if (err.status === 0) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(null);
            }

            return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["throwError"])(err);
          }));
          revokeRefreshToken = revokeRefreshToken.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (err) {
            if (err.status === 0) {
              return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(null);
            }

            return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["throwError"])(err);
          }));
        }

        Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["combineLatest"])([revokeAccessToken, revokeRefreshToken]).subscribe(function (res) {
          _this34.logOut(customParameters);

          resolve(res);

          _this34.logger.info('Token successfully revoked');
        }, function (err) {
          _this34.logger.error('Error revoking token', err);

          _this34.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));

          reject(err);
        });
      });
    }
  }]);

  return OAuthService;
}(AuthConfig);

OAuthService.ɵfac = function OAuthService_Factory(t) {
  return new (t || OAuthService)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](OAuthStorage, 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](ValidationHandler, 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](AuthConfig, 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](UrlHelperService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](OAuthLogger), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](HashHandler, 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]));
};

OAuthService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: OAuthService,
  factory: OAuthService.ɵfac
});

OAuthService.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
  }, {
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpClient"]
  }, {
    type: OAuthStorage,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }, {
    type: ValidationHandler,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }, {
    type: AuthConfig,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }, {
    type: UrlHelperService
  }, {
    type: OAuthLogger
  }, {
    type: HashHandler,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](OAuthService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
    }, {
      type: _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpClient"]
    }, {
      type: OAuthStorage,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }, {
      type: ValidationHandler,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }, {
      type: AuthConfig,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }, {
      type: UrlHelperService
    }, {
      type: OAuthLogger
    }, {
      type: HashHandler,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }];
  }, null);
})();

var OAuthModuleConfig = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function OAuthModuleConfig() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthModuleConfig);
});

var OAuthResourceServerConfig = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function OAuthResourceServerConfig() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthResourceServerConfig);
});

var OAuthResourceServerErrorHandler = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(function OAuthResourceServerErrorHandler() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthResourceServerErrorHandler);
});

var OAuthNoopResourceServerErrorHandler = /*#__PURE__*/function () {
  function OAuthNoopResourceServerErrorHandler() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthNoopResourceServerErrorHandler);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(OAuthNoopResourceServerErrorHandler, [{
    key: "handleError",
    value: function handleError(err) {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["throwError"])(err);
    }
  }]);

  return OAuthNoopResourceServerErrorHandler;
}();

var DefaultOAuthInterceptor = /*#__PURE__*/function () {
  function DefaultOAuthInterceptor(authStorage, oAuthService, errorHandler, moduleConfig) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DefaultOAuthInterceptor);

    this.authStorage = authStorage;
    this.oAuthService = oAuthService;
    this.errorHandler = errorHandler;
    this.moduleConfig = moduleConfig;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(DefaultOAuthInterceptor, [{
    key: "checkUrl",
    value: function checkUrl(url) {
      if (this.moduleConfig.resourceServer.customUrlValidation) {
        return this.moduleConfig.resourceServer.customUrlValidation(url);
      }

      if (this.moduleConfig.resourceServer.allowedUrls) {
        return !!this.moduleConfig.resourceServer.allowedUrls.find(function (u) {
          return url.startsWith(u);
        });
      }

      return true;
    }
  }, {
    key: "intercept",
    value: function intercept(req, next) {
      var _this35 = this;

      var url = req.url.toLowerCase();

      if (!this.moduleConfig || !this.moduleConfig.resourceServer || !this.checkUrl(url)) {
        return next.handle(req);
      }

      var sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;

      if (!sendAccessToken) {
        return next.handle(req).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (err) {
          return _this35.errorHandler.handleError(err);
        }));
      }

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["merge"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(this.oAuthService.getAccessToken()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (token) {
        return token ? true : false;
      })), this.oAuthService.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (e) {
        return e.type === 'token_received';
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["timeout"])(this.oAuthService.waitForTokenInMsec || 0), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (_) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(null);
      }), // timeout is not an error
      Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["map"])(function (_) {
        return _this35.oAuthService.getAccessToken();
      }))).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["mergeMap"])(function (token) {
        if (token) {
          var header = 'Bearer ' + token;
          var headers = req.headers.set('Authorization', header);
          req = req.clone({
            headers: headers
          });
        }

        return next.handle(req).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["catchError"])(function (err) {
          return _this35.errorHandler.handleError(err);
        }));
      }));
    }
  }]);

  return DefaultOAuthInterceptor;
}();

DefaultOAuthInterceptor.ɵfac = function DefaultOAuthInterceptor_Factory(t) {
  return new (t || DefaultOAuthInterceptor)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](OAuthStorage), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](OAuthService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](OAuthResourceServerErrorHandler), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](OAuthModuleConfig, 8));
};

DefaultOAuthInterceptor.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: DefaultOAuthInterceptor,
  factory: DefaultOAuthInterceptor.ɵfac
});

DefaultOAuthInterceptor.ctorParameters = function () {
  return [{
    type: OAuthStorage
  }, {
    type: OAuthService
  }, {
    type: OAuthResourceServerErrorHandler
  }, {
    type: OAuthModuleConfig,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](DefaultOAuthInterceptor, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [{
      type: OAuthStorage
    }, {
      type: OAuthService
    }, {
      type: OAuthResourceServerErrorHandler
    }, {
      type: OAuthModuleConfig,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }];
  }, null);
})();
/**
 * A validation handler that isn't validating nothing.
 * Can be used to skip validation (at your own risk).
 */


var NullValidationHandler = /*#__PURE__*/function () {
  function NullValidationHandler() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, NullValidationHandler);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(NullValidationHandler, [{
    key: "validateSignature",
    value: function validateSignature(validationParams) {
      return Promise.resolve(null);
    }
  }, {
    key: "validateAtHash",
    value: function validateAtHash(validationParams) {
      return Promise.resolve(true);
    }
  }]);

  return NullValidationHandler;
}();

function createDefaultLogger() {
  return console;
}

function createDefaultStorage() {
  return typeof sessionStorage !== 'undefined' ? sessionStorage : new MemoryStorage();
}

var OAuthModule = /*#__PURE__*/function () {
  function OAuthModule() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, OAuthModule);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(OAuthModule, null, [{
    key: "forRoot",
    value: function forRoot() {
      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var validationHandlerClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NullValidationHandler;
      return {
        ngModule: OAuthModule,
        providers: [OAuthService, UrlHelperService, {
          provide: OAuthLogger,
          useFactory: createDefaultLogger
        }, {
          provide: OAuthStorage,
          useFactory: createDefaultStorage
        }, {
          provide: ValidationHandler,
          useClass: validationHandlerClass
        }, {
          provide: HashHandler,
          useClass: DefaultHashHandler
        }, {
          provide: OAuthResourceServerErrorHandler,
          useClass: OAuthNoopResourceServerErrorHandler
        }, {
          provide: OAuthModuleConfig,
          useValue: config
        }, {
          provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HTTP_INTERCEPTORS"],
          useClass: DefaultOAuthInterceptor,
          multi: true
        }]
      };
    }
  }]);

  return OAuthModule;
}();

OAuthModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: OAuthModule
});
OAuthModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  factory: function OAuthModule_Factory(t) {
    return new (t || OAuthModule)();
  },
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_7__["CommonModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](OAuthModule, {
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_7__["CommonModule"]];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](OAuthModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["CommonModule"]],
      declarations: [],
      exports: []
    }]
  }], null, null);
})();

var err = "PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n";
/**
 * This is just a dummy of the JwksValidationHandler
 * telling the users that the real one has been moved
 * to an library of its own, namely angular-oauth2-oidc-utils
 */

var JwksValidationHandler = /*#__PURE__*/function (_NullValidationHandle) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(JwksValidationHandler, _NullValidationHandle);

  var _super5 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(JwksValidationHandler);

  function JwksValidationHandler() {
    var _this36;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, JwksValidationHandler);

    _this36 = _super5.call(this);
    console.error(err);
    return _this36;
  }

  return Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(JwksValidationHandler);
}(NullValidationHandler);

var AUTH_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('AUTH_CONFIG');
/**
 * Generated bundle index. Do not edit.
 */


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ }),

/***/ "./node_modules/msal/lib-es6/Account.js":
/*!**********************************************!*\
  !*** ./node_modules/msal/lib-es6/Account.js ***!
  \**********************************************/
/*! exports provided: Account */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Account", function() { return Account; });
/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


/**
 * accountIdentifier       combination of idToken.uid and idToken.utid
 * homeAccountIdentifier   combination of clientInfo.uid and clientInfo.utid
 * userName                idToken.preferred_username
 * name                    idToken.name
 * idToken                 idToken
 * sid                     idToken.sid - session identifier
 * environment             idtoken.issuer (the authority that issues the token)
 */

var Account =
/** @class */
function () {
  /**
   * Creates an Account Object
   * @praram accountIdentifier
   * @param homeAccountIdentifier
   * @param userName
   * @param name
   * @param idToken
   * @param sid
   * @param environment
   */
  function Account(accountIdentifier, homeAccountIdentifier, userName, name, idTokenClaims, sid, environment) {
    this.accountIdentifier = accountIdentifier;
    this.homeAccountIdentifier = homeAccountIdentifier;
    this.userName = userName;
    this.name = name; // will be deprecated soon

    this.idToken = idTokenClaims;
    this.idTokenClaims = idTokenClaims;
    this.sid = sid;
    this.environment = environment;
  }
  /**
   * @hidden
   * @param idToken
   * @param clientInfo
   */


  Account.createAccount = function (idToken, clientInfo) {
    // create accountIdentifier
    var accountIdentifier = idToken.objectId || idToken.subject; // create homeAccountIdentifier

    var uid = clientInfo ? clientInfo.uid : "";
    var utid = clientInfo ? clientInfo.utid : "";
    var homeAccountIdentifier;

    if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_1__["StringUtils"].isEmpty(uid)) {
      homeAccountIdentifier = _utils_StringUtils__WEBPACK_IMPORTED_MODULE_1__["StringUtils"].isEmpty(utid) ? _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Encode(uid) : _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Encode(uid) + "." + _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Encode(utid);
    }

    return new Account(accountIdentifier, homeAccountIdentifier, idToken.preferredName, idToken.name, idToken.claims, idToken.sid, idToken.issuer);
  };
  /**
   * Utils function to compare two Account objects - used to check if the same user account is logged in
   *
   * @param a1: Account object
   * @param a2: Account object
   */


  Account.compareAccounts = function (a1, a2) {
    if (!a1 || !a2) {
      return false;
    }

    if (a1.homeAccountIdentifier && a2.homeAccountIdentifier) {
      if (a1.homeAccountIdentifier === a2.homeAccountIdentifier) {
        return true;
      }
    }

    return false;
  };

  return Account;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/AuthResponse.js":
/*!***************************************************!*\
  !*** ./node_modules/msal/lib-es6/AuthResponse.js ***!
  \***************************************************/
/*! exports provided: buildResponseStateOnly */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildResponseStateOnly", function() { return buildResponseStateOnly; });
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
function buildResponseStateOnly(state) {
  return {
    uniqueId: "",
    tenantId: "",
    tokenType: "",
    idToken: null,
    idTokenClaims: null,
    accessToken: "",
    scopes: null,
    expiresOn: null,
    account: null,
    accountState: state,
    fromCache: false
  };
}

/***/ }),

/***/ "./node_modules/msal/lib-es6/ClientInfo.js":
/*!*************************************************!*\
  !*** ./node_modules/msal/lib-es6/ClientInfo.js ***!
  \*************************************************/
/*! exports provided: ClientInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientInfo", function() { return ClientInfo; });
/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony import */ var _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error/ClientAuthError */ "./node_modules/msal/lib-es6/error/ClientAuthError.js");
/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */



/**
 * @hidden
 */

var ClientInfo =
/** @class */
function () {
  function ClientInfo(rawClientInfo, authority) {
    if (!rawClientInfo || _utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__["StringUtils"].isEmpty(rawClientInfo)) {
      this.uid = "";
      this.utid = "";
      return;
    }

    try {
      var decodedClientInfo = _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Decode(rawClientInfo);
      var clientInfo = JSON.parse(decodedClientInfo);

      if (clientInfo) {
        if (clientInfo.hasOwnProperty("uid")) {
          this.uid = authority ? ClientInfo.stripPolicyFromUid(clientInfo.uid, authority) : clientInfo.uid;
        }

        if (clientInfo.hasOwnProperty("utid")) {
          this.utid = clientInfo.utid;
        }
      }
    } catch (e) {
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_1__["ClientAuthError"].createClientInfoDecodingError(e);
    }
  }

  Object.defineProperty(ClientInfo.prototype, "uid", {
    get: function get() {
      return this._uid ? this._uid : "";
    },
    set: function set(uid) {
      this._uid = uid;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ClientInfo.prototype, "utid", {
    get: function get() {
      return this._utid ? this._utid : "";
    },
    set: function set(utid) {
      this._utid = utid;
    },
    enumerable: false,
    configurable: true
  });

  ClientInfo.createClientInfoFromIdToken = function (idToken, authority) {
    var clientInfo = {
      uid: idToken.subject,
      utid: ""
    };
    return new ClientInfo(_utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Encode(JSON.stringify(clientInfo)), authority);
  };

  ClientInfo.stripPolicyFromUid = function (uid, authority) {
    var uidSegments = uid.split("-"); // Reverse the url segments so the last one is more easily accessible

    var urlSegments = authority.split("/").reverse();
    var policy = "";

    if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__["StringUtils"].isEmpty(urlSegments[0])) {
      policy = urlSegments[0];
    } else if (urlSegments.length > 1) {
      // If the original url had a trailing slash, urlSegments[0] would be "" so take the next element
      policy = urlSegments[1];
    }

    if (uidSegments[uidSegments.length - 1] === policy) {
      // If the last segment of uid matches the last segment of authority url, remove the last segment of uid
      return uidSegments.slice(0, uidSegments.length - 1).join("-");
    }

    return uid;
  };

  ClientInfo.prototype.encodeClientInfo = function () {
    var clientInfo = JSON.stringify({
      uid: this.uid,
      utid: this.utid
    });
    return _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Encode(clientInfo);
  };

  return ClientInfo;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/Configuration.js":
/*!****************************************************!*\
  !*** ./node_modules/msal/lib-es6/Configuration.js ***!
  \****************************************************/
/*! exports provided: buildConfiguration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buildConfiguration", function() { return buildConfiguration; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Logger */ "./node_modules/msal/lib-es6/Logger.js");
/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */



/**
 * Defaults for the Configuration Options
 */

var FRAME_TIMEOUT = 6000;
var OFFSET = 300;
var NAVIGATE_FRAME_WAIT = 500;
var DEFAULT_AUTH_OPTIONS = {
  clientId: "",
  authority: null,
  validateAuthority: true,
  authorityMetadata: "",
  knownAuthorities: [],
  redirectUri: function redirectUri() {
    return _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_2__["UrlUtils"].getCurrentUrl();
  },
  postLogoutRedirectUri: function postLogoutRedirectUri() {
    return _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_2__["UrlUtils"].getCurrentUrl();
  },
  navigateToLoginRequestUrl: true
};
var DEFAULT_CACHE_OPTIONS = {
  cacheLocation: "sessionStorage",
  storeAuthStateInCookie: false
};
var DEFAULT_SYSTEM_OPTIONS = {
  logger: new _Logger__WEBPACK_IMPORTED_MODULE_1__["Logger"](null),
  loadFrameTimeout: FRAME_TIMEOUT,
  tokenRenewalOffsetSeconds: OFFSET,
  navigateFrameWait: NAVIGATE_FRAME_WAIT
};
var DEFAULT_FRAMEWORK_OPTIONS = {
  isAngular: false,
  unprotectedResources: new Array(),
  protectedResourceMap: new Map()
};
/**
 * MSAL function that sets the default options when not explicitly configured from app developer
 *
 * @param TAuthOptions
 * @param TCacheOptions
 * @param TSystemOptions
 * @param TFrameworkOptions
 * @param TAuthorityDataOptions
 *
 * @returns TConfiguration object
 */

function buildConfiguration(_a) {
  var auth = _a.auth,
      _b = _a.cache,
      cache = _b === void 0 ? {} : _b,
      _c = _a.system,
      system = _c === void 0 ? {} : _c,
      _d = _a.framework,
      framework = _d === void 0 ? {} : _d;
  var overlayedConfig = {
    auth: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, DEFAULT_AUTH_OPTIONS), auth),
    cache: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, DEFAULT_CACHE_OPTIONS), cache),
    system: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, DEFAULT_SYSTEM_OPTIONS), system),
    framework: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, DEFAULT_FRAMEWORK_OPTIONS), framework)
  };
  return overlayedConfig;
}

/***/ }),

/***/ "./node_modules/msal/lib-es6/IdToken.js":
/*!**********************************************!*\
  !*** ./node_modules/msal/lib-es6/IdToken.js ***!
  \**********************************************/
/*! exports provided: IdToken */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IdToken", function() { return IdToken; });
/* harmony import */ var _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error/ClientAuthError */ "./node_modules/msal/lib-es6/error/ClientAuthError.js");
/* harmony import */ var _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/TokenUtils */ "./node_modules/msal/lib-es6/utils/TokenUtils.js");
/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */



/**
 * @hidden
 */

var IdToken =
/** @class */
function () {
  /* tslint:disable:no-string-literal */
  function IdToken(rawIdToken) {
    if (_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__["StringUtils"].isEmpty(rawIdToken)) {
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_0__["ClientAuthError"].createIdTokenNullOrEmptyError(rawIdToken);
    }

    try {
      this.rawIdToken = rawIdToken;
      this.claims = _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_1__["TokenUtils"].extractIdToken(rawIdToken);

      if (this.claims) {
        if (this.claims.hasOwnProperty("iss")) {
          this.issuer = this.claims["iss"];
        }

        if (this.claims.hasOwnProperty("oid")) {
          this.objectId = this.claims["oid"];
        }

        if (this.claims.hasOwnProperty("sub")) {
          this.subject = this.claims["sub"];
        }

        if (this.claims.hasOwnProperty("tid")) {
          this.tenantId = this.claims["tid"];
        }

        if (this.claims.hasOwnProperty("ver")) {
          this.version = this.claims["ver"];
        }

        if (this.claims.hasOwnProperty("preferred_username")) {
          this.preferredName = this.claims["preferred_username"];
        } else if (this.claims.hasOwnProperty("upn")) {
          this.preferredName = this.claims["upn"];
        }

        if (this.claims.hasOwnProperty("name")) {
          this.name = this.claims["name"];
        }

        if (this.claims.hasOwnProperty("nonce")) {
          this.nonce = this.claims["nonce"];
        }

        if (this.claims.hasOwnProperty("exp")) {
          this.expiration = this.claims["exp"];
        }

        if (this.claims.hasOwnProperty("home_oid")) {
          this.homeObjectId = this.claims["home_oid"];
        }

        if (this.claims.hasOwnProperty("sid")) {
          this.sid = this.claims["sid"];
        }

        if (this.claims.hasOwnProperty("cloud_instance_host_name")) {
          this.cloudInstance = this.claims["cloud_instance_host_name"];
        }
        /* tslint:enable:no-string-literal */

      }
    } catch (e) {
      /*
       * TODO: This error here won't really every be thrown, since extractIdToken() returns null if the decodeJwt() fails.
       * Need to add better error handling here to account for being unable to decode jwts.
       */
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_0__["ClientAuthError"].createIdTokenParsingError(e);
    }
  }

  return IdToken;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/Logger.js":
/*!*********************************************!*\
  !*** ./node_modules/msal/lib-es6/Logger.js ***!
  \*********************************************/
/*! exports provided: LogLevel, Logger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogLevel", function() { return LogLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Logger", function() { return Logger; });
/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/* harmony import */ var _packageMetadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packageMetadata */ "./node_modules/msal/lib-es6/packageMetadata.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


var LogLevel;

(function (LogLevel) {
  LogLevel[LogLevel["Error"] = 0] = "Error";
  LogLevel[LogLevel["Warning"] = 1] = "Warning";
  LogLevel[LogLevel["Info"] = 2] = "Info";
  LogLevel[LogLevel["Verbose"] = 3] = "Verbose";
})(LogLevel || (LogLevel = {}));

var Logger =
/** @class */
function () {
  function Logger(localCallback, options) {
    if (options === void 0) {
      options = {};
    }
    /**
     * @hidden
     */


    this.level = LogLevel.Info;
    var _a = options.correlationId,
        correlationId = _a === void 0 ? "" : _a,
        _b = options.level,
        level = _b === void 0 ? LogLevel.Info : _b,
        _c = options.piiLoggingEnabled,
        piiLoggingEnabled = _c === void 0 ? false : _c;
    this.localCallback = localCallback;
    this.correlationId = correlationId;
    this.level = level;
    this.piiLoggingEnabled = piiLoggingEnabled;
  }
  /**
   * @hidden
   */


  Logger.prototype.logMessage = function (logLevel, logMessage, containsPii) {
    if (logLevel > this.level || !this.piiLoggingEnabled && containsPii) {
      return;
    }

    var timestamp = new Date().toUTCString();
    var log;

    if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_0__["StringUtils"].isEmpty(this.correlationId)) {
      log = timestamp + ":" + this.correlationId + "-" + _packageMetadata__WEBPACK_IMPORTED_MODULE_1__["version"] + "-" + LogLevel[logLevel] + (containsPii ? "-pii" : "") + " " + logMessage;
    } else {
      log = timestamp + ":" + _packageMetadata__WEBPACK_IMPORTED_MODULE_1__["version"] + "-" + LogLevel[logLevel] + (containsPii ? "-pii" : "") + " " + logMessage;
    }

    this.executeCallback(logLevel, log, containsPii);
  };
  /**
   * @hidden
   */


  Logger.prototype.executeCallback = function (level, message, containsPii) {
    if (this.localCallback) {
      this.localCallback(level, message, containsPii);
    }
  };
  /**
   * @hidden
   */


  Logger.prototype.error = function (message) {
    this.logMessage(LogLevel.Error, message, false);
  };
  /**
   * @hidden
   */


  Logger.prototype.errorPii = function (message) {
    this.logMessage(LogLevel.Error, message, true);
  };
  /**
   * @hidden
   */


  Logger.prototype.warning = function (message) {
    this.logMessage(LogLevel.Warning, message, false);
  };
  /**
   * @hidden
   */


  Logger.prototype.warningPii = function (message) {
    this.logMessage(LogLevel.Warning, message, true);
  };
  /**
   * @hidden
   */


  Logger.prototype.info = function (message) {
    this.logMessage(LogLevel.Info, message, false);
  };
  /**
   * @hidden
   */


  Logger.prototype.infoPii = function (message) {
    this.logMessage(LogLevel.Info, message, true);
  };
  /**
   * @hidden
   */


  Logger.prototype.verbose = function (message) {
    this.logMessage(LogLevel.Verbose, message, false);
  };
  /**
   * @hidden
   */


  Logger.prototype.verbosePii = function (message) {
    this.logMessage(LogLevel.Verbose, message, true);
  };

  Logger.prototype.isPiiLoggingEnabled = function () {
    return this.piiLoggingEnabled;
  };

  return Logger;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/ScopeSet.js":
/*!***********************************************!*\
  !*** ./node_modules/msal/lib-es6/ScopeSet.js ***!
  \***********************************************/
/*! exports provided: ScopeSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScopeSet", function() { return ScopeSet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error/ClientConfigurationError */ "./node_modules/msal/lib-es6/error/ClientConfigurationError.js");
/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */




var ScopeSet =
/** @class */
function () {
  function ScopeSet() {}
  /**
   * Check if there are dup scopes in a given request
   *
   * @param cachedScopes
   * @param scopes
   */
  // TODO: Rename this, intersecting scopes isn't a great name for duplicate checker


  ScopeSet.isIntersectingScopes = function (cachedScopes, scopes) {
    var convertedCachedScopes = this.trimAndConvertArrayToLowerCase(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(cachedScopes));
    var requestScopes = this.trimAndConvertArrayToLowerCase(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(scopes));

    for (var i = 0; i < requestScopes.length; i++) {
      if (convertedCachedScopes.indexOf(requestScopes[i].toLowerCase()) > -1) {
        return true;
      }
    }

    return false;
  };
  /**
   * Check if a given scope is present in the request
   *
   * @param cachedScopes
   * @param scopes
   */


  ScopeSet.containsScope = function (cachedScopes, scopes) {
    var convertedCachedScopes = this.trimAndConvertArrayToLowerCase(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(cachedScopes));
    var requestScopes = this.trimAndConvertArrayToLowerCase(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(scopes));
    return requestScopes.every(function (value) {
      return convertedCachedScopes.indexOf(value.toString().toLowerCase()) >= 0;
    });
  };
  /**
   *  Trims and converts string to lower case
   *
   * @param scopes
   */
  // TODO: Rename this, too generic name for a function that only deals with scopes


  ScopeSet.trimAndConvertToLowerCase = function (scope) {
    return scope.trim().toLowerCase();
  };
  /**
   * Performs trimAndConvertToLowerCase on string array
   * @param scopes
   */


  ScopeSet.trimAndConvertArrayToLowerCase = function (scopes) {
    var _this = this;

    return scopes.map(function (scope) {
      return _this.trimAndConvertToLowerCase(scope);
    });
  };
  /**
   * Trims each scope in scopes array
   * @param scopes
   */


  ScopeSet.trimScopes = function (scopes) {
    return scopes.map(function (scope) {
      return scope.trim();
    });
  };
  /**
   * Remove one element from a scope array
   *
   * @param scopes
   * @param scope
   */
  // TODO: Rename this, too generic name for a function that only deals with scopes


  ScopeSet.removeElement = function (scopes, scope) {
    var scopeVal = this.trimAndConvertToLowerCase(scope);
    return scopes.filter(function (value) {
      return value !== scopeVal;
    });
  };
  /**
   * Parse the scopes into a formatted scopeList
   * @param scopes
   */


  ScopeSet.parseScope = function (scopes) {
    var scopeList = "";

    if (scopes) {
      for (var i = 0; i < scopes.length; ++i) {
        scopeList += i !== scopes.length - 1 ? scopes[i] + " " : scopes[i];
      }
    }

    return scopeList;
  };
  /**
   * @hidden
   *
   * Used to validate the scopes input parameter requested  by the developer.
   * @param {Array<string>} scopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.
   * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not
   * @ignore
   */


  ScopeSet.validateInputScope = function (scopes, scopesRequired) {
    if (!scopes) {
      if (scopesRequired) {
        throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__["ClientConfigurationError"].createScopesRequiredError(scopes);
      } else {
        return;
      }
    } // Check that scopes is an array object (also throws error if scopes == null)


    if (!Array.isArray(scopes)) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__["ClientConfigurationError"].createScopesNonArrayError(scopes);
    } // Check that scopes is not an empty array


    if (scopes.length < 1 && scopesRequired) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__["ClientConfigurationError"].createEmptyScopesArrayError(scopes.toString());
    }
  };
  /**
   * @hidden
   *
   * Extracts scope value from the state sent with the authentication request.
   * @param {string} state
   * @returns {string} scope.
   * @ignore
   */


  ScopeSet.getScopeFromState = function (state) {
    if (state) {
      var splitIndex = state.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].resourceDelimiter);

      if (splitIndex > -1 && splitIndex + 1 < state.length) {
        return state.substring(splitIndex + 1);
      }
    }

    return "";
  };
  /**
   * @ignore
   * Appends extraScopesToConsent if passed
   * @param {@link AuthenticationParameters}
   */


  ScopeSet.appendScopes = function (reqScopes, reqExtraScopesToConsent) {
    if (reqScopes) {
      var convertedExtraScopes = reqExtraScopesToConsent ? this.trimAndConvertArrayToLowerCase(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(reqExtraScopesToConsent)) : null;
      var convertedReqScopes = this.trimAndConvertArrayToLowerCase(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(reqScopes));
      return convertedExtraScopes ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(convertedReqScopes, convertedExtraScopes) : convertedReqScopes;
    }

    return null;
  }; // #endregion

  /**
   * @ignore
   * Returns true if the scopes array only contains openid and/or profile
   */


  ScopeSet.onlyContainsOidcScopes = function (scopes) {
    var scopesCount = scopes.length;
    var oidcScopesFound = 0;

    if (scopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].openidScope) > -1) {
      oidcScopesFound += 1;
    }

    if (scopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].profileScope) > -1) {
      oidcScopesFound += 1;
    }

    return scopesCount > 0 && scopesCount === oidcScopesFound;
  };
  /**
   * @ignore
   * Returns true if the scopes array only contains openid and/or profile
   */


  ScopeSet.containsAnyOidcScopes = function (scopes) {
    var containsOpenIdScope = scopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].openidScope) > -1;
    var containsProfileScope = scopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].profileScope) > -1;
    return containsOpenIdScope || containsProfileScope;
  };
  /**
   * @ignore
   * Returns true if the clientId is the only scope in the array
   */


  ScopeSet.onlyContainsClientId = function (scopes, clientId) {
    // Double negation to force false value returned in case scopes is null
    return !!scopes && scopes.indexOf(clientId) > -1 && scopes.length === 1;
  };
  /**
   * @ignore
   * Adds missing OIDC scopes to scopes array without duplication. Since STS requires OIDC scopes for
   * all implicit flow requests, 'openid' and 'profile' should always be included in the final request
   */


  ScopeSet.appendDefaultScopes = function (scopes) {
    var extendedScopes = scopes;

    if (extendedScopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].openidScope) === -1) {
      extendedScopes.push(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].openidScope);
    }

    if (extendedScopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].profileScope) === -1) {
      extendedScopes.push(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].profileScope);
    }

    return extendedScopes;
  };
  /**
   * @ignore
   * Removes present OIDC scopes from scopes array.
   */


  ScopeSet.removeDefaultScopes = function (scopes) {
    return scopes.filter(function (scope) {
      return scope !== _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].openidScope && scope !== _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].profileScope;
    });
  };
  /**
   * @ignore
   * Removes clientId from scopes array if included as only scope. If it's not the only scope, it is treated as a resource scope.
   * @param scopes Array<string>: Pre-normalized scopes array
   * @param clientId string: The application's clientId that is searched for in the scopes array
   */


  ScopeSet.translateClientIdIfSingleScope = function (scopes, clientId) {
    return this.onlyContainsClientId(scopes, clientId) ? _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].oidcScopes : scopes;
  };

  return ScopeSet;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/ServerRequestParameters.js":
/*!**************************************************************!*\
  !*** ./node_modules/msal/lib-es6/ServerRequestParameters.js ***!
  \**************************************************************/
/*! exports provided: ServerRequestParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerRequestParameters", function() { return ServerRequestParameters; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony import */ var _ScopeSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScopeSet */ "./node_modules/msal/lib-es6/ScopeSet.js");
/* harmony import */ var _packageMetadata__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./packageMetadata */ "./node_modules/msal/lib-es6/packageMetadata.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */





/**
 * Nonce: OIDC Nonce definition: https://openid.net/specs/openid-connect-core-1_0.html#IDToken
 * State: OAuth Spec: https://tools.ietf.org/html/rfc6749#section-10.12
 * @hidden
 */

var ServerRequestParameters =
/** @class */
function () {
  /**
   * Constructor
   * @param authority
   * @param clientId
   * @param scope
   * @param responseType
   * @param redirectUri
   * @param state
   */
  function ServerRequestParameters(authority, clientId, responseType, redirectUri, scopes, state, correlationId) {
    this.authorityInstance = authority;
    this.clientId = clientId;
    this.nonce = _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_1__["CryptoUtils"].createNewGuid(); // set scope to clientId if null

    this.scopes = scopes ? Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(scopes) : _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].oidcScopes;
    this.scopes = _ScopeSet__WEBPACK_IMPORTED_MODULE_3__["ScopeSet"].trimScopes(this.scopes); // set state (already set at top level)

    this.state = state; // set correlationId

    this.correlationId = correlationId; // telemetry information

    this.xClientSku = "MSAL.JS";
    this.xClientVer = _packageMetadata__WEBPACK_IMPORTED_MODULE_4__["version"];
    this.responseType = responseType;
    this.redirectUri = redirectUri;
  }

  Object.defineProperty(ServerRequestParameters.prototype, "authority", {
    get: function get() {
      return this.authorityInstance ? this.authorityInstance.CanonicalAuthority : null;
    },
    enumerable: false,
    configurable: true
  });
  /**
   * @hidden
   * @ignore
   *
   * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers
   * @param request
   * @param serverAuthenticationRequest
   */

  ServerRequestParameters.prototype.populateQueryParams = function (account, request, adalIdTokenObject, silentCall) {
    var queryParameters = {};

    if (request) {
      // add the prompt parameter to serverRequestParameters if passed
      if (request.prompt) {
        this.promptValue = request.prompt;
      } // Add claims challenge to serverRequestParameters if passed


      if (request.claimsRequest) {
        this.claimsValue = request.claimsRequest;
      } // if the developer provides one of these, give preference to developer choice


      if (ServerRequestParameters.isSSOParam(request)) {
        queryParameters = this.constructUnifiedCacheQueryParameter(request, null);
      }
    }

    if (adalIdTokenObject) {
      queryParameters = this.constructUnifiedCacheQueryParameter(null, adalIdTokenObject);
    }
    /*
     * adds sid/login_hint if not populated
     * this.logger.verbose("Calling addHint parameters");
     */


    queryParameters = this.addHintParameters(account, queryParameters); // sanity check for developer passed extraQueryParameters

    var eQParams = request ? request.extraQueryParameters : null; // Populate the extraQueryParameters to be sent to the server

    this.queryParameters = ServerRequestParameters.generateQueryParametersString(queryParameters);
    this.extraQueryParameters = ServerRequestParameters.generateQueryParametersString(eQParams, silentCall);
  }; // #region QueryParam helpers

  /**
   * Constructs extraQueryParameters to be sent to the server for the AuthenticationParameters set by the developer
   * in any login() or acquireToken() calls
   * @param idTokenObject
   * @param extraQueryParameters
   * @param sid
   * @param loginHint
   */
  // TODO: check how this behaves when domain_hint only is sent in extraparameters and idToken has no upn.


  ServerRequestParameters.prototype.constructUnifiedCacheQueryParameter = function (request, idTokenObject) {
    var _a; // preference order: account > sid > login_hint


    var ssoType;
    var ssoData;
    var serverReqParam = {}; // if account info is passed, account.login_hint claim > account.sid > account.username

    if (request) {
      if (request.account) {
        var account = request.account;

        if ((_a = account.idTokenClaims) === null || _a === void 0 ? void 0 : _a.login_hint) {
          ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT;
          ssoData = account.idTokenClaims.login_hint;
        } else if (account.sid) {
          ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].SID;
          ssoData = account.sid;
        } else if (account.userName) {
          ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT;
          ssoData = account.userName;
        }
      } // sid from request
      else if (request.sid) {
        ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].SID;
        ssoData = request.sid;
      } // loginHint from request
      else if (request.loginHint) {
        ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT;
        ssoData = request.loginHint;
      }
    } // adalIdToken retrieved from cache
    else if (idTokenObject) {
      if (idTokenObject.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].upn)) {
        ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].ID_TOKEN;
        ssoData = idTokenObject["upn"];
      }
    }

    serverReqParam = this.addSSOParameter(ssoType, ssoData);
    return serverReqParam;
  };
  /**
   * @hidden
   *
   * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time
   * domain_hint if added skips the email based discovery process of the user - only supported for interactive calls in implicit_flow
   * domain_req utid received as part of the clientInfo
   * login_req uid received as part of clientInfo
   * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters
   *
   * @param {@link Account} account - Account for which the token is requested
   * @param queryparams
   * @param {@link ServerRequestParameters}
   * @ignore
   */


  ServerRequestParameters.prototype.addHintParameters = function (account, params) {
    var _a, _b;
    /*
     * This is a final check for all queryParams added so far; preference order: sid > login_hint
     * sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters
     */


    var qParams = params;

    if (account) {
      if (!qParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].SID] && !qParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT]) {
        if ((_a = account.idTokenClaims) === null || _a === void 0 ? void 0 : _a.login_hint) {
          // Use login_hint claim if available over sid or email/upn
          qParams = this.addSSOParameter(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT, (_b = account.idTokenClaims) === null || _b === void 0 ? void 0 : _b.login_hint, qParams);
        } else if (account.sid && this.promptValue === _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["PromptState"].NONE) {
          // sid - populate only if login_hint is not already populated and the account has sid
          qParams = this.addSSOParameter(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].SID, account.sid, qParams);
        } else if (account.userName) {
          // Add username/upn as loginHint if nothing else available
          qParams = this.addSSOParameter(_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT, account.userName, qParams);
        }
      }
    }

    return qParams;
  };
  /**
   * Add SID to extraQueryParameters
   * @param sid
   */


  ServerRequestParameters.prototype.addSSOParameter = function (ssoType, ssoData, params) {
    var ssoParam = params || {};

    if (!ssoData) {
      return ssoParam;
    }

    switch (ssoType) {
      case _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].SID:
        {
          ssoParam[_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].SID] = ssoData;
          break;
        }

      case _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].ID_TOKEN:
        {
          ssoParam[_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT] = ssoData;
          break;
        }

      case _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT:
        {
          ssoParam[_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].LOGIN_HINT] = ssoData;
          break;
        }
    }

    return ssoParam;
  };
  /**
   * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed
   * @param extraQueryParameters
   */


  ServerRequestParameters.generateQueryParametersString = function (queryParameters, silentCall) {
    var paramsString = null;

    if (queryParameters) {
      Object.keys(queryParameters).forEach(function (key) {
        // sid cannot be passed along with login_hint or domain_hint
        if (key === _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].domain_hint && (silentCall || queryParameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_2__["SSOTypes"].SID])) {
          return;
        }

        if (!paramsString) {
          paramsString = key + "=" + encodeURIComponent(queryParameters[key]);
        } else {
          paramsString += "&" + key + "=" + encodeURIComponent(queryParameters[key]);
        }
      });
    }

    return paramsString;
  }; // #endregion

  /**
   * Check to see if there are SSO params set in the Request
   * @param request
   */


  ServerRequestParameters.isSSOParam = function (request) {
    return !!(request && (request.account || request.sid || request.loginHint));
  };
  /**
   * Returns the correct response_type string attribute for an acquireToken request configuration
   * @param accountsMatch boolean: Determines whether the account in the request matches the cached account
   * @param scopes Array<string>: AuthenticationRequest scopes configuration
   * @param loginScopesOnly boolean: True if the scopes array ONLY contains the clientId or any combination of OIDC scopes, without resource scopes
   */


  ServerRequestParameters.determineResponseType = function (accountsMatch, scopes) {
    // Supports getting an id_token by sending in clientId as only scope or OIDC scopes as only scopes
    if (_ScopeSet__WEBPACK_IMPORTED_MODULE_3__["ScopeSet"].onlyContainsOidcScopes(scopes)) {
      return _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["ResponseTypes"].id_token;
    } // If accounts match, check if OIDC scopes are included, otherwise return id_token_token


    return accountsMatch ? this.responseTypeForMatchingAccounts(scopes) : _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["ResponseTypes"].id_token_token;
  };
  /**
   * Returns the correct response_type string attribute for an acquireToken request configuration that contains an
   * account that matches the account in the MSAL cache.
   * @param scopes Array<string>: AuthenticationRequest scopes configuration
   */


  ServerRequestParameters.responseTypeForMatchingAccounts = function (scopes) {
    // Opt-into also requesting an ID token by sending in 'openid', 'profile' or both along with resource scopes when login is not necessary.
    return _ScopeSet__WEBPACK_IMPORTED_MODULE_3__["ScopeSet"].containsAnyOidcScopes(scopes) ? _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["ResponseTypes"].id_token_token : _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["ResponseTypes"].token;
  };

  return ServerRequestParameters;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/UserAgentApplication.js":
/*!***********************************************************!*\
  !*** ./node_modules/msal/lib-es6/UserAgentApplication.js ***!
  \***********************************************************/
/*! exports provided: UserAgentApplication */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserAgentApplication", function() { return UserAgentApplication; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _cache_AccessTokenKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cache/AccessTokenKey */ "./node_modules/msal/lib-es6/cache/AccessTokenKey.js");
/* harmony import */ var _cache_AccessTokenValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cache/AccessTokenValue */ "./node_modules/msal/lib-es6/cache/AccessTokenValue.js");
/* harmony import */ var _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ServerRequestParameters */ "./node_modules/msal/lib-es6/ServerRequestParameters.js");
/* harmony import */ var _authority_Authority__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./authority/Authority */ "./node_modules/msal/lib-es6/authority/Authority.js");
/* harmony import */ var _ClientInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ClientInfo */ "./node_modules/msal/lib-es6/ClientInfo.js");
/* harmony import */ var _IdToken__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./IdToken */ "./node_modules/msal/lib-es6/IdToken.js");
/* harmony import */ var _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cache/AuthCache */ "./node_modules/msal/lib-es6/cache/AuthCache.js");
/* harmony import */ var _Account__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Account */ "./node_modules/msal/lib-es6/Account.js");
/* harmony import */ var _ScopeSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ScopeSet */ "./node_modules/msal/lib-es6/ScopeSet.js");
/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/* harmony import */ var _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/WindowUtils */ "./node_modules/msal/lib-es6/utils/WindowUtils.js");
/* harmony import */ var _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/TokenUtils */ "./node_modules/msal/lib-es6/utils/TokenUtils.js");
/* harmony import */ var _utils_TimeUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/TimeUtils */ "./node_modules/msal/lib-es6/utils/TimeUtils.js");
/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/* harmony import */ var _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/RequestUtils */ "./node_modules/msal/lib-es6/utils/RequestUtils.js");
/* harmony import */ var _utils_ResponseUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/ResponseUtils */ "./node_modules/msal/lib-es6/utils/ResponseUtils.js");
/* harmony import */ var _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./authority/AuthorityFactory */ "./node_modules/msal/lib-es6/authority/AuthorityFactory.js");
/* harmony import */ var _Configuration__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Configuration */ "./node_modules/msal/lib-es6/Configuration.js");
/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./error/ClientConfigurationError */ "./node_modules/msal/lib-es6/error/ClientConfigurationError.js");
/* harmony import */ var _error_AuthError__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./error/AuthError */ "./node_modules/msal/lib-es6/error/AuthError.js");
/* harmony import */ var _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./error/ClientAuthError */ "./node_modules/msal/lib-es6/error/ClientAuthError.js");
/* harmony import */ var _error_ServerError__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./error/ServerError */ "./node_modules/msal/lib-es6/error/ServerError.js");
/* harmony import */ var _error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./error/InteractionRequiredAuthError */ "./node_modules/msal/lib-es6/error/InteractionRequiredAuthError.js");
/* harmony import */ var _AuthResponse__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./AuthResponse */ "./node_modules/msal/lib-es6/AuthResponse.js");
/* harmony import */ var _telemetry_TelemetryManager__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./telemetry/TelemetryManager */ "./node_modules/msal/lib-es6/telemetry/TelemetryManager.js");
/* harmony import */ var _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./telemetry/ApiEvent */ "./node_modules/msal/lib-es6/telemetry/ApiEvent.js");
/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./utils/CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony import */ var _authority_TrustedAuthority__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./authority/TrustedAuthority */ "./node_modules/msal/lib-es6/authority/TrustedAuthority.js");
/* harmony import */ var _utils_AuthCacheUtils__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./utils/AuthCacheUtils */ "./node_modules/msal/lib-es6/utils/AuthCacheUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */






























 // default authority

var DEFAULT_AUTHORITY = "https://login.microsoftonline.com/common";
/**
 * UserAgentApplication class
 *
 * Object Instance that the developer can use to make loginXX OR acquireTokenXX functions
 */

var UserAgentApplication =
/** @class */
function () {
  /**
   * @constructor
   * Constructor for the UserAgentApplication used to instantiate the UserAgentApplication object
   *
   * Important attributes in the Configuration object for auth are:
   * - clientID: the application ID of your application.
   * You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview
   * - authority: the authority URL for your application.
   *
   * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.
   * It is of the form https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;.
   * If your application supports Accounts in one organizational directory, replace "Enter_the_Tenant_Info_Here" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).
   * If your application supports Accounts in any organizational directory, replace "Enter_the_Tenant_Info_Here" value with organizations.
   * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace "Enter_the_Tenant_Info_Here" value with common.
   * To restrict support to Personal Microsoft accounts only, replace "Enter_the_Tenant_Info_Here" value with consumers.
   *
   *
   * In Azure B2C, authority is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/&lt;policyName&gt;/
   *
   * @param {@link (Configuration:type)} configuration object for the MSAL UserAgentApplication instance
   */
  function UserAgentApplication(configuration) {
    // callbacks for token/error
    this.authResponseCallback = null;
    this.tokenReceivedCallback = null;
    this.errorReceivedCallback = null; // Set the Configuration

    this.config = Object(_Configuration__WEBPACK_IMPORTED_MODULE_18__["buildConfiguration"])(configuration);
    this.logger = this.config.system.logger;
    this.clientId = this.config.auth.clientId;
    this.inCookie = this.config.cache.storeAuthStateInCookie;
    this.telemetryManager = this.getTelemetryManagerFromConfig(this.config.system.telemetry, this.clientId);
    _authority_TrustedAuthority__WEBPACK_IMPORTED_MODULE_29__["TrustedAuthority"].setTrustedAuthoritiesFromConfig(this.config.auth.validateAuthority, this.config.auth.knownAuthorities);
    _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].saveMetadataFromConfig(this.config.auth.authority, this.config.auth.authorityMetadata); // if no authority is passed, set the default: "https://login.microsoftonline.com/common"

    this.authority = this.config.auth.authority || DEFAULT_AUTHORITY; // cache keys msal - typescript throws an error if any value other than "localStorage" or "sessionStorage" is passed

    this.cacheStorage = new _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"](this.clientId, this.config.cache.cacheLocation, this.inCookie); // Initialize window handling code

    if (!window.activeRenewals) {
      window.activeRenewals = {};
    }

    if (!window.renewStates) {
      window.renewStates = [];
    }

    if (!window.callbackMappedToRenewStates) {
      window.callbackMappedToRenewStates = {};
    }

    if (!window.promiseMappedToRenewStates) {
      window.promiseMappedToRenewStates = {};
    }

    window.msal = this;
    var urlHash = window.location.hash;
    var urlContainsHash = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].urlContainsHash(urlHash); // check if back button is pressed

    _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].checkIfBackButtonIsPressed(this.cacheStorage); // On the server 302 - Redirect, handle this

    if (urlContainsHash && this.cacheStorage.isInteractionInProgress(true)) {
      var stateInfo = this.getResponseState(urlHash);

      if (stateInfo.method === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect) {
        this.handleRedirectAuthenticationResponse(urlHash);
      }
    }
  }

  Object.defineProperty(UserAgentApplication.prototype, "authority", {
    /**
     * Method to manage the authority URL.
     *
     * @returns {string} authority
     */
    get: function get() {
      return this.authorityInstance.CanonicalAuthority;
    },

    /**
     * setter for the authority URL
     * @param {string} authority
     */
    // If the developer passes an authority, create an instance
    set: function set(val) {
      this.authorityInstance = _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].CreateInstance(val, this.config.auth.validateAuthority);
    },
    enumerable: false,
    configurable: true
  });
  /**
   * Get the current authority instance from the MSAL configuration object
   *
   * @returns {@link Authority} authority instance
   */

  UserAgentApplication.prototype.getAuthorityInstance = function () {
    return this.authorityInstance;
  };

  UserAgentApplication.prototype.handleRedirectCallback = function (authOrTokenCallback, errorReceivedCallback) {
    if (!authOrTokenCallback) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__["ClientConfigurationError"].createInvalidCallbackObjectError(authOrTokenCallback);
    } // Set callbacks


    if (errorReceivedCallback) {
      this.tokenReceivedCallback = authOrTokenCallback;
      this.errorReceivedCallback = errorReceivedCallback;
      this.logger.warning("This overload for callback is deprecated - please change the format of the callbacks to a single callback as shown: (err: AuthError, response: AuthResponse).");
    } else {
      this.authResponseCallback = authOrTokenCallback;
    }

    if (this.redirectError) {
      this.authErrorHandler(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect, this.redirectError, this.redirectResponse);
    } else if (this.redirectResponse) {
      this.authResponseHandler(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect, this.redirectResponse);
    }
  };
  /**
   * Public API to verify if the URL contains the hash with known properties
   * @param hash
   */


  UserAgentApplication.prototype.urlContainsHash = function (hash) {
    this.logger.verbose("UrlContainsHash has been called");
    return _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].urlContainsHash(hash);
  };

  UserAgentApplication.prototype.authResponseHandler = function (interactionType, response, resolve) {
    this.logger.verbose("AuthResponseHandler has been called");
    this.cacheStorage.setInteractionInProgress(false);

    if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect) {
      this.logger.verbose("Interaction type is redirect");

      if (this.errorReceivedCallback) {
        this.logger.verbose("Two callbacks were provided to handleRedirectCallback, calling success callback with response");
        this.tokenReceivedCallback(response);
      } else if (this.authResponseCallback) {
        this.logger.verbose("One callback was provided to handleRedirectCallback, calling authResponseCallback with response");
        this.authResponseCallback(null, response);
      }
    } else if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypePopup) {
      this.logger.verbose("Interaction type is popup, resolving");
      resolve(response);
    } else {
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createInvalidInteractionTypeError();
    }
  };

  UserAgentApplication.prototype.authErrorHandler = function (interactionType, authErr, response, reject) {
    this.logger.verbose("AuthErrorHandler has been called"); // set interaction_status to complete

    this.cacheStorage.setInteractionInProgress(false);

    if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect) {
      this.logger.verbose("Interaction type is redirect");

      if (this.errorReceivedCallback) {
        this.logger.verbose("Two callbacks were provided to handleRedirectCallback, calling error callback");
        this.errorReceivedCallback(authErr, response.accountState);
      } else if (this.authResponseCallback) {
        this.logger.verbose("One callback was provided to handleRedirectCallback, calling authResponseCallback with error");
        this.authResponseCallback(authErr, response);
      } else {
        this.logger.verbose("handleRedirectCallback has not been called and no callbacks are registered, throwing error");
        throw authErr;
      }
    } else if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypePopup) {
      this.logger.verbose("Interaction type is popup, rejecting");
      reject(authErr);
    } else {
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createInvalidInteractionTypeError();
    }
  }; // #endregion

  /**
   * Use when initiating the login process by redirecting the user's browser to the authorization endpoint.
   * @param {@link (AuthenticationParameters:type)}
   */


  UserAgentApplication.prototype.loginRedirect = function (userRequest) {
    this.logger.verbose("LoginRedirect has been called"); // validate request

    var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__["RequestUtils"].validateRequest(userRequest, true, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect);
    this.acquireTokenInteractive(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect, true, request, null, null);
  };
  /**
   * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint.
   * @param {@link (AuthenticationParameters:type)}
   *
   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters
   */


  UserAgentApplication.prototype.acquireTokenRedirect = function (userRequest) {
    this.logger.verbose("AcquireTokenRedirect has been called"); // validate request

    var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__["RequestUtils"].validateRequest(userRequest, false, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect);
    this.acquireTokenInteractive(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect, false, request, null, null);
  };
  /**
   * Use when initiating the login process via opening a popup window in the user's browser
   *
   * @param {@link (AuthenticationParameters:type)}
   *
   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object
   */


  UserAgentApplication.prototype.loginPopup = function (userRequest) {
    var _this = this;

    this.logger.verbose("LoginPopup has been called"); // validate request

    var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__["RequestUtils"].validateRequest(userRequest, true, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypePopup);
    var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__["API_EVENT_IDENTIFIER"].LoginPopup);
    return new Promise(function (resolve, reject) {
      _this.acquireTokenInteractive(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypePopup, true, request, resolve, reject);
    }).then(function (resp) {
      _this.logger.verbose("Successfully logged in");

      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);

      return resp;
    }).catch(function (error) {
      _this.cacheStorage.resetTempCacheItems(request.state);

      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);

      throw error;
    });
  };
  /**
   * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser
   * @param {@link AuthenticationParameters}
   *
   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters
   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object
   */


  UserAgentApplication.prototype.acquireTokenPopup = function (userRequest) {
    var _this = this;

    this.logger.verbose("AcquireTokenPopup has been called"); // validate request

    var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__["RequestUtils"].validateRequest(userRequest, false, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypePopup);
    var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__["API_EVENT_IDENTIFIER"].AcquireTokenPopup);
    return new Promise(function (resolve, reject) {
      _this.acquireTokenInteractive(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypePopup, false, request, resolve, reject);
    }).then(function (resp) {
      _this.logger.verbose("Successfully acquired token");

      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);

      return resp;
    }).catch(function (error) {
      _this.cacheStorage.resetTempCacheItems(request.state);

      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);

      throw error;
    });
  }; // #region Acquire Token

  /**
   * Use when initiating the login process or when you want to obtain an access_token for your API,
   * either by redirecting the user's browser window to the authorization endpoint or via opening a popup window in the user's browser.
   * @param {@link (AuthenticationParameters:type)}
   *
   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters
   */


  UserAgentApplication.prototype.acquireTokenInteractive = function (interactionType, isLoginCall, request, resolve, reject) {
    var _this = this;

    this.logger.verbose("AcquireTokenInteractive has been called"); // block the request if made from the hidden iframe

    _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].blockReloadInHiddenIframes();

    try {
      this.cacheStorage.setInteractionInProgress(true);
    } catch (e) {
      // If already in progress, do not proceed
      var thrownError = isLoginCall ? _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createLoginInProgressError() : _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createAcquireTokenInProgressError();
      var stateOnlyResponse = Object(_AuthResponse__WEBPACK_IMPORTED_MODULE_24__["buildResponseStateOnly"])(this.getAccountState(request.state));
      this.cacheStorage.resetTempCacheItems(request.state);
      this.authErrorHandler(interactionType, thrownError, stateOnlyResponse, reject);
      return;
    }

    if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect) {
      this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].REDIRECT_REQUEST, "" + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].inProgress + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].resourceDelimiter + request.state);
    } // Get the account object if a session exists


    var account;

    if (request && request.account && !isLoginCall) {
      account = request.account;
      this.logger.verbose("Account set from request");
    } else {
      account = this.getAccount();
      this.logger.verbose("Account set from MSAL Cache");
    } // If no session exists, prompt the user to login.


    if (!account && !_ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__["ServerRequestParameters"].isSSOParam(request)) {
      if (isLoginCall) {
        // extract ADAL id_token if exists
        var adalIdToken = this.extractADALIdToken(); // silent login if ADAL id_token is retrieved successfully - SSO

        if (adalIdToken && !request.scopes) {
          this.logger.info("ADAL's idToken exists. Extracting login information from ADAL's idToken");
          var tokenRequest = this.buildIDTokenRequest(request);
          this.silentLogin = true;
          this.acquireTokenSilent(tokenRequest).then(function (response) {
            _this.silentLogin = false;

            _this.logger.info("Unified cache call is successful");

            _this.authResponseHandler(interactionType, response, resolve);

            return;
          }, function (error) {
            _this.silentLogin = false;

            _this.logger.error("Error occurred during unified cache ATS: " + error); // proceed to login since ATS failed


            _this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);
          });
        } // No ADAL token found, proceed to login
        else {
          this.logger.verbose("Login call but no token found, proceed to login");
          this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);
        }
      } // AcquireToken call, but no account or context given, so throw error
      else {
        this.logger.verbose("AcquireToken call, no context or account given");
        this.logger.info("User login is required");
        var stateOnlyResponse = Object(_AuthResponse__WEBPACK_IMPORTED_MODULE_24__["buildResponseStateOnly"])(this.getAccountState(request.state));
        this.cacheStorage.resetTempCacheItems(request.state);
        this.authErrorHandler(interactionType, _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createUserLoginRequiredError(), stateOnlyResponse, reject);
        return;
      }
    } // User session exists
    else {
      this.logger.verbose("User session exists, login not required");
      this.acquireTokenHelper(account, interactionType, isLoginCall, request, resolve, reject);
    }
  };
  /**
   * @hidden
   * @ignore
   * Helper function to acquireToken
   *
   */


  UserAgentApplication.prototype.acquireTokenHelper = function (account, interactionType, isLoginCall, request, resolve, reject) {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function () {
      var requestSignature, serverAuthenticationRequest, acquireTokenAuthority, popUpWindow, responseType, loginStartPage, urlNavigate, hash, error_1, navigate, err_1;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"])(this, function (_a) {
        switch (_a.label) {
          case 0:
            this.logger.verbose("AcquireTokenHelper has been called");
            this.logger.verbose("Interaction type: " + interactionType + ". isLoginCall: " + isLoginCall);
            requestSignature = request.scopes ? request.scopes.join(" ").toLowerCase() : _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].oidcScopes.join(" ");
            this.logger.verbosePii("Request signature: " + requestSignature);
            acquireTokenAuthority = request && request.authority ? _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;
            _a.label = 1;

          case 1:
            _a.trys.push([1, 11,, 12]);

            if (!!acquireTokenAuthority.hasCachedMetadata()) return [3
            /*break*/
            , 3];
            this.logger.verbose("No cached metadata for authority");
            return [4
            /*yield*/
            , _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].saveMetadataFromNetwork(acquireTokenAuthority, this.telemetryManager, request.correlationId)];

          case 2:
            _a.sent();

            return [3
            /*break*/
            , 4];

          case 3:
            this.logger.verbose("Cached metadata found for authority");
            _a.label = 4;

          case 4:
            responseType = isLoginCall ? _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ResponseTypes"].id_token : this.getTokenType(account, request.scopes);
            loginStartPage = request.redirectStartPage || window.location.href;
            serverAuthenticationRequest = new _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__["ServerRequestParameters"](acquireTokenAuthority, this.clientId, responseType, this.getRedirectUri(request && request.redirectUri), request.scopes, request.state, request.correlationId);
            this.logger.verbose("Finished building server authentication request");
            this.updateCacheEntries(serverAuthenticationRequest, account, isLoginCall, loginStartPage);
            this.logger.verbose("Updating cache entries"); // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer

            serverAuthenticationRequest.populateQueryParams(account, request);
            this.logger.verbose("Query parameters populated from account");
            urlNavigate = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].createNavigateUrl(serverAuthenticationRequest) + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].response_mode_fragment; // set state in cache

            if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeRedirect) {
              if (!isLoginCall) {
                this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].STATE_ACQ_TOKEN, request.state), serverAuthenticationRequest.state, this.inCookie);
                this.logger.verbose("State cached for redirect");
                this.logger.verbosePii("State cached: " + serverAuthenticationRequest.state);
              } else {
                this.logger.verbose("Interaction type redirect but login call is true. State not cached");
              }
            } else if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypePopup) {
              window.renewStates.push(serverAuthenticationRequest.state);
              window.requestType = isLoginCall ? _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].login : _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].renewToken;
              this.logger.verbose("State saved to window");
              this.logger.verbosePii("State saved: " + serverAuthenticationRequest.state); // Register callback to capture results from server

              this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);
            } else {
              this.logger.verbose("Invalid interaction error. State not cached");
              throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createInvalidInteractionTypeError();
            }

            if (!(interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypePopup)) return [3
            /*break*/
            , 9];
            this.logger.verbose("Interaction type is popup. Generating popup window"); // Generate a popup window

            try {
              popUpWindow = this.openPopup(urlNavigate, "msal", _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].popUpWidth, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].popUpHeight); // Push popup window handle onto stack for tracking

              _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].trackPopup(popUpWindow);
            } catch (e) {
              this.logger.info(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthErrorMessage"].popUpWindowError.code + ":" + _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthErrorMessage"].popUpWindowError.desc);
              this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].ERROR, _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthErrorMessage"].popUpWindowError.code);
              this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].ERROR_DESC, _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthErrorMessage"].popUpWindowError.desc);

              if (reject) {
                reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createPopupWindowError());
                return [2
                /*return*/
                ];
              }
            }

            if (!popUpWindow) return [3
            /*break*/
            , 8];
            _a.label = 5;

          case 5:
            _a.trys.push([5, 7,, 8]);

            return [4
            /*yield*/
            , _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].monitorPopupForHash(popUpWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];

          case 6:
            hash = _a.sent();
            this.handleAuthenticationResponse(hash); // Request completed successfully, set to completed

            this.cacheStorage.setInteractionInProgress(false);
            this.logger.info("Closing popup window"); // TODO: Check how this can be extracted for any framework specific code?

            if (this.config.framework.isAngular) {
              this.broadcast("msal:popUpHashChanged", hash);
            }

            _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].closePopups();
            return [3
            /*break*/
            , 8];

          case 7:
            error_1 = _a.sent();

            if (reject) {
              reject(error_1);
            }

            if (this.config.framework.isAngular) {
              this.broadcast("msal:popUpClosed", error_1.errorCode + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].resourceDelimiter + error_1.errorMessage);
            } else {
              // Request failed, set to canceled
              this.cacheStorage.setInteractionInProgress(false);
              popUpWindow.close();
            }

            return [3
            /*break*/
            , 8];

          case 8:
            return [3
            /*break*/
            , 10];

          case 9:
            // If onRedirectNavigate is implemented, invoke it and provide urlNavigate
            if (request.onRedirectNavigate) {
              this.logger.verbose("Invoking onRedirectNavigate callback");
              navigate = request.onRedirectNavigate(urlNavigate); // Returning false from onRedirectNavigate will stop navigation

              if (navigate !== false) {
                this.logger.verbose("onRedirectNavigate did not return false, navigating");
                this.navigateWindow(urlNavigate);
              } else {
                this.logger.verbose("onRedirectNavigate returned false, stopping navigation");
              }
            } else {
              // Otherwise, perform navigation
              this.logger.verbose("Navigating window to urlNavigate");
              this.navigateWindow(urlNavigate);
            }

            _a.label = 10;

          case 10:
            return [3
            /*break*/
            , 12];

          case 11:
            err_1 = _a.sent();
            this.logger.error(err_1);
            this.cacheStorage.resetTempCacheItems(request.state);
            this.authErrorHandler(interactionType, _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createEndpointResolutionError(err_1.toString), Object(_AuthResponse__WEBPACK_IMPORTED_MODULE_24__["buildResponseStateOnly"])(request.state), reject);

            if (popUpWindow) {
              popUpWindow.close();
            }

            return [3
            /*break*/
            , 12];

          case 12:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * API interfacing idToken request when applications already have a session/hint acquired by authorization client applications
   * @param request
   */


  UserAgentApplication.prototype.ssoSilent = function (request) {
    this.logger.verbose("ssoSilent has been called"); // throw an error on an empty request

    if (!request) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__["ClientConfigurationError"].createEmptyRequestError();
    } // throw an error on no hints passed


    if (!request.sid && !request.loginHint) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__["ClientConfigurationError"].createSsoSilentError();
    }

    return this.acquireTokenSilent(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, request), {
      scopes: _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].oidcScopes
    }));
  };
  /**
   * Use this function to obtain a token before every call to the API / resource provider
   *
   * MSAL return's a cached token when available
   * Or it send's a request to the STS to obtain a new token using a hidden iframe.
   *
   * @param {@link AuthenticationParameters}
   *
   * To renew idToken, please pass clientId as the only scope in the Authentication Parameters
   * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object
   *
   */


  UserAgentApplication.prototype.acquireTokenSilent = function (userRequest) {
    var _this = this;

    this.logger.verbose("AcquireTokenSilent has been called"); // validate the request

    var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__["RequestUtils"].validateRequest(userRequest, false, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].interactionTypeSilent);
    var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__["API_EVENT_IDENTIFIER"].AcquireTokenSilent);
    var requestSignature = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__["RequestUtils"].createRequestSignature(request);
    return new Promise(function (resolve, reject) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this, void 0, void 0, function () {
        var scope, account, adalIdToken, responseType, serverAuthenticationRequest, adalIdTokenObject, userContainedClaims, authErr, cacheResultResponse, logMessage, err_2;
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"])(this, function (_a) {
          switch (_a.label) {
            case 0:
              // block the request if made from the hidden iframe
              _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].blockReloadInHiddenIframes();
              scope = request.scopes.join(" ").toLowerCase();
              this.logger.verbosePii("Serialized scopes: " + scope);

              if (request.account) {
                account = request.account;
                this.logger.verbose("Account set from request");
              } else {
                account = this.getAccount();
                this.logger.verbose("Account set from MSAL Cache");
              }

              adalIdToken = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].adalIdToken); // In the event of no account being passed in the config, no session id, and no pre-existing adalIdToken, user will need to log in

              if (!account && !(request.sid || request.loginHint) && _utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(adalIdToken)) {
                this.logger.info("User login is required"); // The promise rejects with a UserLoginRequiredError, which should be caught and user should be prompted to log in interactively

                return [2
                /*return*/
                , reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createUserLoginRequiredError())];
              }

              responseType = this.getTokenType(account, request.scopes);
              this.logger.verbose("Response type: " + responseType);
              serverAuthenticationRequest = new _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__["ServerRequestParameters"](_authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata), this.clientId, responseType, this.getRedirectUri(request.redirectUri), request.scopes, request.state, request.correlationId);
              this.logger.verbose("Finished building server authentication request"); // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer

              if (_ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__["ServerRequestParameters"].isSSOParam(request) || account) {
                serverAuthenticationRequest.populateQueryParams(account, request, null, true);
                this.logger.verbose("Query parameters populated from existing SSO or account");
              } // if user didn't pass login_hint/sid and adal's idtoken is present, extract the login_hint from the adalIdToken
              else if (!account && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(adalIdToken)) {
                adalIdTokenObject = _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_12__["TokenUtils"].extractIdToken(adalIdToken);
                this.logger.verbose("ADAL's idToken exists. Extracting login information from ADAL's idToken to populate query parameters");
                serverAuthenticationRequest.populateQueryParams(account, null, adalIdTokenObject, true);
              } else {
                this.logger.verbose("No additional query parameters added");
              }

              userContainedClaims = request.claimsRequest || serverAuthenticationRequest.claimsValue; // If request.forceRefresh is set to true, force a request for a new token instead of getting it from the cache

              if (!userContainedClaims && !request.forceRefresh) {
                try {
                  cacheResultResponse = this.getCachedToken(serverAuthenticationRequest, account);
                } catch (e) {
                  authErr = e;
                }
              }

              if (!cacheResultResponse) return [3
              /*break*/
              , 1];
              this.logger.verbose("Token found in cache lookup");
              this.logger.verbosePii("Scopes found: " + JSON.stringify(cacheResultResponse.scopes));
              resolve(cacheResultResponse);
              return [2
              /*return*/
              , null];

            case 1:
              if (!authErr) return [3
              /*break*/
              , 2];
              this.logger.infoPii(authErr.errorCode + ":" + authErr.errorMessage);
              reject(authErr);
              return [2
              /*return*/
              , null];

            case 2:
              logMessage = void 0;

              if (userContainedClaims) {
                logMessage = "Skipped cache lookup since claims were given";
              } else if (request.forceRefresh) {
                logMessage = "Skipped cache lookup since request.forceRefresh option was set to true";
              } else {
                logMessage = "No valid token found in cache lookup";
              }

              this.logger.verbose(logMessage); // Cache result can return null if cache is empty. In that case, set authority to default value if no authority is passed to the API.

              if (!serverAuthenticationRequest.authorityInstance) {
                serverAuthenticationRequest.authorityInstance = request.authority ? _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;
              }

              this.logger.verbosePii("Authority instance: " + serverAuthenticationRequest.authority);
              _a.label = 3;

            case 3:
              _a.trys.push([3, 7,, 8]);

              if (!!serverAuthenticationRequest.authorityInstance.hasCachedMetadata()) return [3
              /*break*/
              , 5];
              this.logger.verbose("No cached metadata for authority");
              return [4
              /*yield*/
              , _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].saveMetadataFromNetwork(serverAuthenticationRequest.authorityInstance, this.telemetryManager, request.correlationId)];

            case 4:
              _a.sent();

              this.logger.verbose("Authority has been updated with endpoint discovery response");
              return [3
              /*break*/
              , 6];

            case 5:
              this.logger.verbose("Cached metadata found for authority");
              _a.label = 6;

            case 6:
              /*
               * refresh attempt with iframe
               * Already renewing for this scope, callback when we get the token.
               */
              if (window.activeRenewals[requestSignature]) {
                this.logger.verbose("Renewing token in progress. Registering callback"); // Active renewals contains the state for each renewal.

                this.registerCallback(window.activeRenewals[requestSignature], requestSignature, resolve, reject);
              } else {
                if (request.scopes && _ScopeSet__WEBPACK_IMPORTED_MODULE_9__["ScopeSet"].onlyContainsOidcScopes(request.scopes)) {
                  /*
                   * App uses idToken to send to api endpoints
                   * Default scope is tracked as OIDC scopes to store this token
                   */
                  this.logger.verbose("OpenID Connect scopes only, renewing idToken");
                  this.silentLogin = true;
                  this.renewIdToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);
                } else {
                  // renew access token
                  this.logger.verbose("Renewing access token");
                  this.renewToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);
                }
              }

              return [3
              /*break*/
              , 8];

            case 7:
              err_2 = _a.sent();
              this.logger.error(err_2);
              reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createEndpointResolutionError(err_2.toString()));
              return [2
              /*return*/
              , null];

            case 8:
              return [2
              /*return*/
              ];
          }
        });
      });
    }).then(function (res) {
      _this.logger.verbose("Successfully acquired token");

      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);

      return res;
    }).catch(function (error) {
      _this.cacheStorage.resetTempCacheItems(request.state);

      _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);

      throw error;
    });
  }; // #endregion
  // #region Popup Window Creation

  /**
   * @hidden
   *
   * Configures popup window for login.
   *
   * @param urlNavigate
   * @param title
   * @param popUpWidth
   * @param popUpHeight
   * @ignore
   * @hidden
   */


  UserAgentApplication.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {
    this.logger.verbose("OpenPopup has been called");

    try {
      /**
       * adding winLeft and winTop to account for dual monitor
       * using screenLeft and screenTop for IE8 and earlier
       */
      var winLeft = window.screenLeft ? window.screenLeft : window.screenX;
      var winTop = window.screenTop ? window.screenTop : window.screenY;
      /**
       * window.innerWidth displays browser window"s height and width excluding toolbars
       * using document.documentElement.clientWidth for IE8 and earlier
       */

      var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
      var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
      var left = width / 2 - popUpWidth / 2 + winLeft;
      var top_1 = height / 2 - popUpHeight / 2 + winTop; // open the window

      var popupWindow = window.open(urlNavigate, title, "width=" + popUpWidth + ", height=" + popUpHeight + ", top=" + top_1 + ", left=" + left + ", scrollbars=yes");

      if (!popupWindow) {
        throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createPopupWindowError();
      }

      if (popupWindow.focus) {
        popupWindow.focus();
      }

      return popupWindow;
    } catch (e) {
      this.cacheStorage.setInteractionInProgress(false);
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createPopupWindowError(e.toString());
    }
  }; // #endregion
  // #region Iframe Management

  /**
   * @hidden
   * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.
   * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.
   * @ignore
   */


  UserAgentApplication.prototype.loadIframeTimeout = function (urlNavigate, frameName, requestSignature) {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function () {
      var expectedState, iframe, _a, hash, error_2;

      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"])(this, function (_b) {
        switch (_b.label) {
          case 0:
            expectedState = window.activeRenewals[requestSignature];
            this.logger.verbosePii("Set loading state to pending for: " + requestSignature + ":" + expectedState);
            this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].RENEW_STATUS, expectedState), _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].inProgress);
            if (!this.config.system.navigateFrameWait) return [3
            /*break*/
            , 2];
            return [4
            /*yield*/
            , _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].loadFrame(urlNavigate, frameName, this.config.system.navigateFrameWait, this.logger)];

          case 1:
            _a = _b.sent();
            return [3
            /*break*/
            , 3];

          case 2:
            _a = _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].loadFrameSync(urlNavigate, frameName, this.logger);
            _b.label = 3;

          case 3:
            iframe = _a;
            _b.label = 4;

          case 4:
            _b.trys.push([4, 6,, 7]);

            return [4
            /*yield*/
            , _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].monitorIframeForHash(iframe.contentWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];

          case 5:
            hash = _b.sent();

            if (hash) {
              this.handleAuthenticationResponse(hash);
            }

            return [3
            /*break*/
            , 7];

          case 6:
            error_2 = _b.sent();

            if (this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].RENEW_STATUS, expectedState)) === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].inProgress) {
              // fail the iframe session if it's in pending state
              this.logger.verbose("Loading frame has timed out after: " + this.config.system.loadFrameTimeout / 1000 + " seconds for scope/authority " + requestSignature + ":" + expectedState); // Error after timeout

              if (expectedState && window.callbackMappedToRenewStates[expectedState]) {
                window.callbackMappedToRenewStates[expectedState](null, error_2);
              }

              this.cacheStorage.removeItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].RENEW_STATUS, expectedState));
            }

            _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].removeHiddenIframe(iframe);
            throw error_2;

          case 7:
            _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].removeHiddenIframe(iframe);
            return [2
            /*return*/
            ];
        }
      });
    });
  }; // #endregion
  // #region General Helpers

  /**
   * @hidden
   * Used to redirect the browser to the STS authorization endpoint
   * @param {string} urlNavigate - URL of the authorization endpoint
   */


  UserAgentApplication.prototype.navigateWindow = function (urlNavigate, popupWindow) {
    // Navigate if valid URL
    if (urlNavigate && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(urlNavigate)) {
      var navigateWindow = popupWindow ? popupWindow : window;
      var logMessage = popupWindow ? "Navigated Popup window to:" + urlNavigate : "Navigate to:" + urlNavigate;
      this.logger.infoPii(logMessage);
      navigateWindow.location.assign(urlNavigate);
    } else {
      this.logger.info("Navigate url is empty");
      throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__["AuthError"].createUnexpectedError("Navigate url is empty");
    }
  };
  /**
   * @hidden
   * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object
   * @param {string} expectedState - Unique state identifier (guid).
   * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.
   * @param {Function} resolve - The resolve function of the promise object.
   * @param {Function} reject - The reject function of the promise object.
   * @ignore
   */


  UserAgentApplication.prototype.registerCallback = function (expectedState, requestSignature, resolve, reject) {
    var _this = this; // track active renewals


    window.activeRenewals[requestSignature] = expectedState; // initialize callbacks mapped array

    if (!window.promiseMappedToRenewStates[expectedState]) {
      window.promiseMappedToRenewStates[expectedState] = [];
    } // indexing on the current state, push the callback params to callbacks mapped


    window.promiseMappedToRenewStates[expectedState].push({
      resolve: resolve,
      reject: reject
    }); // Store the server response in the current window??

    if (!window.callbackMappedToRenewStates[expectedState]) {
      window.callbackMappedToRenewStates[expectedState] = function (response, error) {
        // reset active renewals
        delete window.activeRenewals[requestSignature]; // for all promiseMappedtoRenewStates for a given 'state' - call the reject/resolve with error/token respectively

        for (var i = 0; i < window.promiseMappedToRenewStates[expectedState].length; ++i) {
          try {
            if (error) {
              window.promiseMappedToRenewStates[expectedState][i].reject(error);
            } else if (response) {
              window.promiseMappedToRenewStates[expectedState][i].resolve(response);
            } else {
              _this.cacheStorage.resetTempCacheItems(expectedState);

              throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__["AuthError"].createUnexpectedError("Error and response are both null");
            }
          } catch (e) {
            _this.logger.warning(e);
          }
        } // reset


        delete window.promiseMappedToRenewStates[expectedState];
        delete window.callbackMappedToRenewStates[expectedState];
      };
    }
  }; // #endregion
  // #region Logout

  /**
   * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.
   * Default behaviour is to redirect the user to `window.location.href`.
   */


  UserAgentApplication.prototype.logout = function (correlationId) {
    this.logger.verbose("Logout has been called");
    this.logoutAsync(correlationId);
  };
  /**
   * Async version of logout(). Use to log out the current user.
   * @param correlationId Request correlationId
   */


  UserAgentApplication.prototype.logoutAsync = function (correlationId) {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function () {
      var requestCorrelationId, apiEvent, correlationIdParam, postLogoutQueryParam, urlNavigate, error_3;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"])(this, function (_a) {
        switch (_a.label) {
          case 0:
            requestCorrelationId = correlationId || _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_28__["CryptoUtils"].createNewGuid();
            apiEvent = this.telemetryManager.createAndStartApiEvent(requestCorrelationId, _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__["API_EVENT_IDENTIFIER"].Logout);
            this.clearCache();
            this.account = null;
            _a.label = 1;

          case 1:
            _a.trys.push([1, 5,, 6]);

            if (!!this.authorityInstance.hasCachedMetadata()) return [3
            /*break*/
            , 3];
            this.logger.verbose("No cached metadata for authority");
            return [4
            /*yield*/
            , _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].saveMetadataFromNetwork(this.authorityInstance, this.telemetryManager, correlationId)];

          case 2:
            _a.sent();

            return [3
            /*break*/
            , 4];

          case 3:
            this.logger.verbose("Cached metadata found for authority");
            _a.label = 4;

          case 4:
            correlationIdParam = "client-request-id=" + requestCorrelationId;
            postLogoutQueryParam = void 0;

            if (this.getPostLogoutRedirectUri()) {
              postLogoutQueryParam = "&post_logout_redirect_uri=" + encodeURIComponent(this.getPostLogoutRedirectUri());
              this.logger.verbose("redirectUri found and set");
            } else {
              postLogoutQueryParam = "";
              this.logger.verbose("No redirectUri set for app. postLogoutQueryParam is empty");
            }

            urlNavigate = void 0;

            if (this.authorityInstance.EndSessionEndpoint) {
              urlNavigate = this.authorityInstance.EndSessionEndpoint + "?" + correlationIdParam + postLogoutQueryParam;
              this.logger.verbose("EndSessionEndpoint found and urlNavigate set");
              this.logger.verbosePii("urlNavigate set to: " + this.authorityInstance.EndSessionEndpoint);
            } else {
              urlNavigate = this.authority + "oauth2/v2.0/logout?" + correlationIdParam + postLogoutQueryParam;
              this.logger.verbose("No endpoint, urlNavigate set to default");
            }

            this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, true);
            this.logger.verbose("Navigating window to urlNavigate");
            this.navigateWindow(urlNavigate);
            return [3
            /*break*/
            , 6];

          case 5:
            error_3 = _a.sent();
            this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, false, error_3.errorCode);
            return [3
            /*break*/
            , 6];

          case 6:
            return [2
            /*return*/
            ];
        }
      });
    });
  };
  /**
   * @hidden
   * Clear all access tokens and ID tokens in the cache.
   * @ignore
   */


  UserAgentApplication.prototype.clearCache = function () {
    this.logger.verbose("Clearing cache");
    window.renewStates = [];
    var tokenCacheItems = this.cacheStorage.getAllTokens(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].homeAccountIdentifier);

    for (var i = 0; i < tokenCacheItems.length; i++) {
      this.cacheStorage.removeItem(JSON.stringify(tokenCacheItems[i].key));
    }

    this.cacheStorage.resetCacheItems();
    this.cacheStorage.clearMsalCookie();
    this.logger.verbose("Cache cleared");
  };
  /**
   * @hidden
   * Clear a given access token from the cache.
   *
   * @param accessToken
   */


  UserAgentApplication.prototype.clearCacheForScope = function (accessToken) {
    this.logger.verbose("Clearing access token from cache");
    var accessTokenItems = this.cacheStorage.getAllAccessTokens(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].homeAccountIdentifier);

    for (var i = 0; i < accessTokenItems.length; i++) {
      var token = accessTokenItems[i];

      if (token.value.accessToken === accessToken) {
        this.cacheStorage.removeItem(JSON.stringify(token.key));
        this.logger.verbosePii("Access token removed: " + token.key);
      }
    }
  }; // #endregion
  // #region Response

  /**
   * @hidden
   * @ignore
   * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.
   * @param {string} hash - Hash passed from redirect page.
   * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.
   */


  UserAgentApplication.prototype.isCallback = function (hash) {
    this.logger.info("isCallback will be deprecated in favor of urlContainsHash in MSAL.js v2.0.");
    this.logger.verbose("isCallback has been called");
    return _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].urlContainsHash(hash);
  };
  /**
   * @hidden
   * Used to call the constructor callback with the token/error
   * @param {string} [hash=window.location.hash] - Hash fragment of Url.
   */


  UserAgentApplication.prototype.processCallBack = function (hash, respStateInfo, parentCallback) {
    this.logger.info("ProcessCallBack has been called. Processing callback from redirect response"); // get the state info from the hash

    var stateInfo = respStateInfo;

    if (!stateInfo) {
      this.logger.verbose("StateInfo is null, getting stateInfo from hash");
      stateInfo = this.getResponseState(hash);
    }

    var response;
    var authErr; // Save the token info from the hash

    try {
      response = this.saveTokenFromHash(hash, stateInfo);
    } catch (err) {
      authErr = err;
    }

    try {
      // Clear the cookie in the hash
      this.cacheStorage.clearMsalCookie(stateInfo.state);
      var accountState = this.getAccountState(stateInfo.state);

      if (response) {
        if (stateInfo.requestType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].renewToken || response.accessToken) {
          if (window.parent !== window) {
            this.logger.verbose("Window is in iframe, acquiring token silently");
          } else {
            this.logger.verbose("Acquiring token interactive in progress");
          }

          this.logger.verbose("Response tokenType set to " + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ACCESS_TOKEN);
          response.tokenType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ACCESS_TOKEN;
        } else if (stateInfo.requestType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].login) {
          this.logger.verbose("Response tokenType set to " + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN);
          response.tokenType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN;
        }

        if (!parentCallback) {
          this.logger.verbose("Setting redirectResponse");
          this.redirectResponse = response;
          return;
        }
      } else if (!parentCallback) {
        this.logger.verbose("Response is null, setting redirectResponse with state");
        this.redirectResponse = Object(_AuthResponse__WEBPACK_IMPORTED_MODULE_24__["buildResponseStateOnly"])(accountState);
        this.redirectError = authErr;
        this.cacheStorage.resetTempCacheItems(stateInfo.state);
        return;
      }

      this.logger.verbose("Calling callback provided to processCallback");
      parentCallback(response, authErr);
    } catch (err) {
      this.logger.error("Error occurred in token received callback function: " + err);
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createErrorInCallbackFunction(err.toString());
    }
  };
  /**
   * @hidden
   * This method must be called for processing the response received from the STS if using popups or iframes. It extracts the hash, processes the token or error
   * information and saves it in the cache. It then resolves the promises with the result.
   * @param {string} [hash=window.location.hash] - Hash fragment of Url.
   */


  UserAgentApplication.prototype.handleAuthenticationResponse = function (hash) {
    this.logger.verbose("HandleAuthenticationResponse has been called"); // retrieve the hash

    var locationHash = hash || window.location.hash; // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically

    var stateInfo = this.getResponseState(locationHash);
    this.logger.verbose("Obtained state from response");
    var tokenResponseCallback = window.callbackMappedToRenewStates[stateInfo.state];
    this.processCallBack(locationHash, stateInfo, tokenResponseCallback);
  };
  /**
   * @hidden
   * This method must be called for processing the response received from the STS when using redirect flows. It extracts the hash, processes the token or error
   * information and saves it in the cache. The result can then be accessed by user registered callbacks.
   * @param {string} [hash=window.location.hash] - Hash fragment of Url.
   */


  UserAgentApplication.prototype.handleRedirectAuthenticationResponse = function (hash) {
    this.logger.info("Returned from redirect url");
    this.logger.verbose("HandleRedirectAuthenticationResponse has been called"); // clear hash from window

    _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].clearUrlFragment(window);
    this.logger.verbose("Window.location.hash cleared"); // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically

    var stateInfo = this.getResponseState(hash); // if set to navigate to loginRequest page post login

    if (this.config.auth.navigateToLoginRequestUrl && window.parent === window) {
      this.logger.verbose("Window.parent is equal to window, not in popup or iframe. Navigation to login request url after login turned on");
      var loginRequestUrl = this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].LOGIN_REQUEST, stateInfo.state), this.inCookie); // Redirect to home page if login request url is null (real null or the string null)

      if (!loginRequestUrl || loginRequestUrl === "null") {
        this.logger.error("Unable to get valid login request url from cache, redirecting to home page");
        window.location.assign("/");
        return;
      } else {
        this.logger.verbose("Valid login request url obtained from cache");
        var currentUrl = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].removeHashFromUrl(window.location.href);
        var finalRedirectUrl = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].removeHashFromUrl(loginRequestUrl);

        if (currentUrl !== finalRedirectUrl) {
          this.logger.verbose("Current url is not login request url, navigating");
          this.logger.verbosePii("CurrentUrl: " + currentUrl + ", finalRedirectUrl: " + finalRedirectUrl);
          window.location.assign("" + finalRedirectUrl + hash);
          return;
        } else {
          this.logger.verbose("Current url matches login request url");
          var loginRequestUrlComponents = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].GetUrlComponents(loginRequestUrl);

          if (loginRequestUrlComponents.Hash) {
            this.logger.verbose("Login request url contains hash, resetting non-msal hash");
            window.location.hash = loginRequestUrlComponents.Hash;
          }
        }
      }
    } else if (!this.config.auth.navigateToLoginRequestUrl) {
      this.logger.verbose("Default navigation to start page after login turned off");
    }

    this.processCallBack(hash, stateInfo, null);
  };
  /**
   * @hidden
   * Creates a stateInfo object from the URL fragment and returns it.
   * @param {string} hash  -  Hash passed from redirect page
   * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.
   * @ignore
   */


  UserAgentApplication.prototype.getResponseState = function (hash) {
    this.logger.verbose("GetResponseState has been called");
    var parameters = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].deserializeHash(hash);
    var stateResponse;

    if (!parameters) {
      throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__["AuthError"].createUnexpectedError("Hash was not parsed correctly.");
    }

    if (parameters.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].STATE)) {
      this.logger.verbose("Hash contains state. Creating stateInfo object");
      var parsedState = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__["RequestUtils"].parseLibraryState(parameters["state"]);
      stateResponse = {
        requestType: _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].unknown,
        state: parameters["state"],
        timestamp: parsedState.ts,
        method: parsedState.method,
        stateMatch: false
      };
    } else {
      throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__["AuthError"].createUnexpectedError("Hash does not contain state.");
    }
    /*
     * async calls can fire iframe and login request at the same time if developer does not use the API as expected
     * incoming callback needs to be looked up to find the request type
     */
    // loginRedirect


    if (stateResponse.state === this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].STATE_LOGIN, stateResponse.state), this.inCookie) || stateResponse.state === this.silentAuthenticationState) {
      this.logger.verbose("State matches cached state, setting requestType to login");
      stateResponse.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].login;
      stateResponse.stateMatch = true;
      return stateResponse;
    } // acquireTokenRedirect
    else if (stateResponse.state === this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].STATE_ACQ_TOKEN, stateResponse.state), this.inCookie)) {
      this.logger.verbose("State matches cached state, setting requestType to renewToken");
      stateResponse.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].renewToken;
      stateResponse.stateMatch = true;
      return stateResponse;
    } // external api requests may have many renewtoken requests for different resource


    if (!stateResponse.stateMatch) {
      this.logger.verbose("State does not match cached state, setting requestType to type from window");
      stateResponse.requestType = window.requestType;
      var statesInParentContext = window.renewStates;

      for (var i = 0; i < statesInParentContext.length; i++) {
        if (statesInParentContext[i] === stateResponse.state) {
          this.logger.verbose("Matching state found for request");
          stateResponse.stateMatch = true;
          break;
        }
      }

      if (!stateResponse.stateMatch) {
        this.logger.verbose("Matching state not found for request");
      }
    }

    return stateResponse;
  }; // #endregion
  // #region Token Processing (Extract to TokenProcessing.ts)

  /**
   * @hidden
   * Used to get token for the specified set of scopes from the cache
   * @param {@link ServerRequestParameters} - Request sent to the STS to obtain an id_token/access_token
   * @param {Account} account - Account for which the scopes were requested
   */


  UserAgentApplication.prototype.getCachedToken = function (serverAuthenticationRequest, account) {
    this.logger.verbose("GetCachedToken has been called");
    var scopes = serverAuthenticationRequest.scopes;
    /**
     * Id Token should be returned in every acquireTokenSilent call. The only exception is a response_type = token
     * request when a valid ID Token is not present in the cache.
     */

    var idToken = this.getCachedIdToken(serverAuthenticationRequest, account);
    var authResponse = this.getCachedAccessToken(serverAuthenticationRequest, account, scopes);
    var accountState = this.getAccountState(serverAuthenticationRequest.state);
    return _utils_ResponseUtils__WEBPACK_IMPORTED_MODULE_16__["ResponseUtils"].buildAuthResponse(idToken, authResponse, serverAuthenticationRequest, account, scopes, accountState);
  };
  /**
   * @hidden
   *
   * Uses passed in authority to further filter an array of tokenCacheItems until only the token being searched for remains, then returns that tokenCacheItem.
   * This method will throw if authority filtering still yields multiple matching tokens and will return null if not tokens match the authority passed in.
   *
   * @param authority
   * @param tokenCacheItems
   * @param request
   * @param requestScopes
   * @param tokenType
   */


  UserAgentApplication.prototype.getTokenCacheItemByAuthority = function (authority, tokenCacheItems, requestScopes, tokenType) {
    var _this = this;

    var filteredAuthorityItems;

    if (_utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].isCommonAuthority(authority) || _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].isOrganizationsAuthority(authority) || _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].isConsumersAuthority(authority)) {
      filteredAuthorityItems = _utils_AuthCacheUtils__WEBPACK_IMPORTED_MODULE_30__["AuthCacheUtils"].filterTokenCacheItemsByDomain(tokenCacheItems, _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].GetUrlComponents(authority).HostNameAndPort);
    } else {
      filteredAuthorityItems = _utils_AuthCacheUtils__WEBPACK_IMPORTED_MODULE_30__["AuthCacheUtils"].filterTokenCacheItemsByAuthority(tokenCacheItems, authority);
    }

    if (filteredAuthorityItems.length === 1) {
      return filteredAuthorityItems[0];
    } else if (filteredAuthorityItems.length > 1) {
      this.logger.warning("Multiple matching tokens found. Cleaning cache and requesting a new token.");
      filteredAuthorityItems.forEach(function (accessTokenCacheItem) {
        _this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));
      });
      return null;
    } else {
      this.logger.verbose("No matching tokens of type " + tokenType + " found");
      return null;
    }
  };
  /**
   *
   * @hidden
   *
   * Searches the token cache for an ID Token that matches the request parameter and returns it as an IdToken object.
   *
   * @param serverAuthenticationRequest
   * @param account
   */


  UserAgentApplication.prototype.getCachedIdToken = function (serverAuthenticationRequest, account) {
    this.logger.verbose("Getting all cached tokens of type ID Token");
    var idTokenCacheItems = this.cacheStorage.getAllIdTokens(this.clientId, account ? account.homeAccountIdentifier : null);
    var matchAuthority = serverAuthenticationRequest.authority || this.authority;
    var idTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, idTokenCacheItems, null, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN);

    if (idTokenCacheItem) {
      this.logger.verbose("Evaluating ID token found");
      var idTokenIsStillValid = this.evaluateTokenExpiration(idTokenCacheItem);

      if (idTokenIsStillValid) {
        this.logger.verbose("ID token expiration is within offset, using ID token found in cache");
        var idTokenValue = idTokenCacheItem.value;

        if (idTokenValue) {
          this.logger.verbose("ID Token found in cache is valid and unexpired");
        } else {
          this.logger.verbose("ID Token found in cache is invalid");
        }

        return idTokenValue ? new _IdToken__WEBPACK_IMPORTED_MODULE_6__["IdToken"](idTokenValue.idToken) : null;
      } else {
        this.logger.verbose("Cached ID token is expired, removing from cache");
        this.cacheStorage.removeItem(JSON.stringify(idTokenCacheItem.key));
        return null;
      }
    } else {
      this.logger.verbose("No tokens found");
      return null;
    }
  };
  /**
   *
   * @hidden
   *
   * Searches the token cache for an access token that matches the request parameters and returns it as an AuthResponse.
   *
   * @param serverAuthenticationRequest
   * @param account
   * @param scopes
   */


  UserAgentApplication.prototype.getCachedAccessToken = function (serverAuthenticationRequest, account, scopes) {
    this.logger.verbose("Getting all cached tokens of type Access Token");
    var tokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, account ? account.homeAccountIdentifier : null);
    var scopeFilteredTokenCacheItems = _utils_AuthCacheUtils__WEBPACK_IMPORTED_MODULE_30__["AuthCacheUtils"].filterTokenCacheItemsByScope(tokenCacheItems, scopes);
    var matchAuthority = serverAuthenticationRequest.authority || this.authority; // serverAuthenticationRequest.authority can only be common or organizations if not null

    var accessTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, scopeFilteredTokenCacheItems, scopes, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ACCESS_TOKEN);

    if (!accessTokenCacheItem) {
      this.logger.verbose("No matching token found when filtering by scope and authority");
      return null;
    } else {
      serverAuthenticationRequest.authorityInstance = _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].CreateInstance(accessTokenCacheItem.key.authority, this.config.auth.validateAuthority);
      this.logger.verbose("Evaluating access token found");
      var tokenIsStillValid = this.evaluateTokenExpiration(accessTokenCacheItem); // The response value will stay null if token retrieved from the cache is expired, otherwise it will be populated with said token's data

      if (tokenIsStillValid) {
        this.logger.verbose("Access token expiration is within offset, using access token found in cache");
        var responseAccount = account || this.getAccount();

        if (!responseAccount) {
          throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__["AuthError"].createUnexpectedError("Account should not be null here.");
        }

        var aState = this.getAccountState(serverAuthenticationRequest.state);
        var response = {
          uniqueId: "",
          tenantId: "",
          tokenType: _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ACCESS_TOKEN,
          idToken: null,
          idTokenClaims: null,
          accessToken: accessTokenCacheItem.value.accessToken,
          scopes: accessTokenCacheItem.key.scopes.split(" "),
          expiresOn: new Date(Number(accessTokenCacheItem.value.expiresIn) * 1000),
          account: responseAccount,
          accountState: aState,
          fromCache: true
        };
        return response;
      } else {
        this.logger.verbose("Access token expired, removing from cache");
        this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));
        return null;
      }
    }
  };
  /**
   * Returns true if the token passed in is within the acceptable expiration time offset, false if it is expired.
   * @param tokenCacheItem
   * @param serverAuthenticationRequest
   */


  UserAgentApplication.prototype.evaluateTokenExpiration = function (tokenCacheItem) {
    var expiration = Number(tokenCacheItem.value.expiresIn);
    return _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_12__["TokenUtils"].validateExpirationIsWithinOffset(expiration, this.config.system.tokenRenewalOffsetSeconds);
  };
  /**
   * @hidden
   * Check if ADAL id_token exists and return if exists.
   *
   */


  UserAgentApplication.prototype.extractADALIdToken = function () {
    this.logger.verbose("ExtractADALIdToken has been called");
    var adalIdToken = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].adalIdToken);
    return !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(adalIdToken) ? _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_12__["TokenUtils"].extractIdToken(adalIdToken) : null;
  };
  /**
   * @hidden
   * Acquires access token using a hidden iframe.
   * @ignore
   */


  UserAgentApplication.prototype.renewToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {
    this.logger.verbose("RenewToken has been called");
    this.logger.verbosePii("RenewToken scope and authority: " + requestSignature);
    var frameName = _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].generateFrameName(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["FramePrefix"].TOKEN_FRAME, requestSignature);
    _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].addHiddenIFrame(frameName, this.logger);
    this.updateCacheEntries(serverAuthenticationRequest, account, false);
    this.logger.verbosePii("RenewToken expected state: " + serverAuthenticationRequest.state); // Build urlNavigate with "prompt=none" and navigate to URL in hidden iFrame

    var urlNavigate = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].urlRemoveQueryStringParameter(_utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].createNavigateUrl(serverAuthenticationRequest), _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].prompt) + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].prompt_none + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].response_mode_fragment;
    window.renewStates.push(serverAuthenticationRequest.state);
    window.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].renewToken;
    this.logger.verbose("Set window.renewState and requestType");
    this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);
    this.logger.infoPii("Navigate to: " + urlNavigate);
    this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) {
      return reject(error);
    });
  };
  /**
   * @hidden
   * Renews idtoken for app's own backend when clientId is passed as a single scope in the scopes array.
   * @ignore
   */


  UserAgentApplication.prototype.renewIdToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {
    this.logger.info("RenewIdToken has been called");
    var frameName = _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].generateFrameName(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["FramePrefix"].ID_TOKEN_FRAME, requestSignature);
    _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__["WindowUtils"].addHiddenIFrame(frameName, this.logger);
    this.updateCacheEntries(serverAuthenticationRequest, account, false);
    this.logger.verbose("RenewIdToken expected state: " + serverAuthenticationRequest.state); // Build urlNavigate with "prompt=none" and navigate to URL in hidden iFrame

    var urlNavigate = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].urlRemoveQueryStringParameter(_utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].createNavigateUrl(serverAuthenticationRequest), _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].prompt) + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].prompt_none + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].response_mode_fragment;

    if (this.silentLogin) {
      this.logger.verbose("Silent login is true, set silentAuthenticationState");
      window.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].login;
      this.silentAuthenticationState = serverAuthenticationRequest.state;
    } else {
      this.logger.verbose("Not silent login, set window.renewState and requestType");
      window.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].renewToken;
      window.renewStates.push(serverAuthenticationRequest.state);
    } // note: scope here is clientId


    this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);
    this.logger.infoPii("Navigate to:\" " + urlNavigate);
    this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) {
      return reject(error);
    });
  };
  /**
   * @hidden
   *
   * This method builds an Access Token Cache item and saves it to the cache, returning the original
   * AuthResponse augmented with a parsed expiresOn attribute.
   *
   * @param response The AuthResponse object that contains the token to be saved
   * @param authority The authority under which the ID token will be cached
   * @param scopes The scopes to be added to the cache item key (undefined for ID token cache items)
   * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier
   * @param expiration Token expiration timestamp
   */


  UserAgentApplication.prototype.saveToken = function (response, authority, scopes, clientInfo, expiration) {
    var accessTokenKey = new _cache_AccessTokenKey__WEBPACK_IMPORTED_MODULE_1__["AccessTokenKey"](authority, this.clientId, scopes, clientInfo.uid, clientInfo.utid);
    var accessTokenValue = new _cache_AccessTokenValue__WEBPACK_IMPORTED_MODULE_2__["AccessTokenValue"](response.accessToken, response.idToken.rawIdToken, expiration.toString(), clientInfo.encodeClientInfo());
    this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));

    if (expiration) {
      this.logger.verbose("New expiration set for token");
      response.expiresOn = new Date(expiration * 1000);
    } else {
      this.logger.error("Could not parse expiresIn parameter for access token");
    }

    return response;
  };
  /**
   * @hidden
   *
   * This method sets up the elements of an ID Token cache item and calls saveToken to save it in
   * Access Token Cache item format for the client application to use.
   *
   * @param response The AuthResponse object that will be used to build the cache item
   * @param authority The authority under which the ID token will be cached
   * @param parameters The response's Hash Params, which contain the ID token returned from the server
   * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier
   * @param idTokenObj ID Token object from which the ID token's expiration is extracted
   */

  /* tslint:disable:no-string-literal */


  UserAgentApplication.prototype.saveIdToken = function (response, authority, parameters, clientInfo, idTokenObj) {
    this.logger.verbose("SaveIdToken has been called");

    var idTokenResponse = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, response); // Scopes are undefined so they don't show up in ID token cache key


    var scopes;
    idTokenResponse.scopes = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].oidcScopes;
    idTokenResponse.accessToken = parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN];
    var expiration = Number(idTokenObj.expiration); // Set ID Token item in cache

    this.logger.verbose("Saving ID token to cache");
    return this.saveToken(idTokenResponse, authority, scopes, clientInfo, expiration);
  };
  /**
   * @hidden
   *
   * This method sets up the elements of an Access Token cache item and calls saveToken to save it to the cache
   *
   * @param response The AuthResponse object that will be used to build the cache item
   * @param authority The authority under which the access token will be cached
   * @param parameters The response's Hash Params, which contain the access token returned from the server
   * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier
   */

  /* tslint:disable:no-string-literal */


  UserAgentApplication.prototype.saveAccessToken = function (response, authority, parameters, clientInfo) {
    this.logger.verbose("SaveAccessToken has been called");

    var accessTokenResponse = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, response); // read the scopes


    var scope = parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].SCOPE];
    var consentedScopes = scope.split(" "); // retrieve all access tokens from the cache, remove the dup scopes

    var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, authority);
    this.logger.verbose("Retrieving all access tokens from cache and removing duplicates");

    for (var i = 0; i < accessTokenCacheItems.length; i++) {
      var accessTokenCacheItem = accessTokenCacheItems[i];

      if (accessTokenCacheItem.key.homeAccountIdentifier === response.account.homeAccountIdentifier) {
        var cachedScopes = accessTokenCacheItem.key.scopes.split(" ");

        if (_ScopeSet__WEBPACK_IMPORTED_MODULE_9__["ScopeSet"].isIntersectingScopes(cachedScopes, consentedScopes)) {
          this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));
        }
      }
    }

    accessTokenResponse.accessToken = parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ACCESS_TOKEN];
    accessTokenResponse.scopes = consentedScopes;
    var expiresIn = _utils_TimeUtils__WEBPACK_IMPORTED_MODULE_13__["TimeUtils"].parseExpiresIn(parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].EXPIRES_IN]);
    var parsedState = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__["RequestUtils"].parseLibraryState(parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].STATE]);
    var expiration = parsedState.ts + expiresIn;
    this.logger.verbose("Saving access token to cache");
    return this.saveToken(accessTokenResponse, authority, scope, clientInfo, expiration);
  };
  /**
   * @hidden
   * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the account object.
   * @ignore
   */


  UserAgentApplication.prototype.saveTokenFromHash = function (hash, stateInfo) {
    this.logger.verbose("SaveTokenFromHash has been called");
    this.logger.info("State status: " + stateInfo.stateMatch + "; Request type: " + stateInfo.requestType);
    var response = {
      uniqueId: "",
      tenantId: "",
      tokenType: "",
      idToken: null,
      idTokenClaims: null,
      accessToken: null,
      scopes: [],
      expiresOn: null,
      account: null,
      accountState: "",
      fromCache: false
    };
    var error;
    var hashParams = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].deserializeHash(hash);
    var authorityKey = "";
    var acquireTokenAccountKey = "";
    var idTokenObj = null; // If server returns an error

    if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR_DESCRIPTION) || hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR)) {
      this.logger.verbose("Server returned an error");
      this.logger.infoPii("Error : " + hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR] + "; Error description: " + hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR_DESCRIPTION]);
      this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].ERROR, hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR]);
      this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].ERROR_DESC, hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR_DESCRIPTION]); // login

      if (stateInfo.requestType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].login) {
        this.logger.verbose("RequestType is login, caching login error, generating authorityKey");
        this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].LOGIN_ERROR, hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR_DESCRIPTION] + ":" + hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR]);
        authorityKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateAuthorityKey(stateInfo.state);
      } // acquireToken


      if (stateInfo.requestType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].renewToken) {
        this.logger.verbose("RequestType is renewToken, generating acquireTokenAccountKey");
        authorityKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateAuthorityKey(stateInfo.state);
        var account = this.getAccount();
        var accountId = void 0;

        if (account && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(account.homeAccountIdentifier)) {
          accountId = account.homeAccountIdentifier;
          this.logger.verbose("AccountId is set");
        } else {
          accountId = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].no_account;
          this.logger.verbose("AccountId is set as no_account");
        }

        acquireTokenAccountKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateAcquireTokenAccountKey(accountId, stateInfo.state);
      }

      var hashErr = hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR];
      var hashErrDesc = hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR_DESCRIPTION];

      if (_error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_23__["InteractionRequiredAuthError"].isInteractionRequiredError(hashErr) || _error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_23__["InteractionRequiredAuthError"].isInteractionRequiredError(hashErrDesc)) {
        error = new _error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_23__["InteractionRequiredAuthError"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR], hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR_DESCRIPTION]);
      } else {
        error = new _error_ServerError__WEBPACK_IMPORTED_MODULE_22__["ServerError"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR], hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ERROR_DESCRIPTION]);
      }
    } // If the server returns "Success"
    else {
      this.logger.verbose("Server returns success"); // Verify the state from redirect and record tokens to storage if exists

      if (stateInfo.stateMatch) {
        this.logger.info("State is right");

        if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].SESSION_STATE)) {
          this.logger.verbose("Fragment has session state, caching");
          this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].SESSION_STATE, stateInfo.state), hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].SESSION_STATE]);
        }

        response.accountState = this.getAccountState(stateInfo.state);
        var clientInfo = void 0; // Process access_token

        if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ACCESS_TOKEN)) {
          this.logger.info("Fragment has access token");
          response.accessToken = hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ACCESS_TOKEN];

          if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].SCOPE)) {
            response.scopes = hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].SCOPE].split(" ");
          } // retrieve the id_token from response if present


          if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN)) {
            this.logger.verbose("Fragment has id_token");
            idTokenObj = new _IdToken__WEBPACK_IMPORTED_MODULE_6__["IdToken"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN]);
          } else {
            this.logger.verbose("No idToken on fragment, getting idToken from cache");
            idTokenObj = new _IdToken__WEBPACK_IMPORTED_MODULE_6__["IdToken"](this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["PersistentCacheKeys"].IDTOKEN));
          }

          response = _utils_ResponseUtils__WEBPACK_IMPORTED_MODULE_16__["ResponseUtils"].setResponseIdToken(response, idTokenObj); // set authority

          var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);
          this.logger.verbose("Got authority from cache"); // retrieve client_info - if it is not found, generate the uid and utid from idToken

          if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].CLIENT_INFO)) {
            this.logger.verbose("Fragment has clientInfo");
            clientInfo = new _ClientInfo__WEBPACK_IMPORTED_MODULE_5__["ClientInfo"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].CLIENT_INFO], authority);
          } else if (this.authorityInstance.AuthorityType === _authority_Authority__WEBPACK_IMPORTED_MODULE_4__["AuthorityType"].Adfs) {
            clientInfo = _ClientInfo__WEBPACK_IMPORTED_MODULE_5__["ClientInfo"].createClientInfoFromIdToken(idTokenObj, authority);
          } else {
            this.logger.warning("ClientInfo not received in the response from AAD");
          }

          response.account = _Account__WEBPACK_IMPORTED_MODULE_8__["Account"].createAccount(idTokenObj, clientInfo);
          this.logger.verbose("Account object created from response");
          var accountKey = void 0;

          if (response.account && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(response.account.homeAccountIdentifier)) {
            this.logger.verbose("AccountKey set");
            accountKey = response.account.homeAccountIdentifier;
          } else {
            this.logger.verbose("AccountKey set as no_account");
            accountKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].no_account;
          }

          acquireTokenAccountKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateAcquireTokenAccountKey(accountKey, stateInfo.state);
          var acquireTokenAccountKey_noaccount = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateAcquireTokenAccountKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].no_account, stateInfo.state);
          this.logger.verbose("AcquireTokenAccountKey generated");
          var cachedAccount = this.cacheStorage.getItem(acquireTokenAccountKey);
          var acquireTokenAccount = void 0; // Check with the account in the Cache

          if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(cachedAccount)) {
            acquireTokenAccount = JSON.parse(cachedAccount);
            this.logger.verbose("AcquireToken request account retrieved from cache");

            if (response.account && acquireTokenAccount && _Account__WEBPACK_IMPORTED_MODULE_8__["Account"].compareAccounts(response.account, acquireTokenAccount)) {
              response = this.saveAccessToken(response, authority, hashParams, clientInfo);
              this.logger.info("The user object received in the response is the same as the one passed in the acquireToken request");
            } else {
              this.logger.warning("The account object created from the response is not the same as the one passed in the acquireToken request");
            }
          } else if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(this.cacheStorage.getItem(acquireTokenAccountKey_noaccount))) {
            this.logger.verbose("No acquireToken account retrieved from cache");
            response = this.saveAccessToken(response, authority, hashParams, clientInfo);
          }
        } // Process id_token


        if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN)) {
          this.logger.info("Fragment has idToken"); // set the idToken

          idTokenObj = new _IdToken__WEBPACK_IMPORTED_MODULE_6__["IdToken"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN]); // set authority

          var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);
          response = _utils_ResponseUtils__WEBPACK_IMPORTED_MODULE_16__["ResponseUtils"].setResponseIdToken(response, idTokenObj);

          if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].CLIENT_INFO)) {
            this.logger.verbose("Fragment has clientInfo");
            clientInfo = new _ClientInfo__WEBPACK_IMPORTED_MODULE_5__["ClientInfo"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].CLIENT_INFO], authority);
          } else if (this.authorityInstance.AuthorityType === _authority_Authority__WEBPACK_IMPORTED_MODULE_4__["AuthorityType"].Adfs) {
            clientInfo = _ClientInfo__WEBPACK_IMPORTED_MODULE_5__["ClientInfo"].createClientInfoFromIdToken(idTokenObj, authority);
          } else {
            this.logger.warning("ClientInfo not received in the response from AAD");
          }

          this.account = _Account__WEBPACK_IMPORTED_MODULE_8__["Account"].createAccount(idTokenObj, clientInfo);
          response.account = this.account;
          this.logger.verbose("Account object created from response");

          if (idTokenObj && idTokenObj.nonce) {
            this.logger.verbose("IdToken has nonce"); // check nonce integrity if idToken has nonce - throw an error if not matched

            var cachedNonce = this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].NONCE_IDTOKEN, stateInfo.state), this.inCookie);

            if (idTokenObj.nonce !== cachedNonce) {
              this.account = null;
              this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].LOGIN_ERROR, "Nonce Mismatch. Expected Nonce: " + cachedNonce + "," + "Actual Nonce: " + idTokenObj.nonce);
              this.logger.error("Nonce Mismatch. Expected Nonce: " + cachedNonce + ", Actual Nonce: " + idTokenObj.nonce);
              error = _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createNonceMismatchError(cachedNonce, idTokenObj.nonce);
            } // Save the token
            else {
              this.logger.verbose("Nonce matches, saving idToken to cache");
              this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["PersistentCacheKeys"].IDTOKEN, hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ServerHashParamKeys"].ID_TOKEN], this.inCookie);
              this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["PersistentCacheKeys"].CLIENT_INFO, clientInfo.encodeClientInfo(), this.inCookie); // Save idToken as access token item for app itself

              this.saveIdToken(response, authority, hashParams, clientInfo, idTokenObj);
            }
          } else {
            this.logger.verbose("No idToken or no nonce. Cache key for Authority set as state");
            authorityKey = stateInfo.state;
            acquireTokenAccountKey = stateInfo.state;
            this.logger.error("Invalid id_token received in the response");
            error = _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createInvalidIdTokenError(idTokenObj);
            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].ERROR, error.errorCode);
            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].ERROR_DESC, error.errorMessage);
          }
        }
      } // State mismatch - unexpected/invalid state
      else {
        this.logger.verbose("State mismatch");
        authorityKey = stateInfo.state;
        acquireTokenAccountKey = stateInfo.state;
        var expectedState = this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].STATE_LOGIN, stateInfo.state), this.inCookie);
        this.logger.error("State Mismatch. Expected State: " + expectedState + ", Actual State: " + stateInfo.state);
        error = _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__["ClientAuthError"].createInvalidStateError(stateInfo.state, expectedState);
        this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].ERROR, error.errorCode);
        this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["ErrorCacheKeys"].ERROR_DESC, error.errorMessage);
      }
    } // Set status to completed


    this.cacheStorage.removeItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].RENEW_STATUS, stateInfo.state));
    this.cacheStorage.resetTempCacheItems(stateInfo.state);
    this.logger.verbose("Status set to complete, temporary cache cleared"); // this is required if navigateToLoginRequestUrl=false

    if (this.inCookie) {
      this.logger.verbose("InCookie is true, setting authorityKey in cookie");
      this.cacheStorage.setItemCookie(authorityKey, "", -1);
      this.cacheStorage.clearMsalCookie(stateInfo.state);
    }

    if (error) {
      // Error case, set status to cancelled
      throw error;
    }

    if (!response) {
      throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__["AuthError"].createUnexpectedError("Response is null");
    }

    return response;
  };
  /**
   * Set Authority when saving Token from the hash
   * @param state
   * @param inCookie
   * @param cacheStorage
   * @param idTokenObj
   * @param response
   */


  UserAgentApplication.prototype.populateAuthority = function (state, inCookie, cacheStorage, idTokenObj) {
    this.logger.verbose("PopulateAuthority has been called");
    var authorityKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateAuthorityKey(state);
    var cachedAuthority = cacheStorage.getItem(authorityKey, inCookie); // retrieve the authority from cache and replace with tenantID

    return _utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(cachedAuthority) ? cachedAuthority : _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].replaceTenantPath(cachedAuthority, idTokenObj.tenantId);
  };
  /* tslint:enable:no-string-literal */
  // #endregion
  // #region Account

  /**
   * Returns the signed in account
   * (the account object is created at the time of successful login)
   * or null when no state is found
   * @returns {@link Account} - the account object stored in MSAL
   */


  UserAgentApplication.prototype.getAccount = function () {
    // if a session already exists, get the account from the session
    if (this.account) {
      return this.account;
    } // frame is used to get idToken and populate the account for the given session


    var rawIdToken = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["PersistentCacheKeys"].IDTOKEN, this.inCookie);
    var rawClientInfo = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["PersistentCacheKeys"].CLIENT_INFO, this.inCookie);

    if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(rawIdToken) && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(rawClientInfo)) {
      var idToken = new _IdToken__WEBPACK_IMPORTED_MODULE_6__["IdToken"](rawIdToken);
      var clientInfo = new _ClientInfo__WEBPACK_IMPORTED_MODULE_5__["ClientInfo"](rawClientInfo, "");
      this.account = _Account__WEBPACK_IMPORTED_MODULE_8__["Account"].createAccount(idToken, clientInfo);
      return this.account;
    } // if login not yet done, return null


    return null;
  };
  /**
   * @hidden
   *
   * Extracts state value from the accountState sent with the authentication request.
   * @returns {string} scope.
   * @ignore
   */


  UserAgentApplication.prototype.getAccountState = function (state) {
    if (state) {
      var splitIndex = state.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].resourceDelimiter);

      if (splitIndex > -1 && splitIndex + 1 < state.length) {
        return state.substring(splitIndex + 1);
      }
    }

    return state;
  };
  /**
   * Use to get a list of unique accounts in MSAL cache based on homeAccountIdentifier.
   *
   * @param {@link Array<Account>} Account - all unique accounts in MSAL cache.
   */


  UserAgentApplication.prototype.getAllAccounts = function () {
    var accounts = [];
    var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].homeAccountIdentifier);

    for (var i = 0; i < accessTokenCacheItems.length; i++) {
      var idToken = new _IdToken__WEBPACK_IMPORTED_MODULE_6__["IdToken"](accessTokenCacheItems[i].value.idToken);
      var clientInfo = new _ClientInfo__WEBPACK_IMPORTED_MODULE_5__["ClientInfo"](accessTokenCacheItems[i].value.homeAccountIdentifier, "");
      var account = _Account__WEBPACK_IMPORTED_MODULE_8__["Account"].createAccount(idToken, clientInfo);
      accounts.push(account);
    }

    return this.getUniqueAccounts(accounts);
  };
  /**
   * @hidden
   *
   * Used to filter accounts based on homeAccountIdentifier
   * @param {Array<Account>}  Accounts - accounts saved in the cache
   * @ignore
   */


  UserAgentApplication.prototype.getUniqueAccounts = function (accounts) {
    if (!accounts || accounts.length <= 1) {
      return accounts;
    }

    var flags = [];
    var uniqueAccounts = [];

    for (var index = 0; index < accounts.length; ++index) {
      if (accounts[index].homeAccountIdentifier && flags.indexOf(accounts[index].homeAccountIdentifier) === -1) {
        flags.push(accounts[index].homeAccountIdentifier);
        uniqueAccounts.push(accounts[index]);
      }
    }

    return uniqueAccounts;
  }; // #endregion
  // #region Angular

  /**
   * @hidden
   *
   * Broadcast messages - Used only for Angular?  *
   * @param eventName
   * @param data
   */


  UserAgentApplication.prototype.broadcast = function (eventName, data) {
    var evt = new CustomEvent(eventName, {
      detail: data
    });
    window.dispatchEvent(evt);
  };
  /**
   * @hidden
   *
   * Helper function to retrieve the cached token
   *
   * @param scopes
   * @param {@link Account} account
   * @param state
   * @return {@link AuthResponse} AuthResponse
   */


  UserAgentApplication.prototype.getCachedTokenInternal = function (scopes, account, state, correlationId) {
    // Get the current session's account object
    var accountObject = account || this.getAccount();

    if (!accountObject) {
      return null;
    } // Construct AuthenticationRequest based on response type; set "redirectUri" from the "request" which makes this call from Angular - for this.getRedirectUri()


    var newAuthority = this.authorityInstance ? this.authorityInstance : _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__["AuthorityFactory"].CreateInstance(this.authority, this.config.auth.validateAuthority);
    var responseType = this.getTokenType(accountObject, scopes);
    var serverAuthenticationRequest = new _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__["ServerRequestParameters"](newAuthority, this.clientId, responseType, this.getRedirectUri(), scopes, state, correlationId); // get cached token

    return this.getCachedToken(serverAuthenticationRequest, account);
  };
  /**
   * @hidden
   *
   * Get scopes for the Endpoint - Used in Angular to track protected and unprotected resources without interaction from the developer app
   * Note: Please check if we need to set the "redirectUri" from the "request" which makes this call from Angular - for this.getRedirectUri()
   *
   * @param endpoint
   */


  UserAgentApplication.prototype.getScopesForEndpoint = function (endpoint) {
    // if user specified list of unprotectedResources, no need to send token to these endpoints, return null.
    if (this.config.framework.unprotectedResources.length > 0) {
      for (var i = 0; i < this.config.framework.unprotectedResources.length; i++) {
        if (endpoint.indexOf(this.config.framework.unprotectedResources[i]) > -1) {
          return null;
        }
      }
    } // process all protected resources and send the matched one


    if (this.config.framework.protectedResourceMap.size > 0) {
      for (var _i = 0, _a = Array.from(this.config.framework.protectedResourceMap.keys()); _i < _a.length; _i++) {
        var key = _a[_i]; // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1

        if (endpoint.indexOf(key) > -1) {
          return this.config.framework.protectedResourceMap.get(key);
        }
      }
    }
    /*
     * default resource will be clientid if nothing specified
     * App will use idtoken for calls to itself
     * check if it's staring from http or https, needs to match with app host
     */


    if (endpoint.indexOf("http://") > -1 || endpoint.indexOf("https://") > -1) {
      if (_utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].getHostFromUri(endpoint) === _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].getHostFromUri(this.getRedirectUri())) {
        return new Array(this.clientId);
      }
    } else {
      /*
       * in angular level, the url for $http interceptor call could be relative url,
       * if it's relative call, we'll treat it as app backend call.
       */
      return new Array(this.clientId);
    } // if not the app's own backend or not a domain listed in the endpoints structure


    return null;
  };
  /**
   * Return boolean flag to developer to help inform if login is in progress
   * @returns {boolean} true/false
   */


  UserAgentApplication.prototype.getLoginInProgress = function () {
    return this.cacheStorage.isInteractionInProgress(true);
  };
  /**
   * @hidden
   * @ignore
   *
   * @param loginInProgress
   */


  UserAgentApplication.prototype.setInteractionInProgress = function (inProgress) {
    this.cacheStorage.setInteractionInProgress(inProgress);
  };
  /**
   * @hidden
   * @ignore
   *
   * @param loginInProgress
   */


  UserAgentApplication.prototype.setloginInProgress = function (loginInProgress) {
    this.setInteractionInProgress(loginInProgress);
  };
  /**
   * @hidden
   * @ignore
   *
   * returns the status of acquireTokenInProgress
   */


  UserAgentApplication.prototype.getAcquireTokenInProgress = function () {
    return this.cacheStorage.isInteractionInProgress(true);
  };
  /**
   * @hidden
   * @ignore
   *
   * @param acquireTokenInProgress
   */


  UserAgentApplication.prototype.setAcquireTokenInProgress = function (acquireTokenInProgress) {
    this.setInteractionInProgress(acquireTokenInProgress);
  };
  /**
   * @hidden
   * @ignore
   *
   * returns the logger handle
   */


  UserAgentApplication.prototype.getLogger = function () {
    return this.logger;
  };
  /**
   * Sets the logger callback.
   * @param logger Logger callback
   */


  UserAgentApplication.prototype.setLogger = function (logger) {
    this.logger = logger;
  }; // #endregion
  // #region Getters and Setters

  /**
   * Use to get the redirect uri configured in MSAL or null.
   * Evaluates redirectUri if its a function, otherwise simply returns its value.
   *
   * @returns {string} redirect URL
   */


  UserAgentApplication.prototype.getRedirectUri = function (reqRedirectUri) {
    if (reqRedirectUri) {
      return reqRedirectUri;
    } else if (typeof this.config.auth.redirectUri === "function") {
      return this.config.auth.redirectUri();
    }

    return this.config.auth.redirectUri;
  };
  /**
   * Use to get the post logout redirect uri configured in MSAL or null.
   * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.
   *
   * @returns {string} post logout redirect URL
   */


  UserAgentApplication.prototype.getPostLogoutRedirectUri = function () {
    if (typeof this.config.auth.postLogoutRedirectUri === "function") {
      return this.config.auth.postLogoutRedirectUri();
    }

    return this.config.auth.postLogoutRedirectUri;
  };
  /**
   * Use to get the current {@link Configuration} object in MSAL
   *
   * @returns {@link Configuration}
   */


  UserAgentApplication.prototype.getCurrentConfiguration = function () {
    if (!this.config) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__["ClientConfigurationError"].createNoSetConfigurationError();
    }

    return this.config;
  };
  /**
   * @ignore
   *
   * Utils function to create the Authentication
   * @param {@link account} account object
   * @param scopes
   *
   * @returns {string} token type: token, id_token or id_token token
   *
   */


  UserAgentApplication.prototype.getTokenType = function (accountObject, scopes) {
    var accountsMatch = _Account__WEBPACK_IMPORTED_MODULE_8__["Account"].compareAccounts(accountObject, this.getAccount());
    return _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__["ServerRequestParameters"].determineResponseType(accountsMatch, scopes);
  };
  /**
   * @hidden
   * @ignore
   *
   * Sets the cachekeys for and stores the account information in cache
   * @param account
   * @param state
   * @hidden
   */


  UserAgentApplication.prototype.setAccountCache = function (account, state) {
    // Cache acquireTokenAccountKey
    var accountId = account ? this.getAccountId(account) : _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].no_account;
    var acquireTokenAccountKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateAcquireTokenAccountKey(accountId, state);
    this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));
  };
  /**
   * @hidden
   * @ignore
   *
   * Sets the cacheKey for and stores the authority information in cache
   * @param state
   * @param authority
   * @hidden
   */


  UserAgentApplication.prototype.setAuthorityCache = function (state, authority) {
    // Cache authorityKey
    var authorityKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateAuthorityKey(state);
    this.cacheStorage.setItem(authorityKey, _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__["UrlUtils"].CanonicalizeUri(authority), this.inCookie);
  };
  /**
   * Updates account, authority, and nonce in cache
   * @param serverAuthenticationRequest
   * @param account
   * @hidden
   * @ignore
   */


  UserAgentApplication.prototype.updateCacheEntries = function (serverAuthenticationRequest, account, isLoginCall, loginStartPage) {
    // Cache Request Originator Page
    if (loginStartPage) {
      this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].LOGIN_REQUEST, serverAuthenticationRequest.state), loginStartPage, this.inCookie);
    } // Cache account and authority


    if (isLoginCall) {
      // Cache the state
      this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].STATE_LOGIN, serverAuthenticationRequest.state), serverAuthenticationRequest.state, this.inCookie);
    } else {
      this.setAccountCache(account, serverAuthenticationRequest.state);
    } // Cache authorityKey


    this.setAuthorityCache(serverAuthenticationRequest.state, serverAuthenticationRequest.authority); // Cache nonce

    this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__["AuthCache"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__["TemporaryCacheKeys"].NONCE_IDTOKEN, serverAuthenticationRequest.state), serverAuthenticationRequest.nonce, this.inCookie);
  };
  /**
   * Returns the unique identifier for the logged in account
   * @param account
   * @hidden
   * @ignore
   */


  UserAgentApplication.prototype.getAccountId = function (account) {
    // return `${account.accountIdentifier}` + Constants.resourceDelimiter + `${account.homeAccountIdentifier}`;
    var accountId;

    if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__["StringUtils"].isEmpty(account.homeAccountIdentifier)) {
      accountId = account.homeAccountIdentifier;
    } else {
      accountId = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].no_account;
    }

    return accountId;
  };
  /**
   * @ignore
   * @param extraQueryParameters
   *
   * Construct 'tokenRequest' from the available data in adalIdToken
   */


  UserAgentApplication.prototype.buildIDTokenRequest = function (request) {
    var tokenRequest = {
      scopes: _utils_Constants__WEBPACK_IMPORTED_MODULE_27__["Constants"].oidcScopes,
      authority: this.authority,
      account: this.getAccount(),
      extraQueryParameters: request.extraQueryParameters,
      correlationId: request.correlationId
    };
    return tokenRequest;
  };
  /**
   * @ignore
   * @param config
   * @param clientId
   *
   * Construct TelemetryManager from Configuration
   */


  UserAgentApplication.prototype.getTelemetryManagerFromConfig = function (config, clientId) {
    if (!config) {
      // if unset
      return _telemetry_TelemetryManager__WEBPACK_IMPORTED_MODULE_25__["default"].getTelemetrymanagerStub(clientId, this.logger);
    } // if set then validate


    var applicationName = config.applicationName,
        applicationVersion = config.applicationVersion,
        telemetryEmitter = config.telemetryEmitter;

    if (!applicationName || !applicationVersion || !telemetryEmitter) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__["ClientConfigurationError"].createTelemetryConfigError(config);
    } // if valid then construct


    var telemetryPlatform = {
      applicationName: applicationName,
      applicationVersion: applicationVersion
    };
    var telemetryManagerConfig = {
      platform: telemetryPlatform,
      clientId: clientId
    };
    return new _telemetry_TelemetryManager__WEBPACK_IMPORTED_MODULE_25__["default"](telemetryManagerConfig, telemetryEmitter, this.logger);
  };

  return UserAgentApplication;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/XHRClient.js":
/*!************************************************!*\
  !*** ./node_modules/msal/lib-es6/XHRClient.js ***!
  \************************************************/
/*! exports provided: XhrClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XhrClient", function() { return XhrClient; });
/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * XHR client for JSON endpoints
 * https://www.npmjs.com/package/async-promise
 * @hidden
 */

var XhrClient =
/** @class */
function () {
  function XhrClient() {}

  XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {
    var _this = this;

    return new Promise(function (resolve, reject) {
      var xhr = new XMLHttpRequest();
      xhr.open(method, url,
      /* async: */
      true);

      if (enableCaching) {
        /*
         * TODO: (shivb) ensure that this can be cached
         * xhr.setRequestHeader("Cache-Control", "Public");
         */
      }

      xhr.onload = function () {
        if (xhr.status < 200 || xhr.status >= 300) {
          reject(_this.handleError(xhr.responseText));
        }

        var jsonResponse;

        try {
          jsonResponse = JSON.parse(xhr.responseText);
        } catch (e) {
          reject(_this.handleError(xhr.responseText));
        }

        var response = {
          statusCode: xhr.status,
          body: jsonResponse
        };
        resolve(response);
      };

      xhr.onerror = function () {
        reject(xhr.status);
      };

      if (method === _utils_Constants__WEBPACK_IMPORTED_MODULE_0__["NetworkRequestType"].GET) {
        xhr.send();
      } else {
        throw "not implemented";
      }
    });
  };

  XhrClient.prototype.handleError = function (responseText) {
    var jsonResponse;

    try {
      jsonResponse = JSON.parse(responseText);

      if (jsonResponse["error"]) {
        return jsonResponse["error"];
      } else {
        throw responseText;
      }
    } catch (e) {
      return responseText;
    }
  };

  return XhrClient;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/authority/Authority.js":
/*!**********************************************************!*\
  !*** ./node_modules/msal/lib-es6/authority/Authority.js ***!
  \**********************************************************/
/*! exports provided: AuthorityType, Authority */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthorityType", function() { return AuthorityType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Authority", function() { return Authority; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationError */ "./node_modules/msal/lib-es6/error/ClientConfigurationError.js");
/* harmony import */ var _XHRClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../XHRClient */ "./node_modules/msal/lib-es6/XHRClient.js");
/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/* harmony import */ var _TrustedAuthority__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TrustedAuthority */ "./node_modules/msal/lib-es6/authority/TrustedAuthority.js");
/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */






/**
 * @hidden
 */

var AuthorityType;

(function (AuthorityType) {
  AuthorityType[AuthorityType["Default"] = 0] = "Default";
  AuthorityType[AuthorityType["Adfs"] = 1] = "Adfs";
})(AuthorityType || (AuthorityType = {}));
/**
 * @hidden
 */


var Authority =
/** @class */
function () {
  function Authority(authority, validateAuthority, authorityMetadata) {
    this.IsValidationEnabled = validateAuthority;
    this.CanonicalAuthority = authority;
    this.validateAsUri();
    this.tenantDiscoveryResponse = authorityMetadata;
  }

  Authority.isAdfs = function (authorityUrl) {
    var components = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__["UrlUtils"].GetUrlComponents(authorityUrl);
    var pathSegments = components.PathSegments;
    return pathSegments.length && pathSegments[0].toLowerCase() === _utils_Constants__WEBPACK_IMPORTED_MODULE_5__["Constants"].ADFS;
  };

  Object.defineProperty(Authority.prototype, "AuthorityType", {
    get: function get() {
      return Authority.isAdfs(this.canonicalAuthority) ? AuthorityType.Adfs : AuthorityType.Default;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Authority.prototype, "Tenant", {
    get: function get() {
      return this.CanonicalAuthorityUrlComponents.PathSegments[0];
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Authority.prototype, "AuthorizationEndpoint", {
    get: function get() {
      this.validateResolved();
      return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Authority.prototype, "EndSessionEndpoint", {
    get: function get() {
      this.validateResolved();
      return this.tenantDiscoveryResponse.EndSessionEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Authority.prototype, "SelfSignedJwtAudience", {
    get: function get() {
      this.validateResolved();
      return this.tenantDiscoveryResponse.Issuer.replace(/{tenant}|{tenantid}/g, this.Tenant);
    },
    enumerable: false,
    configurable: true
  });

  Authority.prototype.validateResolved = function () {
    if (!this.hasCachedMetadata()) {
      throw "Please call ResolveEndpointsAsync first";
    }
  };

  Object.defineProperty(Authority.prototype, "CanonicalAuthority", {
    /**
     * A URL that is the authority set by the developer
     */
    get: function get() {
      return this.canonicalAuthority;
    },
    set: function set(url) {
      this.canonicalAuthority = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__["UrlUtils"].CanonicalizeUri(url);
      this.canonicalAuthorityUrlComponents = null;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Authority.prototype, "CanonicalAuthorityUrlComponents", {
    get: function get() {
      if (!this.canonicalAuthorityUrlComponents) {
        this.canonicalAuthorityUrlComponents = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__["UrlUtils"].GetUrlComponents(this.CanonicalAuthority);
      }

      return this.canonicalAuthorityUrlComponents;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Authority.prototype, "DefaultOpenIdConfigurationEndpoint", {
    // http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata
    get: function get() {
      return this.AuthorityType === AuthorityType.Adfs ? "" + this.CanonicalAuthority + _utils_Constants__WEBPACK_IMPORTED_MODULE_5__["WELL_KNOWN_SUFFIX"] : this.CanonicalAuthority + "v2.0/" + _utils_Constants__WEBPACK_IMPORTED_MODULE_5__["WELL_KNOWN_SUFFIX"];
    },
    enumerable: false,
    configurable: true
  });
  /**
   * Given a string, validate that it is of the form https://domain/path
   */

  Authority.prototype.validateAsUri = function () {
    var components;

    try {
      components = this.CanonicalAuthorityUrlComponents;
    } catch (e) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__["ClientConfigurationErrorMessage"].invalidAuthorityType;
    }

    if (!components.Protocol || components.Protocol.toLowerCase() !== "https:") {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__["ClientConfigurationErrorMessage"].authorityUriInsecure;
    }

    if (!components.PathSegments || components.PathSegments.length < 1) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__["ClientConfigurationErrorMessage"].authorityUriInvalidPath;
    }
  };
  /**
   * Calls the OIDC endpoint and returns the response
   */


  Authority.prototype.DiscoverEndpoints = function (openIdConfigurationEndpoint, telemetryManager, correlationId) {
    var client = new _XHRClient__WEBPACK_IMPORTED_MODULE_2__["XhrClient"]();
    var httpMethod = _utils_Constants__WEBPACK_IMPORTED_MODULE_5__["NetworkRequestType"].GET;
    var httpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, openIdConfigurationEndpoint, "openIdConfigurationEndpoint");
    return client.sendRequestAsync(openIdConfigurationEndpoint, httpMethod,
    /* enableCaching: */
    true).then(function (response) {
      httpEvent.httpResponseStatus = response.statusCode;
      telemetryManager.stopEvent(httpEvent);
      return {
        AuthorizationEndpoint: response.body["authorization_endpoint"],
        EndSessionEndpoint: response.body["end_session_endpoint"],
        Issuer: response.body["issuer"]
      };
    }).catch(function (err) {
      httpEvent.serverErrorCode = err;
      telemetryManager.stopEvent(httpEvent);
      throw err;
    });
  };
  /**
   * Returns a promise.
   * Checks to see if the authority is in the cache
   * Discover endpoints via openid-configuration
   * If successful, caches the endpoint for later use in OIDC
   */


  Authority.prototype.resolveEndpointsAsync = function (telemetryManager, correlationId) {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function () {
      var host, openIdConfigurationEndpointResponse, _a;

      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"])(this, function (_b) {
        switch (_b.label) {
          case 0:
            if (!this.IsValidationEnabled) return [3
            /*break*/
            , 3];
            host = this.canonicalAuthorityUrlComponents.HostNameAndPort;
            if (!(_TrustedAuthority__WEBPACK_IMPORTED_MODULE_4__["TrustedAuthority"].getTrustedHostList().length === 0)) return [3
            /*break*/
            , 2];
            return [4
            /*yield*/
            , _TrustedAuthority__WEBPACK_IMPORTED_MODULE_4__["TrustedAuthority"].setTrustedAuthoritiesFromNetwork(this.canonicalAuthority, telemetryManager, correlationId)];

          case 1:
            _b.sent();

            _b.label = 2;

          case 2:
            if (!_TrustedAuthority__WEBPACK_IMPORTED_MODULE_4__["TrustedAuthority"].IsInTrustedHostList(host)) {
              throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__["ClientConfigurationError"].createUntrustedAuthorityError(host);
            }

            _b.label = 3;

          case 3:
            openIdConfigurationEndpointResponse = this.GetOpenIdConfigurationEndpoint();
            _a = this;
            return [4
            /*yield*/
            , this.DiscoverEndpoints(openIdConfigurationEndpointResponse, telemetryManager, correlationId)];

          case 4:
            _a.tenantDiscoveryResponse = _b.sent();
            return [2
            /*return*/
            , this.tenantDiscoveryResponse];
        }
      });
    });
  };
  /**
   * Checks if there is a cached tenant discovery response with required fields.
   */


  Authority.prototype.hasCachedMetadata = function () {
    return !!(this.tenantDiscoveryResponse && this.tenantDiscoveryResponse.AuthorizationEndpoint && this.tenantDiscoveryResponse.EndSessionEndpoint && this.tenantDiscoveryResponse.Issuer);
  };
  /**
   * Returns a promise which resolves to the OIDC endpoint
   * Only responds with the endpoint
   */


  Authority.prototype.GetOpenIdConfigurationEndpoint = function () {
    return this.DefaultOpenIdConfigurationEndpoint;
  };

  return Authority;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/authority/AuthorityFactory.js":
/*!*****************************************************************!*\
  !*** ./node_modules/msal/lib-es6/authority/AuthorityFactory.js ***!
  \*****************************************************************/
/*! exports provided: AuthorityFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthorityFactory", function() { return AuthorityFactory; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Authority__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Authority */ "./node_modules/msal/lib-es6/authority/Authority.js");
/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientConfigurationError */ "./node_modules/msal/lib-es6/error/ClientConfigurationError.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @hidden
 */





var AuthorityFactory =
/** @class */
function () {
  function AuthorityFactory() {}

  AuthorityFactory.saveMetadataFromNetwork = function (authorityInstance, telemetryManager, correlationId) {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function () {
      var metadata;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"])(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , authorityInstance.resolveEndpointsAsync(telemetryManager, correlationId)];

          case 1:
            metadata = _a.sent();
            this.metadataMap.set(authorityInstance.CanonicalAuthority, metadata);
            return [2
            /*return*/
            , metadata];
        }
      });
    });
  };

  AuthorityFactory.getMetadata = function (authorityUrl) {
    return this.metadataMap.get(authorityUrl);
  };

  AuthorityFactory.saveMetadataFromConfig = function (authorityUrl, authorityMetadataJson) {
    try {
      if (authorityMetadataJson) {
        var parsedMetadata = JSON.parse(authorityMetadataJson);

        if (!parsedMetadata.authorization_endpoint || !parsedMetadata.end_session_endpoint || !parsedMetadata.issuer) {
          throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_3__["ClientConfigurationError"].createInvalidAuthorityMetadataError();
        }

        this.metadataMap.set(authorityUrl, {
          AuthorizationEndpoint: parsedMetadata.authorization_endpoint,
          EndSessionEndpoint: parsedMetadata.end_session_endpoint,
          Issuer: parsedMetadata.issuer
        });
      }
    } catch (e) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_3__["ClientConfigurationError"].createInvalidAuthorityMetadataError();
    }
  };
  /**
   * Create an authority object of the correct type based on the url
   * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)
   */


  AuthorityFactory.CreateInstance = function (authorityUrl, validateAuthority, authorityMetadata) {
    if (_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__["StringUtils"].isEmpty(authorityUrl)) {
      return null;
    }

    if (authorityMetadata) {
      // todo: log statements
      this.saveMetadataFromConfig(authorityUrl, authorityMetadata);
    }

    return new _Authority__WEBPACK_IMPORTED_MODULE_1__["Authority"](authorityUrl, validateAuthority, this.metadataMap.get(authorityUrl));
  };

  AuthorityFactory.metadataMap = new Map();
  return AuthorityFactory;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/authority/TrustedAuthority.js":
/*!*****************************************************************!*\
  !*** ./node_modules/msal/lib-es6/authority/TrustedAuthority.js ***!
  \*****************************************************************/
/*! exports provided: TrustedAuthority */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrustedAuthority", function() { return TrustedAuthority; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _XHRClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../XHRClient */ "./node_modules/msal/lib-es6/XHRClient.js");
/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */





var TrustedAuthority =
/** @class */
function () {
  function TrustedAuthority() {}
  /**
   *
   * @param validateAuthority
   * @param knownAuthorities
   */


  TrustedAuthority.setTrustedAuthoritiesFromConfig = function (validateAuthority, knownAuthorities) {
    if (validateAuthority && !this.getTrustedHostList().length) {
      knownAuthorities.forEach(function (authority) {
        TrustedAuthority.TrustedHostList.push(authority.toLowerCase());
      });
    }
  };
  /**
   *
   * @param telemetryManager
   * @param correlationId
   */


  TrustedAuthority.getAliases = function (authorityToVerify, telemetryManager, correlationId) {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function () {
      var client, httpMethod, instanceDiscoveryEndpoint, httpEvent;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"])(this, function (_a) {
        client = new _XHRClient__WEBPACK_IMPORTED_MODULE_1__["XhrClient"]();
        httpMethod = _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["NetworkRequestType"].GET;
        instanceDiscoveryEndpoint = "" + _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["AAD_INSTANCE_DISCOVERY_ENDPOINT"] + authorityToVerify + "oauth2/v2.0/authorize";
        httpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, instanceDiscoveryEndpoint, "getAliases");
        return [2
        /*return*/
        , client.sendRequestAsync(instanceDiscoveryEndpoint, httpMethod, true).then(function (response) {
          httpEvent.httpResponseStatus = response.statusCode;
          telemetryManager.stopEvent(httpEvent);
          return response.body["metadata"];
        }).catch(function (err) {
          httpEvent.serverErrorCode = err;
          telemetryManager.stopEvent(httpEvent);
          throw err;
        })];
      });
    });
  };
  /**
   *
   * @param telemetryManager
   * @param correlationId
   */


  TrustedAuthority.setTrustedAuthoritiesFromNetwork = function (authorityToVerify, telemetryManager, correlationId) {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function () {
      var metadata, host;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"])(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , this.getAliases(authorityToVerify, telemetryManager, correlationId)];

          case 1:
            metadata = _a.sent();
            metadata.forEach(function (entry) {
              var authorities = entry["aliases"];
              authorities.forEach(function (authority) {
                TrustedAuthority.TrustedHostList.push(authority.toLowerCase());
              });
            });
            host = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__["UrlUtils"].GetUrlComponents(authorityToVerify).HostNameAndPort;

            if (TrustedAuthority.getTrustedHostList().length && !TrustedAuthority.IsInTrustedHostList(host)) {
              // Custom Domain scenario, host is trusted because Instance Discovery call succeeded
              TrustedAuthority.TrustedHostList.push(host.toLowerCase());
            }

            return [2
            /*return*/
            ];
        }
      });
    });
  };

  TrustedAuthority.getTrustedHostList = function () {
    return this.TrustedHostList;
  };
  /**
   * Checks to see if the host is in a list of trusted hosts
   * @param host
   */


  TrustedAuthority.IsInTrustedHostList = function (host) {
    return this.TrustedHostList.indexOf(host.toLowerCase()) > -1;
  };

  TrustedAuthority.TrustedHostList = [];
  return TrustedAuthority;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/cache/AccessTokenCacheItem.js":
/*!*****************************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/AccessTokenCacheItem.js ***!
  \*****************************************************************/
/*! exports provided: AccessTokenCacheItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccessTokenCacheItem", function() { return AccessTokenCacheItem; });
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @hidden
 */
var AccessTokenCacheItem =
/** @class */
function () {
  function AccessTokenCacheItem(key, value) {
    this.key = key;
    this.value = value;
  }

  return AccessTokenCacheItem;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/cache/AccessTokenKey.js":
/*!***********************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/AccessTokenKey.js ***!
  \***********************************************************/
/*! exports provided: AccessTokenKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccessTokenKey", function() { return AccessTokenKey; });
/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


/**
 * @hidden
 */

var AccessTokenKey =
/** @class */
function () {
  function AccessTokenKey(authority, clientId, scopes, uid, utid) {
    this.authority = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_1__["UrlUtils"].CanonicalizeUri(authority);
    this.clientId = clientId;
    this.scopes = scopes;
    this.homeAccountIdentifier = _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Encode(uid) + "." + _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Encode(utid);
  }

  return AccessTokenKey;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/cache/AccessTokenValue.js":
/*!*************************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/AccessTokenValue.js ***!
  \*************************************************************/
/*! exports provided: AccessTokenValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccessTokenValue", function() { return AccessTokenValue; });
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @hidden
 */
var AccessTokenValue =
/** @class */
function () {
  function AccessTokenValue(accessToken, idToken, expiresIn, homeAccountIdentifier) {
    this.accessToken = accessToken;
    this.idToken = idToken;
    this.expiresIn = expiresIn;
    this.homeAccountIdentifier = homeAccountIdentifier;
  }

  return AccessTokenValue;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/cache/AuthCache.js":
/*!******************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/AuthCache.js ***!
  \******************************************************/
/*! exports provided: AuthCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthCache", function() { return AuthCache; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony import */ var _AccessTokenCacheItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AccessTokenCacheItem */ "./node_modules/msal/lib-es6/cache/AccessTokenCacheItem.js");
/* harmony import */ var _BrowserStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BrowserStorage */ "./node_modules/msal/lib-es6/cache/BrowserStorage.js");
/* harmony import */ var _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/RequestUtils */ "./node_modules/msal/lib-es6/utils/RequestUtils.js");
/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/* harmony import */ var _IdToken__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../IdToken */ "./node_modules/msal/lib-es6/IdToken.js");
/* harmony import */ var _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ClientAuthError */ "./node_modules/msal/lib-es6/error/ClientAuthError.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */








/**
 * @hidden
 */

var AuthCache =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AuthCache, _super);

  function AuthCache(clientId, cacheLocation, storeAuthStateInCookie) {
    var _this = _super.call(this, cacheLocation) || this;

    _this.temporaryCache = new _BrowserStorage__WEBPACK_IMPORTED_MODULE_3__["BrowserStorage"](_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["SESSION_STORAGE"]);
    _this.clientId = clientId; // This is hardcoded to true for now. We may make this configurable in the future

    _this.rollbackEnabled = true;

    _this.migrateCacheEntries(storeAuthStateInCookie);

    return _this;
  }
  /**
   * Support roll back to old cache schema until the next major release: true by default now
   * @param storeAuthStateInCookie
   */


  AuthCache.prototype.migrateCacheEntries = function (storeAuthStateInCookie) {
    var _this = this;

    var idTokenKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix + "." + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["PersistentCacheKeys"].IDTOKEN;
    var clientInfoKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix + "." + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["PersistentCacheKeys"].CLIENT_INFO;
    var errorKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix + "." + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["ErrorCacheKeys"].ERROR;
    var errorDescKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix + "." + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["ErrorCacheKeys"].ERROR_DESC;

    var idTokenValue = _super.prototype.getItem.call(this, idTokenKey);

    var idToken;

    if (idTokenValue) {
      try {
        idToken = new _IdToken__WEBPACK_IMPORTED_MODULE_6__["IdToken"](idTokenValue);
      } catch (e) {
        return;
      }
    }

    if (idToken && idToken.claims && idToken.claims.aud === this.clientId) {
      var clientInfoValue = _super.prototype.getItem.call(this, clientInfoKey);

      var errorValue = _super.prototype.getItem.call(this, errorKey);

      var errorDescValue = _super.prototype.getItem.call(this, errorDescKey);

      var values_1 = [idTokenValue, clientInfoValue, errorValue, errorDescValue];
      var keysToMigrate = [_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["PersistentCacheKeys"].IDTOKEN, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["PersistentCacheKeys"].CLIENT_INFO, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["ErrorCacheKeys"].ERROR, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["ErrorCacheKeys"].ERROR_DESC];
      keysToMigrate.forEach(function (cacheKey, index) {
        return _this.duplicateCacheEntry(cacheKey, values_1[index], storeAuthStateInCookie);
      });
    }
  };
  /**
   * Utility function to help with roll back keys
   * @param newKey
   * @param value
   * @param storeAuthStateInCookie
   */


  AuthCache.prototype.duplicateCacheEntry = function (newKey, value, storeAuthStateInCookie) {
    if (value) {
      this.setItem(newKey, value, storeAuthStateInCookie);
    }
  };
  /**
   * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)
   * @param key
   * @param addInstanceId
   */


  AuthCache.prototype.generateCacheKey = function (key, addInstanceId) {
    try {
      // Defined schemas do not need the key appended
      JSON.parse(key);
      return key;
    } catch (e) {
      if (key.indexOf("" + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix) === 0 || key.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].adalIdToken) === 0) {
        return key;
      }

      return addInstanceId ? _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix + "." + this.clientId + "." + key : _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix + "." + key;
    }
  };
  /**
   * Validates that the input cache key contains the account search terms (clientId and homeAccountIdentifier) and
   * then whether or not it contains the "scopes", depending on the token type being searched for. With matching account
   * search terms, Access Token search tries to match the "scopes" keyword, while Id Token search expects "scopes" to not be included.
   * @param key
   * @param clientId
   * @param homeAccountIdentifier
   * @param tokenType
   */


  AuthCache.prototype.matchKeyForType = function (key, clientId, homeAccountIdentifier, tokenType) {
    // All valid token cache item keys are valid JSON objects, ignore keys that aren't
    var parsedKey = _utils_StringUtils__WEBPACK_IMPORTED_MODULE_5__["StringUtils"].validateAndParseJsonCacheKey(key);

    if (!parsedKey) {
      return null;
    } // Does the cache item match the request account


    var accountMatches = key.match(clientId) && key.match(homeAccountIdentifier); // Does the cache item match the requested token type

    var tokenTypeMatches = false;

    switch (tokenType) {
      case _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["ServerHashParamKeys"].ACCESS_TOKEN:
        // Cache item is an access token if scopes are included in the cache item key
        tokenTypeMatches = !!key.match(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].scopes);
        break;

      case _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["ServerHashParamKeys"].ID_TOKEN:
        // Cache may be an ID token if scopes are NOT included in the cache item key
        tokenTypeMatches = !key.match(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].scopes);
        break;
    }

    return accountMatches && tokenTypeMatches ? parsedKey : null;
  };
  /**
   * add value to storage
   * @param key
   * @param value
   * @param enableCookieStorage
   */


  AuthCache.prototype.setItem = function (key, value, enableCookieStorage) {
    _super.prototype.setItem.call(this, this.generateCacheKey(key, true), value, enableCookieStorage); // Values stored in cookies will have rollback disabled to minimize cookie length


    if (this.rollbackEnabled && !enableCookieStorage) {
      _super.prototype.setItem.call(this, this.generateCacheKey(key, false), value, enableCookieStorage);
    }
  };
  /**
   * get one item by key from storage
   * @param key
   * @param enableCookieStorage
   */


  AuthCache.prototype.getItem = function (key, enableCookieStorage) {
    return _super.prototype.getItem.call(this, this.generateCacheKey(key, true), enableCookieStorage);
  };
  /**
   * remove value from storage
   * @param key
   */


  AuthCache.prototype.removeItem = function (key) {
    this.temporaryCache.removeItem(this.generateCacheKey(key, true));

    _super.prototype.removeItem.call(this, this.generateCacheKey(key, true));

    if (this.rollbackEnabled) {
      _super.prototype.removeItem.call(this, this.generateCacheKey(key, false));
    }
  };
  /**
   * Sets temporary cache value
   * @param key
   * @param value
   * @param enableCookieStorage
   */


  AuthCache.prototype.setTemporaryItem = function (key, value, enableCookieStorage) {
    this.temporaryCache.setItem(this.generateCacheKey(key, true), value, enableCookieStorage);
  };
  /**
   * Gets temporary cache value
   * @param key
   * @param enableCookieStorage
   */


  AuthCache.prototype.getTemporaryItem = function (key, enableCookieStorage) {
    return this.temporaryCache.getItem(this.generateCacheKey(key, true), enableCookieStorage);
  };
  /**
   * Reset the cache items
   */


  AuthCache.prototype.resetCacheItems = function () {
    var storage = window[this.cacheLocation];
    var key;

    for (key in storage) {
      // Check if key contains msal prefix; For now, we are clearing all cache items created by MSAL.js
      if (storage.hasOwnProperty(key) && key.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix) !== -1) {
        _super.prototype.removeItem.call(this, key); // TODO: Clear cache based on client id (clarify use cases where this is needed)

      }
    }
  };
  /**
   * Reset all temporary cache items
   */


  AuthCache.prototype.resetTempCacheItems = function (state) {
    var _this = this;

    var stateId = state && _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_4__["RequestUtils"].parseLibraryState(state).id;
    var isTokenRenewalInProgress = this.tokenRenewalInProgress(state);
    var storage = window[this.cacheLocation]; // check state and remove associated cache

    if (stateId && !isTokenRenewalInProgress) {
      Object.keys(storage).forEach(function (key) {
        if (key.indexOf(stateId) !== -1) {
          _this.removeItem(key);

          _super.prototype.clearItemCookie.call(_this, key);
        }
      });
    } // delete the interaction status cache


    this.setInteractionInProgress(false);
    this.removeItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].REDIRECT_REQUEST);
  };
  /**
   * Set cookies for IE
   * @param cName
   * @param cValue
   * @param expires
   */


  AuthCache.prototype.setItemCookie = function (cName, cValue, expires) {
    _super.prototype.setItemCookie.call(this, this.generateCacheKey(cName, true), cValue, expires);

    if (this.rollbackEnabled) {
      _super.prototype.setItemCookie.call(this, this.generateCacheKey(cName, false), cValue, expires);
    }
  };

  AuthCache.prototype.clearItemCookie = function (cName) {
    _super.prototype.clearItemCookie.call(this, this.generateCacheKey(cName, true));

    if (this.rollbackEnabled) {
      _super.prototype.clearItemCookie.call(this, this.generateCacheKey(cName, false));
    }
  };
  /**
   * get one item by key from cookies
   * @param cName
   */


  AuthCache.prototype.getItemCookie = function (cName) {
    return _super.prototype.getItemCookie.call(this, this.generateCacheKey(cName, true));
  };
  /**
   * Get all tokens of a certain type from the cache
   * @param clientId
   * @param homeAccountIdentifier
   * @param tokenType
   */


  AuthCache.prototype.getAllTokensByType = function (clientId, homeAccountIdentifier, tokenType) {
    var _this = this;

    var results = Object.keys(window[this.cacheLocation]).reduce(function (tokens, key) {
      var matchedTokenKey = _this.matchKeyForType(key, clientId, homeAccountIdentifier, tokenType);

      if (matchedTokenKey) {
        var value = _this.getItem(key);

        if (value) {
          try {
            var newAccessTokenCacheItem = new _AccessTokenCacheItem__WEBPACK_IMPORTED_MODULE_2__["AccessTokenCacheItem"](matchedTokenKey, JSON.parse(value));
            return tokens.concat([newAccessTokenCacheItem]);
          } catch (err) {
            // Skip cache items with non-valid JSON values
            return tokens;
          }
        }
      }

      return tokens;
    }, []);
    return results;
  };
  /**
   * Get all access tokens in the cache
   * @param clientId
   * @param homeAccountIdentifier
   */


  AuthCache.prototype.getAllAccessTokens = function (clientId, homeAccountIdentifier) {
    return this.getAllTokensByType(clientId, homeAccountIdentifier, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["ServerHashParamKeys"].ACCESS_TOKEN);
  };
  /**
   * Get all id tokens in the cache in the form of AccessTokenCacheItem objects so they are
   * in a normalized format and can make use of the existing cached access token validation logic
   */


  AuthCache.prototype.getAllIdTokens = function (clientId, homeAccountIdentifier) {
    return this.getAllTokensByType(clientId, homeAccountIdentifier, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["ServerHashParamKeys"].ID_TOKEN);
  };
  /**
   * Get all access and ID tokens in the cache
   * @param clientId
   * @param homeAccountIdentifier
   */


  AuthCache.prototype.getAllTokens = function (clientId, homeAccountIdentifier) {
    var accessTokens = this.getAllAccessTokens(clientId, homeAccountIdentifier);
    var idTokens = this.getAllIdTokens(clientId, homeAccountIdentifier);
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(accessTokens, idTokens);
  };
  /**
   * Returns whether or not interaction is currently in progress. Optionally scope it to just this clientId
   * @param forThisClient
   */


  AuthCache.prototype.isInteractionInProgress = function (matchClientId) {
    var clientId = this.getInteractionInProgress();

    if (matchClientId) {
      return clientId === this.clientId;
    } else {
      return !!clientId;
    }
  };
  /**
   * Returns the clientId of the interaction currently in progress
   */


  AuthCache.prototype.getInteractionInProgress = function () {
    return this.getTemporaryItem(this.generateCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].INTERACTION_STATUS, false));
  };
  /**
   * Sets interaction in progress state
   * @param isInProgress
   */


  AuthCache.prototype.setInteractionInProgress = function (newInProgressValue) {
    if (newInProgressValue) {
      if (this.isInteractionInProgress(false)) {
        throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_7__["ClientAuthError"].createAcquireTokenInProgressError();
      } else {
        // Ensure we don't overwrite interaction in progress for a different clientId
        this.setTemporaryItem(this.generateCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].INTERACTION_STATUS, false), this.clientId);
      }
    } else if (!newInProgressValue && this.isInteractionInProgress(true)) {
      // Only remove if the current in progress interaction is for this clientId
      this.removeItem(this.generateCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].INTERACTION_STATUS, false));
    }
  };
  /**
   * Return if the token renewal is still in progress
   *
   * @param stateValue
   */


  AuthCache.prototype.tokenRenewalInProgress = function (stateValue) {
    var renewStatus = this.getItem(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].RENEW_STATUS, stateValue));
    return !!(renewStatus && renewStatus === _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].inProgress);
  };
  /**
   * Clear all cookies
   */


  AuthCache.prototype.clearMsalCookie = function (state) {
    var _this = this;
    /*
     * If state is truthy, remove values associated with that request.
     * Otherwise, remove all MSAL cookies.
     */


    if (state) {
      this.clearItemCookie(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].NONCE_IDTOKEN, state));
      this.clearItemCookie(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].STATE_LOGIN, state));
      this.clearItemCookie(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].LOGIN_REQUEST, state));
      this.clearItemCookie(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].STATE_ACQ_TOKEN, state));
    } else {
      var cookies = document.cookie.split(";");
      cookies.forEach(function (cookieString) {
        var cookieName = cookieString.trim().split("=")[0];

        if (cookieName.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].cachePrefix) > -1) {
          _super.prototype.clearItemCookie.call(_this, cookieName);
        }
      });
    }
  };
  /**
   * Create acquireTokenAccountKey to cache account object
   * @param accountId
   * @param state
   */


  AuthCache.generateAcquireTokenAccountKey = function (accountId, state) {
    var stateId = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_4__["RequestUtils"].parseLibraryState(state).id;
    return "" + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].ACQUIRE_TOKEN_ACCOUNT + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].resourceDelimiter + accountId + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].resourceDelimiter + stateId;
  };
  /**
   * Create authorityKey to cache authority
   * @param state
   */


  AuthCache.generateAuthorityKey = function (state) {
    return AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__["TemporaryCacheKeys"].AUTHORITY, state);
  };
  /**
   * Generates the cache key for temporary cache items, using request state
   * @param tempCacheKey Cache key prefix
   * @param state Request state value
   */


  AuthCache.generateTemporaryCacheKey = function (tempCacheKey, state) {
    // Use the state id (a guid), in the interest of shorter key names, which is important for cookies.
    var stateId = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_4__["RequestUtils"].parseLibraryState(state).id;
    return "" + tempCacheKey + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].resourceDelimiter + stateId;
  };

  return AuthCache;
}(_BrowserStorage__WEBPACK_IMPORTED_MODULE_3__["BrowserStorage"]);



/***/ }),

/***/ "./node_modules/msal/lib-es6/cache/BrowserStorage.js":
/*!***********************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/BrowserStorage.js ***!
  \***********************************************************/
/*! exports provided: BrowserStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BrowserStorage", function() { return BrowserStorage; });
/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientConfigurationError */ "./node_modules/msal/lib-es6/error/ClientConfigurationError.js");
/* harmony import */ var _error_AuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/AuthError */ "./node_modules/msal/lib-es6/error/AuthError.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


/**
 * @hidden
 */

var BrowserStorage =
/** @class */
function () {
  function BrowserStorage(cacheLocation) {
    if (!window) {
      throw _error_AuthError__WEBPACK_IMPORTED_MODULE_1__["AuthError"].createNoWindowObjectError("Browser storage class could not find window object");
    }

    var storageSupported = typeof window[cacheLocation] !== "undefined" && window[cacheLocation] !== null;

    if (!storageSupported) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_0__["ClientConfigurationError"].createStorageNotSupportedError(cacheLocation);
    }

    this.cacheLocation = cacheLocation;
  }
  /**
   * add value to storage
   * @param key
   * @param value
   * @param enableCookieStorage
   */


  BrowserStorage.prototype.setItem = function (key, value, enableCookieStorage) {
    window[this.cacheLocation].setItem(key, value);

    if (enableCookieStorage) {
      this.setItemCookie(key, value);
    }
  };
  /**
   * get one item by key from storage
   * @param key
   * @param enableCookieStorage
   */


  BrowserStorage.prototype.getItem = function (key, enableCookieStorage) {
    if (enableCookieStorage && this.getItemCookie(key)) {
      return this.getItemCookie(key);
    }

    return window[this.cacheLocation].getItem(key);
  };
  /**
   * remove value from storage
   * @param key
   */


  BrowserStorage.prototype.removeItem = function (key) {
    return window[this.cacheLocation].removeItem(key);
  };
  /**
   * clear storage (remove all items from it)
   */


  BrowserStorage.prototype.clear = function () {
    return window[this.cacheLocation].clear();
  };
  /**
   * add value to cookies
   * @param cName
   * @param cValue
   * @param expires
   */


  BrowserStorage.prototype.setItemCookie = function (cName, cValue, expires) {
    var cookieStr = encodeURIComponent(cName) + "=" + encodeURIComponent(cValue) + ";path=/;";

    if (expires) {
      var expireTime = this.getCookieExpirationTime(expires);
      cookieStr += "expires=" + expireTime + ";";
    }

    document.cookie = cookieStr;
  };
  /**
   * get one item by key from cookies
   * @param cName
   */


  BrowserStorage.prototype.getItemCookie = function (cName) {
    var name = encodeURIComponent(cName) + "=";
    var ca = document.cookie.split(";");

    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];

      while (c.charAt(0) === " ") {
        c = c.substring(1);
      }

      if (c.indexOf(name) === 0) {
        return decodeURIComponent(c.substring(name.length, c.length));
      }
    }

    return "";
  };
  /**
   * Clear an item in the cookies by key
   * @param cName
   */


  BrowserStorage.prototype.clearItemCookie = function (cName) {
    this.setItemCookie(cName, "", -1);
  };
  /**
   * Get cookie expiration time
   * @param cookieLifeDays
   */


  BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {
    var today = new Date();
    var expr = new Date(today.getTime() + cookieLifeDays * 24 * 60 * 60 * 1000);
    return expr.toUTCString();
  };

  return BrowserStorage;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/error/AuthError.js":
/*!******************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/AuthError.js ***!
  \******************************************************/
/*! exports provided: AuthErrorMessage, AuthError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthErrorMessage", function() { return AuthErrorMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthError", function() { return AuthError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

var AuthErrorMessage = {
  unexpectedError: {
    code: "unexpected_error",
    desc: "Unexpected error in authentication."
  },
  noWindowObjectError: {
    code: "no_window_object",
    desc: "No window object available. Details:"
  }
};
/**
 * General error class thrown by the MSAL.js library.
 */

var AuthError =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AuthError, _super);

  function AuthError(errorCode, errorMessage) {
    var _this = _super.call(this, errorMessage) || this;

    Object.setPrototypeOf(_this, AuthError.prototype);
    _this.errorCode = errorCode;
    _this.errorMessage = errorMessage;
    _this.name = "AuthError";
    return _this;
  }

  AuthError.createUnexpectedError = function (errDesc) {
    return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + ": " + errDesc);
  };

  AuthError.createNoWindowObjectError = function (errDesc) {
    return new AuthError(AuthErrorMessage.noWindowObjectError.code, AuthErrorMessage.noWindowObjectError.desc + " " + errDesc);
  };

  return AuthError;
}(Error);



/***/ }),

/***/ "./node_modules/msal/lib-es6/error/ClientAuthError.js":
/*!************************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/ClientAuthError.js ***!
  \************************************************************/
/*! exports provided: ClientAuthErrorMessage, ClientAuthError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientAuthErrorMessage", function() { return ClientAuthErrorMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientAuthError", function() { return ClientAuthError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError */ "./node_modules/msal/lib-es6/error/AuthError.js");
/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */



var ClientAuthErrorMessage = {
  endpointResolutionError: {
    code: "endpoints_resolution_error",
    desc: "Error: could not resolve endpoints. Please check network and try again."
  },
  popUpWindowError: {
    code: "popup_window_error",
    desc: "Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser."
  },
  tokenRenewalError: {
    code: "token_renewal_error",
    desc: "Token renewal operation failed due to timeout."
  },
  invalidIdToken: {
    code: "invalid_id_token",
    desc: "Invalid ID token format."
  },
  invalidStateError: {
    code: "invalid_state_error",
    desc: "Invalid state."
  },
  nonceMismatchError: {
    code: "nonce_mismatch_error",
    desc: "Nonce is not matching, Nonce received: "
  },
  loginProgressError: {
    code: "login_progress_error",
    desc: "Login_In_Progress: Error during login call - login is already in progress."
  },
  acquireTokenProgressError: {
    code: "acquiretoken_progress_error",
    desc: "AcquireToken_In_Progress: Error during login call - login is already in progress."
  },
  userCancelledError: {
    code: "user_cancelled",
    desc: "User cancelled the flow."
  },
  callbackError: {
    code: "callback_error",
    desc: "Error occurred in token received callback function."
  },
  userLoginRequiredError: {
    code: "user_login_error",
    desc: "User login is required. For silent calls, request must contain either sid or login_hint"
  },
  userDoesNotExistError: {
    code: "user_non_existent",
    desc: "User object does not exist. Please call a login API."
  },
  clientInfoDecodingError: {
    code: "client_info_decoding_error",
    desc: "The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause."
  },
  clientInfoNotPopulatedError: {
    code: "client_info_not_populated_error",
    desc: "The service did not populate client_info in the response, Please verify with the service team"
  },
  nullOrEmptyIdToken: {
    code: "null_or_empty_id_token",
    desc: "The idToken is null or empty. Please review the trace to determine the root cause."
  },
  idTokenNotParsed: {
    code: "id_token_parsing_error",
    desc: "ID token cannot be parsed. Please review stack trace to determine root cause."
  },
  tokenEncodingError: {
    code: "token_encoding_error",
    desc: "The token to be decoded is not encoded correctly."
  },
  invalidInteractionType: {
    code: "invalid_interaction_type",
    desc: "The interaction type passed to the handler was incorrect or unknown"
  },
  cacheParseError: {
    code: "cannot_parse_cache",
    desc: "The cached token key is not a valid JSON and cannot be parsed"
  },
  blockTokenRequestsInHiddenIframe: {
    code: "block_token_requests",
    desc: "Token calls are blocked in hidden iframes"
  }
};
/**
 * Error thrown when there is an error in the client code running on the browser.
 */

var ClientAuthError =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ClientAuthError, _super);

  function ClientAuthError(errorCode, errorMessage) {
    var _this = _super.call(this, errorCode, errorMessage) || this;

    _this.name = "ClientAuthError";
    Object.setPrototypeOf(_this, ClientAuthError.prototype);
    return _this;
  }

  ClientAuthError.createEndpointResolutionError = function (errDetail) {
    var errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;

    if (errDetail && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__["StringUtils"].isEmpty(errDetail)) {
      errorMessage += " Details: " + errDetail;
    }

    return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);
  };

  ClientAuthError.createPopupWindowError = function (errDetail) {
    var errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;

    if (errDetail && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__["StringUtils"].isEmpty(errDetail)) {
      errorMessage += " Details: " + errDetail;
    }

    return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);
  };

  ClientAuthError.createTokenRenewalTimeoutError = function () {
    return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code, ClientAuthErrorMessage.tokenRenewalError.desc);
  };

  ClientAuthError.createInvalidIdTokenError = function (idToken) {
    return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + " Given token: " + idToken);
  }; // TODO: Is this not a security flaw to send the user the state expected??


  ClientAuthError.createInvalidStateError = function (invalidState, actualState) {
    return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + " " + invalidState + ", state expected : " + actualState + ".");
  }; // TODO: Is this not a security flaw to send the user the Nonce expected??


  ClientAuthError.createNonceMismatchError = function (invalidNonce, actualNonce) {
    return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc + " " + invalidNonce + ", nonce expected : " + actualNonce + ".");
  };

  ClientAuthError.createLoginInProgressError = function () {
    return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code, ClientAuthErrorMessage.loginProgressError.desc);
  };

  ClientAuthError.createAcquireTokenInProgressError = function () {
    return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code, ClientAuthErrorMessage.acquireTokenProgressError.desc);
  };

  ClientAuthError.createUserCancelledError = function () {
    return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code, ClientAuthErrorMessage.userCancelledError.desc);
  };

  ClientAuthError.createErrorInCallbackFunction = function (errorDesc) {
    return new ClientAuthError(ClientAuthErrorMessage.callbackError.code, ClientAuthErrorMessage.callbackError.desc + " " + errorDesc + ".");
  };

  ClientAuthError.createUserLoginRequiredError = function () {
    return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);
  };

  ClientAuthError.createUserDoesNotExistError = function () {
    return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code, ClientAuthErrorMessage.userDoesNotExistError.desc);
  };

  ClientAuthError.createClientInfoDecodingError = function (caughtError) {
    return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + " Failed with error: " + caughtError);
  };

  ClientAuthError.createClientInfoNotPopulatedError = function (caughtError) {
    return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code, ClientAuthErrorMessage.clientInfoNotPopulatedError.desc + " Failed with error: " + caughtError);
  };

  ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {
    return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + " Raw ID Token Value: " + invalidRawTokenString);
  };

  ClientAuthError.createIdTokenParsingError = function (caughtParsingError) {
    return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code, ClientAuthErrorMessage.idTokenNotParsed.desc + " Failed with error: " + caughtParsingError);
  };

  ClientAuthError.createTokenEncodingError = function (incorrectlyEncodedToken) {
    return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code, ClientAuthErrorMessage.tokenEncodingError.desc + " Attempted to decode: " + incorrectlyEncodedToken);
  };

  ClientAuthError.createInvalidInteractionTypeError = function () {
    return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code, ClientAuthErrorMessage.invalidInteractionType.desc);
  };

  ClientAuthError.createCacheParseError = function (key) {
    var errorMessage = "invalid key: " + key + ", " + ClientAuthErrorMessage.cacheParseError.desc;
    return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, errorMessage);
  };

  ClientAuthError.createBlockTokenRequestsInHiddenIframeError = function () {
    return new ClientAuthError(ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.code, ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.desc);
  };

  return ClientAuthError;
}(_AuthError__WEBPACK_IMPORTED_MODULE_1__["AuthError"]);



/***/ }),

/***/ "./node_modules/msal/lib-es6/error/ClientConfigurationError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/ClientConfigurationError.js ***!
  \*********************************************************************/
/*! exports provided: ClientConfigurationErrorMessage, ClientConfigurationError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientConfigurationErrorMessage", function() { return ClientConfigurationErrorMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientConfigurationError", function() { return ClientConfigurationError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ClientAuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClientAuthError */ "./node_modules/msal/lib-es6/error/ClientAuthError.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


var ClientConfigurationErrorMessage = {
  configurationNotSet: {
    code: "no_config_set",
    desc: "Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object."
  },
  storageNotSupported: {
    code: "storage_not_supported",
    desc: "The value for the cacheLocation is not supported."
  },
  noRedirectCallbacksSet: {
    code: "no_redirect_callbacks",
    desc: "No redirect callbacks have been set. Please call handleRedirectCallback() with the appropriate function arguments before continuing. " + "More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics."
  },
  invalidCallbackObject: {
    code: "invalid_callback_object",
    desc: "The object passed for the callback was invalid. " + "More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics."
  },
  scopesRequired: {
    code: "scopes_required",
    desc: "Scopes are required to obtain an access token."
  },
  emptyScopes: {
    code: "empty_input_scopes_error",
    desc: "Scopes cannot be passed as empty array."
  },
  nonArrayScopes: {
    code: "nonarray_input_scopes_error",
    desc: "Scopes cannot be passed as non-array."
  },
  invalidPrompt: {
    code: "invalid_prompt_value",
    desc: "Supported prompt values are 'login', 'select_account', 'consent' and 'none'"
  },
  invalidAuthorityType: {
    code: "invalid_authority_type",
    desc: "The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>."
  },
  authorityUriInsecure: {
    code: "authority_uri_insecure",
    desc: "Authority URIs must use https."
  },
  authorityUriInvalidPath: {
    code: "authority_uri_invalid_path",
    desc: "Given authority URI is invalid."
  },
  unsupportedAuthorityValidation: {
    code: "unsupported_authority_validation",
    desc: "The authority validation is not supported for this authority type."
  },
  untrustedAuthority: {
    code: "untrusted_authority",
    desc: "The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter or set validateAuthority=false."
  },
  b2cAuthorityUriInvalidPath: {
    code: "b2c_authority_uri_invalid_path",
    desc: "The given URI for the B2C authority is invalid."
  },
  b2cKnownAuthoritiesNotSet: {
    code: "b2c_known_authorities_not_set",
    desc: "Must set known authorities when validateAuthority is set to True and using B2C"
  },
  claimsRequestParsingError: {
    code: "claims_request_parsing_error",
    desc: "Could not parse the given claims request object."
  },
  emptyRequestError: {
    code: "empty_request_error",
    desc: "Request object is required."
  },
  invalidCorrelationIdError: {
    code: "invalid_guid_sent_as_correlationId",
    desc: "Please set the correlationId as a valid guid"
  },
  telemetryConfigError: {
    code: "telemetry_config_error",
    desc: "Telemetry config is not configured with required values"
  },
  ssoSilentError: {
    code: "sso_silent_error",
    desc: "request must contain either sid or login_hint"
  },
  invalidAuthorityMetadataError: {
    code: "authority_metadata_error",
    desc: "Invalid authorityMetadata. Must be a JSON object containing authorization_endpoint, end_session_endpoint, and issuer fields."
  }
};
/**
 * Error thrown when there is an error in configuration of the .js library.
 */

var ClientConfigurationError =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ClientConfigurationError, _super);

  function ClientConfigurationError(errorCode, errorMessage) {
    var _this = _super.call(this, errorCode, errorMessage) || this;

    _this.name = "ClientConfigurationError";
    Object.setPrototypeOf(_this, ClientConfigurationError.prototype);
    return _this;
  }

  ClientConfigurationError.createNoSetConfigurationError = function () {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code, "" + ClientConfigurationErrorMessage.configurationNotSet.desc);
  };

  ClientConfigurationError.createStorageNotSupportedError = function (givenCacheLocation) {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.storageNotSupported.code, ClientConfigurationErrorMessage.storageNotSupported.desc + " Given location: " + givenCacheLocation);
  };

  ClientConfigurationError.createRedirectCallbacksNotSetError = function () {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);
  };

  ClientConfigurationError.createInvalidCallbackObjectError = function (callbackObject) {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code, ClientConfigurationErrorMessage.invalidCallbackObject.desc + " Given value for callback function: " + callbackObject);
  };

  ClientConfigurationError.createEmptyScopesArrayError = function (scopesValue) {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code, ClientConfigurationErrorMessage.emptyScopes.desc + " Given value: " + scopesValue + ".");
  };

  ClientConfigurationError.createScopesNonArrayError = function (scopesValue) {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code, ClientConfigurationErrorMessage.nonArrayScopes.desc + " Given value: " + scopesValue + ".");
  };

  ClientConfigurationError.createScopesRequiredError = function (scopesValue) {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code, ClientConfigurationErrorMessage.scopesRequired.desc + " Given value: " + scopesValue);
  };

  ClientConfigurationError.createInvalidPromptError = function (promptValue) {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + " Given value: " + promptValue);
  };

  ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + " Given value: " + claimsRequestParseError);
  };

  ClientConfigurationError.createEmptyRequestError = function () {
    var _a = ClientConfigurationErrorMessage.emptyRequestError,
        code = _a.code,
        desc = _a.desc;
    return new ClientConfigurationError(code, desc);
  };

  ClientConfigurationError.createInvalidCorrelationIdError = function () {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCorrelationIdError.code, ClientConfigurationErrorMessage.invalidCorrelationIdError.desc);
  };

  ClientConfigurationError.createKnownAuthoritiesNotSetError = function () {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.code, ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.desc);
  };

  ClientConfigurationError.createInvalidAuthorityTypeError = function () {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityType.code, ClientConfigurationErrorMessage.invalidAuthorityType.desc);
  };

  ClientConfigurationError.createUntrustedAuthorityError = function (host) {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc + " Provided Authority: " + host);
  };

  ClientConfigurationError.createTelemetryConfigError = function (config) {
    var _a = ClientConfigurationErrorMessage.telemetryConfigError,
        code = _a.code,
        desc = _a.desc;
    var requiredKeys = {
      applicationName: "string",
      applicationVersion: "string",
      telemetryEmitter: "function"
    };
    var missingKeys = Object.keys(requiredKeys).reduce(function (keys, key) {
      return config[key] ? keys : keys.concat([key + " (" + requiredKeys[key] + ")"]);
    }, []);
    return new ClientConfigurationError(code, desc + " mising values: " + missingKeys.join(","));
  };

  ClientConfigurationError.createSsoSilentError = function () {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.ssoSilentError.code, ClientConfigurationErrorMessage.ssoSilentError.desc);
  };

  ClientConfigurationError.createInvalidAuthorityMetadataError = function () {
    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadataError.code, ClientConfigurationErrorMessage.invalidAuthorityMetadataError.desc);
  };

  return ClientConfigurationError;
}(_ClientAuthError__WEBPACK_IMPORTED_MODULE_1__["ClientAuthError"]);



/***/ }),

/***/ "./node_modules/msal/lib-es6/error/InteractionRequiredAuthError.js":
/*!*************************************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/InteractionRequiredAuthError.js ***!
  \*************************************************************************/
/*! exports provided: InteractionRequiredAuthErrorMessage, InteractionRequiredAuthError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InteractionRequiredAuthErrorMessage", function() { return InteractionRequiredAuthErrorMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InteractionRequiredAuthError", function() { return InteractionRequiredAuthError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ServerError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServerError */ "./node_modules/msal/lib-es6/error/ServerError.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


var InteractionRequiredAuthErrorMessage = {
  interactionRequired: {
    code: "interaction_required"
  },
  consentRequired: {
    code: "consent_required"
  },
  loginRequired: {
    code: "login_required"
  }
};
/**
 * Error thrown when the user is required to perform an interactive token request.
 */

var InteractionRequiredAuthError =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(InteractionRequiredAuthError, _super);

  function InteractionRequiredAuthError(errorCode, errorMessage) {
    var _this = _super.call(this, errorCode, errorMessage) || this;

    _this.name = "InteractionRequiredAuthError";
    Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);
    return _this;
  }

  InteractionRequiredAuthError.isInteractionRequiredError = function (errorString) {
    var interactionRequiredCodes = [InteractionRequiredAuthErrorMessage.interactionRequired.code, InteractionRequiredAuthErrorMessage.consentRequired.code, InteractionRequiredAuthErrorMessage.loginRequired.code];
    return errorString && interactionRequiredCodes.indexOf(errorString) > -1;
  };

  InteractionRequiredAuthError.createLoginRequiredAuthError = function (errorDesc) {
    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.loginRequired.code, errorDesc);
  };

  InteractionRequiredAuthError.createInteractionRequiredAuthError = function (errorDesc) {
    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.interactionRequired.code, errorDesc);
  };

  InteractionRequiredAuthError.createConsentRequiredAuthError = function (errorDesc) {
    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.consentRequired.code, errorDesc);
  };

  return InteractionRequiredAuthError;
}(_ServerError__WEBPACK_IMPORTED_MODULE_1__["ServerError"]);



/***/ }),

/***/ "./node_modules/msal/lib-es6/error/ServerError.js":
/*!********************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/ServerError.js ***!
  \********************************************************/
/*! exports provided: ServerErrorMessage, ServerError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerErrorMessage", function() { return ServerErrorMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerError", function() { return ServerError; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError */ "./node_modules/msal/lib-es6/error/AuthError.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


var ServerErrorMessage = {
  serverUnavailable: {
    code: "server_unavailable",
    desc: "Server is temporarily unavailable."
  },
  unknownServerError: {
    code: "unknown_server_error"
  }
};
/**
 * Error thrown when there is an error with the server code, for example, unavailability.
 */

var ServerError =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ServerError, _super);

  function ServerError(errorCode, errorMessage) {
    var _this = _super.call(this, errorCode, errorMessage) || this;

    _this.name = "ServerError";
    Object.setPrototypeOf(_this, ServerError.prototype);
    return _this;
  }

  ServerError.createServerUnavailableError = function () {
    return new ServerError(ServerErrorMessage.serverUnavailable.code, ServerErrorMessage.serverUnavailable.desc);
  };

  ServerError.createUnknownServerError = function (errorDesc) {
    return new ServerError(ServerErrorMessage.unknownServerError.code, errorDesc);
  };

  return ServerError;
}(_AuthError__WEBPACK_IMPORTED_MODULE_1__["AuthError"]);



/***/ }),

/***/ "./node_modules/msal/lib-es6/index.js":
/*!********************************************!*\
  !*** ./node_modules/msal/lib-es6/index.js ***!
  \********************************************/
/*! exports provided: UserAgentApplication, Logger, LogLevel, Account, Constants, ServerHashParamKeys, Authority, CryptoUtils, UrlUtils, WindowUtils, AuthError, ClientAuthError, ServerError, ClientConfigurationError, InteractionRequiredAuthError, version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _UserAgentApplication__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UserAgentApplication */ "./node_modules/msal/lib-es6/UserAgentApplication.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserAgentApplication", function() { return _UserAgentApplication__WEBPACK_IMPORTED_MODULE_0__["UserAgentApplication"]; });

/* harmony import */ var _Logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Logger */ "./node_modules/msal/lib-es6/Logger.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Logger", function() { return _Logger__WEBPACK_IMPORTED_MODULE_1__["Logger"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LogLevel", function() { return _Logger__WEBPACK_IMPORTED_MODULE_1__["LogLevel"]; });

/* harmony import */ var _Account__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Account */ "./node_modules/msal/lib-es6/Account.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Account", function() { return _Account__WEBPACK_IMPORTED_MODULE_2__["Account"]; });

/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Constants", function() { return _utils_Constants__WEBPACK_IMPORTED_MODULE_3__["Constants"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServerHashParamKeys", function() { return _utils_Constants__WEBPACK_IMPORTED_MODULE_3__["ServerHashParamKeys"]; });

/* harmony import */ var _authority_Authority__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./authority/Authority */ "./node_modules/msal/lib-es6/authority/Authority.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Authority", function() { return _authority_Authority__WEBPACK_IMPORTED_MODULE_4__["Authority"]; });

/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CryptoUtils", function() { return _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_5__["CryptoUtils"]; });

/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UrlUtils", function() { return _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_6__["UrlUtils"]; });

/* harmony import */ var _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/WindowUtils */ "./node_modules/msal/lib-es6/utils/WindowUtils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WindowUtils", function() { return _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_7__["WindowUtils"]; });

/* harmony import */ var _error_AuthError__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./error/AuthError */ "./node_modules/msal/lib-es6/error/AuthError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AuthError", function() { return _error_AuthError__WEBPACK_IMPORTED_MODULE_8__["AuthError"]; });

/* harmony import */ var _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./error/ClientAuthError */ "./node_modules/msal/lib-es6/error/ClientAuthError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientAuthError", function() { return _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_9__["ClientAuthError"]; });

/* harmony import */ var _error_ServerError__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./error/ServerError */ "./node_modules/msal/lib-es6/error/ServerError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServerError", function() { return _error_ServerError__WEBPACK_IMPORTED_MODULE_10__["ServerError"]; });

/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./error/ClientConfigurationError */ "./node_modules/msal/lib-es6/error/ClientConfigurationError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClientConfigurationError", function() { return _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_11__["ClientConfigurationError"]; });

/* harmony import */ var _error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./error/InteractionRequiredAuthError */ "./node_modules/msal/lib-es6/error/InteractionRequiredAuthError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InteractionRequiredAuthError", function() { return _error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_12__["InteractionRequiredAuthError"]; });

/* harmony import */ var _packageMetadata__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./packageMetadata */ "./node_modules/msal/lib-es6/packageMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _packageMetadata__WEBPACK_IMPORTED_MODULE_13__["version"]; });

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @packageDocumentation
 * @module @azure/msal
 */








 // Errors








/***/ }),

/***/ "./node_modules/msal/lib-es6/packageMetadata.js":
/*!******************************************************!*\
  !*** ./node_modules/msal/lib-es6/packageMetadata.js ***!
  \******************************************************/
/*! exports provided: name, version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "name", function() { return name; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
/* eslint-disable header/header */
var name = "msal";
var version = "1.4.17";

/***/ }),

/***/ "./node_modules/msal/lib-es6/telemetry/ApiEvent.js":
/*!*********************************************************!*\
  !*** ./node_modules/msal/lib-es6/telemetry/ApiEvent.js ***!
  \*********************************************************/
/*! exports provided: EVENT_KEYS, API_CODE, API_EVENT_IDENTIFIER, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENT_KEYS", function() { return EVENT_KEYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_CODE", function() { return API_CODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_EVENT_IDENTIFIER", function() { return API_EVENT_IDENTIFIER; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _TelemetryEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TelemetryEvent */ "./node_modules/msal/lib-es6/telemetry/TelemetryEvent.js");
/* harmony import */ var _TelemetryConstants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TelemetryConstants */ "./node_modules/msal/lib-es6/telemetry/TelemetryConstants.js");
/* harmony import */ var _TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TelemetryUtils */ "./node_modules/msal/lib-es6/telemetry/TelemetryUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var _a;





var EVENT_KEYS = {
  AUTHORITY: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("authority"),
  AUTHORITY_TYPE: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("authority_type"),
  PROMPT: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("ui_behavior"),
  TENANT_ID: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("tenant_id"),
  USER_ID: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("user_id"),
  WAS_SUCESSFUL: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("was_successful"),
  API_ERROR_CODE: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("api_error_code"),
  LOGIN_HINT: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("login_hint")
};
var API_CODE;

(function (API_CODE) {
  API_CODE[API_CODE["AcquireTokenRedirect"] = 2001] = "AcquireTokenRedirect";
  API_CODE[API_CODE["AcquireTokenSilent"] = 2002] = "AcquireTokenSilent";
  API_CODE[API_CODE["AcquireTokenPopup"] = 2003] = "AcquireTokenPopup";
  API_CODE[API_CODE["LoginRedirect"] = 2004] = "LoginRedirect";
  API_CODE[API_CODE["LoginPopup"] = 2005] = "LoginPopup";
  API_CODE[API_CODE["Logout"] = 2006] = "Logout";
})(API_CODE || (API_CODE = {}));

var API_EVENT_IDENTIFIER;

(function (API_EVENT_IDENTIFIER) {
  API_EVENT_IDENTIFIER["AcquireTokenRedirect"] = "AcquireTokenRedirect";
  API_EVENT_IDENTIFIER["AcquireTokenSilent"] = "AcquireTokenSilent";
  API_EVENT_IDENTIFIER["AcquireTokenPopup"] = "AcquireTokenPopup";
  API_EVENT_IDENTIFIER["LoginRedirect"] = "LoginRedirect";
  API_EVENT_IDENTIFIER["LoginPopup"] = "LoginPopup";
  API_EVENT_IDENTIFIER["Logout"] = "Logout";
})(API_EVENT_IDENTIFIER || (API_EVENT_IDENTIFIER = {}));

var mapEventIdentiferToCode = (_a = {}, _a[API_EVENT_IDENTIFIER.AcquireTokenSilent] = API_CODE.AcquireTokenSilent, _a[API_EVENT_IDENTIFIER.AcquireTokenPopup] = API_CODE.AcquireTokenPopup, _a[API_EVENT_IDENTIFIER.AcquireTokenRedirect] = API_CODE.AcquireTokenRedirect, _a[API_EVENT_IDENTIFIER.LoginPopup] = API_CODE.LoginPopup, _a[API_EVENT_IDENTIFIER.LoginRedirect] = API_CODE.LoginRedirect, _a[API_EVENT_IDENTIFIER.Logout] = API_CODE.Logout, _a);

var ApiEvent =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ApiEvent, _super);

  function ApiEvent(correlationId, piiEnabled, apiEventIdentifier) {
    var _this = _super.call(this, Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("api_event"), correlationId, apiEventIdentifier) || this;

    if (apiEventIdentifier) {
      _this.apiCode = mapEventIdentiferToCode[apiEventIdentifier];
      _this.apiEventIdentifier = apiEventIdentifier;
    }

    _this.piiEnabled = piiEnabled;
    return _this;
  }

  Object.defineProperty(ApiEvent.prototype, "apiEventIdentifier", {
    set: function set(apiEventIdentifier) {
      this.event[_TelemetryConstants__WEBPACK_IMPORTED_MODULE_2__["TELEMETRY_BLOB_EVENT_NAMES"].ApiTelemIdConstStrKey] = apiEventIdentifier;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "apiCode", {
    set: function set(apiCode) {
      this.event[_TelemetryConstants__WEBPACK_IMPORTED_MODULE_2__["TELEMETRY_BLOB_EVENT_NAMES"].ApiIdConstStrKey] = apiCode;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "authority", {
    set: function set(uri) {
      this.event[EVENT_KEYS.AUTHORITY] = Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["scrubTenantFromUri"])(uri).toLowerCase();
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "apiErrorCode", {
    set: function set(errorCode) {
      this.event[EVENT_KEYS.API_ERROR_CODE] = errorCode;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "tenantId", {
    set: function set(tenantId) {
      this.event[EVENT_KEYS.TENANT_ID] = this.piiEnabled && tenantId ? Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["hashPersonalIdentifier"])(tenantId) : null;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "accountId", {
    set: function set(accountId) {
      this.event[EVENT_KEYS.USER_ID] = this.piiEnabled && accountId ? Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["hashPersonalIdentifier"])(accountId) : null;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "wasSuccessful", {
    get: function get() {
      return this.event[EVENT_KEYS.WAS_SUCESSFUL] === true;
    },
    set: function set(wasSuccessful) {
      this.event[EVENT_KEYS.WAS_SUCESSFUL] = wasSuccessful;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "loginHint", {
    set: function set(loginHint) {
      this.event[EVENT_KEYS.LOGIN_HINT] = this.piiEnabled && loginHint ? Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["hashPersonalIdentifier"])(loginHint) : null;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "authorityType", {
    set: function set(authorityType) {
      this.event[EVENT_KEYS.AUTHORITY_TYPE] = authorityType.toLowerCase();
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(ApiEvent.prototype, "promptType", {
    set: function set(promptType) {
      this.event[EVENT_KEYS.PROMPT] = promptType.toLowerCase();
    },
    enumerable: false,
    configurable: true
  });
  return ApiEvent;
}(_TelemetryEvent__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (ApiEvent);

/***/ }),

/***/ "./node_modules/msal/lib-es6/telemetry/DefaultEvent.js":
/*!*************************************************************!*\
  !*** ./node_modules/msal/lib-es6/telemetry/DefaultEvent.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TelemetryConstants */ "./node_modules/msal/lib-es6/telemetry/TelemetryConstants.js");
/* harmony import */ var _TelemetryEvent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TelemetryEvent */ "./node_modules/msal/lib-es6/telemetry/TelemetryEvent.js");
/* harmony import */ var _TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TelemetryUtils */ "./node_modules/msal/lib-es6/telemetry/TelemetryUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */





var DefaultEvent =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DefaultEvent, _super); // TODO Platform Type


  function DefaultEvent(platform, correlationId, clientId, eventCount) {
    var _this = _super.call(this, Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("default_event"), correlationId, "DefaultEvent") || this;

    _this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("client_id")] = clientId;
    _this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("sdk_plaform")] = platform.sdk;
    _this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("sdk_version")] = platform.sdkVersion;
    _this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("application_name")] = platform.applicationName;
    _this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("application_version")] = platform.applicationVersion;
    _this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("effective_connection_speed")] = platform.networkInformation && platform.networkInformation.connectionSpeed;
    _this.event["" + _TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["TELEMETRY_BLOB_EVENT_NAMES"].UiEventCountTelemetryBatchKey] = _this.getEventCount(Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("ui_event"), eventCount);
    _this.event["" + _TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["TELEMETRY_BLOB_EVENT_NAMES"].HttpEventCountTelemetryBatchKey] = _this.getEventCount(Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("http_event"), eventCount);
    _this.event["" + _TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["TELEMETRY_BLOB_EVENT_NAMES"].CacheEventCountConstStrKey] = _this.getEventCount(Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_3__["prependEventNamePrefix"])("cache_event"), eventCount);
    return _this; // / Device id?
  }

  DefaultEvent.prototype.getEventCount = function (eventName, eventCount) {
    if (!eventCount[eventName]) {
      return 0;
    }

    return eventCount[eventName];
  };

  return DefaultEvent;
}(_TelemetryEvent__WEBPACK_IMPORTED_MODULE_2__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (DefaultEvent);

/***/ }),

/***/ "./node_modules/msal/lib-es6/telemetry/HttpEvent.js":
/*!**********************************************************!*\
  !*** ./node_modules/msal/lib-es6/telemetry/HttpEvent.js ***!
  \**********************************************************/
/*! exports provided: EVENT_KEYS, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENT_KEYS", function() { return EVENT_KEYS; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _TelemetryEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TelemetryEvent */ "./node_modules/msal/lib-es6/telemetry/TelemetryEvent.js");
/* harmony import */ var _TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TelemetryUtils */ "./node_modules/msal/lib-es6/telemetry/TelemetryUtils.js");
/* harmony import */ var _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ServerRequestParameters */ "./node_modules/msal/lib-es6/ServerRequestParameters.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */




var EVENT_KEYS = {
  HTTP_PATH: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("http_path"),
  USER_AGENT: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("user_agent"),
  QUERY_PARAMETERS: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("query_parameters"),
  API_VERSION: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("api_version"),
  RESPONSE_CODE: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("response_code"),
  O_AUTH_ERROR_CODE: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("oauth_error_code"),
  HTTP_METHOD: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("http_method"),
  REQUEST_ID_HEADER: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("request_id_header"),
  SPE_INFO: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("spe_info"),
  SERVER_ERROR_CODE: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("server_error_code"),
  SERVER_SUB_ERROR_CODE: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("server_sub_error_code"),
  URL: Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("url")
};

var HttpEvent =
/** @class */
function (_super) {
  Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(HttpEvent, _super);

  function HttpEvent(correlationId, eventLabel) {
    return _super.call(this, Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])("http_event"), correlationId, eventLabel) || this;
  }

  Object.defineProperty(HttpEvent.prototype, "url", {
    set: function set(url) {
      var scrubbedUri = Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["scrubTenantFromUri"])(url);
      this.event[EVENT_KEYS.URL] = scrubbedUri && scrubbedUri.toLowerCase();
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "httpPath", {
    set: function set(httpPath) {
      this.event[EVENT_KEYS.HTTP_PATH] = Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["scrubTenantFromUri"])(httpPath).toLowerCase();
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "userAgent", {
    set: function set(userAgent) {
      this.event[EVENT_KEYS.USER_AGENT] = userAgent;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "queryParams", {
    set: function set(queryParams) {
      this.event[EVENT_KEYS.QUERY_PARAMETERS] = _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__["ServerRequestParameters"].generateQueryParametersString(queryParams);
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "apiVersion", {
    set: function set(apiVersion) {
      this.event[EVENT_KEYS.API_VERSION] = apiVersion.toLowerCase();
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "httpResponseStatus", {
    set: function set(statusCode) {
      this.event[EVENT_KEYS.RESPONSE_CODE] = statusCode;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "oAuthErrorCode", {
    set: function set(errorCode) {
      this.event[EVENT_KEYS.O_AUTH_ERROR_CODE] = errorCode;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "httpMethod", {
    set: function set(httpMethod) {
      this.event[EVENT_KEYS.HTTP_METHOD] = httpMethod;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "requestIdHeader", {
    set: function set(requestIdHeader) {
      this.event[EVENT_KEYS.REQUEST_ID_HEADER] = requestIdHeader;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "speInfo", {
    /**
     * Indicates whether the request was executed on a ring serving SPE traffic.
     * An empty string indicates this occurred on an outer ring, and the string "I"
     * indicates the request occurred on the inner ring
     */
    set: function set(speInfo) {
      this.event[EVENT_KEYS.SPE_INFO] = speInfo;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "serverErrorCode", {
    set: function set(errorCode) {
      this.event[EVENT_KEYS.SERVER_ERROR_CODE] = errorCode;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(HttpEvent.prototype, "serverSubErrorCode", {
    set: function set(subErrorCode) {
      this.event[EVENT_KEYS.SERVER_SUB_ERROR_CODE] = subErrorCode;
    },
    enumerable: false,
    configurable: true
  });
  return HttpEvent;
}(_TelemetryEvent__WEBPACK_IMPORTED_MODULE_1__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (HttpEvent);

/***/ }),

/***/ "./node_modules/msal/lib-es6/telemetry/TelemetryConstants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/msal/lib-es6/telemetry/TelemetryConstants.js ***!
  \*******************************************************************/
/*! exports provided: EVENT_NAME_PREFIX, EVENT_NAME_KEY, START_TIME_KEY, ELAPSED_TIME_KEY, TELEMETRY_BLOB_EVENT_NAMES, TENANT_PLACEHOLDER */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENT_NAME_PREFIX", function() { return EVENT_NAME_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENT_NAME_KEY", function() { return EVENT_NAME_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "START_TIME_KEY", function() { return START_TIME_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ELAPSED_TIME_KEY", function() { return ELAPSED_TIME_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TELEMETRY_BLOB_EVENT_NAMES", function() { return TELEMETRY_BLOB_EVENT_NAMES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TENANT_PLACEHOLDER", function() { return TENANT_PLACEHOLDER; });
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var EVENT_NAME_PREFIX = "msal.";
var EVENT_NAME_KEY = "event_name";
var START_TIME_KEY = "start_time";
var ELAPSED_TIME_KEY = "elapsed_time";
var TELEMETRY_BLOB_EVENT_NAMES = {
  MsalCorrelationIdConstStrKey: "Microsoft.MSAL.correlation_id",
  ApiTelemIdConstStrKey: "msal.api_telem_id",
  ApiIdConstStrKey: "msal.api_id",
  BrokerAppConstStrKey: "Microsoft_MSAL_broker_app",
  CacheEventCountConstStrKey: "Microsoft_MSAL_cache_event_count",
  HttpEventCountTelemetryBatchKey: "Microsoft_MSAL_http_event_count",
  IdpConstStrKey: "Microsoft_MSAL_idp",
  IsSilentTelemetryBatchKey: "",
  IsSuccessfulConstStrKey: "Microsoft_MSAL_is_successful",
  ResponseTimeConstStrKey: "Microsoft_MSAL_response_time",
  TenantIdConstStrKey: "Microsoft_MSAL_tenant_id",
  UiEventCountTelemetryBatchKey: "Microsoft_MSAL_ui_event_count"
}; // This is used to replace the real tenant in telemetry info

var TENANT_PLACEHOLDER = "<tenant>";

/***/ }),

/***/ "./node_modules/msal/lib-es6/telemetry/TelemetryEvent.js":
/*!***************************************************************!*\
  !*** ./node_modules/msal/lib-es6/telemetry/TelemetryEvent.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TelemetryConstants */ "./node_modules/msal/lib-es6/telemetry/TelemetryConstants.js");
/* harmony import */ var _TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TelemetryUtils */ "./node_modules/msal/lib-es6/telemetry/TelemetryUtils.js");
/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */





var TelemetryEvent =
/** @class */
function () {
  function TelemetryEvent(eventName, correlationId, eventLabel) {
    var _a;

    this.eventId = _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_3__["CryptoUtils"].createNewGuid();
    this.label = eventLabel;
    this.event = (_a = {}, _a[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])(_TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["EVENT_NAME_KEY"])] = eventName, _a[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])(_TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["ELAPSED_TIME_KEY"])] = -1, _a["" + _TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["TELEMETRY_BLOB_EVENT_NAMES"].MsalCorrelationIdConstStrKey] = correlationId, _a);
  }

  TelemetryEvent.prototype.setElapsedTime = function (time) {
    this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])(_TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["ELAPSED_TIME_KEY"])] = time;
  };

  TelemetryEvent.prototype.stop = function () {
    // Set duration of event
    this.setElapsedTime(+Date.now() - +this.startTimestamp);
    Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["endBrowserPerformanceMeasurement"])(this.displayName, this.perfStartMark, this.perfEndMark);
  };

  TelemetryEvent.prototype.start = function () {
    this.startTimestamp = Date.now();
    this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])(_TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["START_TIME_KEY"])] = this.startTimestamp;
    Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["startBrowserPerformanceMeasurement"])(this.perfStartMark);
  };

  Object.defineProperty(TelemetryEvent.prototype, "telemetryCorrelationId", {
    get: function get() {
      return this.event["" + _TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["TELEMETRY_BLOB_EVENT_NAMES"].MsalCorrelationIdConstStrKey];
    },
    set: function set(value) {
      this.event["" + _TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["TELEMETRY_BLOB_EVENT_NAMES"].MsalCorrelationIdConstStrKey] = value;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TelemetryEvent.prototype, "eventName", {
    get: function get() {
      return this.event[Object(_TelemetryUtils__WEBPACK_IMPORTED_MODULE_2__["prependEventNamePrefix"])(_TelemetryConstants__WEBPACK_IMPORTED_MODULE_1__["EVENT_NAME_KEY"])];
    },
    enumerable: false,
    configurable: true
  });

  TelemetryEvent.prototype.get = function () {
    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, this.event), {
      eventId: this.eventId
    });
  };

  Object.defineProperty(TelemetryEvent.prototype, "key", {
    get: function get() {
      return this.telemetryCorrelationId + "_" + this.eventId + "-" + this.eventName;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TelemetryEvent.prototype, "displayName", {
    get: function get() {
      return "Msal-" + this.label + "-" + this.telemetryCorrelationId;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TelemetryEvent.prototype, "perfStartMark", {
    get: function get() {
      return "start-" + this.key;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(TelemetryEvent.prototype, "perfEndMark", {
    get: function get() {
      return "end-" + this.key;
    },
    enumerable: false,
    configurable: true
  });
  return TelemetryEvent;
}();

/* harmony default export */ __webpack_exports__["default"] = (TelemetryEvent);

/***/ }),

/***/ "./node_modules/msal/lib-es6/telemetry/TelemetryManager.js":
/*!*****************************************************************!*\
  !*** ./node_modules/msal/lib-es6/telemetry/TelemetryManager.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _DefaultEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DefaultEvent */ "./node_modules/msal/lib-es6/telemetry/DefaultEvent.js");
/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony import */ var _ApiEvent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ApiEvent */ "./node_modules/msal/lib-es6/telemetry/ApiEvent.js");
/* harmony import */ var _HttpEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HttpEvent */ "./node_modules/msal/lib-es6/telemetry/HttpEvent.js");
/* harmony import */ var _packageMetadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../packageMetadata */ "./node_modules/msal/lib-es6/packageMetadata.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */







var TelemetryManager =
/** @class */
function () {
  function TelemetryManager(config, telemetryEmitter, logger) {
    // correlation Id to list of events
    this.completedEvents = {}; // event key to event

    this.inProgressEvents = {}; // correlation id to map of eventname to count

    this.eventCountByCorrelationId = {}; // Implement after API EVENT

    this.onlySendFailureTelemetry = false; // TODO THROW if bad options

    this.telemetryPlatform = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({
      sdk: _utils_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].libraryName,
      sdkVersion: _packageMetadata__WEBPACK_IMPORTED_MODULE_5__["version"],
      networkInformation: {
        // @ts-ignore
        connectionSpeed: typeof navigator !== "undefined" && navigator.connection && navigator.connection.effectiveType
      }
    }, config.platform);
    this.clientId = config.clientId;
    this.onlySendFailureTelemetry = config.onlySendFailureTelemetry;
    /*
     * TODO, when i get to wiring this through, think about what it means if
     * a developer does not implement telem at all, we still instrument, but telemetryEmitter can be
     * optional?
     */

    this.telemetryEmitter = telemetryEmitter;
    this.logger = logger;
  }

  TelemetryManager.getTelemetrymanagerStub = function (clientId, logger) {
    var applicationName = "UnSetStub";
    var applicationVersion = "0.0";

    var telemetryEmitter = function telemetryEmitter() {};

    var telemetryPlatform = {
      applicationName: applicationName,
      applicationVersion: applicationVersion
    };
    var telemetryManagerConfig = {
      platform: telemetryPlatform,
      clientId: clientId
    };
    return new this(telemetryManagerConfig, telemetryEmitter, logger);
  };

  TelemetryManager.prototype.startEvent = function (event) {
    this.logger.verbose("Telemetry Event started: " + event.key);

    if (!this.telemetryEmitter) {
      return;
    }

    event.start();
    this.inProgressEvents[event.key] = event;
  };

  TelemetryManager.prototype.stopEvent = function (event) {
    this.logger.verbose("Telemetry Event stopped: " + event.key);

    if (!this.telemetryEmitter || !this.inProgressEvents[event.key]) {
      return;
    }

    event.stop();
    this.incrementEventCount(event);
    var completedEvents = this.completedEvents[event.telemetryCorrelationId];
    this.completedEvents[event.telemetryCorrelationId] = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(completedEvents || [], [event]);
    delete this.inProgressEvents[event.key];
  };

  TelemetryManager.prototype.flush = function (correlationId) {
    var _this = this;

    this.logger.verbose("Flushing telemetry events: " + correlationId); // If there is only unfinished events should this still return them?

    if (!this.telemetryEmitter || !this.completedEvents[correlationId]) {
      return;
    }

    var orphanedEvents = this.getOrphanedEvents(correlationId);
    orphanedEvents.forEach(function (event) {
      return _this.incrementEventCount(event);
    });

    var eventsToFlush = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(this.completedEvents[correlationId], orphanedEvents);

    delete this.completedEvents[correlationId];
    var eventCountsToFlush = this.eventCountByCorrelationId[correlationId];
    delete this.eventCountByCorrelationId[correlationId]; // TODO add funcitonality for onlyFlushFailures after implementing api event? ??

    if (!eventsToFlush || !eventsToFlush.length) {
      return;
    }

    var defaultEvent = new _DefaultEvent__WEBPACK_IMPORTED_MODULE_1__["default"](this.telemetryPlatform, correlationId, this.clientId, eventCountsToFlush);

    var eventsWithDefaultEvent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(eventsToFlush, [defaultEvent]);

    this.telemetryEmitter(eventsWithDefaultEvent.map(function (e) {
      return e.get();
    }));
  };

  TelemetryManager.prototype.createAndStartApiEvent = function (correlationId, apiEventIdentifier) {
    var apiEvent = new _ApiEvent__WEBPACK_IMPORTED_MODULE_3__["default"](correlationId, this.logger.isPiiLoggingEnabled(), apiEventIdentifier);
    this.startEvent(apiEvent);
    return apiEvent;
  };

  TelemetryManager.prototype.stopAndFlushApiEvent = function (correlationId, apiEvent, wasSuccessful, errorCode) {
    apiEvent.wasSuccessful = wasSuccessful;

    if (errorCode) {
      apiEvent.apiErrorCode = errorCode;
    }

    this.stopEvent(apiEvent);
    this.flush(correlationId);
  };

  TelemetryManager.prototype.createAndStartHttpEvent = function (correlation, httpMethod, url, eventLabel) {
    var httpEvent = new _HttpEvent__WEBPACK_IMPORTED_MODULE_4__["default"](correlation, eventLabel);
    httpEvent.url = url;
    httpEvent.httpMethod = httpMethod;
    this.startEvent(httpEvent);
    return httpEvent;
  };

  TelemetryManager.prototype.incrementEventCount = function (event) {
    var _a;
    /*
     * TODO, name cache event different?
     * if type is cache event, change name
     */


    var eventName = event.eventName;
    var eventCount = this.eventCountByCorrelationId[event.telemetryCorrelationId];

    if (!eventCount) {
      this.eventCountByCorrelationId[event.telemetryCorrelationId] = (_a = {}, _a[eventName] = 1, _a);
    } else {
      eventCount[eventName] = eventCount[eventName] ? eventCount[eventName] + 1 : 1;
    }
  };

  TelemetryManager.prototype.getOrphanedEvents = function (correlationId) {
    var _this = this;

    return Object.keys(this.inProgressEvents).reduce(function (memo, eventKey) {
      if (eventKey.indexOf(correlationId) !== -1) {
        var event_1 = _this.inProgressEvents[eventKey];
        delete _this.inProgressEvents[eventKey];
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spreadArrays"])(memo, [event_1]);
      }

      return memo;
    }, []);
  };

  return TelemetryManager;
}();

/* harmony default export */ __webpack_exports__["default"] = (TelemetryManager);

/***/ }),

/***/ "./node_modules/msal/lib-es6/telemetry/TelemetryUtils.js":
/*!***************************************************************!*\
  !*** ./node_modules/msal/lib-es6/telemetry/TelemetryUtils.js ***!
  \***************************************************************/
/*! exports provided: scrubTenantFromUri, hashPersonalIdentifier, prependEventNamePrefix, supportsBrowserPerformance, endBrowserPerformanceMeasurement, startBrowserPerformanceMeasurement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scrubTenantFromUri", function() { return scrubTenantFromUri; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hashPersonalIdentifier", function() { return hashPersonalIdentifier; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prependEventNamePrefix", function() { return prependEventNamePrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsBrowserPerformance", function() { return supportsBrowserPerformance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "endBrowserPerformanceMeasurement", function() { return endBrowserPerformanceMeasurement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "startBrowserPerformanceMeasurement", function() { return startBrowserPerformanceMeasurement; });
/* harmony import */ var _TelemetryConstants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TelemetryConstants */ "./node_modules/msal/lib-es6/telemetry/TelemetryConstants.js");
/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/* harmony import */ var _authority_Authority__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../authority/Authority */ "./node_modules/msal/lib-es6/authority/Authority.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */




var scrubTenantFromUri = function scrubTenantFromUri(uri) {
  var url = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_2__["UrlUtils"].GetUrlComponents(uri); // validate trusted host

  if (_authority_Authority__WEBPACK_IMPORTED_MODULE_3__["Authority"].isAdfs(uri)) {
    /**
     * returning what was passed because the library needs to work with uris that are non
     * AAD trusted but passed by users such as B2C or others.
     * HTTP Events for instance can take a url to the open id config endpoint
     */
    return uri;
  }

  var pathParams = url.PathSegments;

  if (pathParams && pathParams.length >= 2) {
    var tenantPosition = pathParams[1] === "tfp" ? 2 : 1;

    if (tenantPosition < pathParams.length) {
      pathParams[tenantPosition] = _TelemetryConstants__WEBPACK_IMPORTED_MODULE_0__["TENANT_PLACEHOLDER"];
    }
  }

  return url.Protocol + "//" + url.HostNameAndPort + "/" + pathParams.join("/");
};
var hashPersonalIdentifier = function hashPersonalIdentifier(valueToHash) {
  /*
   * TODO sha256 this
   * Current test runner is being funny with node libs that are webpacked anyway
   * need a different solution
   */
  return _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_1__["CryptoUtils"].base64Encode(valueToHash);
};
var prependEventNamePrefix = function prependEventNamePrefix(suffix) {
  return "" + _TelemetryConstants__WEBPACK_IMPORTED_MODULE_0__["EVENT_NAME_PREFIX"] + (suffix || "");
};
var supportsBrowserPerformance = function supportsBrowserPerformance() {
  return !!(typeof window !== "undefined" && "performance" in window && window.performance.mark && window.performance.measure);
};
var endBrowserPerformanceMeasurement = function endBrowserPerformanceMeasurement(measureName, startMark, endMark) {
  if (supportsBrowserPerformance()) {
    window.performance.mark(endMark);
    window.performance.measure(measureName, startMark, endMark);
    window.performance.clearMeasures(measureName);
    window.performance.clearMarks(startMark);
    window.performance.clearMarks(endMark);
  }
};
var startBrowserPerformanceMeasurement = function startBrowserPerformanceMeasurement(startMark) {
  if (supportsBrowserPerformance()) {
    window.performance.mark(startMark);
  }
};

/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/AuthCacheUtils.js":
/*!***********************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/AuthCacheUtils.js ***!
  \***********************************************************/
/*! exports provided: AuthCacheUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthCacheUtils", function() { return AuthCacheUtils; });
/* harmony import */ var _ScopeSet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ScopeSet */ "./node_modules/msal/lib-es6/ScopeSet.js");
/* harmony import */ var _UrlUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


/**
 * @hidden
 */

var AuthCacheUtils =
/** @class */
function () {
  function AuthCacheUtils() {}

  AuthCacheUtils.filterTokenCacheItemsByScope = function (tokenCacheItems, requestScopes) {
    return tokenCacheItems.filter(function (cacheItem) {
      var cachedScopes = cacheItem.key.scopes.split(" ");
      var searchScopes = _ScopeSet__WEBPACK_IMPORTED_MODULE_0__["ScopeSet"].removeDefaultScopes(requestScopes); // If requestScopes contain only default scopes search for default scopes otherwise search for everything but default scopes

      return searchScopes.length === 0 ? _ScopeSet__WEBPACK_IMPORTED_MODULE_0__["ScopeSet"].containsScope(cachedScopes, requestScopes) : _ScopeSet__WEBPACK_IMPORTED_MODULE_0__["ScopeSet"].containsScope(cachedScopes, searchScopes);
    });
  };

  AuthCacheUtils.filterTokenCacheItemsByAuthority = function (tokenCacheItems, authority) {
    return tokenCacheItems.filter(function (cacheItem) {
      return _UrlUtils__WEBPACK_IMPORTED_MODULE_1__["UrlUtils"].CanonicalizeUri(cacheItem.key.authority) === authority;
    });
  };

  AuthCacheUtils.filterTokenCacheItemsByDomain = function (tokenCacheItems, requestDomain) {
    return tokenCacheItems.filter(function (cacheItem) {
      var cacheItemDomain = _UrlUtils__WEBPACK_IMPORTED_MODULE_1__["UrlUtils"].GetUrlComponents(cacheItem.key.authority).HostNameAndPort;
      return cacheItemDomain === requestDomain;
    });
  };

  return AuthCacheUtils;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/Constants.js":
/*!******************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/Constants.js ***!
  \******************************************************/
/*! exports provided: Constants, SESSION_STORAGE, ServerHashParamKeys, ResponseTypes, TemporaryCacheKeys, PersistentCacheKeys, ErrorCacheKeys, DEFAULT_AUTHORITY, AAD_INSTANCE_DISCOVERY_ENDPOINT, WELL_KNOWN_SUFFIX, SSOTypes, BlacklistedEQParams, NetworkRequestType, PromptState, FramePrefix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Constants", function() { return Constants; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SESSION_STORAGE", function() { return SESSION_STORAGE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerHashParamKeys", function() { return ServerHashParamKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResponseTypes", function() { return ResponseTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemporaryCacheKeys", function() { return TemporaryCacheKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersistentCacheKeys", function() { return PersistentCacheKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorCacheKeys", function() { return ErrorCacheKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AUTHORITY", function() { return DEFAULT_AUTHORITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AAD_INSTANCE_DISCOVERY_ENDPOINT", function() { return AAD_INSTANCE_DISCOVERY_ENDPOINT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WELL_KNOWN_SUFFIX", function() { return WELL_KNOWN_SUFFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SSOTypes", function() { return SSOTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlacklistedEQParams", function() { return BlacklistedEQParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NetworkRequestType", function() { return NetworkRequestType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PromptState", function() { return PromptState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FramePrefix", function() { return FramePrefix; });
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @hidden
 * Constants
 */
var Constants =
/** @class */
function () {
  function Constants() {}

  Object.defineProperty(Constants, "libraryName", {
    get: function get() {
      return "Msal.js";
    } // used in telemetry sdkName
    ,
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "claims", {
    get: function get() {
      return "claims";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "clientId", {
    get: function get() {
      return "clientId";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "adalIdToken", {
    get: function get() {
      return "adal.idtoken";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "cachePrefix", {
    get: function get() {
      return "msal";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "scopes", {
    get: function get() {
      return "scopes";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "no_account", {
    get: function get() {
      return "NO_ACCOUNT";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "upn", {
    get: function get() {
      return "upn";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "domain_hint", {
    get: function get() {
      return "domain_hint";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "prompt_select_account", {
    get: function get() {
      return "&prompt=select_account";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "prompt_none", {
    get: function get() {
      return "&prompt=none";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "prompt", {
    get: function get() {
      return "prompt";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "response_mode_fragment", {
    get: function get() {
      return "&response_mode=fragment";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "resourceDelimiter", {
    get: function get() {
      return "|";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "cacheDelimiter", {
    get: function get() {
      return ".";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "popUpWidth", {
    get: function get() {
      return this._popUpWidth;
    },
    set: function set(width) {
      this._popUpWidth = width;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "popUpHeight", {
    get: function get() {
      return this._popUpHeight;
    },
    set: function set(height) {
      this._popUpHeight = height;
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "login", {
    get: function get() {
      return "LOGIN";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "renewToken", {
    get: function get() {
      return "RENEW_TOKEN";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "unknown", {
    get: function get() {
      return "UNKNOWN";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "ADFS", {
    get: function get() {
      return "adfs";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "homeAccountIdentifier", {
    get: function get() {
      return "homeAccountIdentifier";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "common", {
    get: function get() {
      return "common";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "openidScope", {
    get: function get() {
      return "openid";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "profileScope", {
    get: function get() {
      return "profile";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "oidcScopes", {
    get: function get() {
      return [this.openidScope, this.profileScope];
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "interactionTypeRedirect", {
    get: function get() {
      return "redirectInteraction";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "interactionTypePopup", {
    get: function get() {
      return "popupInteraction";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "interactionTypeSilent", {
    get: function get() {
      return "silentInteraction";
    },
    enumerable: false,
    configurable: true
  });
  Object.defineProperty(Constants, "inProgress", {
    get: function get() {
      return "inProgress";
    },
    enumerable: false,
    configurable: true
  });
  Constants._popUpWidth = 483;
  Constants._popUpHeight = 600;
  return Constants;
}();


var SESSION_STORAGE = "sessionStorage";
/**
 * Keys in the hashParams
 */

var ServerHashParamKeys;

(function (ServerHashParamKeys) {
  ServerHashParamKeys["SCOPE"] = "scope";
  ServerHashParamKeys["STATE"] = "state";
  ServerHashParamKeys["ERROR"] = "error";
  ServerHashParamKeys["ERROR_DESCRIPTION"] = "error_description";
  ServerHashParamKeys["ACCESS_TOKEN"] = "access_token";
  ServerHashParamKeys["ID_TOKEN"] = "id_token";
  ServerHashParamKeys["EXPIRES_IN"] = "expires_in";
  ServerHashParamKeys["SESSION_STATE"] = "session_state";
  ServerHashParamKeys["CLIENT_INFO"] = "client_info";
})(ServerHashParamKeys || (ServerHashParamKeys = {}));
/**
 * @hidden
 * @ignore
 * response_type from OpenIDConnect
 * References: https://openid.net/specs/oauth-v2-multiple-response-types-1_0.html & https://tools.ietf.org/html/rfc6749#section-4.2.1
 *
 */


var ResponseTypes = {
  id_token: "id_token",
  token: "token",
  id_token_token: "id_token token"
};
/**
 * @hidden
 * CacheKeys for MSAL
 */

var TemporaryCacheKeys;

(function (TemporaryCacheKeys) {
  TemporaryCacheKeys["AUTHORITY"] = "authority";
  TemporaryCacheKeys["ACQUIRE_TOKEN_ACCOUNT"] = "acquireTokenAccount";
  TemporaryCacheKeys["SESSION_STATE"] = "session.state";
  TemporaryCacheKeys["STATE_LOGIN"] = "state.login";
  TemporaryCacheKeys["STATE_ACQ_TOKEN"] = "state.acquireToken";
  TemporaryCacheKeys["STATE_RENEW"] = "state.renew";
  TemporaryCacheKeys["NONCE_IDTOKEN"] = "nonce.idtoken";
  TemporaryCacheKeys["LOGIN_REQUEST"] = "login.request";
  TemporaryCacheKeys["RENEW_STATUS"] = "token.renew.status";
  TemporaryCacheKeys["URL_HASH"] = "urlHash";
  TemporaryCacheKeys["INTERACTION_STATUS"] = "interaction.status";
  TemporaryCacheKeys["REDIRECT_REQUEST"] = "redirect_request";
})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));

var PersistentCacheKeys;

(function (PersistentCacheKeys) {
  PersistentCacheKeys["IDTOKEN"] = "idtoken";
  PersistentCacheKeys["CLIENT_INFO"] = "client.info";
})(PersistentCacheKeys || (PersistentCacheKeys = {}));

var ErrorCacheKeys;

(function (ErrorCacheKeys) {
  ErrorCacheKeys["LOGIN_ERROR"] = "login.error";
  ErrorCacheKeys["ERROR"] = "error";
  ErrorCacheKeys["ERROR_DESC"] = "error.description";
})(ErrorCacheKeys || (ErrorCacheKeys = {}));

var DEFAULT_AUTHORITY = "https://login.microsoftonline.com/common/";
var AAD_INSTANCE_DISCOVERY_ENDPOINT = DEFAULT_AUTHORITY + "/discovery/instance?api-version=1.1&authorization_endpoint=";
var WELL_KNOWN_SUFFIX = ".well-known/openid-configuration";
/**
 * @hidden
 * SSO Types - generated to populate hints
 */

var SSOTypes;

(function (SSOTypes) {
  SSOTypes["ACCOUNT"] = "account";
  SSOTypes["SID"] = "sid";
  SSOTypes["LOGIN_HINT"] = "login_hint";
  SSOTypes["ORGANIZATIONS"] = "organizations";
  SSOTypes["CONSUMERS"] = "consumers";
  SSOTypes["ID_TOKEN"] = "id_token";
  SSOTypes["ACCOUNT_ID"] = "accountIdentifier";
  SSOTypes["HOMEACCOUNT_ID"] = "homeAccountIdentifier";
})(SSOTypes || (SSOTypes = {}));
/**
 * @hidden
 */


var BlacklistedEQParams = [SSOTypes.SID, SSOTypes.LOGIN_HINT];
var NetworkRequestType = {
  GET: "GET",
  POST: "POST"
};
/**
 * we considered making this "enum" in the request instead of string, however it looks like the allowed list of
 * prompt values kept changing over past couple of years. There are some undocumented prompt values for some
 * internal partners too, hence the choice of generic "string" type instead of the "enum"
 * @hidden
 */

var PromptState = {
  LOGIN: "login",
  SELECT_ACCOUNT: "select_account",
  CONSENT: "consent",
  NONE: "none"
};
/**
 * Frame name prefixes for the hidden iframe created in silent frames
 */

var FramePrefix = {
  ID_TOKEN_FRAME: "msalIdTokenFrame",
  TOKEN_FRAME: "msalRenewFrame"
};

/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/CryptoUtils.js":
/*!********************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/CryptoUtils.js ***!
  \********************************************************/
/*! exports provided: CryptoUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CryptoUtils", function() { return CryptoUtils; });
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @hidden
 */
var CryptoUtils =
/** @class */
function () {
  function CryptoUtils() {}
  /**
   * Creates a new random GUID
   * @returns string (GUID)
   */


  CryptoUtils.createNewGuid = function () {
    /*
     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or
     * pseudo-random numbers.
     * The algorithm is as follows:
     *     Set the two most significant bits (bits 6 and 7) of the
     *        clock_seq_hi_and_reserved to zero and one, respectively.
     *     Set the four most significant bits (bits 12 through 15) of the
     *        time_hi_and_version field to the 4-bit version number from
     *        Section 4.1.3. Version4
     *     Set all the other bits to randomly (or pseudo-randomly) chosen
     *     values.
     * UUID                   = time-low "-" time-mid "-"time-high-and-version "-"clock-seq-reserved and low(2hexOctet)"-" node
     * time-low               = 4hexOctet
     * time-mid               = 2hexOctet
     * time-high-and-version  = 2hexOctet
     * clock-seq-and-reserved = hexOctet:
     * clock-seq-low          = hexOctet
     * node                   = 6hexOctet
     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx
     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10
     * y values are 8, 9, A, B
     */
    var cryptoObj = window.crypto; // for IE 11

    if (cryptoObj && cryptoObj.getRandomValues) {
      var buffer = new Uint8Array(16);
      cryptoObj.getRandomValues(buffer); // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).

      buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.

      buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = "4".
      // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.

      buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.

      buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.

      return CryptoUtils.decimalToHex(buffer[0]) + CryptoUtils.decimalToHex(buffer[1]) + CryptoUtils.decimalToHex(buffer[2]) + CryptoUtils.decimalToHex(buffer[3]) + "-" + CryptoUtils.decimalToHex(buffer[4]) + CryptoUtils.decimalToHex(buffer[5]) + "-" + CryptoUtils.decimalToHex(buffer[6]) + CryptoUtils.decimalToHex(buffer[7]) + "-" + CryptoUtils.decimalToHex(buffer[8]) + CryptoUtils.decimalToHex(buffer[9]) + "-" + CryptoUtils.decimalToHex(buffer[10]) + CryptoUtils.decimalToHex(buffer[11]) + CryptoUtils.decimalToHex(buffer[12]) + CryptoUtils.decimalToHex(buffer[13]) + CryptoUtils.decimalToHex(buffer[14]) + CryptoUtils.decimalToHex(buffer[15]);
    } else {
      var guidHolder = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";
      var hex = "0123456789abcdef";
      var r = 0;
      var guidResponse = "";

      for (var i = 0; i < 36; i++) {
        if (guidHolder[i] !== "-" && guidHolder[i] !== "4") {
          // each x and y needs to be random
          r = Math.random() * 16 | 0;
        }

        if (guidHolder[i] === "x") {
          guidResponse += hex[r];
        } else if (guidHolder[i] === "y") {
          // clock-seq-and-reserved first hex is filtered and remaining hex values are random
          r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??

          r |= 0x8; // set pos 3 to 1 as 1???

          guidResponse += hex[r];
        } else {
          guidResponse += guidHolder[i];
        }
      }

      return guidResponse;
    }
  };
  /**
   * verifies if a string is  GUID
   * @param guid
   */


  CryptoUtils.isGuid = function (guid) {
    var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
    return regexGuid.test(guid);
  };
  /**
   * Decimal to Hex
   *
   * @param num
   */


  CryptoUtils.decimalToHex = function (num) {
    var hex = num.toString(16);

    while (hex.length < 2) {
      hex = "0" + hex;
    }

    return hex;
  }; // See: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_4_%E2%80%93_escaping_the_string_before_encoding_it

  /**
   * encoding string to base64 - platform specific check
   *
   * @param input
   */


  CryptoUtils.base64Encode = function (input) {
    return btoa(encodeURIComponent(input).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {
      return String.fromCharCode(Number("0x" + p1));
    }));
  };
  /**
   * Decodes a base64 encoded string.
   *
   * @param input
   */


  CryptoUtils.base64Decode = function (input) {
    var encodedString = input.replace(/-/g, "+").replace(/_/g, "/");

    switch (encodedString.length % 4) {
      case 0:
        break;

      case 2:
        encodedString += "==";
        break;

      case 3:
        encodedString += "=";
        break;

      default:
        throw new Error("Invalid base64 string");
    }

    return decodeURIComponent(atob(encodedString).split("").map(function (c) {
      return "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(""));
  };
  /**
   * deserialize a string
   *
   * @param query
   */


  CryptoUtils.deserialize = function (query) {
    var match; // Regex for replacing addition symbol with a space

    var pl = /\+/g;
    var search = /([^&=]+)=([^&]*)/g;

    var decode = function decode(s) {
      return decodeURIComponent(s.replace(pl, " "));
    };

    var obj = {};
    match = search.exec(query);

    while (match) {
      obj[decode(match[1])] = decode(match[2]);
      match = search.exec(query);
    }

    return obj;
  };

  return CryptoUtils;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/RequestUtils.js":
/*!*********************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/RequestUtils.js ***!
  \*********************************************************/
/*! exports provided: RequestUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestUtils", function() { return RequestUtils; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientConfigurationError */ "./node_modules/msal/lib-es6/error/ClientConfigurationError.js");
/* harmony import */ var _ScopeSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ScopeSet */ "./node_modules/msal/lib-es6/ScopeSet.js");
/* harmony import */ var _StringUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/* harmony import */ var _CryptoUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony import */ var _TimeUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TimeUtils */ "./node_modules/msal/lib-es6/utils/TimeUtils.js");
/* harmony import */ var _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ClientAuthError */ "./node_modules/msal/lib-es6/error/ClientAuthError.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */








/**
 * @hidden
 */

var RequestUtils =
/** @class */
function () {
  function RequestUtils() {}
  /**
   * @ignore
   *
   * @param request
   * @param isLoginCall
   * @param cacheStorage
   * @param clientId
   *
   * validates all request parameters and generates a consumable request object
   */


  RequestUtils.validateRequest = function (request, isLoginCall, clientId, interactionType) {
    // Throw error if request is empty for acquire * calls
    if (!isLoginCall && !request) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_2__["ClientConfigurationError"].createEmptyRequestError();
    }

    var scopes;
    var extraQueryParameters;

    if (request) {
      // if extraScopesToConsent is passed in loginCall, append them to the login request; Validate and filter scopes (the validate function will throw if validation fails)
      scopes = isLoginCall ? _ScopeSet__WEBPACK_IMPORTED_MODULE_3__["ScopeSet"].appendScopes(request.scopes, request.extraScopesToConsent) : request.scopes;
      _ScopeSet__WEBPACK_IMPORTED_MODULE_3__["ScopeSet"].validateInputScope(scopes, !isLoginCall);
      scopes = _ScopeSet__WEBPACK_IMPORTED_MODULE_3__["ScopeSet"].translateClientIdIfSingleScope(scopes, clientId); // validate prompt parameter

      this.validatePromptParameter(request.prompt); // validate extraQueryParameters

      extraQueryParameters = this.validateEQParameters(request.extraQueryParameters, request.claimsRequest); // validate claimsRequest

      this.validateClaimsRequest(request.claimsRequest);
    } // validate and generate state and correlationId


    var state = this.validateAndGenerateState(request && request.state, interactionType);
    var correlationId = this.validateAndGenerateCorrelationId(request && request.correlationId);

    var validatedRequest = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, request), {
      extraQueryParameters: extraQueryParameters,
      scopes: scopes,
      state: state,
      correlationId: correlationId
    });

    return validatedRequest;
  };
  /**
   * @ignore
   *
   * Utility to test if valid prompt value is passed in the request
   * @param request
   */


  RequestUtils.validatePromptParameter = function (prompt) {
    if (prompt) {
      if ([_Constants__WEBPACK_IMPORTED_MODULE_1__["PromptState"].LOGIN, _Constants__WEBPACK_IMPORTED_MODULE_1__["PromptState"].SELECT_ACCOUNT, _Constants__WEBPACK_IMPORTED_MODULE_1__["PromptState"].CONSENT, _Constants__WEBPACK_IMPORTED_MODULE_1__["PromptState"].NONE].indexOf(prompt) < 0) {
        throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_2__["ClientConfigurationError"].createInvalidPromptError(prompt);
      }
    }
  };
  /**
   * @ignore
   *
   * Removes unnecessary or duplicate query parameters from extraQueryParameters
   * @param request
   */


  RequestUtils.validateEQParameters = function (extraQueryParameters, claimsRequest) {
    var eQParams = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, extraQueryParameters);

    if (!eQParams) {
      return null;
    }

    if (claimsRequest) {
      // this.logger.warning("Removed duplicate claims from extraQueryParameters. Please use either the claimsRequest field OR pass as extraQueryParameter - not both.");
      delete eQParams[_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].claims];
    }

    _Constants__WEBPACK_IMPORTED_MODULE_1__["BlacklistedEQParams"].forEach(function (param) {
      if (eQParams[param]) {
        // this.logger.warning("Removed duplicate " + param + " from extraQueryParameters. Please use the " + param + " field in request object.");
        delete eQParams[param];
      }
    });
    return eQParams;
  };
  /**
   * @ignore
   *
   * Validates the claims passed in request is a JSON
   * TODO: More validation will be added when the server team tells us how they have actually implemented claims
   * @param claimsRequest
   */


  RequestUtils.validateClaimsRequest = function (claimsRequest) {
    if (!claimsRequest) {
      return;
    }

    try {
      JSON.parse(claimsRequest);
    } catch (e) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_2__["ClientConfigurationError"].createClaimsRequestParsingError(e);
    }
  };
  /**
   * @ignore
   *
   * generate unique state per request
   * @param userState User-provided state value
   * @returns State string include library state and user state
   */


  RequestUtils.validateAndGenerateState = function (userState, interactionType) {
    return !_StringUtils__WEBPACK_IMPORTED_MODULE_4__["StringUtils"].isEmpty(userState) ? "" + RequestUtils.generateLibraryState(interactionType) + _Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].resourceDelimiter + userState : RequestUtils.generateLibraryState(interactionType);
  };
  /**
   * Generates the state value used by the library.
   *
   * @returns Base64 encoded string representing the state
   */


  RequestUtils.generateLibraryState = function (interactionType) {
    var stateObject = {
      id: _CryptoUtils__WEBPACK_IMPORTED_MODULE_5__["CryptoUtils"].createNewGuid(),
      ts: _TimeUtils__WEBPACK_IMPORTED_MODULE_6__["TimeUtils"].now(),
      method: interactionType
    };
    var stateString = JSON.stringify(stateObject);
    return _CryptoUtils__WEBPACK_IMPORTED_MODULE_5__["CryptoUtils"].base64Encode(stateString);
  };
  /**
   * Decodes the state value into a StateObject
   *
   * @param state State value returned in the request
   * @returns Parsed values from the encoded state value
   */


  RequestUtils.parseLibraryState = function (state) {
    var libraryState = decodeURIComponent(state).split(_Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].resourceDelimiter)[0];

    if (_CryptoUtils__WEBPACK_IMPORTED_MODULE_5__["CryptoUtils"].isGuid(libraryState)) {
      // If state is guid, assume timestamp is now and is redirect, as redirect should be only method where this can happen.
      return {
        id: libraryState,
        ts: _TimeUtils__WEBPACK_IMPORTED_MODULE_6__["TimeUtils"].now(),
        method: _Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].interactionTypeRedirect
      };
    }

    try {
      var stateString = _CryptoUtils__WEBPACK_IMPORTED_MODULE_5__["CryptoUtils"].base64Decode(libraryState);
      var stateObject = JSON.parse(stateString);
      return stateObject;
    } catch (e) {
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_7__["ClientAuthError"].createInvalidStateError(state, null);
    }
  };
  /**
   * @ignore
   *
   * validate correlationId and generate if not valid or not set by the user
   * @param correlationId
   */


  RequestUtils.validateAndGenerateCorrelationId = function (correlationId) {
    // validate user set correlationId or set one for the user if null
    if (correlationId && !_CryptoUtils__WEBPACK_IMPORTED_MODULE_5__["CryptoUtils"].isGuid(correlationId)) {
      throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_2__["ClientConfigurationError"].createInvalidCorrelationIdError();
    }

    return _CryptoUtils__WEBPACK_IMPORTED_MODULE_5__["CryptoUtils"].isGuid(correlationId) ? correlationId : _CryptoUtils__WEBPACK_IMPORTED_MODULE_5__["CryptoUtils"].createNewGuid();
  };
  /**
   * Create a request signature
   * @param request
   */


  RequestUtils.createRequestSignature = function (request) {
    return "" + request.scopes.join(" ").toLowerCase() + _Constants__WEBPACK_IMPORTED_MODULE_1__["Constants"].resourceDelimiter + request.authority;
  };

  return RequestUtils;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/ResponseUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/ResponseUtils.js ***!
  \**********************************************************/
/*! exports provided: ResponseUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResponseUtils", function() { return ResponseUtils; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */


/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @hidden
 */

var ResponseUtils =
/** @class */
function () {
  function ResponseUtils() {}

  ResponseUtils.setResponseIdToken = function (originalResponse, idTokenObj) {
    if (!originalResponse) {
      return null;
    } else if (!idTokenObj) {
      return originalResponse;
    }

    var exp = Number(idTokenObj.expiration);

    if (exp && !originalResponse.expiresOn) {
      originalResponse.expiresOn = new Date(exp * 1000);
    }

    return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, originalResponse), {
      idToken: idTokenObj,
      idTokenClaims: idTokenObj.claims,
      uniqueId: idTokenObj.objectId || idTokenObj.subject,
      tenantId: idTokenObj.tenantId
    });
  };

  ResponseUtils.buildAuthResponse = function (idToken, authResponse, serverAuthenticationRequest, account, scopes, accountState) {
    switch (serverAuthenticationRequest.responseType) {
      case _Constants__WEBPACK_IMPORTED_MODULE_1__["ResponseTypes"].id_token:
        var idTokenResponse = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, authResponse), {
          tokenType: _Constants__WEBPACK_IMPORTED_MODULE_1__["ServerHashParamKeys"].ID_TOKEN,
          account: account,
          scopes: scopes,
          accountState: accountState
        });

        idTokenResponse = ResponseUtils.setResponseIdToken(idTokenResponse, idToken);
        return idTokenResponse.idToken ? idTokenResponse : null;

      case _Constants__WEBPACK_IMPORTED_MODULE_1__["ResponseTypes"].id_token_token:
        var idTokeTokenResponse = ResponseUtils.setResponseIdToken(authResponse, idToken);
        return idTokeTokenResponse && idTokeTokenResponse.accessToken && idTokeTokenResponse.idToken ? idTokeTokenResponse : null;

      case _Constants__WEBPACK_IMPORTED_MODULE_1__["ResponseTypes"].token:
        var tokenResponse = ResponseUtils.setResponseIdToken(authResponse, idToken);
        return tokenResponse;

      default:
        return null;
    }
  };

  return ResponseUtils;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/StringUtils.js":
/*!********************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/StringUtils.js ***!
  \********************************************************/
/*! exports provided: StringUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StringUtils", function() { return StringUtils; });
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @hidden
 */
var StringUtils =
/** @class */
function () {
  function StringUtils() {}
  /**
   * Check if a string is empty
   *
   * @param str
   */


  StringUtils.isEmpty = function (str) {
    return typeof str === "undefined" || !str || 0 === str.length;
  };
  /**
   * Check if a string's value is a valid JSON object
   *
   * @param str
   */


  StringUtils.validateAndParseJsonCacheKey = function (str) {
    try {
      var parsedKey = JSON.parse(str);
      /**
       * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object
       * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check
       * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.
       *
       */

      return parsedKey && typeof parsedKey === "object" ? parsedKey : null;
    } catch (error) {
      return null;
    }
  };

  return StringUtils;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/TimeUtils.js":
/*!******************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/TimeUtils.js ***!
  \******************************************************/
/*! exports provided: TimeUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeUtils", function() { return TimeUtils; });
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

/**
 * @hidden
 */
var TimeUtils =
/** @class */
function () {
  function TimeUtils() {}
  /**
   * Returns time in seconds for expiration based on string value passed in.
   *
   * @param expiresIn
   */


  TimeUtils.parseExpiresIn = function (expiresIn) {
    // if AAD did not send "expires_in" property, use default expiration of 3599 seconds, for some reason AAD sends 3599 as "expires_in" value instead of 3600
    var expires = expiresIn || "3599";
    return parseInt(expires, 10);
  };
  /**
   * Return the current time in Unix time (seconds). Date.getTime() returns in milliseconds.
   */


  TimeUtils.now = function () {
    return Math.round(new Date().getTime() / 1000.0);
  };
  /**
   * Returns the amount of time in milliseconds since the page loaded.
   */


  TimeUtils.relativeNowMs = function () {
    return window.performance.now();
  };

  return TimeUtils;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/TokenUtils.js":
/*!*******************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/TokenUtils.js ***!
  \*******************************************************/
/*! exports provided: TokenUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenUtils", function() { return TokenUtils; });
/* harmony import */ var _CryptoUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/* harmony import */ var _StringUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/* harmony import */ var _TimeUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TimeUtils */ "./node_modules/msal/lib-es6/utils/TimeUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */



/**
 * @hidden
 */

var TokenUtils =
/** @class */
function () {
  function TokenUtils() {}
  /**
   * decode a JWT
   *
   * @param jwtToken
   */


  TokenUtils.decodeJwt = function (jwtToken) {
    if (_StringUtils__WEBPACK_IMPORTED_MODULE_1__["StringUtils"].isEmpty(jwtToken)) {
      return null;
    }

    var idTokenPartsRegex = /^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/;
    var matches = idTokenPartsRegex.exec(jwtToken);

    if (!matches || matches.length < 4) {
      // this._requestContext.logger.warn("The returned id_token is not parseable.");
      return null;
    }

    var crackedToken = {
      header: matches[1],
      JWSPayload: matches[2],
      JWSSig: matches[3]
    };
    return crackedToken;
  };
  /**
   * Evaluates whether token cache item expiration is within expiration offset range
   * @param tokenCacheItem
   */


  TokenUtils.validateExpirationIsWithinOffset = function (expiration, tokenRenewalOffsetSeconds) {
    var offset = tokenRenewalOffsetSeconds || 300;
    return expiration && expiration > _TimeUtils__WEBPACK_IMPORTED_MODULE_2__["TimeUtils"].now() + offset;
  };
  /**
   * Extract IdToken by decoding the RAWIdToken
   *
   * @param encodedIdToken
   */


  TokenUtils.extractIdToken = function (encodedIdToken) {
    // id token will be decoded to get the username
    var decodedToken = this.decodeJwt(encodedIdToken);

    if (!decodedToken) {
      return null;
    }

    try {
      var base64IdToken = decodedToken["JWSPayload"];
      var base64Decoded = _CryptoUtils__WEBPACK_IMPORTED_MODULE_0__["CryptoUtils"].base64Decode(base64IdToken);

      if (!base64Decoded) {
        // this._requestContext.logger.info("The returned id_token could not be base64 url safe decoded.");
        return null;
      } // ECMA script has JSON built-in support


      return JSON.parse(base64Decoded);
    } catch (err) {// this._requestContext.logger.error("The returned id_token could not be decoded" + err);
    }

    return null;
  };

  return TokenUtils;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/UrlUtils.js":
/*!*****************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/UrlUtils.js ***!
  \*****************************************************/
/*! exports provided: UrlUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UrlUtils", function() { return UrlUtils; });
/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony import */ var _ScopeSet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ScopeSet */ "./node_modules/msal/lib-es6/ScopeSet.js");
/* harmony import */ var _StringUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StringUtils */ "./node_modules/msal/lib-es6/utils/StringUtils.js");
/* harmony import */ var _CryptoUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CryptoUtils */ "./node_modules/msal/lib-es6/utils/CryptoUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */




/**
 * @hidden
 */

var UrlUtils =
/** @class */
function () {
  function UrlUtils() {}
  /**
   * generates the URL with QueryString Parameters
   * @param scopes
   */


  UrlUtils.createNavigateUrl = function (serverRequestParams) {
    var str = this.createNavigationUrlString(serverRequestParams);
    var authEndpoint = serverRequestParams.authorityInstance.AuthorizationEndpoint; // if the endpoint already has queryparams, lets add to it, otherwise add the first one

    if (authEndpoint.indexOf("?") < 0) {
      authEndpoint += "?";
    } else {
      authEndpoint += "&";
    }

    var requestUrl = "" + authEndpoint + str.join("&");
    return requestUrl;
  };
  /**
   * Generate the array of all QueryStringParams to be sent to the server
   * @param scopes
   */


  UrlUtils.createNavigationUrlString = function (serverRequestParams) {
    var scopes = _ScopeSet__WEBPACK_IMPORTED_MODULE_1__["ScopeSet"].appendDefaultScopes(serverRequestParams.scopes);
    var str = [];
    str.push("response_type=" + serverRequestParams.responseType);
    str.push("scope=" + encodeURIComponent(_ScopeSet__WEBPACK_IMPORTED_MODULE_1__["ScopeSet"].parseScope(scopes)));
    str.push("client_id=" + encodeURIComponent(serverRequestParams.clientId));
    str.push("redirect_uri=" + encodeURIComponent(serverRequestParams.redirectUri));
    str.push("state=" + encodeURIComponent(serverRequestParams.state));
    str.push("nonce=" + encodeURIComponent(serverRequestParams.nonce));
    str.push("client_info=1");
    str.push("x-client-SKU=" + serverRequestParams.xClientSku);
    str.push("x-client-Ver=" + serverRequestParams.xClientVer);

    if (serverRequestParams.promptValue) {
      str.push("prompt=" + encodeURIComponent(serverRequestParams.promptValue));
    }

    if (serverRequestParams.claimsValue) {
      str.push("claims=" + encodeURIComponent(serverRequestParams.claimsValue));
    }

    if (serverRequestParams.queryParameters) {
      str.push(serverRequestParams.queryParameters);
    }

    if (serverRequestParams.extraQueryParameters) {
      str.push(serverRequestParams.extraQueryParameters);
    }

    str.push("client-request-id=" + encodeURIComponent(serverRequestParams.correlationId));
    return str;
  };
  /**
   * Returns current window URL as redirect uri
   */


  UrlUtils.getCurrentUrl = function () {
    return window.location.href.split("?")[0].split("#")[0];
  };
  /**
   * Returns given URL with query string removed
   */


  UrlUtils.removeHashFromUrl = function (url) {
    return url.split("#")[0];
  };
  /**
   * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d
   * @param href The url
   * @param tenantId The tenant id to replace
   */


  UrlUtils.replaceTenantPath = function (url, tenantId) {
    var lowerCaseUrl = url.toLowerCase();
    var urlObject = this.GetUrlComponents(lowerCaseUrl);
    var pathArray = urlObject.PathSegments;

    if (tenantId && pathArray.length !== 0 && (pathArray[0] === _Constants__WEBPACK_IMPORTED_MODULE_0__["Constants"].common || pathArray[0] === _Constants__WEBPACK_IMPORTED_MODULE_0__["SSOTypes"].ORGANIZATIONS || pathArray[0] === _Constants__WEBPACK_IMPORTED_MODULE_0__["SSOTypes"].CONSUMERS)) {
      pathArray[0] = tenantId;
    }

    return this.constructAuthorityUriFromObject(urlObject, pathArray);
  };

  UrlUtils.constructAuthorityUriFromObject = function (urlObject, pathArray) {
    return this.CanonicalizeUri(urlObject.Protocol + "//" + urlObject.HostNameAndPort + "/" + pathArray.join("/"));
  };
  /**
   * Checks if an authority is common (ex. https://a:b/common/)
   * @param url The url
   * @returns true if authority is common and false otherwise
   */


  UrlUtils.isCommonAuthority = function (url) {
    var authority = this.CanonicalizeUri(url);
    var pathArray = this.GetUrlComponents(authority).PathSegments;
    return pathArray.length !== 0 && pathArray[0] === _Constants__WEBPACK_IMPORTED_MODULE_0__["Constants"].common;
  };
  /**
   * Checks if an authority is for organizations (ex. https://a:b/organizations/)
   * @param url The url
   * @returns true if authority is for  and false otherwise
   */


  UrlUtils.isOrganizationsAuthority = function (url) {
    var authority = this.CanonicalizeUri(url);
    var pathArray = this.GetUrlComponents(authority).PathSegments;
    return pathArray.length !== 0 && pathArray[0] === _Constants__WEBPACK_IMPORTED_MODULE_0__["SSOTypes"].ORGANIZATIONS;
  };
  /**
   * Checks if an authority is for consumers (ex. https://a:b/consumers/)
   * @param url The url
   * @returns true if authority is for  and false otherwise
   */


  UrlUtils.isConsumersAuthority = function (url) {
    var authority = this.CanonicalizeUri(url);
    var pathArray = this.GetUrlComponents(authority).PathSegments;
    return pathArray.length !== 0 && pathArray[0] === _Constants__WEBPACK_IMPORTED_MODULE_0__["SSOTypes"].CONSUMERS;
  };
  /**
   * Parses out the components from a url string.
   * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.
   */


  UrlUtils.GetUrlComponents = function (url) {
    if (!url) {
      throw "Url required";
    } // https://gist.github.com/curtisz/11139b2cfcaef4a261e0


    var regEx = RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?");
    var match = url.match(regEx);

    if (!match || match.length < 6) {
      throw "Valid url required";
    }

    var urlComponents = {
      Protocol: match[1],
      HostNameAndPort: match[4],
      AbsolutePath: match[5]
    };
    var pathSegments = urlComponents.AbsolutePath.split("/");
    pathSegments = pathSegments.filter(function (val) {
      return val && val.length > 0;
    }); // remove empty elements

    urlComponents.PathSegments = pathSegments;

    if (match[6]) {
      urlComponents.Search = match[6];
    }

    if (match[8]) {
      urlComponents.Hash = match[8];
    }

    return urlComponents;
  };
  /**
   * Given a url or path, append a trailing slash if one doesnt exist
   *
   * @param url
   */


  UrlUtils.CanonicalizeUri = function (url) {
    if (url) {
      var lowerCaseUrl = url.toLowerCase();

      if (!UrlUtils.endsWith(lowerCaseUrl, "/")) {
        lowerCaseUrl += "/";
      }

      return lowerCaseUrl;
    }

    return url;
  };
  /**
   * Checks to see if the url ends with the suffix
   * Required because we are compiling for es5 instead of es6
   * @param url
   * @param str
   */
  // TODO: Rename this, not clear what it is supposed to do


  UrlUtils.endsWith = function (url, suffix) {
    if (!url || !suffix) {
      return false;
    }

    return url.indexOf(suffix, url.length - suffix.length) !== -1;
  };
  /**
   * Utils function to remove the login_hint and domain_hint from the i/p extraQueryParameters
   * @param url
   * @param name
   */


  UrlUtils.urlRemoveQueryStringParameter = function (url, name) {
    if (_StringUtils__WEBPACK_IMPORTED_MODULE_2__["StringUtils"].isEmpty(url)) {
      return url;
    }

    var updatedUrl = url;
    var regex = new RegExp("(\\&" + name + "=)[^\&]+");
    updatedUrl = url.replace(regex, ""); // name=value&

    regex = new RegExp("(" + name + "=)[^\&]+&");
    updatedUrl = url.replace(regex, ""); // name=value

    regex = new RegExp("(" + name + "=)[^\&]+");
    updatedUrl = url.replace(regex, "");
    return updatedUrl;
  };
  /**
   * @hidden
   * @ignore
   *
   * Returns the anchor part(#) of the URL
   */


  UrlUtils.getHashFromUrl = function (urlStringOrFragment) {
    var hashIndex1 = urlStringOrFragment.indexOf("#");
    var hashIndex2 = urlStringOrFragment.indexOf("#/");

    if (hashIndex2 > -1) {
      return urlStringOrFragment.substring(hashIndex2 + 2);
    } else if (hashIndex1 > -1) {
      return urlStringOrFragment.substring(hashIndex1 + 1);
    }

    return urlStringOrFragment;
  };
  /**
   * @hidden
   * Check if the url contains a hash with known properties
   * @ignore
   */


  UrlUtils.urlContainsHash = function (urlString) {
    var parameters = UrlUtils.deserializeHash(urlString);
    return parameters.hasOwnProperty(_Constants__WEBPACK_IMPORTED_MODULE_0__["ServerHashParamKeys"].ERROR_DESCRIPTION) || parameters.hasOwnProperty(_Constants__WEBPACK_IMPORTED_MODULE_0__["ServerHashParamKeys"].ERROR) || parameters.hasOwnProperty(_Constants__WEBPACK_IMPORTED_MODULE_0__["ServerHashParamKeys"].ACCESS_TOKEN) || parameters.hasOwnProperty(_Constants__WEBPACK_IMPORTED_MODULE_0__["ServerHashParamKeys"].ID_TOKEN);
  };
  /**
   * @hidden
   * Returns deserialized portion of URL hash
   * @ignore
   */


  UrlUtils.deserializeHash = function (urlFragment) {
    var hash = UrlUtils.getHashFromUrl(urlFragment);
    return _CryptoUtils__WEBPACK_IMPORTED_MODULE_3__["CryptoUtils"].deserialize(hash);
  };
  /**
   * @ignore
   * @param {string} URI
   * @returns {string} host from the URI
   *
   * extract URI from the host
   */


  UrlUtils.getHostFromUri = function (uri) {
    // remove http:// or https:// from uri
    var extractedUri = String(uri).replace(/^(https?:)\/\//, "");
    extractedUri = extractedUri.split("/")[0];
    return extractedUri;
  };

  return UrlUtils;
}();



/***/ }),

/***/ "./node_modules/msal/lib-es6/utils/WindowUtils.js":
/*!********************************************************!*\
  !*** ./node_modules/msal/lib-es6/utils/WindowUtils.js ***!
  \********************************************************/
/*! exports provided: WindowUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WindowUtils", function() { return WindowUtils; });
/* harmony import */ var _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError */ "./node_modules/msal/lib-es6/error/ClientAuthError.js");
/* harmony import */ var _UrlUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UrlUtils */ "./node_modules/msal/lib-es6/utils/UrlUtils.js");
/* harmony import */ var _Constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Constants */ "./node_modules/msal/lib-es6/utils/Constants.js");
/* harmony import */ var _TimeUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TimeUtils */ "./node_modules/msal/lib-es6/utils/TimeUtils.js");
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */





var WindowUtils =
/** @class */
function () {
  function WindowUtils() {}
  /**
   * @hidden
   * Checks if the current page is running in an iframe.
   * @ignore
   */


  WindowUtils.isInIframe = function () {
    return window.parent !== window;
  };
  /**
   * @hidden
   * Check if the current page is running in a popup.
   * @ignore
   */


  WindowUtils.isInPopup = function () {
    return !!(window.opener && window.opener !== window);
  };
  /**
   * @hidden
   * @param prefix
   * @param scopes
   * @param authority
   */


  WindowUtils.generateFrameName = function (prefix, requestSignature) {
    return "" + prefix + _Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].resourceDelimiter + requestSignature;
  };
  /**
   * @hidden
   * Polls an iframe until it loads a url with a hash
   * @ignore
   */


  WindowUtils.monitorIframeForHash = function (contentWindow, timeout, urlNavigate, logger) {
    return new Promise(function (resolve, reject) {
      /*
       * Polling for iframes can be purely timing based,
       * since we don't need to account for interaction.
       */
      var nowMark = _TimeUtils__WEBPACK_IMPORTED_MODULE_3__["TimeUtils"].relativeNowMs();
      var timeoutMark = nowMark + timeout;
      logger.verbose("monitorWindowForIframe polling started");
      var intervalId = setInterval(function () {
        if (_TimeUtils__WEBPACK_IMPORTED_MODULE_3__["TimeUtils"].relativeNowMs() > timeoutMark) {
          logger.error("monitorIframeForHash unable to find hash in url, timing out");
          logger.errorPii("monitorIframeForHash polling timed out for url: " + urlNavigate);
          clearInterval(intervalId);
          reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_0__["ClientAuthError"].createTokenRenewalTimeoutError());
          return;
        }

        var href;

        try {
          /*
           * Will throw if cross origin,
           * which should be caught and ignored
           * since we need the interval to keep running while on STS UI.
           */
          href = contentWindow.location.href;
        } catch (e) {}

        if (href && _UrlUtils__WEBPACK_IMPORTED_MODULE_1__["UrlUtils"].urlContainsHash(href)) {
          logger.verbose("monitorIframeForHash found url in hash");
          clearInterval(intervalId);
          resolve(contentWindow.location.hash);
        }
      }, WindowUtils.POLLING_INTERVAL_MS);
    });
  };
  /**
   * @hidden
   * Polls a popup until it loads a url with a hash
   * @ignore
   */


  WindowUtils.monitorPopupForHash = function (contentWindow, timeout, urlNavigate, logger) {
    return new Promise(function (resolve, reject) {
      /*
       * Polling for popups needs to be tick-based,
       * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).
       */
      var maxTicks = timeout / WindowUtils.POLLING_INTERVAL_MS;
      var ticks = 0;
      logger.verbose("monitorWindowForHash polling started");
      var intervalId = setInterval(function () {
        if (contentWindow.closed) {
          logger.error("monitorWindowForHash window closed");
          clearInterval(intervalId);
          reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_0__["ClientAuthError"].createUserCancelledError());
          return;
        }

        var href;

        try {
          /*
           * Will throw if cross origin,
           * which should be caught and ignored
           * since we need the interval to keep running while on STS UI.
           */
          href = contentWindow.location.href;
        } catch (e) {} // Don't process blank pages or cross domain


        if (!href || href === "about:blank") {
          return;
        }
        /*
         * Only run clock when we are on same domain for popups
         * as popup operations can take a long time.
         */


        ticks++;

        if (href && _UrlUtils__WEBPACK_IMPORTED_MODULE_1__["UrlUtils"].urlContainsHash(href)) {
          logger.verbose("monitorPopupForHash found url in hash");
          clearInterval(intervalId);
          var hash = contentWindow.location.hash;
          WindowUtils.clearUrlFragment(contentWindow);
          resolve(hash);
        } else if (ticks > maxTicks) {
          logger.error("monitorPopupForHash unable to find hash in url, timing out");
          logger.errorPii("monitorPopupForHash polling timed out for url: " + urlNavigate);
          clearInterval(intervalId);
          reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_0__["ClientAuthError"].createTokenRenewalTimeoutError());
        }
      }, WindowUtils.POLLING_INTERVAL_MS);
    });
  };
  /**
   * @hidden
   * Loads iframe with authorization endpoint URL
   * @ignore
   */


  WindowUtils.loadFrame = function (urlNavigate, frameName, timeoutMs, logger) {
    var _this = this;
    /*
     * This trick overcomes iframe navigation in IE
     * IE does not load the page consistently in iframe
     */


    logger.infoPii("LoadFrame: " + frameName);
    return new Promise(function (resolve, reject) {
      setTimeout(function () {
        var frameHandle = _this.loadFrameSync(urlNavigate, frameName, logger);

        if (!frameHandle) {
          reject("Unable to load iframe with name: " + frameName);
          return;
        }

        resolve(frameHandle);
      }, timeoutMs);
    });
  };
  /**
   * @hidden
   * Loads the iframe synchronously when the navigateTimeFrame is set to `0`
   * @param urlNavigate
   * @param frameName
   * @param logger
   */


  WindowUtils.loadFrameSync = function (urlNavigate, frameName, logger) {
    var frameHandle = WindowUtils.addHiddenIFrame(frameName, logger); // returning to handle null in loadFrame, also to avoid null object access errors

    if (!frameHandle) {
      return null;
    } else if (frameHandle.src === "" || frameHandle.src === "about:blank") {
      frameHandle.src = urlNavigate;
      logger.infoPii("Frame Name : " + frameName + " Navigated to: " + urlNavigate);
    }

    return frameHandle;
  };
  /**
   * @hidden
   * Adds the hidden iframe for silent token renewal.
   * @ignore
   */


  WindowUtils.addHiddenIFrame = function (iframeId, logger) {
    if (typeof iframeId === "undefined") {
      return null;
    }

    logger.info("Add msal iframe to document");
    logger.infoPii("Add msal frame to document:" + iframeId);
    var adalFrame = document.getElementById(iframeId);

    if (!adalFrame) {
      logger.verbose("Add msal iframe does not exist");
      var ifr = document.createElement("iframe");
      ifr.setAttribute("id", iframeId);
      ifr.setAttribute("aria-hidden", "true");
      ifr.style.visibility = "hidden";
      ifr.style.position = "absolute";
      ifr.style.width = ifr.style.height = "0";
      ifr.style.border = "0";
      ifr.setAttribute("sandbox", "allow-scripts allow-same-origin allow-forms");
      adalFrame = document.getElementsByTagName("body")[0].appendChild(ifr);
    } else {
      logger.verbose("Add msal iframe already exists");
    }

    return adalFrame;
  };
  /**
   * @hidden
   * Removes a hidden iframe from the page.
   * @ignore
   */


  WindowUtils.removeHiddenIframe = function (iframe) {
    if (document.body === iframe.parentNode) {
      document.body.removeChild(iframe);
    }
  };
  /**
   * @hidden
   * Find and return the iframe element with the given hash
   * @ignore
   */


  WindowUtils.getIframeWithHash = function (hash) {
    var iframes = document.getElementsByTagName("iframe");
    var iframeArray = Array.apply(null, Array(iframes.length)).map(function (iframe, index) {
      return iframes.item(index);
    }); // eslint-disable-line prefer-spread

    return iframeArray.filter(function (iframe) {
      try {
        return iframe.contentWindow.location.hash === hash;
      } catch (e) {
        return false;
      }
    })[0];
  };
  /**
   * @hidden
   * Returns an array of all the popups opened by MSAL
   * @ignore
   */


  WindowUtils.getPopups = function () {
    if (!window.openedWindows) {
      window.openedWindows = [];
    }

    return window.openedWindows;
  };
  /**
   * @hidden
   * Find and return the popup with the given hash
   * @ignore
   */


  WindowUtils.getPopUpWithHash = function (hash) {
    return WindowUtils.getPopups().filter(function (popup) {
      try {
        return popup.location.hash === hash;
      } catch (e) {
        return false;
      }
    })[0];
  };
  /**
   * @hidden
   * Add the popup to the known list of popups
   * @ignore
   */


  WindowUtils.trackPopup = function (popup) {
    WindowUtils.getPopups().push(popup);
  };
  /**
   * @hidden
   * Close all popups
   * @ignore
   */


  WindowUtils.closePopups = function () {
    WindowUtils.getPopups().forEach(function (popup) {
      return popup.close();
    });
  };
  /**
   * @ignore
   *
   * blocks any login/acquireToken calls to reload from within a hidden iframe (generated for silent calls)
   */


  WindowUtils.blockReloadInHiddenIframes = function () {
    // return an error if called from the hidden iframe created by the msal js silent calls
    if (_UrlUtils__WEBPACK_IMPORTED_MODULE_1__["UrlUtils"].urlContainsHash(window.location.hash) && WindowUtils.isInIframe()) {
      throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_0__["ClientAuthError"].createBlockTokenRequestsInHiddenIframeError();
    }
  };
  /**
   *
   * @param cacheStorage
   */


  WindowUtils.checkIfBackButtonIsPressed = function (cacheStorage) {
    var redirectCache = cacheStorage.getItem(_Constants__WEBPACK_IMPORTED_MODULE_2__["TemporaryCacheKeys"].REDIRECT_REQUEST); // if redirect request is set and there is no hash

    if (redirectCache && !_UrlUtils__WEBPACK_IMPORTED_MODULE_1__["UrlUtils"].urlContainsHash(window.location.hash)) {
      var splitCache = redirectCache.split(_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].resourceDelimiter);
      splitCache.shift();
      var state = splitCache.length > 0 ? splitCache.join(_Constants__WEBPACK_IMPORTED_MODULE_2__["Constants"].resourceDelimiter) : null;
      cacheStorage.resetTempCacheItems(state);
    }
  };
  /**
   * Removes url fragment from browser url
   */


  WindowUtils.clearUrlFragment = function (contentWindow) {
    contentWindow.location.hash = ""; // Office.js sets history.replaceState to null

    if (typeof contentWindow.history.replaceState === "function") {
      // Full removes "#" from url
      contentWindow.history.replaceState(null, null, "" + contentWindow.location.pathname + contentWindow.location.search);
    }
  };
  /**
   * @hidden
   * Interval in milliseconds that we poll a window
   * @ignore
   */


  WindowUtils.POLLING_INTERVAL_MS = 50;
  return WindowUtils;
}();



/***/ }),

/***/ "./node_modules/ngx-captcha/__ivy_ngcc__/fesm2015/ngx-captcha.js":
/*!***********************************************************************!*\
  !*** ./node_modules/ngx-captcha/__ivy_ngcc__/fesm2015/ngx-captcha.js ***!
  \***********************************************************************/
/*! exports provided: BaseReCaptchaComponent, InvisibleReCaptchaComponent, NgxCaptchaModule, ReCaptcha2Component, ReCaptchaType, ReCaptchaV3Service, ScriptService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseReCaptchaComponent", function() { return BaseReCaptchaComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvisibleReCaptchaComponent", function() { return InvisibleReCaptchaComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxCaptchaModule", function() { return NgxCaptchaModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReCaptcha2Component", function() { return ReCaptcha2Component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReCaptchaType", function() { return ReCaptchaType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReCaptchaV3Service", function() { return ReCaptchaV3Service; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScriptService", function() { return ScriptService; });
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "./node_modules/@babel/runtime/helpers/esm/get.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "./node_modules/@babel/runtime/helpers/esm/inherits.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "./node_modules/@babel/runtime/helpers/esm/createSuper.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");









/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/base-recaptcha.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @abstract
 */


var _c0 = ["captchaWrapperElem"];

var BaseReCaptchaComponent = /*#__PURE__*/function () {
  /**
   * @protected
   * @param {?} renderer
   * @param {?} zone
   * @param {?} injector
   * @param {?} scriptService
   */
  function BaseReCaptchaComponent(renderer, zone, injector, scriptService) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, BaseReCaptchaComponent);

    this.renderer = renderer;
    this.zone = zone;
    this.injector = injector;
    this.scriptService = scriptService;
    /**
     * Prefix of the captcha element
     */

    this.captchaElemPrefix = 'ngx_captcha_id_';
    this.setupCaptcha = true;
    /**
     * Indicates if global domain 'recaptcha.net' should be used instead of default domain ('google.com')
     */

    this.useGlobalDomain = false;
    /**
     * Type
     */

    this.type = 'image';
    /**
     * Tab index
     */

    this.tabIndex = 0;
    /**
     * Called when captcha receives successful response.
     * Captcha response token is passed to event.
     */

    this.success = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /**
     * Called when captcha is loaded. Event receives id of the captcha
     */

    this.load = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /**
     * Called when captcha is reset.
     */

    this.reset = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /**
     * Called when captcha is loaded & ready. I.e. when you need to execute captcha on component load.
     */

    this.ready = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /**
     * Error callback
     */

    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /**
     * Expired callback
     */

    this.expire = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /**
     * Indicates if captcha should be set on load
     */

    this.setupAfterLoad = false;
    /**
     * If enabled, captcha will reset after receiving success response. This is useful
     * when invisible captcha need to be resolved multiple times on same page
     */

    this.resetCaptchaAfterSuccess = false;
    /**
     * Indicates if captcha is loaded
     */

    this.isLoaded = false;
  }
  /**
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(BaseReCaptchaComponent, [{
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this.control = this.injector.get(_angular_forms__WEBPACK_IMPORTED_MODULE_7__["NgControl"]).control;
    }
    /**
     * @return {?}
     */

  }, {
    key: "ngAfterViewChecked",
    value: function ngAfterViewChecked() {
      if (this.setupCaptcha) {
        this.setupCaptcha = false;
        this.setupComponent();
      }
    }
    /**
     * @param {?} changes
     * @return {?}
     */

  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      // cleanup scripts if language changed because they need to be reloaded
      if (changes && changes.hl) {
        // cleanup scripts when language changes
        if (!changes.hl.firstChange && changes.hl.currentValue !== changes.hl.previousValue) {
          this.scriptService.cleanup();
        }
      }

      if (changes && changes.useGlobalDomain) {
        // cleanup scripts when domain changes
        if (!changes.useGlobalDomain.firstChange && changes.useGlobalDomain.currentValue !== changes.useGlobalDomain.previousValue) {
          this.scriptService.cleanup();
        }
      }

      this.setupCaptcha = true;
    }
    /**
     * Gets captcha response as per reCaptcha docs
     * @return {?}
     */

  }, {
    key: "getResponse",
    value: function getResponse() {
      return this.reCaptchaApi.getResponse(this.captchaId);
    }
    /**
     * Gets Id of captcha widget
     * @return {?}
     */

  }, {
    key: "getCaptchaId",
    value: function getCaptchaId() {
      return this.captchaId;
    }
    /**
     * Resets captcha
     * @return {?}
     */

  }, {
    key: "resetCaptcha",
    value: function resetCaptcha() {
      var _this = this;

      this.zone.run(
      /**
      * @return {?}
      */
      function () {
        // reset captcha using Google js api
        _this.reCaptchaApi.reset(); // required due to forms


        _this.onChange(undefined);

        _this.onTouched(undefined); // trigger reset event


        _this.reset.next();
      });
    }
    /**
     * Gets last submitted captcha response
     * @return {?}
     */

  }, {
    key: "getCurrentResponse",
    value: function getCurrentResponse() {
      return this.currentResponse;
    }
    /**
     * Reload captcha. Useful when properties (i.e. theme) changed and captcha need to reflect them
     * @return {?}
     */

  }, {
    key: "reloadCaptcha",
    value: function reloadCaptcha() {
      this.setupComponent();
    }
    /**
     * @protected
     * @param {?} captchaElemId
     * @return {?}
     */

  }, {
    key: "ensureCaptchaElem",
    value: function ensureCaptchaElem(captchaElemId) {
      /** @type {?} */
      var captchaElem = document.getElementById(captchaElemId);

      if (!captchaElem) {
        throw Error("Captcha element with id '".concat(captchaElemId, "' was not found"));
      } // assign captcha alem


      this.captchaElem = captchaElem;
    }
    /**
     * Responsible for instantiating captcha element
     * @protected
     * @return {?}
     */

  }, {
    key: "renderReCaptcha",
    value: function renderReCaptcha() {
      var _this2 = this;

      // run outside angular zone due to timeout issues when testing
      // details: https://github.com/Enngage/ngx-captcha/issues/26
      this.zone.runOutsideAngular(
      /**
      * @return {?}
      */
      function () {
        _this2.captchaId = _this2.reCaptchaApi.render(_this2.captchaElemId, _this2.getCaptchaProperties());

        _this2.ready.next();
      });
    }
    /**
     * Called when captcha receives response
     * @protected
     * @param {?} callback Callback
     * @return {?}
     */

  }, {
    key: "handleCallback",
    value: function handleCallback(callback) {
      var _this3 = this;

      this.currentResponse = callback;
      this.success.next(callback);
      this.zone.run(
      /**
      * @return {?}
      */
      function () {
        _this3.onChange(callback);

        _this3.onTouched(callback);
      });

      if (this.resetCaptchaAfterSuccess) {
        this.resetCaptcha();
      }
    }
    /**
     * @private
     * @return {?}
     */

  }, {
    key: "getPseudoUniqueNumber",
    value: function getPseudoUniqueNumber() {
      return new Date().getUTCMilliseconds() + Math.floor(Math.random() * 9999);
    }
    /**
     * @private
     * @return {?}
     */

  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this4 = this;

      // captcha specific setup
      this.captchaSpecificSetup(); // create captcha wrapper

      this.createAndSetCaptchaElem();
      this.scriptService.registerCaptchaScript(this.useGlobalDomain, 'explicit',
      /**
      * @param {?} grecaptcha
      * @return {?}
      */
      function (grecaptcha) {
        _this4.onloadCallback(grecaptcha);
      }, this.hl);
    }
    /**
     * Called when google's recaptcha script is ready
     * @private
     * @param {?} grecapcha
     * @return {?}
     */

  }, {
    key: "onloadCallback",
    value: function onloadCallback(grecapcha) {
      // assign reference to reCaptcha Api once its loaded
      this.reCaptchaApi = grecapcha;

      if (!this.reCaptchaApi) {
        throw Error("ReCaptcha Api was not initialized correctly");
      } // loaded flag


      this.isLoaded = true; // fire load event

      this.load.next(); // render captcha

      this.renderReCaptcha(); // setup component if it was flagged as such

      if (this.setupAfterLoad) {
        this.setupAfterLoad = false;
        this.setupComponent();
      }
    }
    /**
     * @private
     * @return {?}
     */

  }, {
    key: "generateNewElemId",
    value: function generateNewElemId() {
      return this.captchaElemPrefix + this.getPseudoUniqueNumber();
    }
    /**
     * @private
     * @return {?}
     */

  }, {
    key: "createAndSetCaptchaElem",
    value: function createAndSetCaptchaElem() {
      // generate new captcha id
      this.captchaElemId = this.generateNewElemId();

      if (!this.captchaElemId) {
        throw Error("Captcha elem Id is not set");
      }

      if (!this.captchaWrapperElem) {
        throw Error("Captcha DOM element is not initialized");
      } // remove old html


      this.captchaWrapperElem.nativeElement.innerHTML = ''; // create new wrapper for captcha

      /** @type {?} */

      var newElem = this.renderer.createElement('div');
      newElem.id = this.captchaElemId;
      this.renderer.appendChild(this.captchaWrapperElem.nativeElement, newElem); // update captcha elem

      this.ensureCaptchaElem(this.captchaElemId);
    }
    /**
     * To be aligned with the ControlValueAccessor interface we need to implement this method
     * However as we don't want to update the recaptcha, this doesn't need to be implemented
     * @param {?} obj
     * @return {?}
     */

  }, {
    key: "writeValue",
    value: function writeValue(obj) {}
    /**
     * This method helps us tie together recaptcha and our formControl values
     * @param {?} fn
     * @return {?}
     */

  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this.onChange = fn;
    }
    /**
     * At some point we might be interested whether the user has touched our component
     * @param {?} fn
     * @return {?}
     */

  }, {
    key: "registerOnTouched",
    value: function registerOnTouched(fn) {
      this.onTouched = fn;
    }
    /**
     * Handles error callback
     * @protected
     * @return {?}
     */

  }, {
    key: "handleErrorCallback",
    value: function handleErrorCallback() {
      var _this5 = this;

      this.zone.run(
      /**
      * @return {?}
      */
      function () {
        _this5.onChange(undefined);

        _this5.onTouched(undefined);
      });
      this.error.next();
    }
    /**
     * Handles expired callback
     * @protected
     * @return {?}
     */

  }, {
    key: "handleExpireCallback",
    value: function handleExpireCallback() {
      this.expire.next(); // reset captcha on expire callback

      this.resetCaptcha();
    }
  }]);

  return BaseReCaptchaComponent;
}();

BaseReCaptchaComponent.ɵfac = function BaseReCaptchaComponent_Factory(t) {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinvalidFactory"]();
};

BaseReCaptchaComponent.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: BaseReCaptchaComponent,
  inputs: {
    useGlobalDomain: "useGlobalDomain",
    type: "type",
    tabIndex: "tabIndex",
    siteKey: "siteKey",
    hl: "hl"
  },
  outputs: {
    success: "success",
    load: "load",
    reset: "reset",
    ready: "ready",
    error: "error",
    expire: "expire"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]]
});
BaseReCaptchaComponent.propDecorators = {
  siteKey: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  useGlobalDomain: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  type: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  hl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  tabIndex: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  success: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  load: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  reset: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  ready: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  error: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  expire: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }]
};

if (false) {}
/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/recaptcha-type.enum.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/** @enum {number} */


var ReCaptchaType = {
  InvisibleReCaptcha: 0,
  ReCaptcha2: 1
};
ReCaptchaType[ReCaptchaType.InvisibleReCaptcha] = 'InvisibleReCaptcha';
ReCaptchaType[ReCaptchaType.ReCaptcha2] = 'ReCaptcha2';
/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/script.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

var ScriptService = /*#__PURE__*/function () {
  /**
   * @param {?} zone
   */
  function ScriptService(zone) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, ScriptService);

    this.zone = zone;
    /**
     * Name of the global google recaptcha script
     */

    this.windowGrecaptcha = 'grecaptcha';
    /**
     * Name of the global callback
     */

    this.windowOnLoadCallbackProperty = 'ngx_captcha_onload_callback';
    this.globalDomain = 'recaptcha.net';
    this.defaultDomain = 'google.com';
  }
  /**
   * @param {?} useGlobalDomain
   * @param {?} render
   * @param {?} onLoad
   * @param {?=} language
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ScriptService, [{
    key: "registerCaptchaScript",
    value: function registerCaptchaScript(useGlobalDomain, render, onLoad, language) {
      var _this6 = this;

      if (this.grecaptchaScriptLoaded()) {
        // recaptcha script is already loaded
        // just call the callback
        this.zone.run(
        /**
        * @return {?}
        */
        function () {
          onLoad(window[_this6.windowGrecaptcha]);
        });
        return;
      } // we need to patch the callback through global variable, otherwise callback is not accessible
      // note: https://github.com/Enngage/ngx-captcha/issues/2


      window[this.windowOnLoadCallbackProperty] =
      /** @type {?} */

      /**
      * @return {?}
      */
      function () {
        return _this6.zone.run(onLoad.bind(_this6, window[_this6.windowGrecaptcha]));
      }; // prepare script elem

      /** @type {?} */


      var scriptElem = document.createElement('script');
      scriptElem.innerHTML = '';
      scriptElem.src = this.getCaptchaScriptUrl(useGlobalDomain, render, language);
      scriptElem.async = true;
      scriptElem.defer = true; // add script to header

      document.getElementsByTagName('head')[0].appendChild(scriptElem);
    }
    /**
     * @return {?}
     */

  }, {
    key: "cleanup",
    value: function cleanup() {
      window[this.windowOnLoadCallbackProperty] = undefined;
      window[this.windowGrecaptcha] = undefined;
    }
    /**
     * Indicates if google recaptcha script is available and ready to be used
     * @private
     * @return {?}
     */

  }, {
    key: "grecaptchaScriptLoaded",
    value: function grecaptchaScriptLoaded() {
      if (window[this.windowOnLoadCallbackProperty] && window[this.windowGrecaptcha]) {
        return true;
      }

      return false;
    }
    /**
     * Gets language param used in script url
     * @private
     * @param {?=} hl
     * @return {?}
     */

  }, {
    key: "getLanguageParam",
    value: function getLanguageParam(hl) {
      if (!hl) {
        return '';
      }

      return "&hl=".concat(hl);
    }
    /**
     * Url to google api script
     * @private
     * @param {?} useGlobalDomain
     * @param {?} render
     * @param {?=} language
     * @return {?}
     */

  }, {
    key: "getCaptchaScriptUrl",
    value: function getCaptchaScriptUrl(useGlobalDomain, render, language) {
      /** @type {?} */
      var domain = useGlobalDomain ? this.globalDomain : this.defaultDomain; // tslint:disable-next-line:max-line-length

      return "https://www.".concat(domain, "/recaptcha/api.js?onload=").concat(this.windowOnLoadCallbackProperty, "&render=").concat(render).concat(this.getLanguageParam(language));
    }
  }]);

  return ScriptService;
}();

ScriptService.ɵfac = function ScriptService_Factory(t) {
  return new (t || ScriptService)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]));
};

ScriptService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: ScriptService,
  factory: ScriptService.ɵfac
});
/** @nocollapse */

ScriptService.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](ScriptService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
    }];
  }, null);
})();

if (false) {}
/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/invisible-recaptcha.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var InvisibleReCaptchaComponent = /*#__PURE__*/function (_BaseReCaptchaCompone) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(InvisibleReCaptchaComponent, _BaseReCaptchaCompone);

  var _super = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(InvisibleReCaptchaComponent);

  /**
   * @param {?} renderer
   * @param {?} zone
   * @param {?} injector
   * @param {?} scriptService
   */
  function InvisibleReCaptchaComponent(renderer, zone, injector, scriptService) {
    var _this7;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, InvisibleReCaptchaComponent);

    _this7 = _super.call(this, renderer, zone, injector, scriptService);
    _this7.renderer = renderer;
    _this7.zone = zone;
    _this7.injector = injector;
    _this7.scriptService = scriptService;
    /**
     * This size representing invisible captcha
     */

    _this7.size = 'invisible';
    /**
     * Theme
     */

    _this7.theme = 'light';
    /**
     * Badge
     */

    _this7.badge = 'bottomright';
    _this7.recaptchaType = ReCaptchaType.InvisibleReCaptcha;
    return _this7;
  }
  /**
   * @param {?} changes
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(InvisibleReCaptchaComponent, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(InvisibleReCaptchaComponent.prototype), "ngOnChanges", this).call(this, changes);
    }
    /**
     * Programatically invoke the reCAPTCHA check. Used if the invisible reCAPTCHA is on a div instead of a button.
     * @return {?}
     */

  }, {
    key: "execute",
    value: function execute() {
      var _this8 = this;

      // execute captcha
      this.zone.runOutsideAngular(
      /**
      * @return {?}
      */
      function () {
        return _this8.reCaptchaApi.execute(_this8.captchaId);
      });
    }
    /**
     * @protected
     * @return {?}
     */

  }, {
    key: "captchaSpecificSetup",
    value: function captchaSpecificSetup() {}
    /**
     * Gets reCaptcha properties
     * @protected
     * @return {?}
     */

  }, {
    key: "getCaptchaProperties",
    value: function getCaptchaProperties() {
      var _this9 = this;

      return {
        'sitekey': this.siteKey,
        'callback':
        /**
        * @param {?} response
        * @return {?}
        */
        function callback(response) {
          return _this9.zone.run(
          /**
          * @return {?}
          */
          function () {
            return _this9.handleCallback(response);
          });
        },
        'expired-callback':
        /**
        * @return {?}
        */
        function expiredCallback() {
          return _this9.zone.run(
          /**
          * @return {?}
          */
          function () {
            return _this9.handleExpireCallback();
          });
        },
        'error-callback':
        /**
        * @return {?}
        */
        function errorCallback() {
          return _this9.zone.run(
          /**
          * @return {?}
          */
          function () {
            return _this9.handleErrorCallback();
          });
        },
        'badge': this.badge,
        'type': this.type,
        'tabindex': this.tabIndex,
        'size': this.size,
        'theme': this.theme
      };
    }
  }]);

  return InvisibleReCaptchaComponent;
}(BaseReCaptchaComponent);

InvisibleReCaptchaComponent.ɵfac = function InvisibleReCaptchaComponent_Factory(t) {
  return new (t || InvisibleReCaptchaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](ScriptService));
};

InvisibleReCaptchaComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: InvisibleReCaptchaComponent,
  selectors: [["ngx-invisible-recaptcha"]],
  viewQuery: function InvisibleReCaptchaComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.captchaWrapperElem = _t.first);
    }
  },
  inputs: {
    theme: "theme",
    badge: "badge",
    hl: "hl"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([{
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NG_VALUE_ACCESSOR"],
    useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["forwardRef"])(
    /**
    * @return {?}
    */
    function () {
      return InvisibleReCaptchaComponent;
    }),
    multi: true
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 0,
  consts: [["captchaWrapperElem", ""]],
  template: function InvisibleReCaptchaComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "div", null, 0);
    }
  },
  encapsulation: 2
});
/** @nocollapse */

InvisibleReCaptchaComponent.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]
  }, {
    type: ScriptService
  }];
};

InvisibleReCaptchaComponent.propDecorators = {
  theme: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  badge: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  hl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  captchaWrapperElem: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
    args: ['captchaWrapperElem', {
      static: false
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](InvisibleReCaptchaComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: 'ngx-invisible-recaptcha',
      template: "\n  <div #captchaWrapperElem></div>",
      providers: [{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NG_VALUE_ACCESSOR"],
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["forwardRef"])(
        /**
        * @return {?}
        */
        function () {
          return InvisibleReCaptchaComponent;
        }),
        multi: true
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]
    }, {
      type: ScriptService
    }];
  }, {
    theme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    badge: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    hl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    captchaWrapperElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
      args: ['captchaWrapperElem', {
        static: false
      }]
    }]
  });
})();

if (false) {}
/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/recaptcha-2.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var ReCaptcha2Component = /*#__PURE__*/function (_BaseReCaptchaCompone2) {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(ReCaptcha2Component, _BaseReCaptchaCompone2);

  var _super2 = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(ReCaptcha2Component);

  /**
   * @param {?} renderer
   * @param {?} zone
   * @param {?} injector
   * @param {?} scriptService
   */
  function ReCaptcha2Component(renderer, zone, injector, scriptService) {
    var _this10;

    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, ReCaptcha2Component);

    _this10 = _super2.call(this, renderer, zone, injector, scriptService);
    _this10.renderer = renderer;
    _this10.zone = zone;
    _this10.injector = injector;
    _this10.scriptService = scriptService;
    /**
     * Name of the global expire callback
     */

    _this10.windowOnErrorCallbackProperty = 'ngx_captcha_error_callback';
    /**
     * Name of the global error callback
     */

    _this10.windowOnExpireCallbackProperty = 'ngx_captcha_expire_callback';
    /**
     * Theme
     */

    _this10.theme = 'light';
    /**
     * Size
     */

    _this10.size = 'normal';
    _this10.recaptchaType = ReCaptchaType.ReCaptcha2;
    return _this10;
  }
  /**
   * @param {?} changes
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ReCaptcha2Component, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ReCaptcha2Component.prototype), "ngOnChanges", this).call(this, changes);
    }
    /**
     * @return {?}
     */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      window[this.windowOnErrorCallbackProperty] = {};
      window[this.windowOnExpireCallbackProperty] = {};
    }
    /**
     * @protected
     * @return {?}
     */

  }, {
    key: "captchaSpecificSetup",
    value: function captchaSpecificSetup() {
      this.registerCallbacks();
    }
    /**
     * Gets reCaptcha properties
     * @protected
     * @return {?}
     */

  }, {
    key: "getCaptchaProperties",
    value: function getCaptchaProperties() {
      var _this11 = this;

      return {
        'sitekey': this.siteKey,
        'callback':
        /**
        * @param {?} response
        * @return {?}
        */
        function callback(response) {
          return _this11.zone.run(
          /**
          * @return {?}
          */
          function () {
            return _this11.handleCallback(response);
          });
        },
        'expired-callback':
        /**
        * @return {?}
        */
        function expiredCallback() {
          return _this11.zone.run(
          /**
          * @return {?}
          */
          function () {
            return _this11.handleExpireCallback();
          });
        },
        'error-callback':
        /**
        * @return {?}
        */
        function errorCallback() {
          return _this11.zone.run(
          /**
          * @return {?}
          */
          function () {
            return _this11.handleErrorCallback();
          });
        },
        'theme': this.theme,
        'type': this.type,
        'size': this.size,
        'tabindex': this.tabIndex
      };
    }
    /**
     * Registers global callbacks
     * @private
     * @return {?}
     */

  }, {
    key: "registerCallbacks",
    value: function registerCallbacks() {
      window[this.windowOnErrorCallbackProperty] = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ReCaptcha2Component.prototype), "handleErrorCallback", this).bind(this);
      window[this.windowOnExpireCallbackProperty] = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(ReCaptcha2Component.prototype), "handleExpireCallback", this).bind(this);
    }
  }]);

  return ReCaptcha2Component;
}(BaseReCaptchaComponent);

ReCaptcha2Component.ɵfac = function ReCaptcha2Component_Factory(t) {
  return new (t || ReCaptcha2Component)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](ScriptService));
};

ReCaptcha2Component.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: ReCaptcha2Component,
  selectors: [["ngx-recaptcha2"]],
  viewQuery: function ReCaptcha2Component_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.captchaWrapperElem = _t.first);
    }
  },
  inputs: {
    theme: "theme",
    size: "size",
    hl: "hl"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([{
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NG_VALUE_ACCESSOR"],
    useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["forwardRef"])(
    /**
    * @return {?}
    */
    function () {
      return ReCaptcha2Component;
    }),
    multi: true
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 0,
  consts: [["captchaWrapperElem", ""]],
  template: function ReCaptcha2Component_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "div", null, 0);
    }
  },
  encapsulation: 2
});
/** @nocollapse */

ReCaptcha2Component.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]
  }, {
    type: ScriptService
  }];
};

ReCaptcha2Component.propDecorators = {
  theme: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  size: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  hl: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  captchaWrapperElem: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
    args: ['captchaWrapperElem', {
      static: false
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](ReCaptcha2Component, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: 'ngx-recaptcha2',
      template: "\n  <div #captchaWrapperElem></div>",
      providers: [{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NG_VALUE_ACCESSOR"],
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["forwardRef"])(
        /**
        * @return {?}
        */
        function () {
          return ReCaptcha2Component;
        }),
        multi: true
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Renderer2"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]
    }, {
      type: ScriptService
    }];
  }, {
    theme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    size: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    hl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    captchaWrapperElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
      args: ['captchaWrapperElem', {
        static: false
      }]
    }]
  });
})();

if (false) {}
/**
 * @fileoverview added by tsickle
 * Generated from: lib/services/recaptcha_v3.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var ReCaptchaV3Service = /*#__PURE__*/function () {
  /**
   * @param {?} scriptService
   * @param {?} zone
   */
  function ReCaptchaV3Service(scriptService, zone) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, ReCaptchaV3Service);

    this.scriptService = scriptService;
    this.zone = zone;
  }
  /**
   * Executes reCaptcha v3 with given action and passes token via callback. You need to verify
   * this callback in your backend to get meaningful results.
   *
   * For more information see https://developers.google.com/recaptcha/docs/v3
   *
   * @param {?} siteKey Site key found in your google admin panel
   * @param {?} action Action to log
   * @param {?} callback
   * @param {?=} config
   * @return {?}
   */


  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ReCaptchaV3Service, [{
    key: "execute",
    value: function execute(siteKey, action, callback, config) {
      this.executeAsPromise(siteKey, action, config).then(callback);
    }
    /**
     * Executes reCaptcha v3 with given action and returns token via Promise. You need to verify
     * this token in your backend to get meaningful results.
     *
     * For more information see https://developers.google.com/recaptcha/docs/v3
     *
     * @param {?} siteKey Site key found in your google admin panel
     * @param {?} action Action to log
     * @param {?=} config
     * @return {?}
     */

  }, {
    key: "executeAsPromise",
    value: function executeAsPromise(siteKey, action, config) {
      var _this12 = this;

      return new Promise(
      /**
      * @param {?} resolve
      * @param {?} reject
      * @return {?}
      */
      function (resolve, reject) {
        /** @type {?} */
        var useGlobalDomain = config && config.useGlobalDomain ? true : false;
        /** @type {?} */

        var onRegister =
        /**
        * @param {?} grecaptcha
        * @return {?}
        */
        function onRegister(grecaptcha) {
          _this12.zone.runOutsideAngular(
          /**
          * @return {?}
          */
          function () {
            try {
              grecaptcha.execute(siteKey, {
                action: action
              }).then(
              /**
              * @param {?} token
              * @return {?}
              */
              function (token) {
                return _this12.zone.run(
                /**
                * @return {?}
                */
                function () {
                  return resolve(token);
                });
              });
            } catch (error) {
              reject(error);
            }
          });
        };

        _this12.scriptService.registerCaptchaScript(useGlobalDomain, siteKey, onRegister);
      });
    }
  }]);

  return ReCaptchaV3Service;
}();

ReCaptchaV3Service.ɵfac = function ReCaptchaV3Service_Factory(t) {
  return new (t || ReCaptchaV3Service)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](ScriptService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]));
};

ReCaptchaV3Service.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: ReCaptchaV3Service,
  factory: ReCaptchaV3Service.ɵfac
});
/** @nocollapse */

ReCaptchaV3Service.ctorParameters = function () {
  return [{
    type: ScriptService
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](ReCaptchaV3Service, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [{
      type: ScriptService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
    }];
  }, null);
})();

if (false) {}
/**
 * @fileoverview added by tsickle
 * Generated from: lib/ngx-captcha.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */


var NgxCaptchaModule = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(function NgxCaptchaModule() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, NgxCaptchaModule);
});

NgxCaptchaModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: NgxCaptchaModule
});
NgxCaptchaModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  factory: function NgxCaptchaModule_Factory(t) {
    return new (t || NgxCaptchaModule)();
  },
  providers: [ScriptService, ReCaptchaV3Service],
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_8__["CommonModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](NgxCaptchaModule, {
    declarations: function declarations() {
      return [ReCaptcha2Component, InvisibleReCaptchaComponent];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_8__["CommonModule"]];
    },
    exports: function exports() {
      return [ReCaptcha2Component, InvisibleReCaptchaComponent];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](NgxCaptchaModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__["CommonModule"]],
      declarations: [ReCaptcha2Component, InvisibleReCaptchaComponent],
      providers: [ScriptService, ReCaptchaV3Service],
      exports: [ReCaptcha2Component, InvisibleReCaptchaComponent]
    }]
  }], null, null);
})();
/**
 * @fileoverview added by tsickle
 * Generated from: lib/index.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: public_api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: ngx-captcha.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */




/***/ }),

/***/ "./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-dom.js":
/*!*******************************************************************!*\
  !*** ./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-dom.js ***!
  \*******************************************************************/
/*! exports provided: DomHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DomHandler", function() { return DomHandler; });
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");




/**
 * @dynamic is for runtime initializing DomHandler.browser
 *
 * If delete below comment, we can see this error message:
 *  Metadata collected contains an error that will be reported at runtime:
 *  Only initialized variables and constants can be referenced
 *  because the value of this variable is needed by the template compiler.
 */
// @dynamic
var DomHandler = /*#__PURE__*/function () {
  function DomHandler() {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, DomHandler);
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(DomHandler, null, [{
    key: "addClass",
    value: function addClass(element, className) {
      if (element.classList) element.classList.add(className);else element.className += ' ' + className;
    }
  }, {
    key: "addMultipleClasses",
    value: function addMultipleClasses(element, className) {
      if (element.classList) {
        var styles = className.split(' ');

        for (var i = 0; i < styles.length; i++) {
          element.classList.add(styles[i]);
        }
      } else {
        var _styles = className.split(' ');

        for (var _i = 0; _i < _styles.length; _i++) {
          element.className += ' ' + _styles[_i];
        }
      }
    }
  }, {
    key: "removeClass",
    value: function removeClass(element, className) {
      if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
    }
  }, {
    key: "hasClass",
    value: function hasClass(element, className) {
      if (element.classList) return element.classList.contains(className);else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);
    }
  }, {
    key: "siblings",
    value: function siblings(element) {
      return Array.prototype.filter.call(element.parentNode.children, function (child) {
        return child !== element;
      });
    }
  }, {
    key: "find",
    value: function find(element, selector) {
      return Array.from(element.querySelectorAll(selector));
    }
  }, {
    key: "findSingle",
    value: function findSingle(element, selector) {
      if (element) {
        return element.querySelector(selector);
      }

      return null;
    }
  }, {
    key: "index",
    value: function index(element) {
      var children = element.parentNode.childNodes;
      var num = 0;

      for (var i = 0; i < children.length; i++) {
        if (children[i] == element) return num;
        if (children[i].nodeType == 1) num++;
      }

      return -1;
    }
  }, {
    key: "indexWithinGroup",
    value: function indexWithinGroup(element, attributeName) {
      var children = element.parentNode ? element.parentNode.childNodes : [];
      var num = 0;

      for (var i = 0; i < children.length; i++) {
        if (children[i] == element) return num;
        if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1) num++;
      }

      return -1;
    }
  }, {
    key: "relativePosition",
    value: function relativePosition(element, target) {
      var elementDimensions = element.offsetParent ? {
        width: element.offsetWidth,
        height: element.offsetHeight
      } : this.getHiddenElementDimensions(element);
      var targetHeight = target.offsetHeight;
      var targetOffset = target.getBoundingClientRect();
      var viewport = this.getViewport();
      var top, left;

      if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {
        top = -1 * elementDimensions.height;

        if (targetOffset.top + top < 0) {
          top = -1 * targetOffset.top;
        }
      } else {
        top = targetHeight;
      }

      if (elementDimensions.width > viewport.width) {
        // element wider then viewport and cannot fit on screen (align at left side of viewport)
        left = targetOffset.left * -1;
      } else if (targetOffset.left + elementDimensions.width > viewport.width) {
        // element wider then viewport but can be fit on screen (align at right side of viewport)
        left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;
      } else {
        // element fits on screen (align with target)
        left = 0;
      }

      element.style.top = top + 'px';
      element.style.left = left + 'px';
    }
  }, {
    key: "absolutePosition",
    value: function absolutePosition(element, target) {
      var elementDimensions = element.offsetParent ? {
        width: element.offsetWidth,
        height: element.offsetHeight
      } : this.getHiddenElementDimensions(element);
      var elementOuterHeight = elementDimensions.height;
      var elementOuterWidth = elementDimensions.width;
      var targetOuterHeight = target.offsetHeight;
      var targetOuterWidth = target.offsetWidth;
      var targetOffset = target.getBoundingClientRect();
      var windowScrollTop = this.getWindowScrollTop();
      var windowScrollLeft = this.getWindowScrollLeft();
      var viewport = this.getViewport();
      var top, left;

      if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {
        top = targetOffset.top + windowScrollTop - elementOuterHeight;

        if (top < 0) {
          top = windowScrollTop;
        }
      } else {
        top = targetOuterHeight + targetOffset.top + windowScrollTop;
      }

      if (targetOffset.left + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);else left = targetOffset.left + windowScrollLeft;
      element.style.top = top + 'px';
      element.style.left = left + 'px';
    }
  }, {
    key: "getHiddenElementOuterHeight",
    value: function getHiddenElementOuterHeight(element) {
      element.style.visibility = 'hidden';
      element.style.display = 'block';
      var elementHeight = element.offsetHeight;
      element.style.display = 'none';
      element.style.visibility = 'visible';
      return elementHeight;
    }
  }, {
    key: "getHiddenElementOuterWidth",
    value: function getHiddenElementOuterWidth(element) {
      element.style.visibility = 'hidden';
      element.style.display = 'block';
      var elementWidth = element.offsetWidth;
      element.style.display = 'none';
      element.style.visibility = 'visible';
      return elementWidth;
    }
  }, {
    key: "getHiddenElementDimensions",
    value: function getHiddenElementDimensions(element) {
      var dimensions = {};
      element.style.visibility = 'hidden';
      element.style.display = 'block';
      dimensions.width = element.offsetWidth;
      dimensions.height = element.offsetHeight;
      element.style.display = 'none';
      element.style.visibility = 'visible';
      return dimensions;
    }
  }, {
    key: "scrollInView",
    value: function scrollInView(container, item) {
      var borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');
      var borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;
      var paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');
      var paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;
      var containerRect = container.getBoundingClientRect();
      var itemRect = item.getBoundingClientRect();
      var offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;
      var scroll = container.scrollTop;
      var elementHeight = container.clientHeight;
      var itemHeight = this.getOuterHeight(item);

      if (offset < 0) {
        container.scrollTop = scroll + offset;
      } else if (offset + itemHeight > elementHeight) {
        container.scrollTop = scroll + offset - elementHeight + itemHeight;
      }
    }
  }, {
    key: "fadeIn",
    value: function fadeIn(element, duration) {
      element.style.opacity = 0;
      var last = +new Date();
      var opacity = 0;

      var tick = function tick() {
        opacity = +element.style.opacity.replace(",", ".") + (new Date().getTime() - last) / duration;
        element.style.opacity = opacity;
        last = +new Date();

        if (+opacity < 1) {
          window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);
        }
      };

      tick();
    }
  }, {
    key: "fadeOut",
    value: function fadeOut(element, ms) {
      var opacity = 1,
          interval = 50,
          duration = ms,
          gap = interval / duration;
      var fading = setInterval(function () {
        opacity = opacity - gap;

        if (opacity <= 0) {
          opacity = 0;
          clearInterval(fading);
        }

        element.style.opacity = opacity;
      }, interval);
    }
  }, {
    key: "getWindowScrollTop",
    value: function getWindowScrollTop() {
      var doc = document.documentElement;
      return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);
    }
  }, {
    key: "getWindowScrollLeft",
    value: function getWindowScrollLeft() {
      var doc = document.documentElement;
      return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);
    }
  }, {
    key: "matches",
    value: function matches(element, selector) {
      var p = Element.prototype;

      var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {
        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
      };

      return f.call(element, selector);
    }
  }, {
    key: "getOuterWidth",
    value: function getOuterWidth(el, margin) {
      var width = el.offsetWidth;

      if (margin) {
        var style = getComputedStyle(el);
        width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);
      }

      return width;
    }
  }, {
    key: "getHorizontalPadding",
    value: function getHorizontalPadding(el) {
      var style = getComputedStyle(el);
      return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
    }
  }, {
    key: "getHorizontalMargin",
    value: function getHorizontalMargin(el) {
      var style = getComputedStyle(el);
      return parseFloat(style.marginLeft) + parseFloat(style.marginRight);
    }
  }, {
    key: "innerWidth",
    value: function innerWidth(el) {
      var width = el.offsetWidth;
      var style = getComputedStyle(el);
      width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
      return width;
    }
  }, {
    key: "width",
    value: function width(el) {
      var width = el.offsetWidth;
      var style = getComputedStyle(el);
      width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
      return width;
    }
  }, {
    key: "getInnerHeight",
    value: function getInnerHeight(el) {
      var height = el.offsetHeight;
      var style = getComputedStyle(el);
      height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);
      return height;
    }
  }, {
    key: "getOuterHeight",
    value: function getOuterHeight(el, margin) {
      var height = el.offsetHeight;

      if (margin) {
        var style = getComputedStyle(el);
        height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);
      }

      return height;
    }
  }, {
    key: "getHeight",
    value: function getHeight(el) {
      var height = el.offsetHeight;
      var style = getComputedStyle(el);
      height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
      return height;
    }
  }, {
    key: "getWidth",
    value: function getWidth(el) {
      var width = el.offsetWidth;
      var style = getComputedStyle(el);
      width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);
      return width;
    }
  }, {
    key: "getViewport",
    value: function getViewport() {
      var win = window,
          d = document,
          e = d.documentElement,
          g = d.getElementsByTagName('body')[0],
          w = win.innerWidth || e.clientWidth || g.clientWidth,
          h = win.innerHeight || e.clientHeight || g.clientHeight;
      return {
        width: w,
        height: h
      };
    }
  }, {
    key: "getOffset",
    value: function getOffset(el) {
      var rect = el.getBoundingClientRect();
      return {
        top: rect.top + document.body.scrollTop,
        left: rect.left + document.body.scrollLeft
      };
    }
  }, {
    key: "replaceElementWith",
    value: function replaceElementWith(element, replacementElement) {
      var parentNode = element.parentNode;
      if (!parentNode) throw "Can't replace element";
      return parentNode.replaceChild(replacementElement, element);
    }
  }, {
    key: "getUserAgent",
    value: function getUserAgent() {
      return navigator.userAgent;
    }
  }, {
    key: "isIE",
    value: function isIE() {
      var ua = window.navigator.userAgent;
      var msie = ua.indexOf('MSIE ');

      if (msie > 0) {
        // IE 10 or older => return version number
        return true;
      }

      var trident = ua.indexOf('Trident/');

      if (trident > 0) {
        // IE 11 => return version number
        var rv = ua.indexOf('rv:');
        return true;
      }

      var edge = ua.indexOf('Edge/');

      if (edge > 0) {
        // Edge (IE 12+) => return version number
        return true;
      } // other browser


      return false;
    }
  }, {
    key: "isIOS",
    value: function isIOS() {
      return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];
    }
  }, {
    key: "isAndroid",
    value: function isAndroid() {
      return /(android)/i.test(navigator.userAgent);
    }
  }, {
    key: "appendChild",
    value: function appendChild(element, target) {
      if (this.isElement(target)) target.appendChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.appendChild(element);else throw 'Cannot append ' + target + ' to ' + element;
    }
  }, {
    key: "removeChild",
    value: function removeChild(element, target) {
      if (this.isElement(target)) target.removeChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.removeChild(element);else throw 'Cannot remove ' + element + ' from ' + target;
    }
  }, {
    key: "isElement",
    value: function isElement(obj) {
      return typeof HTMLElement === "object" ? obj instanceof HTMLElement : obj && typeof obj === "object" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === "string";
    }
  }, {
    key: "calculateScrollbarWidth",
    value: function calculateScrollbarWidth(el) {
      if (el) {
        var style = getComputedStyle(el);
        return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);
      } else {
        if (this.calculatedScrollbarWidth !== null) return this.calculatedScrollbarWidth;
        var scrollDiv = document.createElement("div");
        scrollDiv.className = "ui-scrollbar-measure";
        document.body.appendChild(scrollDiv);
        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        document.body.removeChild(scrollDiv);
        this.calculatedScrollbarWidth = scrollbarWidth;
        return scrollbarWidth;
      }
    }
  }, {
    key: "calculateScrollbarHeight",
    value: function calculateScrollbarHeight() {
      if (this.calculatedScrollbarHeight !== null) return this.calculatedScrollbarHeight;
      var scrollDiv = document.createElement("div");
      scrollDiv.className = "ui-scrollbar-measure";
      document.body.appendChild(scrollDiv);
      var scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;
      document.body.removeChild(scrollDiv);
      this.calculatedScrollbarWidth = scrollbarHeight;
      return scrollbarHeight;
    }
  }, {
    key: "invokeElementMethod",
    value: function invokeElementMethod(element, methodName, args) {
      element[methodName].apply(element, args);
    }
  }, {
    key: "clearSelection",
    value: function clearSelection() {
      if (window.getSelection) {
        if (window.getSelection().empty) {
          window.getSelection().empty();
        } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {
          window.getSelection().removeAllRanges();
        }
      } else if (document['selection'] && document['selection'].empty) {
        try {
          document['selection'].empty();
        } catch (error) {//ignore IE bug
        }
      }
    }
  }, {
    key: "getBrowser",
    value: function getBrowser() {
      if (!this.browser) {
        var matched = this.resolveUserAgent();
        this.browser = {};

        if (matched.browser) {
          this.browser[matched.browser] = true;
          this.browser['version'] = matched.version;
        }

        if (this.browser['chrome']) {
          this.browser['webkit'] = true;
        } else if (this.browser['webkit']) {
          this.browser['safari'] = true;
        }
      }

      return this.browser;
    }
  }, {
    key: "resolveUserAgent",
    value: function resolveUserAgent() {
      var ua = navigator.userAgent.toLowerCase();
      var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
      return {
        browser: match[1] || "",
        version: match[2] || "0"
      };
    }
  }, {
    key: "isInteger",
    value: function isInteger(value) {
      if (Number.isInteger) {
        return Number.isInteger(value);
      } else {
        return typeof value === "number" && isFinite(value) && Math.floor(value) === value;
      }
    }
  }, {
    key: "isHidden",
    value: function isHidden(element) {
      return element.offsetParent === null;
    }
  }, {
    key: "getFocusableElements",
    value: function getFocusableElements(element) {
      var focusableElements = DomHandler.find(element, "button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), \n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), \n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), \n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), \n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])");
      var visibleFocusableElements = [];

      var _iterator = Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(focusableElements),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var focusableElement = _step.value;
          if (getComputedStyle(focusableElement).display != "none" && getComputedStyle(focusableElement).visibility != "hidden") visibleFocusableElements.push(focusableElement);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return visibleFocusableElements;
    }
  }]);

  return DomHandler;
}();

DomHandler.zindex = 1000;
DomHandler.calculatedScrollbarWidth = null;
DomHandler.calculatedScrollbarHeight = null;
/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ "./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-password.js":
/*!************************************************************************!*\
  !*** ./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-password.js ***!
  \************************************************************************/
/*! exports provided: Password, PasswordModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Password", function() { return Password; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PasswordModule", function() { return PasswordModule; });
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime/helpers/esm/classCallCheck.js");
/* harmony import */ var M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "./node_modules/@babel/runtime/helpers/esm/createClass.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var primeng_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! primeng/dom */ "./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-dom.js");







var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var Password = /*#__PURE__*/function () {
  function Password(el, zone) {
    Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Password);

    this.el = el;
    this.zone = zone;
    this.promptLabel = 'Enter a password';
    this.weakLabel = 'Weak';
    this.mediumLabel = 'Medium';
    this.strongLabel = 'Strong';
    this.feedback = true;
  }

  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Password, [{
    key: "showPassword",
    set: function set(show) {
      this.el.nativeElement.type = show ? 'text' : 'password';
    }
  }, {
    key: "ngDoCheck",
    value: function ngDoCheck() {
      this.updateFilledState();
    } //To trigger change detection to manage ui-state-filled for material labels when there is no value binding

  }, {
    key: "onInput",
    value: function onInput(e) {
      this.updateFilledState();
    }
  }, {
    key: "updateFilledState",
    value: function updateFilledState() {
      this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;
    }
  }, {
    key: "createPanel",
    value: function createPanel() {
      this.panel = document.createElement('div');
      this.panel.className = 'ui-password-panel ui-widget ui-state-highlight ui-corner-all';
      this.meter = document.createElement('div');
      this.meter.className = 'ui-password-meter';
      this.info = document.createElement('div');
      this.info.className = 'ui-password-info';
      this.info.textContent = this.promptLabel;
      this.panel.appendChild(this.meter);
      this.panel.appendChild(this.info);
      this.panel.style.minWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getOuterWidth(this.el.nativeElement) + 'px';
      document.body.appendChild(this.panel);
    }
  }, {
    key: "onFocus",
    value: function onFocus(e) {
      var _this = this;

      if (this.feedback) {
        if (!this.panel) {
          this.createPanel();
        }

        this.panel.style.zIndex = String(++primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].zindex);
        this.zone.runOutsideAngular(function () {
          setTimeout(function () {
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(_this.panel, 'ui-password-panel-visible');
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(_this.panel, 'ui-password-panel-hidden');
          }, 1);
          primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].absolutePosition(_this.panel, _this.el.nativeElement);
        });
      }
    }
  }, {
    key: "onBlur",
    value: function onBlur(e) {
      var _this2 = this;

      if (this.feedback) {
        primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(this.panel, 'ui-password-panel-hidden');
        primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(this.panel, 'ui-password-panel-visible');
        this.zone.runOutsideAngular(function () {
          setTimeout(function () {
            _this2.ngOnDestroy();
          }, 150);
        });
      }
    }
  }, {
    key: "onKeyup",
    value: function onKeyup(e) {
      if (this.feedback) {
        var value = e.target.value,
            label = null,
            meterPos = null;

        if (value.length === 0) {
          label = this.promptLabel;
          meterPos = '0px 0px';
        } else {
          var score = this.testStrength(value);

          if (score < 30) {
            label = this.weakLabel;
            meterPos = '0px -10px';
          } else if (score >= 30 && score < 80) {
            label = this.mediumLabel;
            meterPos = '0px -20px';
          } else if (score >= 80) {
            label = this.strongLabel;
            meterPos = '0px -30px';
          }
        }

        this.meter.style.backgroundPosition = meterPos;
        this.info.textContent = label;
      }
    }
  }, {
    key: "testStrength",
    value: function testStrength(str) {
      var grade = 0;
      var val;
      val = str.match('[0-9]');
      grade += this.normalize(val ? val.length : 1 / 4, 1) * 25;
      val = str.match('[a-zA-Z]');
      grade += this.normalize(val ? val.length : 1 / 2, 3) * 10;
      val = str.match('[!@#$%^&*?_~.,;=]');
      grade += this.normalize(val ? val.length : 1 / 6, 1) * 35;
      val = str.match('[A-Z]');
      grade += this.normalize(val ? val.length : 1 / 6, 1) * 30;
      grade *= str.length / 8;
      return grade > 100 ? 100 : grade;
    }
  }, {
    key: "normalize",
    value: function normalize(x, y) {
      var diff = x - y;
      if (diff <= 0) return x / y;else return 1 + 0.5 * (x / (x + y / 4));
    }
  }, {
    key: "disabled",
    get: function get() {
      return this.el.nativeElement.disabled;
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this.panel) {
        document.body.removeChild(this.panel);
        this.panel = null;
        this.meter = null;
        this.info = null;
      }
    }
  }]);

  return Password;
}();

Password.ɵfac = function Password_Factory(t) {
  return new (t || Password)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]));
};

Password.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineDirective"]({
  type: Password,
  selectors: [["", "pPassword", ""]],
  hostVars: 10,
  hostBindings: function Password_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("input", function Password_input_HostBindingHandler($event) {
        return ctx.onInput($event);
      })("focus", function Password_focus_HostBindingHandler($event) {
        return ctx.onFocus($event);
      })("blur", function Password_blur_HostBindingHandler($event) {
        return ctx.onBlur($event);
      })("keyup", function Password_keyup_HostBindingHandler($event) {
        return ctx.onKeyup($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵclassProp"]("ui-inputtext", true)("ui-corner-all", true)("ui-state-default", true)("ui-widget", true)("ui-state-filled", ctx.filled);
    }
  },
  inputs: {
    promptLabel: "promptLabel",
    weakLabel: "weakLabel",
    mediumLabel: "mediumLabel",
    strongLabel: "strongLabel",
    feedback: "feedback",
    showPassword: "showPassword"
  }
});

Password.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]
  }];
};

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()], Password.prototype, "promptLabel", void 0);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()], Password.prototype, "weakLabel", void 0);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()], Password.prototype, "mediumLabel", void 0);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()], Password.prototype, "strongLabel", void 0);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()], Password.prototype, "feedback", void 0);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])()], Password.prototype, "showPassword", null);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["HostListener"])('input', ['$event'])], Password.prototype, "onInput", null);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["HostListener"])('focus', ['$event'])], Password.prototype, "onFocus", null);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["HostListener"])('blur', ['$event'])], Password.prototype, "onBlur", null);

__decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["HostListener"])('keyup', ['$event'])], Password.prototype, "onKeyup", null);

var PasswordModule = /*#__PURE__*/Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(function PasswordModule() {
  Object(M_repos_DeploySolutionsClimateChange_dss_ccip_proto_dev_ta_angular_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, PasswordModule);
});

PasswordModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: PasswordModule
});
PasswordModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  factory: function PasswordModule_Factory(t) {
    return new (t || PasswordModule)();
  },
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]]]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](Password, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Directive"],
    args: [{
      selector: '[pPassword]',
      host: {
        '[class.ui-inputtext]': 'true',
        '[class.ui-corner-all]': 'true',
        '[class.ui-state-default]': 'true',
        '[class.ui-widget]': 'true',
        '[class.ui-state-filled]': 'filled'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]
    }];
  }, {
    promptLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }],
    weakLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }],
    mediumLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }],
    strongLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }],
    feedback: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }],
    showPassword: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }],
    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding
    onInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["HostListener"],
      args: ['input', ['$event']]
    }],
    onFocus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["HostListener"],
      args: ['focus', ['$event']]
    }],
    onBlur: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["HostListener"],
      args: ['blur', ['$event']]
    }],
    onKeyup: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["HostListener"],
      args: ['keyup', ['$event']]
    }]
  });
})();

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](PasswordModule, {
    declarations: function declarations() {
      return [Password];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]];
    },
    exports: function exports() {
      return [Password];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](PasswordModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"]],
      exports: [Password],
      declarations: [Password]
    }]
  }], null, null);
})();
/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),

/***/ "./src/account/account-routing.module.ts":
/*!***********************************************!*\
  !*** ./src/account/account-routing.module.ts ***!
  \***********************************************/
/*! exports provided: AccountRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountRoutingModule", function() { return AccountRoutingModule; });
/* harmony import */ var _auth_reset_password_success_reset_password_success_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth/reset-password-success/reset-password-success.component */ "./src/account/auth/reset-password-success/reset-password-success.component.ts");
/* harmony import */ var _auth_choose_plan_choose_plan_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth/choose-plan/choose-plan.component */ "./src/account/auth/choose-plan/choose-plan.component.ts");
/* harmony import */ var _auth_new_password_success_new_password_success_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth/new-password-success/new-password-success.component */ "./src/account/auth/new-password-success/new-password-success.component.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _account_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./account.component */ "./src/account/account.component.ts");
/* harmony import */ var _auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./auth/guards/account-route-guard */ "./src/account/auth/guards/account-route-guard.ts");
/* harmony import */ var _auth_guards_new_password_guard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./auth/guards/new-password-guard */ "./src/account/auth/guards/new-password-guard.ts");
/* harmony import */ var _auth_login_login_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./auth/login/login.component */ "./src/account/auth/login/login.component.ts");
/* harmony import */ var _auth_new_password_new_password_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./auth/new-password/new-password.component */ "./src/account/auth/new-password/new-password.component.ts");
/* harmony import */ var _auth_register_register_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./auth/register/register.component */ "./src/account/auth/register/register.component.ts");
/* harmony import */ var _auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./auth/reset-password/reset-password.component */ "./src/account/auth/reset-password/reset-password.component.ts");
/* harmony import */ var _auth_signon_success_signon_success_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./auth/signon-success/signon-success.component */ "./src/account/auth/signon-success/signon-success.component.ts");















var AccountRoutingModule = /** @class */ (function () {
    function AccountRoutingModule() {
    }
    AccountRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({ type: AccountRoutingModule });
    AccountRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({ factory: function AccountRoutingModule_Factory(t) { return new (t || AccountRoutingModule)(); }, imports: [[
                _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"].forChild([
                    {
                        path: '',
                        component: _account_component__WEBPACK_IMPORTED_MODULE_5__["AccountComponent"],
                        children: [
                            { path: '', redirectTo: 'login' },
                            { path: 'login', component: _auth_login_login_component__WEBPACK_IMPORTED_MODULE_8__["LoginComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                            { path: 'login/:userId/:confirmationCode', component: _auth_login_login_component__WEBPACK_IMPORTED_MODULE_8__["LoginComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                            { path: 'register', component: _auth_register_register_component__WEBPACK_IMPORTED_MODULE_10__["RegisterComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                            { path: 'plans', component: _auth_choose_plan_choose_plan_component__WEBPACK_IMPORTED_MODULE_1__["ChoosePlanComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                            { path: 'signon-success', component: _auth_signon_success_signon_success_component__WEBPACK_IMPORTED_MODULE_12__["SignonSuccessComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                            { path: 'new-password-success', component: _auth_new_password_success_new_password_success_component__WEBPACK_IMPORTED_MODULE_2__["NewPasswordSuccessComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                            { path: 'reset-password', component: _auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_11__["ResetPasswordComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                            { path: 'reset-password-success', component: _auth_reset_password_success_reset_password_success_component__WEBPACK_IMPORTED_MODULE_0__["ResetPasswordSuccessComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                            { path: 'new-password/:userId/:passwordResetCode', component: _auth_new_password_new_password_component__WEBPACK_IMPORTED_MODULE_9__["NewPasswordComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"], _auth_guards_new_password_guard__WEBPACK_IMPORTED_MODULE_7__["NewPasswordGuard"]] },
                            { path: '**', redirectTo: 'login' }
                        ]
                    }
                ])
            ], _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"]] });
    return AccountRoutingModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵsetNgModuleScope"](AccountRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"]], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](AccountRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"],
        args: [{
                imports: [
                    _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"].forChild([
                        {
                            path: '',
                            component: _account_component__WEBPACK_IMPORTED_MODULE_5__["AccountComponent"],
                            children: [
                                { path: '', redirectTo: 'login' },
                                { path: 'login', component: _auth_login_login_component__WEBPACK_IMPORTED_MODULE_8__["LoginComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                                { path: 'login/:userId/:confirmationCode', component: _auth_login_login_component__WEBPACK_IMPORTED_MODULE_8__["LoginComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                                { path: 'register', component: _auth_register_register_component__WEBPACK_IMPORTED_MODULE_10__["RegisterComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                                { path: 'plans', component: _auth_choose_plan_choose_plan_component__WEBPACK_IMPORTED_MODULE_1__["ChoosePlanComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                                { path: 'signon-success', component: _auth_signon_success_signon_success_component__WEBPACK_IMPORTED_MODULE_12__["SignonSuccessComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                                { path: 'new-password-success', component: _auth_new_password_success_new_password_success_component__WEBPACK_IMPORTED_MODULE_2__["NewPasswordSuccessComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                                { path: 'reset-password', component: _auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_11__["ResetPasswordComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                                { path: 'reset-password-success', component: _auth_reset_password_success_reset_password_success_component__WEBPACK_IMPORTED_MODULE_0__["ResetPasswordSuccessComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"]] },
                                { path: 'new-password/:userId/:passwordResetCode', component: _auth_new_password_new_password_component__WEBPACK_IMPORTED_MODULE_9__["NewPasswordComponent"], canActivate: [_auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_6__["AccountRouteGuard"], _auth_guards_new_password_guard__WEBPACK_IMPORTED_MODULE_7__["NewPasswordGuard"]] },
                                { path: '**', redirectTo: 'login' }
                            ]
                        }
                    ])
                ],
                exports: [
                    _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterModule"]
                ]
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/account/account.component.ts":
/*!******************************************!*\
  !*** ./src/account/account.component.ts ***!
  \******************************************/
/*! exports provided: AccountComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountComponent", function() { return AccountComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/AppConsts */ "./src/app/shared/AppConsts.ts");
/* harmony import */ var _shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _auth_login_login_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./auth/login/login.service */ "./src/account/auth/login/login.service.ts");
/* harmony import */ var _app_shared_modules_theme_switcher_theme_switcher_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../app/shared/modules/theme-switcher/theme-switcher.component */ "./src/app/shared/modules/theme-switcher/theme-switcher.component.ts");
/* harmony import */ var _layout_account_header_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./layout/account-header.component */ "./src/account/layout/account-header.component.ts");
/* harmony import */ var _app_layout_loader_loader_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../app/layout/loader/loader.component */ "./src/app/layout/loader/loader.component.ts");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();














var AccountComponent = /** @class */ (function (_super) {
    __extends(AccountComponent, _super);
    function AccountComponent(injector, _router, _loginService, viewContainerRef) {
        var _this = _super.call(this, injector) || this;
        _this._router = _router;
        _this._loginService = _loginService;
        _this.currentYear = moment__WEBPACK_IMPORTED_MODULE_5__().year();
        _this.remoteServiceBaseUrl = _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__["AppConsts"].remoteServiceBaseUrl;
        _this.tenantChangeDisabledRoutes = [
            'select-edition',
            'buy',
            'upgrade',
            'extend',
            'register-tenant',
            'stripe-purchase',
            'stripe-subscribe',
            'stripe-update-subscription',
            'paypal-purchase',
            'stripe-payment-result',
            'payment-completed',
            'stripe-cancel-payment',
            'session-locked'
        ];
        // We need this small hack in order to catch application root view container ref for modals
        _this.viewContainerRef = viewContainerRef;
        return _this;
    }
    AccountComponent.prototype.showTenantChange = function () {
        var _this = this;
        if (!this._router.url) {
            return false;
        }
        if (lodash__WEBPACK_IMPORTED_MODULE_4__["filter"](this.tenantChangeDisabledRoutes, function (route) { return _this._router.url.indexOf('/account/' + route) >= 0; }).length) {
            return false;
        }
        return abp.multiTenancy.isEnabled && !this.supportsTenancyNameInUrl();
    };
    AccountComponent.prototype.ngOnInit = function () {
        this._loginService.init();
    };
    AccountComponent.prototype.goToHome = function () {
        window.location.href = '/';
    };
    AccountComponent.prototype.supportsTenancyNameInUrl = function () {
        return (_app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__["AppConsts"].appBaseUrlFormat && _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__["AppConsts"].appBaseUrlFormat.indexOf(_app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__["AppConsts"].tenancyNamePlaceHolderInUrl) >= 0);
    };
    AccountComponent.ɵfac = function AccountComponent_Factory(t) { return new (t || AccountComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_auth_login_login_service__WEBPACK_IMPORTED_MODULE_6__["LoginService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])); };
    AccountComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AccountComponent, selectors: [["ng-component"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 12, vars: 3, consts: [[1, "account-component"], [1, "top-right"], ["type", "button", 1, "m-button", "m-button-primary"], [1, "center"], [1, "modal"], [1, "card-body", "login-card-body"]], template: function AccountComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "button", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](4, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "app-theme-switcher");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "account-header");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](10, "router-outlet");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "app-loader");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](4, 1, "Contact"), " ");
        } }, directives: [_app_shared_modules_theme_switcher_theme_switcher_component__WEBPACK_IMPORTED_MODULE_7__["ThemeSwitcherComponent"], _layout_account_header_component__WEBPACK_IMPORTED_MODULE_8__["AccountHeaderComponent"], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterOutlet"], _app_layout_loader_loader_component__WEBPACK_IMPORTED_MODULE_9__["LoaderComponent"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_10__["LocalizePipe"]], styles: [".m-form-input {\n  margin-bottom: 20px;\n}\n.m-form-input small {\n  margin: 12px 0;\n  display: block;\n}\n.m-form-input.last {\n  margin-bottom: 0;\n}\n.m-form-input-horizontal {\n  margin-right: 8px;\n}\napp-input,\napp-button,\napp-checkbox,\napp-address-search,\napp-radiobutton,\napp-select,\napp-text-area,\napp-datepicker,\napp-file-uploader {\n  display: block;\n  flex-grow: 1;\n  margin-right: 4px;\n}\napp-radiobutton {\n  flex-grow: unset;\n}\n.account-component {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  background: var(--layout-body-background);\n  color: var(--layout-body-color);\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  overflow: hidden;\n  overflow-y: auto;\n  scrollbar-face-color: var(--layout-scroll-thumb);\n  scrollbar-track-color: var(--layout-scroll-background);\n}\n.account-component::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n.account-component::-webkit-scrollbar-thumb {\n  background: var(--layout-scroll-thumb);\n  border-radius: 3px;\n}\n.account-component::-webkit-scrollbar-track {\n  background: var(--layout-scroll-background);\n}\n.account-component form validation-messages {\n  margin-top: 8px;\n}\n.account-component account-header {\n  margin-bottom: min(max(24px, 7vw), 56px);\n}\n.account-component .form-group.m-form-input {\n  margin-bottom: 20px !important;\n}\n.account-component.body {\n  text-align: center;\n}\n.account-component .top-right {\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  padding: 8px 16px;\n}\n.account-component .top-right .m-button-primary {\n  margin-right: 16px;\n  margin-bottom: 0px;\n}\n.account-component .top-right app-theme-switcher {\n  display: block;\n  margin: 0px;\n}\n.account-component .center {\n  position: relative;\n  margin: auto;\n}\n.account-component .center account-header .loginLogo {\n  padding-top: 16px;\n  margin-top: min(max(24px, 7vw), 60px);\n  margin-bottom: 4px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 60%;\n  height: auto;\n  max-height: 80px;\n}\n.account-component .center .modal {\n  position: relative;\n  width: 450px;\n  max-width: calc(100vw - 16px);\n  height: auto;\n  max-height: 100%;\n  grid-template-rows: -webkit-min-content;\n  grid-template-rows: min-content;\n  margin-bottom: 0px;\n  box-shadow: none;\n  border: 1px solid #5e6064;\n  overflow: hidden;\n  margin-bottom: 8px;\n}\n@media only screen and (max-width: 600px) {\n  .account-component .center .modal {\n    width: calc(100vw - 16px);\n    min-height: calc(100vh - 100px);\n  }\n}\n.account-component .center .modal .card-body {\n  width: 100%;\n  overflow: hidden;\n}\n.account-component .center .tcError {\n  border-radius: 3px;\n}\n.account-component .center account-footer .row {\n  margin-top: -12px;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */"], encapsulation: 2 });
    return AccountComponent;
}(_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_3__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AccountComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                templateUrl: './account.component.html',
                styleUrls: [
                    './account.component.less'
                ],
                encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"] }, { type: _auth_login_login_service__WEBPACK_IMPORTED_MODULE_6__["LoginService"] }, { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }]; }, null); })();


/***/ }),

/***/ "./src/account/account.module.ts":
/*!***************************************!*\
  !*** ./src/account/account.module.ts ***!
  \***************************************/
/*! exports provided: getRecaptchaLanguage, AccountModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRecaptchaLanguage", function() { return getRecaptchaLanguage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountModule", function() { return AccountModule; });
/* harmony import */ var _app_shared_modules_success_message_success_message_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../app/shared/modules/success-message/success-message.module */ "./src/app/shared/modules/success-message/success-message.module.ts");
/* harmony import */ var _auth_reset_password_success_reset_password_success_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth/reset-password-success/reset-password-success.component */ "./src/account/auth/reset-password-success/reset-password-success.component.ts");
/* harmony import */ var _auth_choose_plan_choose_plan_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth/choose-plan/choose-plan.component */ "./src/account/auth/choose-plan/choose-plan.component.ts");
/* harmony import */ var _app_shared_modules_plans_plans_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../app/shared/modules/plans/plans.module */ "./src/app/shared/modules/plans/plans.module.ts");
/* harmony import */ var _auth_new_password_success_new_password_success_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./auth/new-password-success/new-password-success.component */ "./src/account/auth/new-password-success/new-password-success.component.ts");
/* harmony import */ var _auth_new_password_new_password_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/new-password/new-password.component */ "./src/account/auth/new-password/new-password.component.ts");
/* harmony import */ var _app_shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/shared/modules/svg/svg.module */ "./src/app/shared/modules/svg/svg.module.ts");
/* harmony import */ var _app_shared_common_app_common_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../app/shared/common/app-common.module */ "./src/app/shared/common/app-common.module.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _shared_service_proxies_service_proxy_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @shared/service-proxies/service-proxy.module */ "./src/app/shared/service-proxies/service-proxy.module.ts");
/* harmony import */ var _shared_utils_utils_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @shared/utils/utils.module */ "./src/app/shared/utils/utils.module.ts");
/* harmony import */ var ngx_captcha__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ngx-captcha */ "./node_modules/ngx-captcha/__ivy_ngcc__/fesm2015/ngx-captcha.js");
/* harmony import */ var _account_routing_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./account-routing.module */ "./src/account/account-routing.module.ts");
/* harmony import */ var _account_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./account.component */ "./src/account/account.component.ts");
/* harmony import */ var _auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./auth/guards/account-route-guard */ "./src/account/auth/guards/account-route-guard.ts");
/* harmony import */ var _auth_login_login_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./auth/login/login.component */ "./src/account/auth/login/login.component.ts");
/* harmony import */ var _auth_login_login_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./auth/login/login.service */ "./src/account/auth/login/login.service.ts");
/* harmony import */ var angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! angular-oauth2-oidc */ "./node_modules/angular-oauth2-oidc/__ivy_ngcc__/fesm2015/angular-oauth2-oidc.js");
/* harmony import */ var _shared_locale_mapping_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @shared/locale-mapping.service */ "./src/app/shared/locale-mapping.service.ts");
/* harmony import */ var primeng_password__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! primeng/password */ "./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-password.js");
/* harmony import */ var _layout_account_header_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./layout/account-header.component */ "./src/account/layout/account-header.component.ts");
/* harmony import */ var _layout_account_footer_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./layout/account-footer.component */ "./src/account/layout/account-footer.component.ts");
/* harmony import */ var _auth_register_register_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./auth/register/register.component */ "./src/account/auth/register/register.component.ts");
/* harmony import */ var _app_shared_modules_theme_switcher_theme_switcher_module__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @app/shared/modules/theme-switcher/theme-switcher.module */ "./src/app/shared/modules/theme-switcher/theme-switcher.module.ts");
/* harmony import */ var _auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./auth/reset-password/reset-password.component */ "./src/account/auth/reset-password/reset-password.component.ts");
/* harmony import */ var _account_auth_signon_success_signon_success_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../account/auth/signon-success/signon-success.component */ "./src/account/auth/signon-success/signon-success.component.ts");
/* harmony import */ var _auth_guards_new_password_guard__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./auth/guards/new-password-guard */ "./src/account/auth/guards/new-password-guard.ts");
/* harmony import */ var _app_layout_loader_loader_module__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @app/layout/loader/loader.module */ "./src/app/layout/loader/loader.module.ts");
/* harmony import */ var _app_shared_modules__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @app/shared/modules */ "./src/app/shared/modules/index.ts");


































function getRecaptchaLanguage() {
    return new _shared_locale_mapping_service__WEBPACK_IMPORTED_MODULE_21__["LocaleMappingService"]().map('recaptcha', abp.localization.currentLanguage.name);
}
var AccountModule = /** @class */ (function () {
    function AccountModule() {
    }
    AccountModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineNgModule"]({ type: AccountModule });
    AccountModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjector"]({ factory: function AccountModule_Factory(t) { return new (t || AccountModule)(); }, providers: [
            _auth_login_login_service__WEBPACK_IMPORTED_MODULE_19__["LoginService"],
            _auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_17__["AccountRouteGuard"],
            _auth_guards_new_password_guard__WEBPACK_IMPORTED_MODULE_29__["NewPasswordGuard"]
        ], imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_8__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_11__["ReactiveFormsModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_10__["HttpClientJsonpModule"],
                ngx_captcha__WEBPACK_IMPORTED_MODULE_14__["NgxCaptchaModule"],
                _app_shared_common_app_common_module__WEBPACK_IMPORTED_MODULE_7__["AppCommonModule"],
                _shared_utils_utils_module__WEBPACK_IMPORTED_MODULE_13__["UtilsModule"],
                _shared_service_proxies_service_proxy_module__WEBPACK_IMPORTED_MODULE_12__["ServiceProxyModule"],
                _account_routing_module__WEBPACK_IMPORTED_MODULE_15__["AccountRoutingModule"],
                angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_20__["OAuthModule"].forRoot(),
                primeng_password__WEBPACK_IMPORTED_MODULE_22__["PasswordModule"],
                _app_shared_modules_theme_switcher_theme_switcher_module__WEBPACK_IMPORTED_MODULE_26__["ThemeSwitcherModule"],
                _app_shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_6__["SvgModule"],
                _app_layout_loader_loader_module__WEBPACK_IMPORTED_MODULE_30__["LoaderModule"],
                _app_shared_modules_plans_plans_module__WEBPACK_IMPORTED_MODULE_3__["PlansModule"],
                _app_shared_modules__WEBPACK_IMPORTED_MODULE_31__["ModalModule"],
                _app_shared_modules_success_message_success_message_module__WEBPACK_IMPORTED_MODULE_0__["SuccessMessageModule"]
            ]] });
    return AccountModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵsetNgModuleScope"](AccountModule, { declarations: [_account_component__WEBPACK_IMPORTED_MODULE_16__["AccountComponent"],
        _auth_login_login_component__WEBPACK_IMPORTED_MODULE_18__["LoginComponent"],
        _layout_account_header_component__WEBPACK_IMPORTED_MODULE_23__["AccountHeaderComponent"],
        _layout_account_footer_component__WEBPACK_IMPORTED_MODULE_24__["AccountFooterComponent"],
        _auth_register_register_component__WEBPACK_IMPORTED_MODULE_25__["RegisterComponent"],
        _auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_27__["ResetPasswordComponent"],
        _account_auth_signon_success_signon_success_component__WEBPACK_IMPORTED_MODULE_28__["SignonSuccessComponent"],
        _auth_reset_password_success_reset_password_success_component__WEBPACK_IMPORTED_MODULE_1__["ResetPasswordSuccessComponent"],
        _auth_new_password_new_password_component__WEBPACK_IMPORTED_MODULE_5__["NewPasswordComponent"],
        _auth_new_password_success_new_password_success_component__WEBPACK_IMPORTED_MODULE_4__["NewPasswordSuccessComponent"],
        _auth_choose_plan_choose_plan_component__WEBPACK_IMPORTED_MODULE_2__["ChoosePlanComponent"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__["CommonModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormsModule"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_11__["ReactiveFormsModule"],
        _angular_common_http__WEBPACK_IMPORTED_MODULE_10__["HttpClientJsonpModule"],
        ngx_captcha__WEBPACK_IMPORTED_MODULE_14__["NgxCaptchaModule"],
        _app_shared_common_app_common_module__WEBPACK_IMPORTED_MODULE_7__["AppCommonModule"],
        _shared_utils_utils_module__WEBPACK_IMPORTED_MODULE_13__["UtilsModule"],
        _shared_service_proxies_service_proxy_module__WEBPACK_IMPORTED_MODULE_12__["ServiceProxyModule"],
        _account_routing_module__WEBPACK_IMPORTED_MODULE_15__["AccountRoutingModule"], angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_20__["OAuthModule"], primeng_password__WEBPACK_IMPORTED_MODULE_22__["PasswordModule"],
        _app_shared_modules_theme_switcher_theme_switcher_module__WEBPACK_IMPORTED_MODULE_26__["ThemeSwitcherModule"],
        _app_shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_6__["SvgModule"],
        _app_layout_loader_loader_module__WEBPACK_IMPORTED_MODULE_30__["LoaderModule"],
        _app_shared_modules_plans_plans_module__WEBPACK_IMPORTED_MODULE_3__["PlansModule"],
        _app_shared_modules__WEBPACK_IMPORTED_MODULE_31__["ModalModule"],
        _app_shared_modules_success_message_success_message_module__WEBPACK_IMPORTED_MODULE_0__["SuccessMessageModule"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](AccountModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgModule"],
        args: [{
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_8__["CommonModule"],
                    _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormsModule"],
                    _angular_forms__WEBPACK_IMPORTED_MODULE_11__["ReactiveFormsModule"],
                    _angular_common_http__WEBPACK_IMPORTED_MODULE_10__["HttpClientJsonpModule"],
                    ngx_captcha__WEBPACK_IMPORTED_MODULE_14__["NgxCaptchaModule"],
                    _app_shared_common_app_common_module__WEBPACK_IMPORTED_MODULE_7__["AppCommonModule"],
                    _shared_utils_utils_module__WEBPACK_IMPORTED_MODULE_13__["UtilsModule"],
                    _shared_service_proxies_service_proxy_module__WEBPACK_IMPORTED_MODULE_12__["ServiceProxyModule"],
                    _account_routing_module__WEBPACK_IMPORTED_MODULE_15__["AccountRoutingModule"],
                    angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_20__["OAuthModule"].forRoot(),
                    primeng_password__WEBPACK_IMPORTED_MODULE_22__["PasswordModule"],
                    _app_shared_modules_theme_switcher_theme_switcher_module__WEBPACK_IMPORTED_MODULE_26__["ThemeSwitcherModule"],
                    _app_shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_6__["SvgModule"],
                    _app_layout_loader_loader_module__WEBPACK_IMPORTED_MODULE_30__["LoaderModule"],
                    _app_shared_modules_plans_plans_module__WEBPACK_IMPORTED_MODULE_3__["PlansModule"],
                    _app_shared_modules__WEBPACK_IMPORTED_MODULE_31__["ModalModule"],
                    _app_shared_modules_success_message_success_message_module__WEBPACK_IMPORTED_MODULE_0__["SuccessMessageModule"]
                ],
                declarations: [
                    _account_component__WEBPACK_IMPORTED_MODULE_16__["AccountComponent"],
                    _auth_login_login_component__WEBPACK_IMPORTED_MODULE_18__["LoginComponent"],
                    _layout_account_header_component__WEBPACK_IMPORTED_MODULE_23__["AccountHeaderComponent"],
                    _layout_account_footer_component__WEBPACK_IMPORTED_MODULE_24__["AccountFooterComponent"],
                    _auth_register_register_component__WEBPACK_IMPORTED_MODULE_25__["RegisterComponent"],
                    _auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_27__["ResetPasswordComponent"],
                    _account_auth_signon_success_signon_success_component__WEBPACK_IMPORTED_MODULE_28__["SignonSuccessComponent"],
                    _auth_reset_password_success_reset_password_success_component__WEBPACK_IMPORTED_MODULE_1__["ResetPasswordSuccessComponent"],
                    _auth_new_password_new_password_component__WEBPACK_IMPORTED_MODULE_5__["NewPasswordComponent"],
                    _auth_new_password_success_new_password_success_component__WEBPACK_IMPORTED_MODULE_4__["NewPasswordSuccessComponent"],
                    _auth_choose_plan_choose_plan_component__WEBPACK_IMPORTED_MODULE_2__["ChoosePlanComponent"]
                ],
                providers: [
                    _auth_login_login_service__WEBPACK_IMPORTED_MODULE_19__["LoginService"],
                    _auth_guards_account_route_guard__WEBPACK_IMPORTED_MODULE_17__["AccountRouteGuard"],
                    _auth_guards_new_password_guard__WEBPACK_IMPORTED_MODULE_29__["NewPasswordGuard"]
                ],
            }]
    }], null, null); })();


/***/ }),

/***/ "./src/account/auth/choose-plan/choose-plan.component.ts":
/*!***************************************************************!*\
  !*** ./src/account/auth/choose-plan/choose-plan.component.ts ***!
  \***************************************************************/
/*! exports provided: ChoosePlanComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChoosePlanComponent", function() { return ChoosePlanComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _app_shared_modules_plans_plans_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../app/shared/modules/plans/plans.component */ "./src/app/shared/modules/plans/plans.component.ts");





var ChoosePlanComponent = /** @class */ (function () {
    function ChoosePlanComponent(router) {
        this.router = router;
    }
    ChoosePlanComponent.prototype.ngOnInit = function () {
    };
    ChoosePlanComponent.prototype.onPlanSelected = function (plan) {
        sessionStorage.setItem('subscriptionPlan', String(plan.id));
        this.router.navigate(['account/register']);
    };
    ChoosePlanComponent.prototype.onAltActionClicked = function () {
        this.router.navigateByUrl('/login');
    };
    ChoosePlanComponent.ɵfac = function ChoosePlanComponent_Factory(t) { return new (t || ChoosePlanComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"])); };
    ChoosePlanComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ChoosePlanComponent, selectors: [["app-choose-plan"]], decls: 1, vars: 0, consts: [["altActionText", "SignOn", "altActionDescription", "AlreadyHaveAnAccount", 3, "onAltAction", "onSelect"]], template: function ChoosePlanComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "app-plans", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onAltAction", function ChoosePlanComponent_Template_app_plans_onAltAction_0_listener() { return ctx.onAltActionClicked(); })("onSelect", function ChoosePlanComponent_Template_app_plans_onSelect_0_listener($event) { return ctx.onPlanSelected($event); });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } }, directives: [_app_shared_modules_plans_plans_component__WEBPACK_IMPORTED_MODULE_2__["PlansComponent"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC9hdXRoL2Nob29zZS1wbGFuL2Nob29zZS1wbGFuLmNvbXBvbmVudC5sZXNzIn0= */"] });
    return ChoosePlanComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ChoosePlanComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-choose-plan',
                templateUrl: './choose-plan.component.html',
                styleUrls: ['./choose-plan.component.less']
            }]
    }], function () { return [{ type: _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/guards/account-route-guard.ts":
/*!********************************************************!*\
  !*** ./src/account/auth/guards/account-route-guard.ts ***!
  \********************************************************/
/*! exports provided: AccountRouteGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountRouteGuard", function() { return AccountRouteGuard; });
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _shared_common_session_app_session_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/common/session/app-session.service */ "./src/app/shared/common/session/app-session.service.ts");








var AccountRouteGuard = /** @class */ (function () {
    function AccountRouteGuard(_permissionChecker, _router, _sessionService) {
        this._permissionChecker = _permissionChecker;
        this._router = _router;
        this._sessionService = _sessionService;
    }
    AccountRouteGuard.prototype.canActivate = function (route, state) {
        if (this._sessionService.user) {
            this._router.navigate([this.selectBestRoute()]);
            return false;
        }
        return true;
    };
    AccountRouteGuard.prototype.selectBestRoute = function () {
        return '/';
    };
    AccountRouteGuard.ɵfac = function AccountRouteGuard_Factory(t) { return new (t || AccountRouteGuard)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["PermissionCheckerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_shared_common_session_app_session_service__WEBPACK_IMPORTED_MODULE_3__["AppSessionService"])); };
    AccountRouteGuard.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: AccountRouteGuard, factory: AccountRouteGuard.ɵfac });
    return AccountRouteGuard;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](AccountRouteGuard, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
    }], function () { return [{ type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["PermissionCheckerService"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }, { type: _shared_common_session_app_session_service__WEBPACK_IMPORTED_MODULE_3__["AppSessionService"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/guards/new-password-guard.ts":
/*!*******************************************************!*\
  !*** ./src/account/auth/guards/new-password-guard.ts ***!
  \*******************************************************/
/*! exports provided: NewPasswordGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewPasswordGuard", function() { return NewPasswordGuard; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");




var NewPasswordGuard = /** @class */ (function () {
    function NewPasswordGuard(router) {
        this.router = router;
    }
    NewPasswordGuard.prototype.canActivate = function (route, state) {
        var params = route.params;
        return !!params.userId && !!params.passwordResetCode;
    };
    NewPasswordGuard.ɵfac = function NewPasswordGuard_Factory(t) { return new (t || NewPasswordGuard)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"])); };
    NewPasswordGuard.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: NewPasswordGuard, factory: NewPasswordGuard.ɵfac });
    return NewPasswordGuard;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NewPasswordGuard, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
    }], function () { return [{ type: _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/login/login.component.ts":
/*!***************************************************!*\
  !*** ./src/account/auth/login/login.component.ts ***!
  \***************************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
/* harmony import */ var _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/service-proxies/service-proxies */ "./src/app/shared/service-proxies/service-proxies.ts");
/* harmony import */ var _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @shared/helpers/UrlHelper */ "./src/app/shared/helpers/UrlHelper.ts");
/* harmony import */ var _login_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./login.service */ "./src/account/auth/login/login.service.ts");
/* harmony import */ var ngx_captcha__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-captcha */ "./node_modules/ngx-captcha/__ivy_ngcc__/fesm2015/ngx-captcha.js");
/* harmony import */ var _shared_AppConsts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @shared/AppConsts */ "./src/app/shared/AppConsts.ts");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _app_shared_utils_auto_focus_directive__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../app/shared/utils/auto-focus.directive */ "./src/app/shared/utils/auto-focus.directive.ts");
/* harmony import */ var _app_shared_utils_validation_messages_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../app/shared/utils/validation-messages.component */ "./src/app/shared/utils/validation-messages.component.ts");
/* harmony import */ var _app_shared_modules_svg_svg_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../app/shared/modules/svg/svg.component */ "./src/app/shared/modules/svg/svg.component.ts");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






















function LoginComponent_div_3_validation_messages_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "validation-messages", 29);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    var _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", _r8);
} }
function LoginComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    var _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "input", 27, 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function LoginComponent_div_3_Template_input_ngModelChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r11); var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r10.tenantName = $event; })("change", function LoginComponent_div_3_Template_input_change_2_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r11); var ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](); return ctx_r12.checkTenant(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](4, "localize");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](5, LoginComponent_div_3_validation_messages_5_Template, 1, 1, "validation-messages", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](3);
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](4, 4, "TenancyName"), " *");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx_r1.tenantName)("required", ctx_r1.isMultiTenancyEnabled);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", _r8.touched);
} }
function LoginComponent_validation_messages_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "validation-messages", 29);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", _r2);
} }
function LoginComponent_validation_messages_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "validation-messages", 29);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    var _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](13);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", _r4);
} }
function LoginComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "label", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r6.displayError);
} }
function LoginComponent_div_56_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "app-svg", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} }
var LoginComponent = /** @class */ (function (_super) {
    __extends(LoginComponent, _super);
    function LoginComponent(injector, loginService, _router, activatedRoute, _sessionService, _sessionAppService, _reCaptchaV3Service, _accountServiceService) {
        var _this = _super.call(this, injector) || this;
        _this.loginService = loginService;
        _this._router = _router;
        _this.activatedRoute = activatedRoute;
        _this._sessionService = _sessionService;
        _this._sessionAppService = _sessionAppService;
        _this._reCaptchaV3Service = _reCaptchaV3Service;
        _this._accountServiceService = _accountServiceService;
        _this.submitting = false;
        _this.isMultiTenancyEnabled = environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].multiTenant;
        _this.recaptchaSiteKey = _shared_AppConsts__WEBPACK_IMPORTED_MODULE_8__["AppConsts"].recaptchaSiteKey;
        _this.displayError = '';
        _this.tenantName = '';
        _this.isLoading = false;
        return _this;
    }
    Object.defineProperty(LoginComponent.prototype, "multiTenancySideIsTeanant", {
        get: function () {
            return this._sessionService.tenantId > 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LoginComponent.prototype, "isTenantSelfRegistrationAllowed", {
        get: function () {
            return this.setting.getBoolean('App.TenantManagement.AllowSelfRegistration');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LoginComponent.prototype, "isSelfRegistrationAllowed", {
        get: function () {
            if (!this._sessionService.tenantId) {
                return false;
            }
            return this.setting.getBoolean('App.UserManagement.AllowSelfRegistration');
        },
        enumerable: false,
        configurable: true
    });
    LoginComponent.prototype.ngOnInit = function () {
        this.loginService.init();
        if (this._sessionService.userId > 0 && _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__["UrlHelper"].getReturnUrl() && _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__["UrlHelper"].getSingleSignIn()) {
            this._sessionAppService.updateUserSignInToken()
                .subscribe(function (result) {
                var initialReturnUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__["UrlHelper"].getReturnUrl();
                var returnUrl = initialReturnUrl + (initialReturnUrl.indexOf('?') >= 0 ? '&' : '?') +
                    'accessToken=' + result.signInToken +
                    '&userId=' + result.encodedUserId +
                    '&tenantId=' + result.encodedTenantId;
                location.href = returnUrl;
            });
        }
        this.handleExternalLoginCallbacks();
        this.handleRegisterConfirmation();
    };
    LoginComponent.prototype.handleRegisterConfirmation = function () {
        var _this = this;
        this.activatedRoute.params.subscribe(function (res) {
            if (res.hasOwnProperty('userId') && res.hasOwnProperty('confirmationCode')) {
                // Make API call here
                _this.isLoading = true;
                _this.loginService.verifyEmail(res)
                    .subscribe(function (res) {
                    _this.isLoading = false;
                    _this._router.navigateByUrl('/account/login');
                }, function (err) {
                    // TODO: Show error here
                    _this.isLoading = false;
                });
            }
        });
    };
    LoginComponent.prototype.handleExternalLoginCallbacks = function () {
        var state = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__["UrlHelper"].getQueryParametersUsingHash().state;
        var queryParameters = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__["UrlHelper"].getQueryParameters();
        if (state && state.indexOf('openIdConnect') >= 0) {
            this.loginService.openIdConnectLoginCallback({});
        }
        if (queryParameters.twitter && queryParameters.twitter === '1') {
            var parameters = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_5__["UrlHelper"].getQueryParameters();
            var token = parameters['oauth_token'];
            var verifier = parameters['oauth_verifier'];
            this.loginService.twitterLoginCallback(token, verifier);
        }
    };
    LoginComponent.prototype.login = function () {
        var _this = this;
        this.displayError = '';
        var recaptchaCallback = function (token) {
            _this.submitting = true;
            _this.loginService.authenticate(function (response) {
                if (response && response.error) {
                    _this.displayError = response.message;
                }
                _this.submitting = false;
            }, null, token);
        };
        if (this.useCaptcha) {
            this._reCaptchaV3Service.execute(this.recaptchaSiteKey, 'login', function (token) {
                recaptchaCallback(token);
            });
        }
        else {
            recaptchaCallback(null);
        }
    };
    LoginComponent.prototype.externalLogin = function (provider) {
        this.loginService.externalAuthenticate(provider);
    };
    Object.defineProperty(LoginComponent.prototype, "useCaptcha", {
        get: function () {
            return this.setting.getBoolean('App.UserManagement.UseCaptchaOnLogin');
        },
        enumerable: false,
        configurable: true
    });
    LoginComponent.prototype.checkTenant = function () {
        var _this = this;
        this.displayError = '';
        var tenant = new _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_4__["IsTenantAvailableInput"]({ tenancyName: this.tenantName });
        this._accountServiceService.isTenantAvailable(tenant)
            .subscribe(function (res) {
            if (res.tenantId) {
                _this.tenantId = res.tenantId;
            }
            else {
                _this.displayError = 'ThereIsNoTenantDefinedWithName{0}';
            }
        }, function (err) { });
    };
    LoginComponent.prototype.startSignup = function () {
        if (environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].multiBillingPlan) {
            this._router.navigate(['account/plans']);
        }
        else {
            this._router.navigate(['account/register']);
        }
    };
    LoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_login_service__WEBPACK_IMPORTED_MODULE_6__["LoginService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["AbpSessionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_4__["SessionServiceProxy"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](ngx_captcha__WEBPACK_IMPORTED_MODULE_7__["ReCaptchaV3Service"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_4__["AccountServiceProxy"])); };
    LoginComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: LoginComponent, selectors: [["ng-component"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 57, vars: 42, consts: [[3, "ngSubmit"], ["loginForm", "ngForm"], ["class", "form-group m-form-input", 4, "ngIf"], [1, "form-group", "m-form-input"], [1, "input-group", "m-form-textbox"], ["type", "text", "autocomplete", "username", "name", "userNameOrEmailAddress", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["userNameOrEmailAddressInput", "ngModel"], [3, "formCtrl", 4, "ngIf"], ["type", "password", "autocomplete", "new-password", "name", "password", "required", "", "maxlength", "32", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["passwordInput", "ngModel"], ["class", "form-group row", 4, "ngIf"], [1, "form-group", "row"], [1, "col", "forgot-password"], ["routerLink", "/account/reset-password", 1, "forgot-password-link"], [1, "col-md-4"], [1, "m-form-checkbox"], ["type", "checkbox", "name", "rememberMe", "value", "true", "id", "acceptTerms", "required", "", 3, "ngModel", "ngModelChange"], ["for", "acceptTerms", 1, "loginLabel"], ["href", "#", "target", "_blank"], ["type", "submit", 1, "btn", "m-button", "m-button-lg", "btn-sign-in", 3, "disabled"], [1, "col-md-8", "remember-me-ctnr"], ["type", "checkbox", "id", "rememberMe", 1, "custom-control-input"], ["for", "rememberMe", 1, "loginLabel"], [1, "mb-1", "register-link-ctnr"], [3, "click"], [1, "fa", "fa-plus-circle"], ["class", "m-loader", 4, "ngIf"], ["autoFocus", "", "type", "text", "name", "TenantName", 1, "form-control", 3, "ngModel", "placeholder", "required", "ngModelChange", "change"], ["tenantNameInput", "ngModel"], [3, "formCtrl"], [1, "m-form-error", "tcError"], [1, "m-loader"], ["name", "loader"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "form", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngSubmit", function LoginComponent_Template_form_ngSubmit_1_listener() { return ctx.login(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, LoginComponent_div_3_Template, 6, 6, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "input", 5, 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function LoginComponent_Template_input_ngModelChange_6_listener($event) { return ctx.loginService.authenticateModel.userNameOrEmailAddress = $event; });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](8, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](9, LoginComponent_validation_messages_9_Template, 1, 1, "validation-messages", 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](11, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "input", 8, 9);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function LoginComponent_Template_input_ngModelChange_12_listener($event) { return ctx.loginService.authenticateModel.password = $event; });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](14, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](15, LoginComponent_validation_messages_15_Template, 1, 1, "validation-messages", 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](16, LoginComponent_div_16_Template, 3, 1, "div", 10);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](17, "div", 11);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "div", 12);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "a", 13);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](20);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](21, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "div", 11);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "div", 14);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](24, "div", 15);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](25, "input", 16);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function LoginComponent_Template_input_ngModelChange_25_listener($event) { return ctx.loginService.rememberMe = $event; });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](26, "label", 17);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](27, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](28);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](29, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](30, "a", 18);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](31);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](32, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](33, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](34);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](35, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](36, "a", 18);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](37);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](38, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](39, "div", 14);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](40, "button", 19);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](41);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](42, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](43, "div", 20);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](44, "div", 15);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](45, "input", 21);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](46, "label", 22);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](47);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](48, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](49, "p", 23);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](50);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](51, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](52, "a", 24);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LoginComponent_Template_a_click_52_listener() { return ctx.startSignup(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](53, "i", 25);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](54);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](55, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](56, LoginComponent_div_56_Template, 2, 0, "div", 26);
        } if (rf & 2) {
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](2);
            var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](7);
            var _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](13);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.isMultiTenancyEnabled);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](8, 20, "UserNameOrEmail"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx.loginService.authenticateModel.userNameOrEmailAddress);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", _r2.touched && _r2.invalid);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](14, 22, "Password"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx.loginService.authenticateModel.password);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", _r4.touched && _r4.invalid);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.displayError != "");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](21, 24, "ForgotPassword"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx.loginService.rememberMe);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"]("", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](29, 26, "AcceptTerms"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](32, 28, "TermsOfService"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](35, 30, "And"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](38, 32, "PrivacyPolicy"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", !_r0.valid || ctx.submitting || ctx.isMultiTenancyEnabled && !ctx.tenantId);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](42, 34, "SignOn"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](48, 36, "RememberMe"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](51, 38, "DontHaveAnAccount"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](55, 40, "SignUp"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.isLoading);
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_10__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["NgForm"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["RequiredValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["NgModel"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["MaxLengthValidator"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterLinkWithHref"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["CheckboxRequiredValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__["CheckboxControlValueAccessor"], _app_shared_utils_auto_focus_directive__WEBPACK_IMPORTED_MODULE_12__["AutoFocusDirective"], _app_shared_utils_validation_messages_component__WEBPACK_IMPORTED_MODULE_13__["ValidationMessagesComponent"], _app_shared_modules_svg_svg_component__WEBPACK_IMPORTED_MODULE_14__["SvgComponent"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_15__["LocalizePipe"]], styles: [".m-loader[_ngcontent-%COMP%] {\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n}\n.remember-me-ctnr[_ngcontent-%COMP%] {\n  text-align: right;\n  margin-top: 20px;\n}\n.register-link-ctnr[_ngcontent-%COMP%] {\n  margin-top: 0px;\n  margin-bottom: min(max(24px, 8vw), 75px);\n}\n.register-link-ctnr[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\n  cursor: pointer;\n}\n.forgot-password[_ngcontent-%COMP%] {\n  margin-top: 20px;\n  margin-bottom: 52px;\n  text-align: right;\n}\nform[_ngcontent-%COMP%]   validation-messages[_ngcontent-%COMP%] {\n  margin-top: 8px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%] {\n  width: calc(100% - min(max(24px, 10vw), 80px));\n  margin: auto;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%] {\n  display: inline-block;\n  margin-bottom: 44px;\n  font-size: 16px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%]   [type=\"checkbox\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%]   [type=\"checkbox\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  color: #ffffff;\n}\nform[_ngcontent-%COMP%]   .form-group.password[_ngcontent-%COMP%] {\n  text-align: right;\n}\nform[_ngcontent-%COMP%]   .form-group.password[_ngcontent-%COMP%]   a.password[_ngcontent-%COMP%] {\n  font-size: 12px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-description[_ngcontent-%COMP%] {\n  font-size: 12px;\n}\nform[_ngcontent-%COMP%]   .btn-sign-in[_ngcontent-%COMP%] {\n  width: 100%;\n  max-width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hY2NvdW50L2F1dGgvbG9naW4vTTovcmVwb3MvRGVwbG95U29sdXRpb25zQ2xpbWF0ZUNoYW5nZS9kc3NfY2NpcF9wcm90by9kZXYvdGEvYW5ndWxhci9zcmMvYWNjb3VudC9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5sZXNzIiwic3JjL2FjY291bnQvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUNFLGFBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQ0hGO0FEV0E7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0FDVEY7QURZQTtFQUNFLGVBQUE7RUFDQSx3Q0FBQTtBQ1ZGO0FEUUE7RUFLSSxlQUFBO0FDVko7QURjQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtBQ1pGO0FEb0JBO0VBR0ksZUFBQTtBQ3BCSjtBRGlCQTtFQU1JLDhDQUFBO0VBQ0EsWUFBQTtBQ3BCSjtBRGFBO0VBVU0scUJBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7QUNwQk47QURRQTs7RUFlUSxjQUFBO0FDbkJSO0FEdUJJO0VBQ0UsaUJBQUE7QUNyQk47QURvQkk7RUFHSSxlQUFBO0FDcEJSO0FERkE7RUEyQk0sZUFBQTtBQ3RCTjtBRExBO0VBZ0NJLFdBQUE7RUFDQSxlQUFBO0FDeEJKIiwiZmlsZSI6InNyYy9hY2NvdW50L2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi8uLi8uLi8uLi9zdHlsZXMvdmFyaWFibGVzLmxlc3NcIjtcblxuQGxvZ2luLWJveC1zaXppbmc6IDMwMHB4O1xuXG4ubS1sb2FkZXIge1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwdnc7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuYSxcbi5sb2dpbkxhYmVsIHtcbiAgLy8gdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4ucmVtZW1iZXItbWUtY3RuciB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBtYXJnaW4tdG9wOiBAc3BhY2luZy0yMDtcbn1cblxuLnJlZ2lzdGVyLWxpbmstY3RuciB7XG4gIG1hcmdpbi10b3A6IDBweDtcbiAgbWFyZ2luLWJvdHRvbTogJSh+XCJtaW4obWF4KCVhLCA4dncpLCAlYSlcIiwgQHNwYWNpbmctMjQsIEBzcGFjaW5nLTc1KTtcblxuICBhIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cblxuLmZvcmdvdC1wYXNzd29yZCB7XG4gIG1hcmdpbi10b3A6IEBzcGFjaW5nLTIwO1xuICBtYXJnaW4tYm90dG9tOiBAc3BhY2luZy01MjtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIFxuICAuZm9yZ290LXBhc3N3b3JkLWxpbmt7XG4gICAgXG4gIH1cblxufVxuXG5mb3JtIHtcblxuICB2YWxpZGF0aW9uLW1lc3NhZ2VzIHtcbiAgICBtYXJnaW4tdG9wOiBAc3BhY2luZy04O1xuICB9XG4gIC5mb3JtLWdyb3VwIHtcbiAgICB3aWR0aDogJSh+XCJjYWxjKDEwMCUgLSBtaW4obWF4KCVhLCAxMHZ3KSwgJWEpKVwiLCBAc3BhY2luZy0yNCwgQHNwYWNpbmctODApO1xuICAgIG1hcmdpbjogYXV0bztcblxuICAgIC5tLWZvcm0tY2hlY2tib3gge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLWJvdHRvbTogQHNwYWNpbmctNDQ7XG4gICAgICBmb250LXNpemU6IEBmb250LXNpemU7XG4gICAgICBbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbCxcbiAgICAgIFt0eXBlPVwiY2hlY2tib3hcIl06bm90KDpjaGVja2VkKSArIGxhYmVsIHtcbiAgICAgICAgY29sb3I6IEBjb2xvci13aGl0ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLnBhc3N3b3JkIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgYS5wYXNzd29yZCB7XG4gICAgICAgIGZvbnQtc2l6ZTogQHNwYWNpbmctMTI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLm0tZm9ybS1kZXNjcmlwdGlvbiB7XG4gICAgICBmb250LXNpemU6IEBzcGFjaW5nLTEyO1xuICAgIH1cbiAgfVxuXG4gIC5idG4tc2lnbi1pbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59XG5cbiIsIi5tLWxvYWRlciB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDB2dztcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuLnJlbWVtYmVyLW1lLWN0bnIge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cbi5yZWdpc3Rlci1saW5rLWN0bnIge1xuICBtYXJnaW4tdG9wOiAwcHg7XG4gIG1hcmdpbi1ib3R0b206IG1pbihtYXgoMjRweCwgOHZ3KSwgNzVweCk7XG59XG4ucmVnaXN0ZXItbGluay1jdG5yIGEge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uZm9yZ290LXBhc3N3b3JkIHtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTJweDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5mb3JtIHZhbGlkYXRpb24tbWVzc2FnZXMge1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5mb3JtIC5mb3JtLWdyb3VwIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIG1pbihtYXgoMjRweCwgMTB2dyksIDgwcHgpKTtcbiAgbWFyZ2luOiBhdXRvO1xufVxuZm9ybSAuZm9ybS1ncm91cCAubS1mb3JtLWNoZWNrYm94IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiA0NHB4O1xuICBmb250LXNpemU6IDE2cHg7XG59XG5mb3JtIC5mb3JtLWdyb3VwIC5tLWZvcm0tY2hlY2tib3ggW3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkICsgbGFiZWwsXG5mb3JtIC5mb3JtLWdyb3VwIC5tLWZvcm0tY2hlY2tib3ggW3R5cGU9XCJjaGVja2JveFwiXTpub3QoOmNoZWNrZWQpICsgbGFiZWwge1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cbmZvcm0gLmZvcm0tZ3JvdXAucGFzc3dvcmQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbmZvcm0gLmZvcm0tZ3JvdXAucGFzc3dvcmQgYS5wYXNzd29yZCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbmZvcm0gLmZvcm0tZ3JvdXAgLm0tZm9ybS1kZXNjcmlwdGlvbiB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbmZvcm0gLmJ0bi1zaWduLWluIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbiJdfQ== */"] });
    return LoginComponent;
}(_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_3__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LoginComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                templateUrl: './login.component.html',
                styleUrls: ['./login.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }, { type: _login_service__WEBPACK_IMPORTED_MODULE_6__["LoginService"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["AbpSessionService"] }, { type: _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_4__["SessionServiceProxy"] }, { type: ngx_captcha__WEBPACK_IMPORTED_MODULE_7__["ReCaptchaV3Service"] }, { type: _shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_4__["AccountServiceProxy"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/login/login.service.ts":
/*!*************************************************!*\
  !*** ./src/account/auth/login/login.service.ts ***!
  \*************************************************/
/*! exports provided: ExternalLoginProvider, LoginService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExternalLoginProvider", function() { return ExternalLoginProvider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginService", function() { return LoginService; });
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared/AppConsts */ "./src/app/shared/AppConsts.ts");
/* harmony import */ var _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @shared/helpers/UrlHelper */ "./src/app/shared/helpers/UrlHelper.ts");
/* harmony import */ var _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/service-proxies/service-proxies */ "./src/app/shared/service-proxies/service-proxies.ts");
/* harmony import */ var _app_shared_utils_script_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/shared/utils/script-loader.service */ "./src/app/shared/utils/script-loader.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! angular-oauth2-oidc */ "./node_modules/angular-oauth2-oidc/__ivy_ngcc__/fesm2015/angular-oauth2-oidc.js");
/* harmony import */ var adal_angular_lib_adal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! adal-angular/lib/adal */ "./node_modules/adal-angular/lib/adal.js");
/* harmony import */ var adal_angular_lib_adal__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(adal_angular_lib_adal__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var msal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! msal */ "./node_modules/msal/lib-es6/index.js");
/* harmony import */ var _app_shared_utils_local_storage_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @app/shared/utils/local-storage.service */ "./src/app/shared/utils/local-storage.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



















var ExternalLoginProvider = /** @class */ (function (_super) {
    __extends(ExternalLoginProvider, _super);
    function ExternalLoginProvider(providerInfo) {
        var _this = _super.call(this) || this;
        _this.initialized = false;
        _this.name = providerInfo.name;
        _this.clientId = providerInfo.clientId;
        _this.additionalParams = providerInfo.additionalParams;
        _this.icon = providerInfo.name.toLowerCase();
        return _this;
    }
    ExternalLoginProvider.FACEBOOK = 'Facebook';
    ExternalLoginProvider.GOOGLE = 'Google';
    ExternalLoginProvider.MICROSOFT = 'Microsoft';
    ExternalLoginProvider.OPENID = 'OpenIdConnect';
    ExternalLoginProvider.WSFEDERATION = 'WsFederation';
    ExternalLoginProvider.TWITTER = 'Twitter';
    return ExternalLoginProvider;
}(_app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["ExternalLoginProviderInfoModel"]));

var LoginService = /** @class */ (function () {
    function LoginService(_tokenAuthService, _accountService, _router, _messageService, _tokenService, _logService, oauthService, _localStorageService, _twitterService) {
        this._tokenAuthService = _tokenAuthService;
        this._accountService = _accountService;
        this._router = _router;
        this._messageService = _messageService;
        this._tokenService = _tokenService;
        this._logService = _logService;
        this.oauthService = oauthService;
        this._localStorageService = _localStorageService;
        this._twitterService = _twitterService;
        this.externalLoginProviders = [];
        this.localizationSourceName = _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__["AppConsts"].localization.defaultLocalizationSourceName;
        this.clear();
    }
    LoginService.prototype.verifyEmail = function (userData) {
        return this._accountService.activateEmail(userData);
    };
    LoginService.prototype.authenticate = function (finallyCallback, redirectUrl, captchaResponse, tenantId) {
        finallyCallback = finallyCallback || (function () { });
        var oldabpError = abp.message.error;
        abp.message.error = function (message, title, options) {
            finallyCallback({ error: true, message: message, title: title });
            abp.message.error = oldabpError;
        };
        var self = this;
        this._localStorageService.getItem(LoginService.twoFactorRememberClientTokenName, function (err, value) {
            self.authenticateModel.twoFactorRememberClientToken = value === null || value === void 0 ? void 0 : value.token;
            self.authenticateModel.singleSignIn = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getSingleSignIn();
            self.authenticateModel.returnUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getReturnUrl();
            self.authenticateModel.captchaResponse = captchaResponse;
            self.authenticateModel.tenantId = tenantId;
            self._tokenAuthService
                .authenticate(self.authenticateModel)
                .subscribe({
                next: function (result) {
                    self.processAuthenticateResult(result, redirectUrl);
                    finallyCallback();
                },
                error: function (err) {
                    finallyCallback();
                },
            });
        });
    };
    LoginService.prototype.externalAuthenticate = function (provider) {
        var _this = this;
        this.ensureExternalLoginProviderInitialized(provider, function () {
            if (provider.name === ExternalLoginProvider.FACEBOOK) {
                FB.login(function (response) {
                    _this.facebookLoginStatusChangeCallback(response);
                }, { scope: 'email' });
            }
            else if (provider.name === ExternalLoginProvider.GOOGLE) {
                gapi.auth2
                    .getAuthInstance()
                    .signIn()
                    .then(function () {
                    _this.googleLoginStatusChangeCallback(gapi.auth2.getAuthInstance().isSignedIn.get());
                });
            }
            else if (provider.name === ExternalLoginProvider.MICROSOFT) {
                var scopes_1 = ['user.read'];
                _this.MSAL.loginPopup({
                    scopes: scopes_1,
                }).then(function (idTokenResponse) {
                    _this.MSAL.acquireTokenSilent({ scopes: scopes_1 })
                        .then(function (accessTokenResponse) {
                        _this.microsoftLoginCallback(accessTokenResponse);
                    })
                        .catch(function (error) {
                        abp.log.error(error);
                        abp.message.error(_this.localization.localize('CouldNotValidateExternalUser', _this.localizationSourceName));
                    });
                });
            }
            else if (provider.name === ExternalLoginProvider.TWITTER) {
                _this.startTwitterLogin();
            }
        });
    };
    LoginService.prototype.init = function () {
        this.initExternalLoginProviders();
    };
    LoginService.prototype.processAuthenticateResult = function (authenticateResult, redirectUrl) {
        this.authenticateResult = authenticateResult;
        if (authenticateResult.shouldResetPassword) {
            // Password reset
            this._router.navigate(['account/reset-password'], {
                queryParams: {
                    userId: authenticateResult.userId,
                    tenantId: abp.session.tenantId,
                    resetCode: authenticateResult.passwordResetCode,
                },
            });
            this.clear();
        }
        else if (authenticateResult.requiresTwoFactorVerification) {
            // Two factor authentication
            this._router.navigate(['account/send-code']);
        }
        else if (authenticateResult.accessToken) {
            // Successfully logged in
            if (authenticateResult.returnUrl && !redirectUrl) {
                redirectUrl = authenticateResult.returnUrl;
            }
            this.login(authenticateResult.accessToken, authenticateResult.encryptedAccessToken, authenticateResult.expireInSeconds, authenticateResult.refreshToken, authenticateResult.refreshTokenExpireInSeconds, this.rememberMe, authenticateResult.twoFactorRememberClientToken, redirectUrl);
        }
        else {
            // Unexpected result!
            this._logService.warn('Unexpected authenticateResult!');
            this._router.navigate(['account/login']);
        }
    };
    LoginService.prototype.login = function (accessToken, encryptedAccessToken, expireInSeconds, refreshToken, refreshTokenExpireInSeconds, rememberMe, twoFactorRememberClientToken, redirectUrl) {
        var tokenExpireDate = rememberMe
            ? new Date(new Date().getTime() + 1000 * expireInSeconds)
            : undefined;
        this._tokenService.setToken(accessToken, tokenExpireDate);
        if (refreshToken && rememberMe) {
            var refreshTokenExpireDate = rememberMe
                ? new Date(new Date().getTime() + 1000 * refreshTokenExpireInSeconds)
                : undefined;
            this._tokenService.setRefreshToken(refreshToken, refreshTokenExpireDate);
        }
        this._localStorageService.setItem(_app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__["AppConsts"].authorization.encrptedAuthTokenName, {
            token: encryptedAccessToken,
            expireDate: tokenExpireDate,
        });
        if (twoFactorRememberClientToken) {
            this._localStorageService.setItem(LoginService.twoFactorRememberClientTokenName, {
                token: twoFactorRememberClientToken,
                expireDate: new Date(new Date().getTime() + 365 * 86400000),
            });
        }
        if (redirectUrl) {
            location.href = redirectUrl;
        }
        else {
            var initialUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].initialUrl;
            if (initialUrl.indexOf('/account') > 0) {
                initialUrl = _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__["AppConsts"].appBaseUrl;
            }
            location.href = initialUrl;
        }
    };
    LoginService.prototype.clear = function () {
        this.authenticateModel = new _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["AuthenticateModel"]();
        this.authenticateModel.rememberClient = false;
        this.authenticateModel.tenantId = null;
        this.authenticateResult = null;
        this.rememberMe = false;
    };
    LoginService.prototype.initExternalLoginProviders = function (callback) {
        var _this = this;
        this._tokenAuthService
            .getExternalAuthenticationProviders()
            .subscribe(function (providers) {
            _this.externalLoginProviders = lodash__WEBPACK_IMPORTED_MODULE_7__["map"](providers, function (p) { return new ExternalLoginProvider(p); });
            if (callback) {
                callback();
            }
        });
    };
    LoginService.prototype.ensureExternalLoginProviderInitialized = function (loginProvider, callback) {
        var _this = this;
        if (loginProvider.initialized) {
            callback();
            return;
        }
        if (loginProvider.name === ExternalLoginProvider.FACEBOOK) {
            new _app_shared_utils_script_loader_service__WEBPACK_IMPORTED_MODULE_6__["ScriptLoaderService"]()
                .load('//connect.facebook.net/en_US/sdk.js')
                .then(function () {
                FB.init({
                    appId: loginProvider.clientId,
                    cookie: false,
                    xfbml: true,
                    version: 'v2.5',
                });
                FB.getLoginStatus(function (response) {
                    _this.facebookLoginStatusChangeCallback(response);
                    if (response.status !== 'connected') {
                        callback();
                    }
                });
            });
        }
        else if (loginProvider.name === ExternalLoginProvider.GOOGLE) {
            new _app_shared_utils_script_loader_service__WEBPACK_IMPORTED_MODULE_6__["ScriptLoaderService"]()
                .load('https://apis.google.com/js/api.js')
                .then(function () {
                gapi.load('client:auth2', function () {
                    gapi.client
                        .init({
                        clientId: loginProvider.clientId,
                        scope: 'openid profile email',
                    })
                        .then(function () {
                        callback();
                    });
                });
            });
        }
        else if (loginProvider.name === ExternalLoginProvider.MICROSOFT) {
            this.MSAL = new msal__WEBPACK_IMPORTED_MODULE_11__["UserAgentApplication"]({
                auth: {
                    clientId: loginProvider.clientId,
                    redirectUri: _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_3__["AppConsts"].appBaseUrl,
                },
            });
            callback();
        }
        else if (loginProvider.name === ExternalLoginProvider.OPENID) {
            var authConfig = this.getOpenIdConnectConfig(loginProvider);
            this.oauthService.configure(authConfig);
            this.oauthService.initImplicitFlow('openIdConnect=1');
        }
        else if (loginProvider.name === ExternalLoginProvider.WSFEDERATION) {
            var config = this.getWsFederationConnectConfig(loginProvider);
            this.wsFederationAuthenticationContext = new adal_angular_lib_adal__WEBPACK_IMPORTED_MODULE_10__(config);
            this.wsFederationAuthenticationContext.login();
        }
        else if (loginProvider.name === ExternalLoginProvider.TWITTER) {
            callback();
        }
    };
    LoginService.prototype.getWsFederationConnectConfig = function (loginProvider) {
        var config = {
            clientId: loginProvider.clientId,
            popUp: true,
            callback: this.wsFederationLoginStatusChangeCallback.bind(this),
        };
        if (loginProvider.additionalParams['Tenant']) {
            config.tenant = loginProvider.additionalParams['Tenant'];
        }
        return config;
    };
    LoginService.prototype.getOpenIdConnectConfig = function (loginProvider) {
        var authConfig = new angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_9__["AuthConfig"]();
        authConfig.loginUrl = loginProvider.additionalParams['LoginUrl'];
        authConfig.issuer = loginProvider.additionalParams['Authority'];
        authConfig.skipIssuerCheck = loginProvider.additionalParams['ValidateIssuer'] === 'false';
        authConfig.clientId = loginProvider.clientId;
        authConfig.responseType = 'id_token';
        authConfig.redirectUri = window.location.origin + '/account/login';
        authConfig.scope = 'openid profile';
        authConfig.requestAccessToken = false;
        return authConfig;
    };
    LoginService.prototype.facebookLoginStatusChangeCallback = function (resp) {
        var _this = this;
        if (resp.status === 'connected') {
            var model = new _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["ExternalAuthenticateModel"]();
            model.authProvider = ExternalLoginProvider.FACEBOOK;
            model.providerAccessCode = resp.authResponse.accessToken;
            model.providerKey = resp.authResponse.userID;
            model.singleSignIn = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getSingleSignIn();
            model.returnUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getReturnUrl();
            this._tokenAuthService
                .externalAuthenticate(model)
                .subscribe(function (result) {
                if (result.waitingForActivation) {
                    _this._messageService.info('You have successfully registered. Waiting for activation!');
                    return;
                }
                _this.login(result.accessToken, result.encryptedAccessToken, result.expireInSeconds, result.refreshToken, result.refreshTokenExpireInSeconds, false, '', result.returnUrl);
            });
        }
    };
    LoginService.prototype.openIdConnectLoginCallback = function (resp) {
        var _this = this;
        this.initExternalLoginProviders(function () {
            var openIdProvider = lodash__WEBPACK_IMPORTED_MODULE_7__["filter"](_this.externalLoginProviders, {
                name: 'OpenIdConnect',
            })[0];
            var authConfig = _this.getOpenIdConnectConfig(openIdProvider);
            _this.oauthService.configure(authConfig);
            _this.oauthService.tryLogin().then(function () {
                var claims = _this.oauthService.getIdentityClaims();
                var model = new _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["ExternalAuthenticateModel"]();
                model.authProvider = ExternalLoginProvider.OPENID;
                model.providerAccessCode = _this.oauthService.getIdToken();
                model.providerKey = claims['sub'];
                model.singleSignIn = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getSingleSignIn();
                model.returnUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getReturnUrl();
                _this._tokenAuthService
                    .externalAuthenticate(model)
                    .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["finalize"])(function () {
                }))
                    .subscribe(function (result) {
                    if (result.waitingForActivation) {
                        _this._messageService.info('You have successfully registered. Waiting for activation!');
                        return;
                    }
                    _this.login(result.accessToken, result.encryptedAccessToken, result.expireInSeconds, result.refreshToken, result.refreshTokenExpireInSeconds, false, '', result.returnUrl);
                });
            });
        });
    };
    LoginService.prototype.startTwitterLogin = function () {
        var _this = this;
        this._twitterService.getRequestToken()
            .subscribe(function (result) {
            if (result.confirmed) {
                window.location.href = result.redirectUrl;
            }
            else {
                _this._messageService.error('Couldn\'t get twitter request token !');
            }
        });
    };
    LoginService.prototype.twitterLoginCallback = function (token, verifier) {
        var _this = this;
        this._twitterService.getAccessToken(token, verifier).subscribe(function (response) {
            var model = new _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["ExternalAuthenticateModel"]();
            model.authProvider = ExternalLoginProvider.TWITTER;
            model.providerAccessCode = response.accessToken + '&' + response.accessTokenSecret;
            model.providerKey = response.userId;
            model.singleSignIn = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getSingleSignIn();
            model.returnUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getReturnUrl();
            _this._tokenAuthService
                .externalAuthenticate(model)
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["finalize"])(function () {
            }))
                .subscribe(function (result) {
                if (result.waitingForActivation) {
                    _this._messageService.info('You have successfully registered. Waiting for activation!');
                    return;
                }
                _this.login(result.accessToken, result.encryptedAccessToken, result.expireInSeconds, result.refreshToken, result.refreshTokenExpireInSeconds, false, '', result.returnUrl);
            });
        });
    };
    LoginService.prototype.googleLoginStatusChangeCallback = function (isSignedIn) {
        var _this = this;
        if (isSignedIn) {
            var model = new _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["ExternalAuthenticateModel"]();
            model.authProvider = ExternalLoginProvider.GOOGLE;
            model.providerAccessCode = gapi.auth2
                .getAuthInstance()
                .currentUser.get()
                .getAuthResponse().access_token;
            model.providerKey = gapi.auth2
                .getAuthInstance()
                .currentUser.get()
                .getBasicProfile()
                .getId();
            model.singleSignIn = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getSingleSignIn();
            model.returnUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getReturnUrl();
            this._tokenAuthService
                .externalAuthenticate(model)
                .subscribe(function (result) {
                if (result.waitingForActivation) {
                    _this._messageService.info('You have successfully registered. Waiting for activation!');
                    return;
                }
                _this.login(result.accessToken, result.encryptedAccessToken, result.expireInSeconds, result.refreshToken, result.refreshTokenExpireInSeconds, false, '', result.returnUrl);
            });
        }
    };
    LoginService.prototype.wsFederationLoginStatusChangeCallback = function (errorDesc, token, error, tokenType) {
        var _this = this;
        var user = this.wsFederationAuthenticationContext.getCachedUser();
        var model = new _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["ExternalAuthenticateModel"]();
        model.authProvider = ExternalLoginProvider.WSFEDERATION;
        model.providerAccessCode = token;
        model.providerKey = user.profile.sub;
        model.singleSignIn = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getSingleSignIn();
        model.returnUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getReturnUrl();
        this._tokenAuthService
            .externalAuthenticate(model)
            .subscribe(function (result) {
            if (result.waitingForActivation) {
                _this._messageService.info('You have successfully registered. Waiting for activation!');
                _this._router.navigate(['account/login']);
                return;
            }
            _this.login(result.accessToken, result.encryptedAccessToken, result.expireInSeconds, result.refreshToken, result.refreshTokenExpireInSeconds, false, '', result.returnUrl);
        });
    };
    /**
     * Microsoft login is not completed yet, because of an error thrown by zone.js: https://github.com/angular/zone.js/issues/290
     */
    LoginService.prototype.microsoftLoginCallback = function (response) {
        var _this = this;
        var model = new _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["ExternalAuthenticateModel"]();
        model.authProvider = ExternalLoginProvider.MICROSOFT;
        model.providerAccessCode = response.accessToken;
        // remove dashes and starting 0 characters from objectId
        // 000-000-111-222 will be converted to 111222
        model.providerKey = response.idToken.objectId
            .replace(new RegExp('-', 'gm'), '')
            .replace(/^0*/g, '');
        model.singleSignIn = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getSingleSignIn();
        model.returnUrl = _shared_helpers_UrlHelper__WEBPACK_IMPORTED_MODULE_4__["UrlHelper"].getReturnUrl();
        this._tokenAuthService
            .externalAuthenticate(model)
            .subscribe(function (result) {
            if (result.waitingForActivation) {
                _this._messageService.info('You have successfully registered. Waiting for activation!');
                return;
            }
            _this.login(result.accessToken, result.encryptedAccessToken, result.expireInSeconds, result.refreshToken, result.refreshTokenExpireInSeconds, false, '', result.returnUrl);
        });
    };
    LoginService.twoFactorRememberClientTokenName = 'TwoFactorRememberClientToken';
    LoginService.ɵfac = function LoginService_Factory(t) { return new (t || LoginService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["TokenAuthServiceProxy"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["AccountServiceProxy"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["MessageService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["TokenService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["LogService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_9__["OAuthService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_app_shared_utils_local_storage_service__WEBPACK_IMPORTED_MODULE_12__["LocalStorageService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["TwitterServiceProxy"])); };
    LoginService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: LoginService, factory: LoginService.ɵfac });
    return LoginService;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LoginService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
    }], function () { return [{ type: _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["TokenAuthServiceProxy"] }, { type: _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["AccountServiceProxy"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["MessageService"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["TokenService"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_0__["LogService"] }, { type: angular_oauth2_oidc__WEBPACK_IMPORTED_MODULE_9__["OAuthService"] }, { type: _app_shared_utils_local_storage_service__WEBPACK_IMPORTED_MODULE_12__["LocalStorageService"] }, { type: _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["TwitterServiceProxy"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/new-password-success/new-password-success.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/account/auth/new-password-success/new-password-success.component.ts ***!
  \*********************************************************************************/
/*! exports provided: NewPasswordSuccessComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewPasswordSuccessComponent", function() { return NewPasswordSuccessComponent; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_modules_success_message_success_message_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../app/shared/modules/success-message/success-message.component */ "./src/app/shared/modules/success-message/success-message.component.ts");





var NewPasswordSuccessComponent = /** @class */ (function () {
    function NewPasswordSuccessComponent(router, activatedRoute) {
        this.router = router;
        this.activatedRoute = activatedRoute;
    }
    NewPasswordSuccessComponent.prototype.ngOnInit = function () {
    };
    NewPasswordSuccessComponent.prototype.goToSignon = function () {
        this.router.navigate(['/account/login']);
    };
    NewPasswordSuccessComponent.ɵfac = function NewPasswordSuccessComponent_Factory(t) { return new (t || NewPasswordSuccessComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["ActivatedRoute"])); };
    NewPasswordSuccessComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: NewPasswordSuccessComponent, selectors: [["app-new-password-success"]], decls: 1, vars: 0, consts: [["message", "YourPasswordWasReset", "actionLabel", "SignOn", 3, "actionTriggered"]], template: function NewPasswordSuccessComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "app-success-message", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("actionTriggered", function NewPasswordSuccessComponent_Template_app_success_message_actionTriggered_0_listener() { return ctx.goToSignon(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        } }, directives: [_app_shared_modules_success_message_success_message_component__WEBPACK_IMPORTED_MODULE_2__["SuccessMessageComponent"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC9hdXRoL25ldy1wYXNzd29yZC1zdWNjZXNzL25ldy1wYXNzd29yZC1zdWNjZXNzLmNvbXBvbmVudC5sZXNzIn0= */"] });
    return NewPasswordSuccessComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](NewPasswordSuccessComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'app-new-password-success',
                templateUrl: './new-password-success.component.html',
                styleUrls: ['./new-password-success.component.less']
            }]
    }], function () { return [{ type: _angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_0__["ActivatedRoute"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/new-password/new-password.component.ts":
/*!*****************************************************************!*\
  !*** ./src/account/auth/new-password/new-password.component.ts ***!
  \*****************************************************************/
/*! exports provided: NewPasswordComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewPasswordComponent", function() { return NewPasswordComponent; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _app_shared_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../../app/shared/helpers/helpers */ "./src/app/shared/helpers/helpers.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
/* harmony import */ var _reset_password_reset_password_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../reset-password/reset-password.service */ "./src/account/auth/reset-password/reset-password.service.ts");
/* harmony import */ var _app_shared_utils_validation_messages_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../app/shared/utils/validation-messages.component */ "./src/app/shared/utils/validation-messages.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _app_shared_modules_svg_svg_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../app/shared/modules/svg/svg.component */ "./src/app/shared/modules/svg/svg.component.ts");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();














function NewPasswordComponent_div_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "label", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](ctx_r0.displayError);
} }
function NewPasswordComponent_div_28_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](1, "app-svg", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} }
var _c0 = function () { return ["../plans"]; };
var NewPasswordComponent = /** @class */ (function (_super) {
    __extends(NewPasswordComponent, _super);
    function NewPasswordComponent(injector, resetPasswordService, formBuilder, router, activatedRoute) {
        var _this = _super.call(this, injector) || this;
        _this.resetPasswordService = resetPasswordService;
        _this.formBuilder = formBuilder;
        _this.router = router;
        _this.activatedRoute = activatedRoute;
        _this.isLoading = false;
        _this.submitting = false;
        _this.displayError = '';
        return _this;
    }
    NewPasswordComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.setupForm();
        this.activatedRoute.params.subscribe(function (res) {
            _this.params = res;
            if (!_this.params.userId || !_this.params.passwordResetCode) {
                _this.router.navigate(['/account/login']);
            }
        });
    };
    NewPasswordComponent.prototype.setupForm = function () {
        this.passwordForm = this.formBuilder.group({
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
            confirmPassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]],
        }, { validator: Object(_app_shared_helpers_helpers__WEBPACK_IMPORTED_MODULE_1__["confirmedPasswordValidator"])('password', 'confirmPassword') });
    };
    NewPasswordComponent.prototype.updatePassword = function () {
        var _this = this;
        if (this.passwordForm.invalid)
            return;
        this.resetPasswordService.resetPassword({
            userId: this.params.userId,
            resetCode: this.params.passwordResetCode,
            password: this.passwordForm.value.password
        }, function (response) {
            if (response && response.error) {
                _this.displayError = response.message;
            }
            _this.submitting = false;
        }).subscribe(function (res) {
            _this.router.navigate(['/account/new-password-success']);
        });
    };
    NewPasswordComponent.ɵfac = function NewPasswordComponent_Factory(t) { return new (t || NewPasswordComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_reset_password_reset_password_service__WEBPACK_IMPORTED_MODULE_5__["ResetPasswordService"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["ActivatedRoute"])); };
    NewPasswordComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: NewPasswordComponent, selectors: [["app-new-password"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 29, vars: 26, consts: [[1, "new-password"], [3, "formGroup", "ngSubmit"], [1, "form-group", "m-form-input", "description"], [1, "form-group", "m-form-input"], [1, "input-group", "m-form-textbox"], ["formControlName", "password", "type", "password", "name", "password", "autocomplete", "new-password", "maxlength", "32", "required", "", 1, "form-control", 3, "placeholder"], [3, "formCtrl"], ["formControlName", "confirmPassword", "type", "password", "autocomplete", "new-password", "name", "password", "required", "", "maxlength", "32", 1, "form-control", 3, "placeholder"], ["class", "form-group row", 4, "ngIf"], [1, "form-group", "row"], [1, "col-md-4"], ["type", "submit", 1, "btn", "m-button", "m-button-block", 3, "disabled"], [1, "mb-1", "register-link-ctnr"], [3, "routerLink"], [1, "fa", "fa-plus-circle"], ["class", "m-loader", 4, "ngIf"], [1, "m-form-error", "tcError"], [1, "m-loader"], ["name", "loader"]], template: function NewPasswordComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "form", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("ngSubmit", function NewPasswordComponent_Template_form_ngSubmit_1_listener() { return ctx.updatePassword(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "p", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](4, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](5, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](6, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](7, "input", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](8, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](9, "validation-messages", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](10, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](11, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](12, "input", 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](13, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](14, "validation-messages", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](15, NewPasswordComponent_div_15_Template, 3, 1, "div", 8);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](16, "div", 9);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](17, "div", 10);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](18, "button", 11);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](19);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](20, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](21, "p", 12);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](22);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](23, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](24, "a", 13);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](25, "i", 14);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](26);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](27, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](28, NewPasswordComponent_div_28_Template, 2, 0, "div", 15);
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("formGroup", ctx.passwordForm);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](4, 13, "ResetYourPassword"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](8, 15, "NewPassword"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("formCtrl", ctx.passwordForm.get("password"));
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](13, 17, "ConfirmNewPassword"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("formCtrl", ctx.passwordForm.get("confirmPassword"));
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", ctx.displayError != "");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("disabled", ctx.passwordForm.invalid);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](20, 19, "ChangePassword"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](23, 21, "DontHaveAnAccount"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("routerLink", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction0"](25, _c0));
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](27, 23, "SignUp"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", ctx.isLoading);
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControlName"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["MaxLengthValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["RequiredValidator"], _app_shared_utils_validation_messages_component__WEBPACK_IMPORTED_MODULE_6__["ValidationMessagesComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgIf"], _angular_router__WEBPACK_IMPORTED_MODULE_0__["RouterLinkWithHref"], _app_shared_modules_svg_svg_component__WEBPACK_IMPORTED_MODULE_8__["SvgComponent"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_9__["LocalizePipe"]], styles: [".new-password[_ngcontent-%COMP%] {\n  max-width: 350px;\n  text-align: center;\n  margin: auto;\n}\n.new-password[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\n  margin-bottom: 98px;\n}\n.new-password[_ngcontent-%COMP%]   .m-button[_ngcontent-%COMP%] {\n  margin: auto;\n  margin-top: 80px;\n}\n.new-password[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%] {\n  text-align: left;\n}\n.new-password[_ngcontent-%COMP%]   .register-link-ctnr[_ngcontent-%COMP%] {\n  margin-bottom: min(max(24px, 8vw), 75px);\n  margin-top: min(max(24px, 10vw), 100px);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hY2NvdW50L2F1dGgvbmV3LXBhc3N3b3JkL006L3JlcG9zL0RlcGxveVNvbHV0aW9uc0NsaW1hdGVDaGFuZ2UvZHNzX2NjaXBfcHJvdG8vZGV2L3RhL2FuZ3VsYXIvc3JjL2FjY291bnQvYXV0aC9uZXctcGFzc3dvcmQvbmV3LXBhc3N3b3JkLmNvbXBvbmVudC5sZXNzIiwic3JjL2FjY291bnQvYXV0aC9uZXctcGFzc3dvcmQvbmV3LXBhc3N3b3JkLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7QUNESjtBREZBO0VBTVEsbUJBQUE7QUNEUjtBRExBO0VBVVEsWUFBQTtFQUNBLGdCQUFBO0FDRlI7QURUQTtFQWVRLGdCQUFBO0FDSFI7QURaQTtFQW1CUSx3Q0FBQTtFQUNBLHVDQUFBO0FDSlIiLCJmaWxlIjoic3JjL2FjY291bnQvYXV0aC9uZXctcGFzc3dvcmQvbmV3LXBhc3N3b3JkLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIi4vLi4vLi4vLi4vc3R5bGVzL3ZhcmlhYmxlcy5sZXNzXCI7XG5cbi5uZXctcGFzc3dvcmQge1xuICAgIG1heC13aWR0aDogMzUwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbjogYXV0bztcblxuICAgIGZvcm0ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA5OHB4O1xuICAgIH1cblxuICAgIC5tLWJ1dHRvbiB7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgbWFyZ2luLXRvcDogODBweDtcbiAgICB9XG5cbiAgICAuZGVzY3JpcHRpb24ge1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cblxuICAgIC5yZWdpc3Rlci1saW5rLWN0bnIge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAlKH5cIm1pbihtYXgoJWEsIDh2dyksICVhKVwiLCBAc3BhY2luZy0yNCwgQHNwYWNpbmctNzUpO1xuICAgICAgICBtYXJnaW4tdG9wOiAlKH5cIm1pbihtYXgoJWEsIDEwdncpLCAlYSlcIiwgQHNwYWNpbmctMjQsIEBzcGFjaW5nLTEwMCk7XG4gICAgfVxufSIsIi5uZXctcGFzc3dvcmQge1xuICBtYXgtd2lkdGg6IDM1MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogYXV0bztcbn1cbi5uZXctcGFzc3dvcmQgZm9ybSB7XG4gIG1hcmdpbi1ib3R0b206IDk4cHg7XG59XG4ubmV3LXBhc3N3b3JkIC5tLWJ1dHRvbiB7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLXRvcDogODBweDtcbn1cbi5uZXctcGFzc3dvcmQgLmRlc2NyaXB0aW9uIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi5uZXctcGFzc3dvcmQgLnJlZ2lzdGVyLWxpbmstY3RuciB7XG4gIG1hcmdpbi1ib3R0b206IG1pbihtYXgoMjRweCwgOHZ3KSwgNzVweCk7XG4gIG1hcmdpbi10b3A6IG1pbihtYXgoMjRweCwgMTB2dyksIDEwMHB4KTtcbn1cbiJdfQ== */"] });
    return NewPasswordComponent;
}(_app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_4__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](NewPasswordComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"],
        args: [{
                selector: 'app-new-password',
                templateUrl: './new-password.component.html',
                styleUrls: ['./new-password.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injector"] }, { type: _reset_password_reset_password_service__WEBPACK_IMPORTED_MODULE_5__["ResetPasswordService"] }, { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_0__["ActivatedRoute"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/register/register.component.ts":
/*!*********************************************************!*\
  !*** ./src/account/auth/register/register.component.ts ***!
  \*********************************************************/
/*! exports provided: RegisterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisterComponent", function() { return RegisterComponent; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/AppConsts */ "./src/app/shared/AppConsts.ts");
/* harmony import */ var _app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var ngx_captcha__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-captcha */ "./node_modules/ngx-captcha/__ivy_ngcc__/fesm2015/ngx-captcha.js");
/* harmony import */ var _register_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./register.service */ "./src/account/auth/register/register.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _app_shared_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/shared/helpers/helpers */ "./src/app/shared/helpers/helpers.ts");
/* harmony import */ var _app_shared_utils_validation_messages_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../app/shared/utils/validation-messages.component */ "./src/app/shared/utils/validation-messages.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


















function RegisterComponent_div_34_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "label", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r0.displayError);
} }
var _c0 = function () { return ["../login"]; };
var RegisterComponent = /** @class */ (function (_super) {
    __extends(RegisterComponent, _super);
    function RegisterComponent(injector, registerService, reCaptchaV3Service, sessionService, router, formBuilder) {
        var _this = _super.call(this, injector) || this;
        _this.registerService = registerService;
        _this.reCaptchaV3Service = reCaptchaV3Service;
        _this.sessionService = sessionService;
        _this.router = router;
        _this.formBuilder = formBuilder;
        _this.recaptchaSiteKey = _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__["AppConsts"].recaptchaSiteKey;
        return _this;
    }
    Object.defineProperty(RegisterComponent.prototype, "isSelfRegistrationAllowed", {
        get: function () {
            if (!this.sessionService.tenantId) {
                return false;
            }
            return this.setting.getBoolean('App.UserManagement.AllowSelfRegistration');
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RegisterComponent.prototype, "useCaptcha", {
        get: function () {
            return this.setting.getBoolean('App.UserManagement.UseCaptchaOnLogin');
        },
        enumerable: false,
        configurable: true
    });
    RegisterComponent.prototype.ngOnInit = function () {
        this.setupForm();
    };
    RegisterComponent.prototype.setupForm = function () {
        this.registerForm = this.formBuilder.group({
            name: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required]],
            surname: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required]],
            userName: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required]],
            emailAddress: ['', [_app_shared_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__["customEmailValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required]],
            password: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required]],
            confirmPassword: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].minLength(6), _angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].required]],
            acceptTerms: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["Validators"].requiredTrue]]
        }, { validator: Object(_app_shared_helpers_helpers__WEBPACK_IMPORTED_MODULE_8__["confirmedPasswordValidator"])('password', 'confirmPassword') });
    };
    RegisterComponent.prototype.register = function () {
        var _this = this;
        this.submitting = true;
        var recaptchaCallback = function (token) {
            _this.registerService.payload = _this.registerForm.value;
            _this.registerService.register(token, function (response) {
                _this.submitting = false;
                if (response && response.error) {
                    _this.displayError = response.message;
                    return;
                }
                sessionStorage.removeItem('subscriptionPlan');
                _this.router.navigate(['account/signon-success']);
            })
                .subscribe(function () {
                _this.submitting = false;
            }, function (err) {
                _this.submitting = false;
            });
        };
        if (this.useCaptcha) {
            this.reCaptchaV3Service.execute(this.recaptchaSiteKey, 'register', function (token) {
                recaptchaCallback(token);
            });
        }
        else {
            recaptchaCallback(null);
        }
    };
    RegisterComponent.ɵfac = function RegisterComponent_Factory(t) { return new (t || RegisterComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_register_service__WEBPACK_IMPORTED_MODULE_6__["RegisterService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](ngx_captcha__WEBPACK_IMPORTED_MODULE_5__["ReCaptchaV3Service"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_4__["AbpSessionService"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"])); };
    RegisterComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: RegisterComponent, selectors: [["app-register"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 62, vars: 51, consts: [[3, "formGroup", "ngSubmit"], [1, "form-group", "m-form-input"], [1, "input-group", "m-form-textbox"], ["formControlName", "name", "type", "text", "autocomplete", "given-name", "name", "firstName", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], [3, "formCtrl"], ["formControlName", "surname", "type", "text", "autocomplete", "family-name", "name", "lastName", "required", "", 1, "form-control", 3, "placeholder"], ["formControlName", "userName", "type", "text", "autocomplete", "username", "name", "userName", "required", "", 1, "form-control", 3, "placeholder"], ["formControlName", "emailAddress", "type", "email", "autocomplete", "email", "name", "email", "required", "", 1, "form-control", 3, "placeholder"], ["formControlName", "password", "type", "password", "autocomplete", "new-password", "name", "password", "required", "", "minlength", "1", "maxlength", "32", 1, "form-control", 3, "placeholder"], ["formControlName", "confirmPassword", "type", "password", "autocomplete", "new-password", "name", "password", "required", "", "minlength", "1", "maxlength", "32", 1, "form-control", 3, "placeholder"], [1, "form-group", "row"], [1, "col-md-8"], [4, "ngIf"], [1, "col-md-4"], [1, "m-form-checkbox"], ["formControlName", "acceptTerms", "type", "checkbox", "name", "acceptTerms", "value", "true", "id", "acceptTerms", "required", ""], ["for", "acceptTerms", 1, "loginLabel"], ["href", "#", "target", "_blank"], ["type", "submit", 1, "btn", "m-button", "m-button-block", "m-button-lg", 3, "disabled"], [1, "mb-1", "signon-link-ctnr"], [3, "routerLink"], [1, "fa", "fa-plus-circle"], [1, "m-form-error", "tcError"]], template: function RegisterComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "form", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngSubmit", function RegisterComponent_Template_form_ngSubmit_1_listener() { return ctx.register(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "input", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function RegisterComponent_Template_input_ngModelChange_4_listener($event) { return ctx.registerService.payload.name = $event; });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](5, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](6, "validation-messages", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](9, "input", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](10, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](11, "validation-messages", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](14, "input", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](15, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](16, "validation-messages", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](17, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](19, "input", 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](20, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](21, "validation-messages", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](24, "input", 8);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](25, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](26, "validation-messages", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](27, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](28, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](29, "input", 9);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](30, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](31, "validation-messages", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](32, "div", 10);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](33, "div", 11);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](34, RegisterComponent_div_34_Template, 3, 1, "div", 12);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](35, "div", 13);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](36, "div", 14);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](37, "input", 15);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](38, "label", 16);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](39, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](40);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](41, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](42, "a", 17);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](43);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](44, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](45, "span");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](46);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](47, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](48, "a", 17);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](49);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](50, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](51, "div", 13);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](52, "button", 18);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](53);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](54, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](55, "p", 19);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](56);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](57, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](58, "a", 20);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](59, "i", 21);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](60);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](61, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formGroup", ctx.registerForm);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](5, 24, "FirstName"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx.registerService.payload.name);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", ctx.registerForm.get("name"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](10, 26, "LastName"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", ctx.registerForm.get("surname"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](15, 28, "UserName"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", ctx.registerForm.get("userName"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](20, 30, "Email"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", ctx.registerForm.get("emailAddress"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](25, 32, "Password"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", ctx.registerForm.get("password"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](30, 34, "ConfirmPassword"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", ctx.registerForm.get("confirmPassword"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.displayError);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](6);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"]("", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](41, 36, "AcceptTerms"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](44, 38, "TermsOfService"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](47, 40, "And"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](50, 42, "PrivacyPolicy"));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", ctx.registerForm.invalid || ctx.submitting);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](54, 44, "SignUp"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](57, 46, "AlreadyHaveAnAccount"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("routerLink", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](50, _c0));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](61, 48, "SignOn"), " ");
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_7__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormControlName"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["RequiredValidator"], _app_shared_utils_validation_messages_component__WEBPACK_IMPORTED_MODULE_9__["ValidationMessagesComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["MinLengthValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["MaxLengthValidator"], _angular_common__WEBPACK_IMPORTED_MODULE_10__["NgIf"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["CheckboxControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__["CheckboxRequiredValidator"], _angular_router__WEBPACK_IMPORTED_MODULE_0__["RouterLinkWithHref"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_11__["LocalizePipe"]], styles: [".signon-link-ctnr[_ngcontent-%COMP%] {\n  margin-bottom: 28px;\n  margin-top: min(max(24px, 6vw), 52px);\n}\nform[_ngcontent-%COMP%]   validation-messages[_ngcontent-%COMP%] {\n  margin-top: 8px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%] {\n  width: calc(100% - min(max(24px, 10vw), 80px));\n  margin: auto;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%] {\n  display: inline-block;\n  margin-top: 20px;\n  margin-bottom: 44px;\n  font-size: 16px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%]   [type=\"checkbox\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%]   [type=\"checkbox\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  color: #ffffff;\n}\nform[_ngcontent-%COMP%]   .form-group.password[_ngcontent-%COMP%] {\n  text-align: right;\n}\nform[_ngcontent-%COMP%]   .form-group.password[_ngcontent-%COMP%]   a.password[_ngcontent-%COMP%] {\n  font-size: 12px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-description[_ngcontent-%COMP%] {\n  font-size: 12px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hY2NvdW50L2F1dGgvcmVnaXN0ZXIvTTovcmVwb3MvRGVwbG95U29sdXRpb25zQ2xpbWF0ZUNoYW5nZS9kc3NfY2NpcF9wcm90by9kZXYvdGEvYW5ndWxhci9zcmMvYWNjb3VudC9hdXRoL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5sZXNzIiwic3JjL2FjY291bnQvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUNFLG1CQUFBO0VBQ0EscUNBQUE7QUNIRjtBRE1BO0VBR0ksZUFBQTtBQ05KO0FER0E7RUFPSSw4Q0FBQTtFQUNBLFlBQUE7QUNQSjtBRERBO0VBV00scUJBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtBQ1BOO0FEUEE7O0VBa0JRLGNBQUE7QUNQUjtBRFdJO0VBQ0UsaUJBQUE7QUNUTjtBRFFJO0VBSUksZUFBQTtBQ1RSO0FEakJBO0VBK0JNLGVBQUE7QUNYTiIsImZpbGUiOiJzcmMvYWNjb3VudC9hdXRoL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIi4vLi4vLi4vLi4vc3R5bGVzL3ZhcmlhYmxlcy5sZXNzXCI7XG5cbkBsb2dpbi1ib3gtc2l6aW5nOiAzMDBweDtcblxuLnNpZ25vbi1saW5rLWN0bnIge1xuICBtYXJnaW4tYm90dG9tOiBAc3BhY2luZy0yODtcbiAgbWFyZ2luLXRvcDogJSh+XCJtaW4obWF4KCVhLCA2dncpLCAlYSlcIiwgQHNwYWNpbmctMjQsIEBzcGFjaW5nLTUyKTtcbn1cblxuZm9ybSB7XG5cbiAgdmFsaWRhdGlvbi1tZXNzYWdlcyB7XG4gICAgbWFyZ2luLXRvcDogQHNwYWNpbmctODtcbiAgfVxuXG4gIC5mb3JtLWdyb3VwIHtcbiAgICB3aWR0aDogJSh+XCJjYWxjKDEwMCUgLSBtaW4obWF4KCVhLCAxMHZ3KSwgJWEpKVwiLCBAc3BhY2luZy0yNCwgQHNwYWNpbmctODApO1xuICAgIG1hcmdpbjogYXV0bztcblxuICAgIC5tLWZvcm0tY2hlY2tib3gge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLXRvcDogQHNwYWNpbmctMjA7XG4gICAgICBtYXJnaW4tYm90dG9tOiBAc3BhY2luZy00NDtcbiAgICAgIGZvbnQtc2l6ZTogQGZvbnQtc2l6ZTtcblxuICAgICAgW3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkK2xhYmVsLFxuICAgICAgW3R5cGU9XCJjaGVja2JveFwiXTpub3QoOmNoZWNrZWQpK2xhYmVsIHtcbiAgICAgICAgY29sb3I6IEBjb2xvci13aGl0ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLnBhc3N3b3JkIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuXG4gICAgICBhLnBhc3N3b3JkIHtcbiAgICAgICAgZm9udC1zaXplOiBAc3BhY2luZy0xMjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAubS1mb3JtLWRlc2NyaXB0aW9uIHtcbiAgICAgIGZvbnQtc2l6ZTogQHNwYWNpbmctMTI7XG4gICAgfVxuICB9XG5cbn0iLCIuc2lnbm9uLWxpbmstY3RuciB7XG4gIG1hcmdpbi1ib3R0b206IDI4cHg7XG4gIG1hcmdpbi10b3A6IG1pbihtYXgoMjRweCwgNnZ3KSwgNTJweCk7XG59XG5mb3JtIHZhbGlkYXRpb24tbWVzc2FnZXMge1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5mb3JtIC5mb3JtLWdyb3VwIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIG1pbihtYXgoMjRweCwgMTB2dyksIDgwcHgpKTtcbiAgbWFyZ2luOiBhdXRvO1xufVxuZm9ybSAuZm9ybS1ncm91cCAubS1mb3JtLWNoZWNrYm94IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA0NHB4O1xuICBmb250LXNpemU6IDE2cHg7XG59XG5mb3JtIC5mb3JtLWdyb3VwIC5tLWZvcm0tY2hlY2tib3ggW3R5cGU9XCJjaGVja2JveFwiXTpjaGVja2VkICsgbGFiZWwsXG5mb3JtIC5mb3JtLWdyb3VwIC5tLWZvcm0tY2hlY2tib3ggW3R5cGU9XCJjaGVja2JveFwiXTpub3QoOmNoZWNrZWQpICsgbGFiZWwge1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cbmZvcm0gLmZvcm0tZ3JvdXAucGFzc3dvcmQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbmZvcm0gLmZvcm0tZ3JvdXAucGFzc3dvcmQgYS5wYXNzd29yZCB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbmZvcm0gLmZvcm0tZ3JvdXAgLm0tZm9ybS1kZXNjcmlwdGlvbiB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbiJdfQ== */"] });
    return RegisterComponent;
}(_app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_3__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](RegisterComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'app-register',
                templateUrl: './register.component.html',
                styleUrls: ['./register.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }, { type: _register_service__WEBPACK_IMPORTED_MODULE_6__["RegisterService"] }, { type: ngx_captcha__WEBPACK_IMPORTED_MODULE_5__["ReCaptchaV3Service"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_4__["AbpSessionService"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"] }, { type: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/register/register.service.ts":
/*!*******************************************************!*\
  !*** ./src/account/auth/register/register.service.ts ***!
  \*******************************************************/
/*! exports provided: RegisterService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisterService", function() { return RegisterService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/AppConsts */ "./src/app/shared/AppConsts.ts");
/* harmony import */ var _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared/service-proxies/service-proxies */ "./src/app/shared/service-proxies/service-proxies.ts");
/* harmony import */ var abp_ng2_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! abp-ng2-module */ "./node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");












var RegisterService = /** @class */ (function () {
    function RegisterService(router, messageService, accountService) {
        this.router = router;
        this.messageService = messageService;
        this.accountService = accountService;
        this.localizationSourceName = _app_shared_AppConsts__WEBPACK_IMPORTED_MODULE_2__["AppConsts"].localization.defaultLocalizationSourceName;
        this.payload = new _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_3__["RegisterInput"]();
    }
    RegisterService.prototype.register = function (captchaResponse, finallyCallback) {
        var _this = this;
        var billingPlanId = sessionStorage.getItem('subscriptionPlan');
        if (captchaResponse) {
            this.payload.captchaResponse = captchaResponse;
        }
        if (billingPlanId && environments_environment__WEBPACK_IMPORTED_MODULE_5__["environment"].multiBillingPlan) {
            this.payload['BillingPlanId'] = sessionStorage.getItem('subscriptionPlan');
        }
        finallyCallback = finallyCallback || (function () { });
        abp.message.error = function (message, title, options) {
            finallyCallback({ error: true, message: message, title: title });
        };
        return this.accountService.register(this.payload)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["catchError"])(function (err) {
            abp.log.error(err);
            abp.message.error(_this.localization.localize('CouldNotRegisterExternalUser', _this.localizationSourceName));
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["throwError"])(err);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["tap"])(function (res) {
            // this.messageService.info(
            //     'You have successfully registered!'
            // );
            _this.router.navigate(['account/signon-success']);
        }));
    };
    RegisterService.ɵfac = function RegisterService_Factory(t) { return new (t || RegisterService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](abp_ng2_module__WEBPACK_IMPORTED_MODULE_4__["MessageService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_3__["AccountServiceProxy"])); };
    RegisterService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: RegisterService, factory: RegisterService.ɵfac, providedIn: 'root' });
    return RegisterService;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](RegisterService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"] }, { type: abp_ng2_module__WEBPACK_IMPORTED_MODULE_4__["MessageService"] }, { type: _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_3__["AccountServiceProxy"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/reset-password-success/reset-password-success.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/account/auth/reset-password-success/reset-password-success.component.ts ***!
  \*************************************************************************************/
/*! exports provided: ResetPasswordSuccessComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResetPasswordSuccessComponent", function() { return ResetPasswordSuccessComponent; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_modules_success_message_success_message_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../app/shared/modules/success-message/success-message.component */ "./src/app/shared/modules/success-message/success-message.component.ts");





var ResetPasswordSuccessComponent = /** @class */ (function () {
    function ResetPasswordSuccessComponent(router) {
        this.router = router;
    }
    ResetPasswordSuccessComponent.prototype.ngOnInit = function () {
    };
    ResetPasswordSuccessComponent.prototype.goToSignon = function () {
        this.router.navigateByUrl('account/login');
    };
    ResetPasswordSuccessComponent.ɵfac = function ResetPasswordSuccessComponent_Factory(t) { return new (t || ResetPasswordSuccessComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"])); };
    ResetPasswordSuccessComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ResetPasswordSuccessComponent, selectors: [["app-reset-password-success"]], decls: 1, vars: 0, consts: [["message", "ResetPasswordSuccess", "actionLabel", "ReturToLogin", 3, "actionTriggered"]], template: function ResetPasswordSuccessComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "app-success-message", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("actionTriggered", function ResetPasswordSuccessComponent_Template_app_success_message_actionTriggered_0_listener() { return ctx.goToSignon(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        } }, directives: [_app_shared_modules_success_message_success_message_component__WEBPACK_IMPORTED_MODULE_2__["SuccessMessageComponent"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC9hdXRoL3Jlc2V0LXBhc3N3b3JkLXN1Y2Nlc3MvcmVzZXQtcGFzc3dvcmQtc3VjY2Vzcy5jb21wb25lbnQubGVzcyJ9 */"] });
    return ResetPasswordSuccessComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](ResetPasswordSuccessComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'app-reset-password-success',
                templateUrl: './reset-password-success.component.html',
                styleUrls: ['./reset-password-success.component.less']
            }]
    }], function () { return [{ type: _angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/reset-password/reset-password.component.ts":
/*!*********************************************************************!*\
  !*** ./src/account/auth/reset-password/reset-password.component.ts ***!
  \*********************************************************************/
/*! exports provided: ResetPasswordComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResetPasswordComponent", function() { return ResetPasswordComponent; });
/* harmony import */ var _reset_password_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reset-password.service */ "./src/account/auth/reset-password/reset-password.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _app_shared_utils_validation_messages_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../app/shared/utils/validation-messages.component */ "./src/app/shared/utils/validation-messages.component.ts");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();











function ResetPasswordComponent_validation_messages_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "validation-messages", 17);
} if (rf & 2) {
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("formCtrl", ctx_r2.email);
} }
function ResetPasswordComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "label", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r3.displayError);
} }
var _c0 = function () { return ["../register"]; };
var ResetPasswordComponent = /** @class */ (function (_super) {
    __extends(ResetPasswordComponent, _super);
    function ResetPasswordComponent(injector, router, service) {
        var _this = _super.call(this, injector) || this;
        _this.router = router;
        _this.service = service;
        _this.displayError = '';
        return _this;
    }
    ResetPasswordComponent.prototype.ngOnInit = function () {
    };
    ResetPasswordComponent.prototype.requestReset = function () {
        var _this = this;
        this.submitting = true;
        this.displayError = '';
        this.service.postForgotPasswordRequest(this.email)
            .subscribe(function (res) {
            _this.submitting = false;
            _this.router.navigateByUrl('/account/reset-password-success');
        }, function (err) {
            var _a, _b;
            console.log(err);
            _this.displayError = (_b = (_a = err === null || err === void 0 ? void 0 : err.error) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.message;
            _this.submitting = false;
        });
    };
    ResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) { return new (t || ResetPasswordComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_reset_password_service__WEBPACK_IMPORTED_MODULE_0__["ResetPasswordService"])); };
    ResetPasswordComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ResetPasswordComponent, selectors: [["app-reset-password"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 30, vars: 24, consts: [[3, "ngSubmit"], ["resetRequestForm", "ngForm"], [1, "form-group", "m-form-input", "description"], [1, "form-group", "m-form-input"], [1, "input-group", "m-form-textbox"], ["type", "email", "autocomplete", "email", "name", "userNameOrEmailAddress", "required", "", "ngModel", "", "email", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["emailInput", "ngModel"], [3, "formCtrl", 4, "ngIf"], ["class", "form-group row", 4, "ngIf"], [1, "form-group", "row"], [1, "col", "forgot-password"], ["routerLink", "/forgot-password", 1, "forgot-password-link"], [1, "col-md-4"], ["type", "submit", 1, "btn", "m-button", "m-button-block", "m-button-lg", 3, "disabled"], [1, "mb-1", "register-link-ctnr"], [3, "routerLink"], [1, "fa", "fa-plus-circle"], [3, "formCtrl"], [1, "m-form-error", "tcError"]], template: function ResetPasswordComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "form", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngSubmit", function ResetPasswordComponent_Template_form_ngSubmit_1_listener() { return ctx.requestReset(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "p", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](5, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "input", 5, 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("ngModelChange", function ResetPasswordComponent_Template_input_ngModelChange_8_listener($event) { return ctx.email = $event; });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](10, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](11, ResetPasswordComponent_validation_messages_11_Template, 1, 1, "validation-messages", 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](12, ResetPasswordComponent_div_12_Template, 3, 1, "div", 8);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "div", 9);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "div", 10);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](15, "a", 11);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](16);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](17, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "div", 9);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "div", 12);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](20, "button", 13);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](21);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](22, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "p", 14);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](24);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](25, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](26, "a", 15);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](27, "i", 16);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](28);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](29, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        } if (rf & 2) {
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](2);
            var _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](9);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](5, 11, "ResetPasswordTitle"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpropertyInterpolate1"]("placeholder", "", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](10, 13, "UserNameOrEmail"), " *");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngModel", ctx.email);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", _r1.touched && _r1.invalid);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.displayError != "");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](17, 15, "RememberMyPassword"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("disabled", !_r0.valid || ctx.submitting);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](22, 17, "SendMeAnEmailToReset"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](25, 19, "DontHaveAnAccount"), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("routerLink", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](23, _c0));
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](29, 21, "SignUp"), " ");
        } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_4__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgForm"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["RequiredValidator"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NgModel"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["EmailValidator"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["NgIf"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterLinkWithHref"], _app_shared_utils_validation_messages_component__WEBPACK_IMPORTED_MODULE_6__["ValidationMessagesComponent"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_7__["LocalizePipe"]], styles: [".m-loader[_ngcontent-%COMP%] {\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n}\n.description[_ngcontent-%COMP%] {\n  text-align: left;\n}\n.remember-me-ctnr[_ngcontent-%COMP%] {\n  text-align: right;\n}\n.register-link-ctnr[_ngcontent-%COMP%] {\n  margin-bottom: min(max(24px, 8vw), 75px);\n  margin-top: min(max(24px, 10vw), 100px);\n}\n.forgot-password[_ngcontent-%COMP%] {\n  margin-top: 20px;\n  margin-bottom: min(max(24px, 12vw), 126px);\n  text-align: right;\n}\nform[_ngcontent-%COMP%] {\n  max-width: 450px;\n  margin: auto;\n}\nform[_ngcontent-%COMP%]   validation-messages[_ngcontent-%COMP%] {\n  margin-top: 8px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%] {\n  width: calc(100% - min(max(24px, 10vw), 80px));\n  margin: auto;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%] {\n  display: inline-block;\n  margin-top: 20px;\n  font-size: 16px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%]   [type=\"checkbox\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%], form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-checkbox[_ngcontent-%COMP%]   [type=\"checkbox\"][_ngcontent-%COMP%]:not(:checked)    + label[_ngcontent-%COMP%] {\n  color: #ffffff;\n}\nform[_ngcontent-%COMP%]   .form-group.password[_ngcontent-%COMP%] {\n  text-align: right;\n}\nform[_ngcontent-%COMP%]   .form-group.password[_ngcontent-%COMP%]   a.password[_ngcontent-%COMP%] {\n  font-size: 12px;\n}\nform[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   .m-form-description[_ngcontent-%COMP%] {\n  font-size: 12px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hY2NvdW50L2F1dGgvcmVzZXQtcGFzc3dvcmQvTTovcmVwb3MvRGVwbG95U29sdXRpb25zQ2xpbWF0ZUNoYW5nZS9kc3NfY2NpcF9wcm90by9kZXYvdGEvYW5ndWxhci9zcmMvYWNjb3VudC9hdXRoL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5sZXNzIiwic3JjL2FjY291bnQvYXV0aC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUNFLGFBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtBQ0hGO0FETUE7RUFDSSxnQkFBQTtBQ0pKO0FET0E7RUFDRSxpQkFBQTtBQ0xGO0FEUUE7RUFDRSx3Q0FBQTtFQUNBLHVDQUFBO0FDTkY7QURTQTtFQUNFLGdCQUFBO0VBQ0EsMENBQUE7RUFDQSxpQkFBQTtBQ1BGO0FEVUE7RUFDRSxnQkFBQTtFQUNBLFlBQUE7QUNSRjtBRE1BO0VBS0ksZUFBQTtBQ1JKO0FER0E7RUFRSSw4Q0FBQTtFQUNBLFlBQUE7QUNSSjtBRERBO0VBWU0scUJBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7QUNSTjtBRE5BOztFQWlCUSxjQUFBO0FDUFI7QURXSTtFQUNFLGlCQUFBO0FDVE47QURRSTtFQUdJLGVBQUE7QUNSUjtBRGhCQTtFQTZCTSxlQUFBO0FDVk4iLCJmaWxlIjoic3JjL2FjY291bnQvYXV0aC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLy4uLy4uLy4uL3N0eWxlcy92YXJpYWJsZXMubGVzc1wiO1xuXG5AbG9naW4tYm94LXNpemluZzogMzAwcHg7XG5cbi5tLWxvYWRlciB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDB2dztcbiAgcG9zaXRpb246IGZpeGVkO1xufVxuXG4uZGVzY3JpcHRpb24ge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5yZW1lbWJlci1tZS1jdG5yIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5yZWdpc3Rlci1saW5rLWN0bnIge1xuICBtYXJnaW4tYm90dG9tOiAlKH5cIm1pbihtYXgoJWEsIDh2dyksICVhKVwiLCBAc3BhY2luZy0yNCwgQHNwYWNpbmctNzUpO1xuICBtYXJnaW4tdG9wOiAlKH5cIm1pbihtYXgoJWEsIDEwdncpLCAlYSlcIiwgQHNwYWNpbmctMjQsIEBzcGFjaW5nLTEwMCk7XG59XG5cbi5mb3Jnb3QtcGFzc3dvcmQge1xuICBtYXJnaW4tdG9wOiBAc3BhY2luZy0yMDtcbiAgbWFyZ2luLWJvdHRvbTogJSh+XCJtaW4obWF4KCVhLCAxMnZ3KSwgJWEpXCIsIEBzcGFjaW5nLTI0LCBAc3BhY2luZy0xMjYpO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuZm9ybSB7XG4gIG1heC13aWR0aDogNDUwcHg7XG4gIG1hcmdpbjogYXV0bztcblxuICB2YWxpZGF0aW9uLW1lc3NhZ2VzIHtcbiAgICBtYXJnaW4tdG9wOiBAc3BhY2luZy04O1xuICB9XG4gIC5mb3JtLWdyb3VwIHtcbiAgICB3aWR0aDogJSh+XCJjYWxjKDEwMCUgLSBtaW4obWF4KCVhLCAxMHZ3KSwgJWEpKVwiLCBAc3BhY2luZy0yNCwgQHNwYWNpbmctODApO1xuICAgIG1hcmdpbjogYXV0bztcblxuICAgIC5tLWZvcm0tY2hlY2tib3gge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLXRvcDogQHNwYWNpbmctMjA7XG4gICAgICBmb250LXNpemU6IEBmb250LXNpemU7XG4gICAgICBbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbCxcbiAgICAgIFt0eXBlPVwiY2hlY2tib3hcIl06bm90KDpjaGVja2VkKSArIGxhYmVsIHtcbiAgICAgICAgY29sb3I6IEBjb2xvci13aGl0ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLnBhc3N3b3JkIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgYS5wYXNzd29yZCB7XG4gICAgICAgIGZvbnQtc2l6ZTogQHNwYWNpbmctMTI7XG4gICAgICB9XG4gICAgfVxuICAgXG4gICAgLm0tZm9ybS1kZXNjcmlwdGlvbiB7XG4gICAgICBmb250LXNpemU6IEBzcGFjaW5nLTEyO1xuICAgIH1cbiAgfVxufVxuXG4iLCIubS1sb2FkZXIge1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwdnc7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbn1cbi5kZXNjcmlwdGlvbiB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4ucmVtZW1iZXItbWUtY3RuciB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLnJlZ2lzdGVyLWxpbmstY3RuciB7XG4gIG1hcmdpbi1ib3R0b206IG1pbihtYXgoMjRweCwgOHZ3KSwgNzVweCk7XG4gIG1hcmdpbi10b3A6IG1pbihtYXgoMjRweCwgMTB2dyksIDEwMHB4KTtcbn1cbi5mb3Jnb3QtcGFzc3dvcmQge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiBtaW4obWF4KDI0cHgsIDEydncpLCAxMjZweCk7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuZm9ybSB7XG4gIG1heC13aWR0aDogNDUwcHg7XG4gIG1hcmdpbjogYXV0bztcbn1cbmZvcm0gdmFsaWRhdGlvbi1tZXNzYWdlcyB7XG4gIG1hcmdpbi10b3A6IDhweDtcbn1cbmZvcm0gLmZvcm0tZ3JvdXAge1xuICB3aWR0aDogY2FsYygxMDAlIC0gbWluKG1heCgyNHB4LCAxMHZ3KSwgODBweCkpO1xuICBtYXJnaW46IGF1dG87XG59XG5mb3JtIC5mb3JtLWdyb3VwIC5tLWZvcm0tY2hlY2tib3gge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cbmZvcm0gLmZvcm0tZ3JvdXAgLm0tZm9ybS1jaGVja2JveCBbdHlwZT1cImNoZWNrYm94XCJdOmNoZWNrZWQgKyBsYWJlbCxcbmZvcm0gLmZvcm0tZ3JvdXAgLm0tZm9ybS1jaGVja2JveCBbdHlwZT1cImNoZWNrYm94XCJdOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbCB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuZm9ybSAuZm9ybS1ncm91cC5wYXNzd29yZCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuZm9ybSAuZm9ybS1ncm91cC5wYXNzd29yZCBhLnBhc3N3b3JkIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuZm9ybSAuZm9ybS1ncm91cCAubS1mb3JtLWRlc2NyaXB0aW9uIHtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxuIl19 */"] });
    return ResetPasswordComponent;
}(_app_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_2__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](ResetPasswordComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'app-reset-password',
                templateUrl: './reset-password.component.html',
                styleUrls: ['./reset-password.component.less']
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] }, { type: _reset_password_service__WEBPACK_IMPORTED_MODULE_0__["ResetPasswordService"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/reset-password/reset-password.service.ts":
/*!*******************************************************************!*\
  !*** ./src/account/auth/reset-password/reset-password.service.ts ***!
  \*******************************************************************/
/*! exports provided: ResetPasswordService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResetPasswordService", function() { return ResetPasswordService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _app_shared_class_api_service_base_class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/class/api-service-base.class */ "./src/app/shared/class/api-service-base.class.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/service-proxies/service-proxies */ "./src/app/shared/service-proxies/service-proxies.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();









var ResetPasswordService = /** @class */ (function (_super) {
    __extends(ResetPasswordService, _super);
    function ResetPasswordService(injector, http, accountService) {
        var _this = _super.call(this, injector) || this;
        _this.http = http;
        _this.accountService = accountService;
        return _this;
    }
    /**
     * @return Success
     */
    ResetPasswordService.prototype.postForgotPasswordRequest = function (emailAddress) {
        var url_ = this.baseUrl + '/api/services/app/Account/ForgetPassword';
        var options_ = {
            observe: 'response',
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpHeaders"]({
                'Content-Type': 'application/json',
            })
        };
        return this.http.post(url_, { emailAddress: emailAddress }, options_);
    };
    ResetPasswordService.prototype.resetPassword = function (payload, finallyCallback) {
        finallyCallback = finallyCallback || (function () { });
        abp.message.error = function (message, title, options) {
            finallyCallback({ error: true, message: message, title: title });
        };
        return this.accountService.resetPassword(payload)
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["catchError"])(function (err) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["throwError"])(err);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (res) {
        }));
    };
    ResetPasswordService.ɵfac = function ResetPasswordService_Factory(t) { return new (t || ResetPasswordService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["AccountServiceProxy"])); };
    ResetPasswordService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: ResetPasswordService, factory: ResetPasswordService.ɵfac, providedIn: 'root' });
    return ResetPasswordService;
}(_app_shared_class_api_service_base_class__WEBPACK_IMPORTED_MODULE_1__["APIServiceBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](ResetPasswordService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Injectable"],
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Injector"] }, { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] }, { type: _app_shared_service_proxies_service_proxies__WEBPACK_IMPORTED_MODULE_5__["AccountServiceProxy"] }]; }, null); })();


/***/ }),

/***/ "./src/account/auth/signon-success/signon-success.component.ts":
/*!*********************************************************************!*\
  !*** ./src/account/auth/signon-success/signon-success.component.ts ***!
  \*********************************************************************/
/*! exports provided: SignonSuccessComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignonSuccessComponent", function() { return SignonSuccessComponent; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _app_shared_modules_success_message_success_message_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../app/shared/modules/success-message/success-message.component */ "./src/app/shared/modules/success-message/success-message.component.ts");





var SignonSuccessComponent = /** @class */ (function () {
    function SignonSuccessComponent(router, activatedRoute) {
        this.router = router;
        this.activatedRoute = activatedRoute;
    }
    SignonSuccessComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.activatedRoute.params
            .subscribe(function (res) {
            _this.params = res;
        });
    };
    SignonSuccessComponent.prototype.goToSignon = function () {
        this.router.navigate(['/account/login']);
    };
    SignonSuccessComponent.ɵfac = function SignonSuccessComponent_Factory(t) { return new (t || SignonSuccessComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_0__["ActivatedRoute"])); };
    SignonSuccessComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: SignonSuccessComponent, selectors: [["app-signon-success"]], decls: 1, vars: 1, consts: [["actionLabel", "SignOn", 3, "message", "actionTriggered"]], template: function SignonSuccessComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "app-success-message", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("actionTriggered", function SignonSuccessComponent_Template_app_success_message_actionTriggered_0_listener() { return ctx.goToSignon(); });
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("message", ctx.plan ? "SignOnSuccessWithName" : "SignOnSuccess");
        } }, directives: [_app_shared_modules_success_message_success_message_component__WEBPACK_IMPORTED_MODULE_2__["SuccessMessageComponent"]], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC9hdXRoL3NpZ25vbi1zdWNjZXNzL3NpZ25vbi1zdWNjZXNzLmNvbXBvbmVudC5sZXNzIn0= */"] });
    return SignonSuccessComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](SignonSuccessComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'app-signon-success',
                templateUrl: './signon-success.component.html',
                styleUrls: ['./signon-success.component.less']
            }]
    }], function () { return [{ type: _angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"] }, { type: _angular_router__WEBPACK_IMPORTED_MODULE_0__["ActivatedRoute"] }]; }, null); })();


/***/ }),

/***/ "./src/account/layout/account-footer.component.ts":
/*!********************************************************!*\
  !*** ./src/account/layout/account-footer.component.ts ***!
  \********************************************************/
/*! exports provided: AccountFooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountFooterComponent", function() { return AccountFooterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shared/common/app-component-base */ "./src/app/shared/common/app-component-base.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var AccountFooterComponent = /** @class */ (function (_super) {
    __extends(AccountFooterComponent, _super);
    function AccountFooterComponent(injector) {
        var _this = _super.call(this, injector) || this;
        _this.currentYear = new Date().getFullYear();
        _this.versionText =
            _this.appSession.application.version +
                ' [' +
                moment__WEBPACK_IMPORTED_MODULE_2__(_this.appSession.application.releaseDate).format('YYYYDDMM') +
                ']';
        return _this;
    }
    AccountFooterComponent.ɵfac = function AccountFooterComponent_Factory(t) { return new (t || AccountFooterComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"])); };
    AccountFooterComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AccountFooterComponent, selectors: [["account-footer"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]], decls: 8, vars: 5, consts: [[1, "row"], [1, "col-md-12", "text-center"], [1, "ml-2"]], template: function AccountFooterComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "small");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "b", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](6, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" Copyright \u00A9 ", ctx.currentYear, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](6, 3, "Version"));
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.versionText, " ");
        } }, pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__["LocalizePipe"]], encapsulation: 2, changeDetection: 0 });
    return AccountFooterComponent;
}(_shared_common_app_component_base__WEBPACK_IMPORTED_MODULE_1__["AppComponentBase"]));

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AccountFooterComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'account-footer',
                templateUrl: './account-footer.component.html',
                changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            }]
    }], function () { return [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }]; }, null); })();


/***/ }),

/***/ "./src/account/layout/account-header.component.ts":
/*!********************************************************!*\
  !*** ./src/account/layout/account-header.component.ts ***!
  \********************************************************/
/*! exports provided: AccountHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountHeaderComponent", function() { return AccountHeaderComponent; });
/* harmony import */ var _app_shared_modules_theme_switcher_theme_switcher_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../app/shared/modules/theme-switcher/theme-switcher.service */ "./src/app/shared/modules/theme-switcher/theme-switcher.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");




var AccountHeaderComponent = /** @class */ (function () {
    function AccountHeaderComponent(themeSwitcherService) {
        this.themeSwitcherService = themeSwitcherService;
    }
    AccountHeaderComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.themeSwitcherService.themeSwitchEvent
            .subscribe(function (state) {
            _this.mode = state.mode === 'light' ? 'dark' : 'light';
        });
    };
    AccountHeaderComponent.ɵfac = function AccountHeaderComponent_Factory(t) { return new (t || AccountHeaderComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_app_shared_modules_theme_switcher_theme_switcher_service__WEBPACK_IMPORTED_MODULE_0__["ThemeSwitcherService"])); };
    AccountHeaderComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: AccountHeaderComponent, selectors: [["account-header"]], decls: 3, vars: 1, consts: [[1, "login-logo"], ["href", "/"], ["height", "80", "alt", "Logo", 1, "loginLogo", 3, "src"]], template: function AccountHeaderComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "a", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](2, "img", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("src", "/assets/img/icon-" + ctx.mode + ".png", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeUrl"]);
        } }, encapsulation: 2 });
    return AccountHeaderComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](AccountHeaderComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
                selector: 'account-header',
                templateUrl: './account-header.component.html'
            }]
    }], function () { return [{ type: _app_shared_modules_theme_switcher_theme_switcher_service__WEBPACK_IMPORTED_MODULE_0__["ThemeSwitcherService"] }]; }, null); })();


/***/ }),

/***/ "./src/app/shared/class/api-extension.class.ts":
/*!*****************************************************!*\
  !*** ./src/app/shared/class/api-extension.class.ts ***!
  \*****************************************************/
/*! exports provided: ApiException */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApiException", function() { return ApiException; });
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/**
 * This class is from ABP's service-proxies.ts
 * Since all services to call API is in service-proxies.ts,
 * we want to re-use the code in there and put in the separate file
 * that can be imported in new angular service to be created.
 *
 * This class is an Object to hadnler API exceptions.
 */
var ApiException = /** @class */ (function (_super) {
    __extends(ApiException, _super);
    function ApiException(message, status, response, headers, result) {
        var _this = _super.call(this) || this;
        _this.isApiException = true;
        _this.message = message;
        _this.status = status;
        _this.response = response;
        _this.headers = headers;
        _this.result = result;
        return _this;
    }
    ApiException.isApiException = function (obj) {
        return obj.isApiException === true;
    };
    return ApiException;
}(Error));



/***/ }),

/***/ "./src/app/shared/class/details-definition-core.class.ts":
/*!***************************************************************!*\
  !*** ./src/app/shared/class/details-definition-core.class.ts ***!
  \***************************************************************/
/*! exports provided: DetailViewDefinitionCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DetailViewDefinitionCore", function() { return DetailViewDefinitionCore; });
var DetailViewDefinitionCore = /** @class */ (function () {
    function DetailViewDefinitionCore() {
    }
    DetailViewDefinitionCore.prototype.getDefinition = function () {
        return this.definition;
    };
    return DetailViewDefinitionCore;
}());



/***/ }),

/***/ "./src/app/shared/class/file-state-container.class.ts":
/*!************************************************************!*\
  !*** ./src/app/shared/class/file-state-container.class.ts ***!
  \************************************************************/
/*! exports provided: FileStateContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileStateContainer", function() { return FileStateContainer; });
/**
 * A class to handle File State of an entity.
 * A File State Container that store the current file state and identify
 * which files are going to send for saving/removing to API.
 */
var FileStateContainer = /** @class */ (function () {
    function FileStateContainer(initFiles, multi) {
        if (initFiles === void 0) { initFiles = []; }
        if (multi === void 0) { multi = false; }
        /**
         * This will hold old previous file that needs to remove.
         */
        this.previousFile = [];
        /**
         * This will hold new file that needs to save.
         */
        this.newFile = [];
        /**
         * Identifier if file is multi or single.
         */
        this.multi = false;
        this.previousFile = initFiles;
        this.multi = multi;
    }
    FileStateContainer.prototype.add = function (fileId) {
        this.previousFile = this.newFile || [];
        if (this.multi) {
            // TODO: handle multi file
        }
        else {
            this.newFile = [];
            this.newFile = [fileId];
        }
    };
    FileStateContainer.prototype.reset = function () {
        this.newFile = [];
        this.previousFile = [];
    };
    FileStateContainer.prototype.get = function () {
        return this.newFile;
    };
    FileStateContainer.prototype.getPrevious = function () {
        return this.previousFile;
    };
    return FileStateContainer;
}());



/***/ }),

/***/ "./src/app/shared/class/form-definition-core.class.ts":
/*!************************************************************!*\
  !*** ./src/app/shared/class/form-definition-core.class.ts ***!
  \************************************************************/
/*! exports provided: FormDefinitionCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormDefinitionCore", function() { return FormDefinitionCore; });
var FormDefinitionCore = /** @class */ (function () {
    function FormDefinitionCore() {
    }
    FormDefinitionCore.prototype.getDefinition = function () {
        return this.definition;
    };
    return FormDefinitionCore;
}());



/***/ }),

/***/ "./src/app/shared/class/index.ts":
/*!***************************************!*\
  !*** ./src/app/shared/class/index.ts ***!
  \***************************************/
/*! exports provided: APIServiceBase, ApiException, FileStateContainer, TableDefinitionCore, ReportDefinitionCore, MapDefinitionCore, FormDefinitionCore, DetailViewDefinitionCore, LinkTilesDefinitionCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _api_service_base_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-service-base.class */ "./src/app/shared/class/api-service-base.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "APIServiceBase", function() { return _api_service_base_class__WEBPACK_IMPORTED_MODULE_0__["APIServiceBase"]; });

/* harmony import */ var _api_extension_class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api-extension.class */ "./src/app/shared/class/api-extension.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ApiException", function() { return _api_extension_class__WEBPACK_IMPORTED_MODULE_1__["ApiException"]; });

/* harmony import */ var _file_state_container_class__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./file-state-container.class */ "./src/app/shared/class/file-state-container.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FileStateContainer", function() { return _file_state_container_class__WEBPACK_IMPORTED_MODULE_2__["FileStateContainer"]; });

/* harmony import */ var _table_definition_core_class__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./table-definition-core.class */ "./src/app/shared/class/table-definition-core.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TableDefinitionCore", function() { return _table_definition_core_class__WEBPACK_IMPORTED_MODULE_3__["TableDefinitionCore"]; });

/* harmony import */ var _report_definition_core_class__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./report-definition-core.class */ "./src/app/shared/class/report-definition-core.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReportDefinitionCore", function() { return _report_definition_core_class__WEBPACK_IMPORTED_MODULE_4__["ReportDefinitionCore"]; });

/* harmony import */ var _map_definition_core_class__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./map-definition-core.class */ "./src/app/shared/class/map-definition-core.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapDefinitionCore", function() { return _map_definition_core_class__WEBPACK_IMPORTED_MODULE_5__["MapDefinitionCore"]; });

/* harmony import */ var _form_definition_core_class__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./form-definition-core.class */ "./src/app/shared/class/form-definition-core.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FormDefinitionCore", function() { return _form_definition_core_class__WEBPACK_IMPORTED_MODULE_6__["FormDefinitionCore"]; });

/* harmony import */ var _details_definition_core_class__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./details-definition-core.class */ "./src/app/shared/class/details-definition-core.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DetailViewDefinitionCore", function() { return _details_definition_core_class__WEBPACK_IMPORTED_MODULE_7__["DetailViewDefinitionCore"]; });

/* harmony import */ var _link_tiles_definition_core_class__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./link-tiles-definition-core.class */ "./src/app/shared/class/link-tiles-definition-core.class.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LinkTilesDefinitionCore", function() { return _link_tiles_definition_core_class__WEBPACK_IMPORTED_MODULE_8__["LinkTilesDefinitionCore"]; });












/***/ }),

/***/ "./src/app/shared/class/link-tiles-definition-core.class.ts":
/*!******************************************************************!*\
  !*** ./src/app/shared/class/link-tiles-definition-core.class.ts ***!
  \******************************************************************/
/*! exports provided: LinkTilesDefinitionCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinkTilesDefinitionCore", function() { return LinkTilesDefinitionCore; });
var LinkTilesDefinitionCore = /** @class */ (function () {
    function LinkTilesDefinitionCore() {
    }
    LinkTilesDefinitionCore.prototype.getDefinition = function () {
        return this.definition;
    };
    return LinkTilesDefinitionCore;
}());



/***/ }),

/***/ "./src/app/shared/class/map-definition-core.class.ts":
/*!***********************************************************!*\
  !*** ./src/app/shared/class/map-definition-core.class.ts ***!
  \***********************************************************/
/*! exports provided: MapDefinitionCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapDefinitionCore", function() { return MapDefinitionCore; });
var MapDefinitionCore = /** @class */ (function () {
    function MapDefinitionCore() {
    }
    MapDefinitionCore.prototype.getDefinition = function () {
        return this.definition;
    };
    return MapDefinitionCore;
}());



/***/ }),

/***/ "./src/app/shared/class/report-definition-core.class.ts":
/*!**************************************************************!*\
  !*** ./src/app/shared/class/report-definition-core.class.ts ***!
  \**************************************************************/
/*! exports provided: ReportDefinitionCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportDefinitionCore", function() { return ReportDefinitionCore; });
var ReportDefinitionCore = /** @class */ (function () {
    function ReportDefinitionCore() {
    }
    ReportDefinitionCore.prototype.getDefinition = function () {
        return this.definition;
    };
    return ReportDefinitionCore;
}());



/***/ }),

/***/ "./src/app/shared/class/table-definition-core.class.ts":
/*!*************************************************************!*\
  !*** ./src/app/shared/class/table-definition-core.class.ts ***!
  \*************************************************************/
/*! exports provided: TableDefinitionCore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TableDefinitionCore", function() { return TableDefinitionCore; });
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var TableDefinitionCore = /** @class */ (function () {
    function TableDefinitionCore() {
        this.canCreate = true;
    }
    TableDefinitionCore.prototype.getDefinition = function () {
        return __assign(__assign({}, this.definition), { canCreate: this.canCreate });
    };
    return TableDefinitionCore;
}());



/***/ }),

/***/ "./src/app/shared/modules/success-message/success-message.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/shared/modules/success-message/success-message.component.ts ***!
  \*****************************************************************************/
/*! exports provided: SuccessMessageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SuccessMessageComponent", function() { return SuccessMessageComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _svg_svg_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../svg/svg.component */ "./src/app/shared/modules/svg/svg.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @shared/common/pipes/localize.pipe */ "./src/app/shared/common/pipes/localize.pipe.ts");





function SuccessMessageComponent_button_6_Template(rf, ctx) { if (rf & 1) {
    var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function SuccessMessageComponent_button_6_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r2); var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](); return ctx_r1.emitAction(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "localize");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 1, ctx_r0.actionLabel), " ");
} }
var SuccessMessageComponent = /** @class */ (function () {
    function SuccessMessageComponent() {
        this.actionTriggered = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    SuccessMessageComponent.prototype.ngOnInit = function () {
    };
    SuccessMessageComponent.prototype.emitAction = function () {
        this.actionTriggered.emit();
    };
    SuccessMessageComponent.ɵfac = function SuccessMessageComponent_Factory(t) { return new (t || SuccessMessageComponent)(); };
    SuccessMessageComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: SuccessMessageComponent, selectors: [["app-success-message"]], inputs: { message: "message", actionLabel: "actionLabel" }, outputs: { actionTriggered: "actionTriggered" }, decls: 7, vars: 4, consts: [[1, "success-info"], [1, "message-ctnr"], ["name", "check"], ["class", "btn m-button m-button-block m-button-lg", 3, "click", 4, "ngIf"], [1, "btn", "m-button", "m-button-block", "m-button-lg", 3, "click"]], template: function SuccessMessageComponent_Template(rf, ctx) { if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "app-svg", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "p");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](5, "localize");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, SuccessMessageComponent_button_6_Template, 3, 3, "button", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        } if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](5, 2, ctx.message), " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.actionLabel);
        } }, directives: [_svg_svg_component__WEBPACK_IMPORTED_MODULE_1__["SvgComponent"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"]], pipes: [_shared_common_pipes_localize_pipe__WEBPACK_IMPORTED_MODULE_3__["LocalizePipe"]], styles: [".success-info[_ngcontent-%COMP%] {\n  width: 400px;\n  max-width: 100%;\n  text-align: center;\n  margin: auto;\n  min-height: 350px;\n  max-height: 100%;\n  padding: 12px;\n}\n.success-info[_ngcontent-%COMP%]   .message-ctnr[_ngcontent-%COMP%] {\n  padding: 20px;\n  background: rgba(102, 187, 106, 0.1);\n  border: 1px solid #66BB6A;\n  box-sizing: border-box;\n  margin: auto;\n  width: 350px;\n  max-width: 100%;\n}\n.success-info[_ngcontent-%COMP%]   .m-button[_ngcontent-%COMP%] {\n  margin: auto;\n  margin-top: 50px;\n  width: 350px;\n  max-width: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL21vZHVsZXMvc3VjY2Vzcy1tZXNzYWdlL006L3JlcG9zL0RlcGxveVNvbHV0aW9uc0NsaW1hdGVDaGFuZ2UvZHNzX2NjaXBfcHJvdG8vZGV2L3RhL2FuZ3VsYXIvc3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9zdWNjZXNzLW1lc3NhZ2Uvc3VjY2Vzcy1tZXNzYWdlLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9zaGFyZWQvbW9kdWxlcy9zdWNjZXNzLW1lc3NhZ2Uvc3VjY2Vzcy1tZXNzYWdlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtBQ0NGO0FEUkE7RUFVTSxhQUFBO0VBQ0Esb0NBQUE7RUFDQSx5QkFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0FDQ047QURqQkE7RUFvQk0sWUFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7QUNBTiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9tb2R1bGVzL3N1Y2Nlc3MtbWVzc2FnZS9zdWNjZXNzLW1lc3NhZ2UuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3VjY2Vzcy1pbmZvIHtcbiAgd2lkdGg6IDQwMHB4OyAgICAgICAgXG4gIG1heC13aWR0aDogMTAwJTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IGF1dG87XG4gIG1pbi1oZWlnaHQ6IDM1MHB4O1xuICBtYXgtaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAxMnB4O1xuXG4gIC5tZXNzYWdlLWN0bnIge1xuICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTAyLCAxODcsIDEwNiwgMC4xKTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM2NkJCNkE7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgd2lkdGg6IDM1MHB4OyAgICAgICAgXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cblxuICAubS1idXR0b24ge1xuICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICAgIHdpZHRoOiAzNTBweDsgICAgICAgIFxuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICB9XG59IiwiLnN1Y2Nlc3MtaW5mbyB7XG4gIHdpZHRoOiA0MDBweDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogYXV0bztcbiAgbWluLWhlaWdodDogMzUwcHg7XG4gIG1heC1oZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDEycHg7XG59XG4uc3VjY2Vzcy1pbmZvIC5tZXNzYWdlLWN0bnIge1xuICBwYWRkaW5nOiAyMHB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDEwMiwgMTg3LCAxMDYsIDAuMSk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM2NkJCNkE7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogYXV0bztcbiAgd2lkdGg6IDM1MHB4O1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4uc3VjY2Vzcy1pbmZvIC5tLWJ1dHRvbiB7XG4gIG1hcmdpbjogYXV0bztcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgd2lkdGg6IDM1MHB4O1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4iXX0= */"] });
    return SuccessMessageComponent;
}());

/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SuccessMessageComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
                selector: 'app-success-message',
                templateUrl: './success-message.component.html',
                styleUrls: ['./success-message.component.less']
            }]
    }], function () { return []; }, { message: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], actionLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }], actionTriggered: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }] }); })();


/***/ }),

/***/ "./src/app/shared/modules/success-message/success-message.module.ts":
/*!**************************************************************************!*\
  !*** ./src/app/shared/modules/success-message/success-message.module.ts ***!
  \**************************************************************************/
/*! exports provided: SuccessMessageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SuccessMessageModule", function() { return SuccessMessageModule; });
/* harmony import */ var _utils_utils_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../utils/utils.module */ "./src/app/shared/utils/utils.module.ts");
/* harmony import */ var _app_shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/modules/svg/svg.module */ "./src/app/shared/modules/svg/svg.module.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _success_message_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./success-message.component */ "./src/app/shared/modules/success-message/success-message.component.ts");






var SuccessMessageModule = /** @class */ (function () {
    function SuccessMessageModule() {
    }
    SuccessMessageModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({ type: SuccessMessageModule });
    SuccessMessageModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({ factory: function SuccessMessageModule_Factory(t) { return new (t || SuccessMessageModule)(); }, imports: [[
                _angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
                _app_shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_1__["SvgModule"],
                _utils_utils_module__WEBPACK_IMPORTED_MODULE_0__["UtilsModule"]
            ]] });
    return SuccessMessageModule;
}());

(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](SuccessMessageModule, { declarations: [_success_message_component__WEBPACK_IMPORTED_MODULE_4__["SuccessMessageComponent"]], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
        _app_shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_1__["SvgModule"],
        _utils_utils_module__WEBPACK_IMPORTED_MODULE_0__["UtilsModule"]], exports: [_success_message_component__WEBPACK_IMPORTED_MODULE_4__["SuccessMessageComponent"]] }); })();
/*@__PURE__*/ (function () { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](SuccessMessageModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
        args: [{
                imports: [
                    _angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"],
                    _app_shared_modules_svg_svg_module__WEBPACK_IMPORTED_MODULE_1__["SvgModule"],
                    _utils_utils_module__WEBPACK_IMPORTED_MODULE_0__["UtilsModule"]
                ],
                declarations: [_success_message_component__WEBPACK_IMPORTED_MODULE_4__["SuccessMessageComponent"]],
                exports: [_success_message_component__WEBPACK_IMPORTED_MODULE_4__["SuccessMessageComponent"]]
            }]
    }], null, null); })();


/***/ })

}]);
//# sourceMappingURL=account-account-module.js.map